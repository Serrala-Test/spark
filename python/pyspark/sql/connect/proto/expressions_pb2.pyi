#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from google.protobuf.any_pb2 import (
    Any as google___protobuf___any_pb2___Any,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from pyspark.sql.connect.proto.types_pb2 import (
    DataType as spark___connect___types_pb2___DataType,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
    overload as typing___overload,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)

builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Expression(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    class Window(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        class WindowFrame(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            FrameTypeValue = typing___NewType("FrameTypeValue", builtin___int)
            type___FrameTypeValue = FrameTypeValue
            FrameType: _FrameType

            class _FrameType(
                google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[
                    Expression.Window.WindowFrame.FrameTypeValue
                ]
            ):
                DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
                FRAME_TYPE_UNDEFINED = typing___cast(
                    Expression.Window.WindowFrame.FrameTypeValue, 0
                )
                FRAME_TYPE_ROW = typing___cast(Expression.Window.WindowFrame.FrameTypeValue, 1)
                FRAME_TYPE_RANGE = typing___cast(Expression.Window.WindowFrame.FrameTypeValue, 2)
            FRAME_TYPE_UNDEFINED = typing___cast(Expression.Window.WindowFrame.FrameTypeValue, 0)
            FRAME_TYPE_ROW = typing___cast(Expression.Window.WindowFrame.FrameTypeValue, 1)
            FRAME_TYPE_RANGE = typing___cast(Expression.Window.WindowFrame.FrameTypeValue, 2)

            class FrameBoundary(google___protobuf___message___Message):
                DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
                current_row: builtin___bool = ...
                unbounded: builtin___bool = ...

                @property
                def value(self) -> type___Expression: ...
                def __init__(
                    self,
                    *,
                    current_row: typing___Optional[builtin___bool] = None,
                    unbounded: typing___Optional[builtin___bool] = None,
                    value: typing___Optional[type___Expression] = None,
                ) -> None: ...
                def HasField(
                    self,
                    field_name: typing_extensions___Literal[
                        "boundary",
                        b"boundary",
                        "current_row",
                        b"current_row",
                        "unbounded",
                        b"unbounded",
                        "value",
                        b"value",
                    ],
                ) -> builtin___bool: ...
                def ClearField(
                    self,
                    field_name: typing_extensions___Literal[
                        "boundary",
                        b"boundary",
                        "current_row",
                        b"current_row",
                        "unbounded",
                        b"unbounded",
                        "value",
                        b"value",
                    ],
                ) -> None: ...
                def WhichOneof(
                    self, oneof_group: typing_extensions___Literal["boundary", b"boundary"]
                ) -> typing_extensions___Literal["current_row", "unbounded", "value"]: ...
            type___FrameBoundary = FrameBoundary

            frame_type: type___Expression.Window.WindowFrame.FrameTypeValue = ...

            @property
            def lower(self) -> type___Expression.Window.WindowFrame.FrameBoundary: ...
            @property
            def upper(self) -> type___Expression.Window.WindowFrame.FrameBoundary: ...
            def __init__(
                self,
                *,
                frame_type: typing___Optional[
                    type___Expression.Window.WindowFrame.FrameTypeValue
                ] = None,
                lower: typing___Optional[type___Expression.Window.WindowFrame.FrameBoundary] = None,
                upper: typing___Optional[type___Expression.Window.WindowFrame.FrameBoundary] = None,
            ) -> None: ...
            def HasField(
                self, field_name: typing_extensions___Literal["lower", b"lower", "upper", b"upper"]
            ) -> builtin___bool: ...
            def ClearField(
                self,
                field_name: typing_extensions___Literal[
                    "frame_type", b"frame_type", "lower", b"lower", "upper", b"upper"
                ],
            ) -> None: ...
        type___WindowFrame = WindowFrame

        @property
        def window_function(self) -> type___Expression: ...
        @property
        def partition_spec(
            self,
        ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
            type___Expression
        ]: ...
        @property
        def order_spec(
            self,
        ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
            type___Expression.SortOrder
        ]: ...
        @property
        def frame_spec(self) -> type___Expression.Window.WindowFrame: ...
        def __init__(
            self,
            *,
            window_function: typing___Optional[type___Expression] = None,
            partition_spec: typing___Optional[typing___Iterable[type___Expression]] = None,
            order_spec: typing___Optional[typing___Iterable[type___Expression.SortOrder]] = None,
            frame_spec: typing___Optional[type___Expression.Window.WindowFrame] = None,
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "frame_spec", b"frame_spec", "window_function", b"window_function"
            ],
        ) -> builtin___bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "frame_spec",
                b"frame_spec",
                "order_spec",
                b"order_spec",
                "partition_spec",
                b"partition_spec",
                "window_function",
                b"window_function",
            ],
        ) -> None: ...
    type___Window = Window

    class SortOrder(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        SortDirectionValue = typing___NewType("SortDirectionValue", builtin___int)
        type___SortDirectionValue = SortDirectionValue
        SortDirection: _SortDirection

        class _SortDirection(
            google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[
                Expression.SortOrder.SortDirectionValue
            ]
        ):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            SORT_DIRECTION_UNSPECIFIED = typing___cast(Expression.SortOrder.SortDirectionValue, 0)
            SORT_DIRECTION_ASCENDING = typing___cast(Expression.SortOrder.SortDirectionValue, 1)
            SORT_DIRECTION_DESCENDING = typing___cast(Expression.SortOrder.SortDirectionValue, 2)
        SORT_DIRECTION_UNSPECIFIED = typing___cast(Expression.SortOrder.SortDirectionValue, 0)
        SORT_DIRECTION_ASCENDING = typing___cast(Expression.SortOrder.SortDirectionValue, 1)
        SORT_DIRECTION_DESCENDING = typing___cast(Expression.SortOrder.SortDirectionValue, 2)

        NullOrderingValue = typing___NewType("NullOrderingValue", builtin___int)
        type___NullOrderingValue = NullOrderingValue
        NullOrdering: _NullOrdering

        class _NullOrdering(
            google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[
                Expression.SortOrder.NullOrderingValue
            ]
        ):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            SORT_NULLS_UNSPECIFIED = typing___cast(Expression.SortOrder.NullOrderingValue, 0)
            SORT_NULLS_FIRST = typing___cast(Expression.SortOrder.NullOrderingValue, 1)
            SORT_NULLS_LAST = typing___cast(Expression.SortOrder.NullOrderingValue, 2)
        SORT_NULLS_UNSPECIFIED = typing___cast(Expression.SortOrder.NullOrderingValue, 0)
        SORT_NULLS_FIRST = typing___cast(Expression.SortOrder.NullOrderingValue, 1)
        SORT_NULLS_LAST = typing___cast(Expression.SortOrder.NullOrderingValue, 2)

        direction: type___Expression.SortOrder.SortDirectionValue = ...
        null_ordering: type___Expression.SortOrder.NullOrderingValue = ...

        @property
        def child(self) -> type___Expression: ...
        def __init__(
            self,
            *,
            child: typing___Optional[type___Expression] = None,
            direction: typing___Optional[type___Expression.SortOrder.SortDirectionValue] = None,
            null_ordering: typing___Optional[type___Expression.SortOrder.NullOrderingValue] = None,
        ) -> None: ...
        def HasField(
            self, field_name: typing_extensions___Literal["child", b"child"]
        ) -> builtin___bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "child", b"child", "direction", b"direction", "null_ordering", b"null_ordering"
            ],
        ) -> None: ...
    type___SortOrder = SortOrder

    class Cast(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        type_str: typing___Text = ...

        @property
        def expr(self) -> type___Expression: ...
        @property
        def type(self) -> spark___connect___types_pb2___DataType: ...
        def __init__(
            self,
            *,
            expr: typing___Optional[type___Expression] = None,
            type: typing___Optional[spark___connect___types_pb2___DataType] = None,
            type_str: typing___Optional[typing___Text] = None,
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "cast_to_type",
                b"cast_to_type",
                "expr",
                b"expr",
                "type",
                b"type",
                "type_str",
                b"type_str",
            ],
        ) -> builtin___bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "cast_to_type",
                b"cast_to_type",
                "expr",
                b"expr",
                "type",
                b"type",
                "type_str",
                b"type_str",
            ],
        ) -> None: ...
        def WhichOneof(
            self, oneof_group: typing_extensions___Literal["cast_to_type", b"cast_to_type"]
        ) -> typing_extensions___Literal["type", "type_str"]: ...
    type___Cast = Cast

    class Literal(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        class Decimal(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            value: typing___Text = ...
            precision: builtin___int = ...
            scale: builtin___int = ...

            def __init__(
                self,
                *,
                value: typing___Optional[typing___Text] = None,
                precision: typing___Optional[builtin___int] = None,
                scale: typing___Optional[builtin___int] = None,
            ) -> None: ...
            def HasField(
                self,
                field_name: typing_extensions___Literal[
                    "_precision",
                    b"_precision",
                    "_scale",
                    b"_scale",
                    "precision",
                    b"precision",
                    "scale",
                    b"scale",
                ],
            ) -> builtin___bool: ...
            def ClearField(
                self,
                field_name: typing_extensions___Literal[
                    "_precision",
                    b"_precision",
                    "_scale",
                    b"_scale",
                    "precision",
                    b"precision",
                    "scale",
                    b"scale",
                    "value",
                    b"value",
                ],
            ) -> None: ...
            @typing___overload
            def WhichOneof(
                self, oneof_group: typing_extensions___Literal["_precision", b"_precision"]
            ) -> typing_extensions___Literal["precision"]: ...
            @typing___overload
            def WhichOneof(
                self, oneof_group: typing_extensions___Literal["_scale", b"_scale"]
            ) -> typing_extensions___Literal["scale"]: ...
        type___Decimal = Decimal

        class CalendarInterval(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            months: builtin___int = ...
            days: builtin___int = ...
            microseconds: builtin___int = ...

            def __init__(
                self,
                *,
                months: typing___Optional[builtin___int] = None,
                days: typing___Optional[builtin___int] = None,
                microseconds: typing___Optional[builtin___int] = None,
            ) -> None: ...
            def ClearField(
                self,
                field_name: typing_extensions___Literal[
                    "days", b"days", "microseconds", b"microseconds", "months", b"months"
                ],
            ) -> None: ...
        type___CalendarInterval = CalendarInterval

        class Array(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

            @property
            def element_type(self) -> spark___connect___types_pb2___DataType: ...
            @property
            def elements(
                self,
            ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
                type___Expression.Literal
            ]: ...
            def __init__(
                self,
                *,
                element_type: typing___Optional[spark___connect___types_pb2___DataType] = None,
                elements: typing___Optional[typing___Iterable[type___Expression.Literal]] = None,
            ) -> None: ...
            def HasField(
                self, field_name: typing_extensions___Literal["element_type", b"element_type"]
            ) -> builtin___bool: ...
            def ClearField(
                self,
                field_name: typing_extensions___Literal[
                    "element_type", b"element_type", "elements", b"elements"
                ],
            ) -> None: ...
        type___Array = Array

        binary: builtin___bytes = ...
        boolean: builtin___bool = ...
        byte: builtin___int = ...
        short: builtin___int = ...
        integer: builtin___int = ...
        long: builtin___int = ...
        float: builtin___float = ...
        double: builtin___float = ...
        string: typing___Text = ...
        date: builtin___int = ...
        timestamp: builtin___int = ...
        timestamp_ntz: builtin___int = ...
        year_month_interval: builtin___int = ...
        day_time_interval: builtin___int = ...

        @property
        def null(self) -> spark___connect___types_pb2___DataType: ...
        @property
        def decimal(self) -> type___Expression.Literal.Decimal: ...
        @property
        def calendar_interval(self) -> type___Expression.Literal.CalendarInterval: ...
        @property
        def array(self) -> type___Expression.Literal.Array: ...
        def __init__(
            self,
            *,
            null: typing___Optional[spark___connect___types_pb2___DataType] = None,
            binary: typing___Optional[builtin___bytes] = None,
            boolean: typing___Optional[builtin___bool] = None,
            byte: typing___Optional[builtin___int] = None,
            short: typing___Optional[builtin___int] = None,
            integer: typing___Optional[builtin___int] = None,
            long: typing___Optional[builtin___int] = None,
            float: typing___Optional[builtin___float] = None,
            double: typing___Optional[builtin___float] = None,
            decimal: typing___Optional[type___Expression.Literal.Decimal] = None,
            string: typing___Optional[typing___Text] = None,
            date: typing___Optional[builtin___int] = None,
            timestamp: typing___Optional[builtin___int] = None,
            timestamp_ntz: typing___Optional[builtin___int] = None,
            calendar_interval: typing___Optional[type___Expression.Literal.CalendarInterval] = None,
            year_month_interval: typing___Optional[builtin___int] = None,
            day_time_interval: typing___Optional[builtin___int] = None,
            array: typing___Optional[type___Expression.Literal.Array] = None,
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "array",
                b"array",
                "binary",
                b"binary",
                "boolean",
                b"boolean",
                "byte",
                b"byte",
                "calendar_interval",
                b"calendar_interval",
                "date",
                b"date",
                "day_time_interval",
                b"day_time_interval",
                "decimal",
                b"decimal",
                "double",
                b"double",
                "float",
                b"float",
                "integer",
                b"integer",
                "literal_type",
                b"literal_type",
                "long",
                b"long",
                "null",
                b"null",
                "short",
                b"short",
                "string",
                b"string",
                "timestamp",
                b"timestamp",
                "timestamp_ntz",
                b"timestamp_ntz",
                "year_month_interval",
                b"year_month_interval",
            ],
        ) -> builtin___bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "array",
                b"array",
                "binary",
                b"binary",
                "boolean",
                b"boolean",
                "byte",
                b"byte",
                "calendar_interval",
                b"calendar_interval",
                "date",
                b"date",
                "day_time_interval",
                b"day_time_interval",
                "decimal",
                b"decimal",
                "double",
                b"double",
                "float",
                b"float",
                "integer",
                b"integer",
                "literal_type",
                b"literal_type",
                "long",
                b"long",
                "null",
                b"null",
                "short",
                b"short",
                "string",
                b"string",
                "timestamp",
                b"timestamp",
                "timestamp_ntz",
                b"timestamp_ntz",
                "year_month_interval",
                b"year_month_interval",
            ],
        ) -> None: ...
        def WhichOneof(
            self, oneof_group: typing_extensions___Literal["literal_type", b"literal_type"]
        ) -> typing_extensions___Literal[
            "null",
            "binary",
            "boolean",
            "byte",
            "short",
            "integer",
            "long",
            "float",
            "double",
            "decimal",
            "string",
            "date",
            "timestamp",
            "timestamp_ntz",
            "calendar_interval",
            "year_month_interval",
            "day_time_interval",
            "array",
        ]: ...
    type___Literal = Literal

    class UnresolvedAttribute(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        unparsed_identifier: typing___Text = ...
        plan_id: builtin___int = ...

        def __init__(
            self,
            *,
            unparsed_identifier: typing___Optional[typing___Text] = None,
            plan_id: typing___Optional[builtin___int] = None,
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions___Literal["_plan_id", b"_plan_id", "plan_id", b"plan_id"],
        ) -> builtin___bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "_plan_id",
                b"_plan_id",
                "plan_id",
                b"plan_id",
                "unparsed_identifier",
                b"unparsed_identifier",
            ],
        ) -> None: ...
        def WhichOneof(
            self, oneof_group: typing_extensions___Literal["_plan_id", b"_plan_id"]
        ) -> typing_extensions___Literal["plan_id"]: ...
    type___UnresolvedAttribute = UnresolvedAttribute

    class UnresolvedFunction(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        function_name: typing___Text = ...
        is_distinct: builtin___bool = ...
        is_user_defined_function: builtin___bool = ...

        @property
        def arguments(
            self,
        ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
            type___Expression
        ]: ...
        def __init__(
            self,
            *,
            function_name: typing___Optional[typing___Text] = None,
            arguments: typing___Optional[typing___Iterable[type___Expression]] = None,
            is_distinct: typing___Optional[builtin___bool] = None,
            is_user_defined_function: typing___Optional[builtin___bool] = None,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "arguments",
                b"arguments",
                "function_name",
                b"function_name",
                "is_distinct",
                b"is_distinct",
                "is_user_defined_function",
                b"is_user_defined_function",
            ],
        ) -> None: ...
    type___UnresolvedFunction = UnresolvedFunction

    class ExpressionString(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        expression: typing___Text = ...

        def __init__(
            self,
            *,
            expression: typing___Optional[typing___Text] = None,
        ) -> None: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["expression", b"expression"]
        ) -> None: ...
    type___ExpressionString = ExpressionString

    class UnresolvedStar(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        unparsed_target: typing___Text = ...

        def __init__(
            self,
            *,
            unparsed_target: typing___Optional[typing___Text] = None,
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "_unparsed_target", b"_unparsed_target", "unparsed_target", b"unparsed_target"
            ],
        ) -> builtin___bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "_unparsed_target", b"_unparsed_target", "unparsed_target", b"unparsed_target"
            ],
        ) -> None: ...
        def WhichOneof(
            self, oneof_group: typing_extensions___Literal["_unparsed_target", b"_unparsed_target"]
        ) -> typing_extensions___Literal["unparsed_target"]: ...
    type___UnresolvedStar = UnresolvedStar

    class UnresolvedRegex(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        col_name: typing___Text = ...
        plan_id: builtin___int = ...

        def __init__(
            self,
            *,
            col_name: typing___Optional[typing___Text] = None,
            plan_id: typing___Optional[builtin___int] = None,
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions___Literal["_plan_id", b"_plan_id", "plan_id", b"plan_id"],
        ) -> builtin___bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "_plan_id", b"_plan_id", "col_name", b"col_name", "plan_id", b"plan_id"
            ],
        ) -> None: ...
        def WhichOneof(
            self, oneof_group: typing_extensions___Literal["_plan_id", b"_plan_id"]
        ) -> typing_extensions___Literal["plan_id"]: ...
    type___UnresolvedRegex = UnresolvedRegex

    class UnresolvedExtractValue(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def child(self) -> type___Expression: ...
        @property
        def extraction(self) -> type___Expression: ...
        def __init__(
            self,
            *,
            child: typing___Optional[type___Expression] = None,
            extraction: typing___Optional[type___Expression] = None,
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions___Literal["child", b"child", "extraction", b"extraction"],
        ) -> builtin___bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal["child", b"child", "extraction", b"extraction"],
        ) -> None: ...
    type___UnresolvedExtractValue = UnresolvedExtractValue

    class UpdateFields(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        field_name: typing___Text = ...

        @property
        def struct_expression(self) -> type___Expression: ...
        @property
        def value_expression(self) -> type___Expression: ...
        def __init__(
            self,
            *,
            struct_expression: typing___Optional[type___Expression] = None,
            field_name: typing___Optional[typing___Text] = None,
            value_expression: typing___Optional[type___Expression] = None,
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "struct_expression", b"struct_expression", "value_expression", b"value_expression"
            ],
        ) -> builtin___bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "field_name",
                b"field_name",
                "struct_expression",
                b"struct_expression",
                "value_expression",
                b"value_expression",
            ],
        ) -> None: ...
    type___UpdateFields = UpdateFields

    class Alias(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        name: google___protobuf___internal___containers___RepeatedScalarFieldContainer[
            typing___Text
        ] = ...
        metadata: typing___Text = ...

        @property
        def expr(self) -> type___Expression: ...
        def __init__(
            self,
            *,
            expr: typing___Optional[type___Expression] = None,
            name: typing___Optional[typing___Iterable[typing___Text]] = None,
            metadata: typing___Optional[typing___Text] = None,
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "_metadata", b"_metadata", "expr", b"expr", "metadata", b"metadata"
            ],
        ) -> builtin___bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "_metadata", b"_metadata", "expr", b"expr", "metadata", b"metadata", "name", b"name"
            ],
        ) -> None: ...
        def WhichOneof(
            self, oneof_group: typing_extensions___Literal["_metadata", b"_metadata"]
        ) -> typing_extensions___Literal["metadata"]: ...
    type___Alias = Alias

    class LambdaFunction(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def function(self) -> type___Expression: ...
        @property
        def arguments(
            self,
        ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
            type___Expression.UnresolvedNamedLambdaVariable
        ]: ...
        def __init__(
            self,
            *,
            function: typing___Optional[type___Expression] = None,
            arguments: typing___Optional[
                typing___Iterable[type___Expression.UnresolvedNamedLambdaVariable]
            ] = None,
        ) -> None: ...
        def HasField(
            self, field_name: typing_extensions___Literal["function", b"function"]
        ) -> builtin___bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "arguments", b"arguments", "function", b"function"
            ],
        ) -> None: ...
    type___LambdaFunction = LambdaFunction

    class UnresolvedNamedLambdaVariable(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        name_parts: google___protobuf___internal___containers___RepeatedScalarFieldContainer[
            typing___Text
        ] = ...

        def __init__(
            self,
            *,
            name_parts: typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["name_parts", b"name_parts"]
        ) -> None: ...
    type___UnresolvedNamedLambdaVariable = UnresolvedNamedLambdaVariable

    @property
    def literal(self) -> type___Expression.Literal: ...
    @property
    def unresolved_attribute(self) -> type___Expression.UnresolvedAttribute: ...
    @property
    def unresolved_function(self) -> type___Expression.UnresolvedFunction: ...
    @property
    def expression_string(self) -> type___Expression.ExpressionString: ...
    @property
    def unresolved_star(self) -> type___Expression.UnresolvedStar: ...
    @property
    def alias(self) -> type___Expression.Alias: ...
    @property
    def cast(self) -> type___Expression.Cast: ...
    @property
    def unresolved_regex(self) -> type___Expression.UnresolvedRegex: ...
    @property
    def sort_order(self) -> type___Expression.SortOrder: ...
    @property
    def lambda_function(self) -> type___Expression.LambdaFunction: ...
    @property
    def window(self) -> type___Expression.Window: ...
    @property
    def unresolved_extract_value(self) -> type___Expression.UnresolvedExtractValue: ...
    @property
    def update_fields(self) -> type___Expression.UpdateFields: ...
    @property
    def unresolved_named_lambda_variable(
        self,
    ) -> type___Expression.UnresolvedNamedLambdaVariable: ...
    @property
    def common_inline_user_defined_function(self) -> type___CommonInlineUserDefinedFunction: ...
    @property
    def extension(self) -> google___protobuf___any_pb2___Any: ...
    def __init__(
        self,
        *,
        literal: typing___Optional[type___Expression.Literal] = None,
        unresolved_attribute: typing___Optional[type___Expression.UnresolvedAttribute] = None,
        unresolved_function: typing___Optional[type___Expression.UnresolvedFunction] = None,
        expression_string: typing___Optional[type___Expression.ExpressionString] = None,
        unresolved_star: typing___Optional[type___Expression.UnresolvedStar] = None,
        alias: typing___Optional[type___Expression.Alias] = None,
        cast: typing___Optional[type___Expression.Cast] = None,
        unresolved_regex: typing___Optional[type___Expression.UnresolvedRegex] = None,
        sort_order: typing___Optional[type___Expression.SortOrder] = None,
        lambda_function: typing___Optional[type___Expression.LambdaFunction] = None,
        window: typing___Optional[type___Expression.Window] = None,
        unresolved_extract_value: typing___Optional[
            type___Expression.UnresolvedExtractValue
        ] = None,
        update_fields: typing___Optional[type___Expression.UpdateFields] = None,
        unresolved_named_lambda_variable: typing___Optional[
            type___Expression.UnresolvedNamedLambdaVariable
        ] = None,
        common_inline_user_defined_function: typing___Optional[
            type___CommonInlineUserDefinedFunction
        ] = None,
        extension: typing___Optional[google___protobuf___any_pb2___Any] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "alias",
            b"alias",
            "cast",
            b"cast",
            "common_inline_user_defined_function",
            b"common_inline_user_defined_function",
            "expr_type",
            b"expr_type",
            "expression_string",
            b"expression_string",
            "extension",
            b"extension",
            "lambda_function",
            b"lambda_function",
            "literal",
            b"literal",
            "sort_order",
            b"sort_order",
            "unresolved_attribute",
            b"unresolved_attribute",
            "unresolved_extract_value",
            b"unresolved_extract_value",
            "unresolved_function",
            b"unresolved_function",
            "unresolved_named_lambda_variable",
            b"unresolved_named_lambda_variable",
            "unresolved_regex",
            b"unresolved_regex",
            "unresolved_star",
            b"unresolved_star",
            "update_fields",
            b"update_fields",
            "window",
            b"window",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "alias",
            b"alias",
            "cast",
            b"cast",
            "common_inline_user_defined_function",
            b"common_inline_user_defined_function",
            "expr_type",
            b"expr_type",
            "expression_string",
            b"expression_string",
            "extension",
            b"extension",
            "lambda_function",
            b"lambda_function",
            "literal",
            b"literal",
            "sort_order",
            b"sort_order",
            "unresolved_attribute",
            b"unresolved_attribute",
            "unresolved_extract_value",
            b"unresolved_extract_value",
            "unresolved_function",
            b"unresolved_function",
            "unresolved_named_lambda_variable",
            b"unresolved_named_lambda_variable",
            "unresolved_regex",
            b"unresolved_regex",
            "unresolved_star",
            b"unresolved_star",
            "update_fields",
            b"update_fields",
            "window",
            b"window",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["expr_type", b"expr_type"]
    ) -> typing_extensions___Literal[
        "literal",
        "unresolved_attribute",
        "unresolved_function",
        "expression_string",
        "unresolved_star",
        "alias",
        "cast",
        "unresolved_regex",
        "sort_order",
        "lambda_function",
        "window",
        "unresolved_extract_value",
        "update_fields",
        "unresolved_named_lambda_variable",
        "common_inline_user_defined_function",
        "extension",
    ]: ...

type___Expression = Expression

class CommonInlineUserDefinedFunction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    function_name: typing___Text = ...
    deterministic: builtin___bool = ...

    @property
    def arguments(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        type___Expression
    ]: ...
    @property
    def python_udf(self) -> type___PythonUDF: ...
    @property
    def scalar_scala_udf(self) -> type___ScalarScalaUDF: ...
    @property
    def java_udf(self) -> type___JavaUDF: ...
    def __init__(
        self,
        *,
        function_name: typing___Optional[typing___Text] = None,
        deterministic: typing___Optional[builtin___bool] = None,
        arguments: typing___Optional[typing___Iterable[type___Expression]] = None,
        python_udf: typing___Optional[type___PythonUDF] = None,
        scalar_scala_udf: typing___Optional[type___ScalarScalaUDF] = None,
        java_udf: typing___Optional[type___JavaUDF] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "function",
            b"function",
            "java_udf",
            b"java_udf",
            "python_udf",
            b"python_udf",
            "scalar_scala_udf",
            b"scalar_scala_udf",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "arguments",
            b"arguments",
            "deterministic",
            b"deterministic",
            "function",
            b"function",
            "function_name",
            b"function_name",
            "java_udf",
            b"java_udf",
            "python_udf",
            b"python_udf",
            "scalar_scala_udf",
            b"scalar_scala_udf",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["function", b"function"]
    ) -> typing_extensions___Literal["python_udf", "scalar_scala_udf", "java_udf"]: ...

type___CommonInlineUserDefinedFunction = CommonInlineUserDefinedFunction

class PythonUDF(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    eval_type: builtin___int = ...
    command: builtin___bytes = ...
    python_ver: typing___Text = ...

    @property
    def output_type(self) -> spark___connect___types_pb2___DataType: ...
    def __init__(
        self,
        *,
        output_type: typing___Optional[spark___connect___types_pb2___DataType] = None,
        eval_type: typing___Optional[builtin___int] = None,
        command: typing___Optional[builtin___bytes] = None,
        python_ver: typing___Optional[typing___Text] = None,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions___Literal["output_type", b"output_type"]
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "command",
            b"command",
            "eval_type",
            b"eval_type",
            "output_type",
            b"output_type",
            "python_ver",
            b"python_ver",
        ],
    ) -> None: ...

type___PythonUDF = PythonUDF

class ScalarScalaUDF(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    payload: builtin___bytes = ...
    nullable: builtin___bool = ...

    @property
    def inputTypes(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        spark___connect___types_pb2___DataType
    ]: ...
    @property
    def outputType(self) -> spark___connect___types_pb2___DataType: ...
    def __init__(
        self,
        *,
        payload: typing___Optional[builtin___bytes] = None,
        inputTypes: typing___Optional[
            typing___Iterable[spark___connect___types_pb2___DataType]
        ] = None,
        outputType: typing___Optional[spark___connect___types_pb2___DataType] = None,
        nullable: typing___Optional[builtin___bool] = None,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions___Literal["outputType", b"outputType"]
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "inputTypes",
            b"inputTypes",
            "nullable",
            b"nullable",
            "outputType",
            b"outputType",
            "payload",
            b"payload",
        ],
    ) -> None: ...

type___ScalarScalaUDF = ScalarScalaUDF

class JavaUDF(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class_name: typing___Text = ...
    aggregate: builtin___bool = ...

    @property
    def output_type(self) -> spark___connect___types_pb2___DataType: ...
    def __init__(
        self,
        *,
        class_name: typing___Optional[typing___Text] = None,
        output_type: typing___Optional[spark___connect___types_pb2___DataType] = None,
        aggregate: typing___Optional[builtin___bool] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "_output_type", b"_output_type", "output_type", b"output_type"
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "_output_type",
            b"_output_type",
            "aggregate",
            b"aggregate",
            "class_name",
            b"class_name",
            "output_type",
            b"output_type",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["_output_type", b"_output_type"]
    ) -> typing_extensions___Literal["output_type"]: ...

type___JavaUDF = JavaUDF
