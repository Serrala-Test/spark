#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from google.protobuf.any_pb2 import (
    Any as google___protobuf___any_pb2___Any,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    MessageMap as google___protobuf___internal___containers___MessageMap,
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
    ScalarMap as google___protobuf___internal___containers___ScalarMap,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from pyspark.sql.connect.proto.common_pb2 import (
    ResourceInformation as spark___connect___common_pb2___ResourceInformation,
)

from pyspark.sql.connect.proto.expressions_pb2 import (
    CommonInlineUserDefinedFunction as spark___connect___expressions_pb2___CommonInlineUserDefinedFunction,
    Expression as spark___connect___expressions_pb2___Expression,
)

from pyspark.sql.connect.proto.relations_pb2 import (
    Relation as spark___connect___relations_pb2___Relation,
)

from typing import (
    Iterable as typing___Iterable,
    Mapping as typing___Mapping,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
    overload as typing___overload,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)

builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Command(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def register_function(
        self,
    ) -> spark___connect___expressions_pb2___CommonInlineUserDefinedFunction: ...
    @property
    def write_operation(self) -> type___WriteOperation: ...
    @property
    def create_dataframe_view(self) -> type___CreateDataFrameViewCommand: ...
    @property
    def write_operation_v2(self) -> type___WriteOperationV2: ...
    @property
    def sql_command(self) -> type___SqlCommand: ...
    @property
    def write_stream_operation_start(self) -> type___WriteStreamOperationStart: ...
    @property
    def streaming_query_command(self) -> type___StreamingQueryCommand: ...
    @property
    def get_resources_command(self) -> type___GetResourcesCommand: ...
    @property
    def streaming_query_manager_command(self) -> type___StreamingQueryManagerCommand: ...
    @property
    def extension(self) -> google___protobuf___any_pb2___Any: ...
    def __init__(
        self,
        *,
        register_function: typing___Optional[
            spark___connect___expressions_pb2___CommonInlineUserDefinedFunction
        ] = None,
        write_operation: typing___Optional[type___WriteOperation] = None,
        create_dataframe_view: typing___Optional[type___CreateDataFrameViewCommand] = None,
        write_operation_v2: typing___Optional[type___WriteOperationV2] = None,
        sql_command: typing___Optional[type___SqlCommand] = None,
        write_stream_operation_start: typing___Optional[type___WriteStreamOperationStart] = None,
        streaming_query_command: typing___Optional[type___StreamingQueryCommand] = None,
        get_resources_command: typing___Optional[type___GetResourcesCommand] = None,
        streaming_query_manager_command: typing___Optional[
            type___StreamingQueryManagerCommand
        ] = None,
        extension: typing___Optional[google___protobuf___any_pb2___Any] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "command_type",
            b"command_type",
            "create_dataframe_view",
            b"create_dataframe_view",
            "extension",
            b"extension",
            "get_resources_command",
            b"get_resources_command",
            "register_function",
            b"register_function",
            "sql_command",
            b"sql_command",
            "streaming_query_command",
            b"streaming_query_command",
            "streaming_query_manager_command",
            b"streaming_query_manager_command",
            "write_operation",
            b"write_operation",
            "write_operation_v2",
            b"write_operation_v2",
            "write_stream_operation_start",
            b"write_stream_operation_start",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "command_type",
            b"command_type",
            "create_dataframe_view",
            b"create_dataframe_view",
            "extension",
            b"extension",
            "get_resources_command",
            b"get_resources_command",
            "register_function",
            b"register_function",
            "sql_command",
            b"sql_command",
            "streaming_query_command",
            b"streaming_query_command",
            "streaming_query_manager_command",
            b"streaming_query_manager_command",
            "write_operation",
            b"write_operation",
            "write_operation_v2",
            b"write_operation_v2",
            "write_stream_operation_start",
            b"write_stream_operation_start",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["command_type", b"command_type"]
    ) -> typing_extensions___Literal[
        "register_function",
        "write_operation",
        "create_dataframe_view",
        "write_operation_v2",
        "sql_command",
        "write_stream_operation_start",
        "streaming_query_command",
        "get_resources_command",
        "streaming_query_manager_command",
        "extension",
    ]: ...

type___Command = Command

class SqlCommand(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    class ArgsEntry(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        key: typing___Text = ...

        @property
        def value(self) -> spark___connect___expressions_pb2___Expression.Literal: ...
        def __init__(
            self,
            *,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[spark___connect___expressions_pb2___Expression.Literal] = None,
        ) -> None: ...
        def HasField(
            self, field_name: typing_extensions___Literal["value", b"value"]
        ) -> builtin___bool: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["key", b"key", "value", b"value"]
        ) -> None: ...
    type___ArgsEntry = ArgsEntry

    sql: typing___Text = ...

    @property
    def args(
        self,
    ) -> google___protobuf___internal___containers___MessageMap[
        typing___Text, spark___connect___expressions_pb2___Expression.Literal
    ]: ...
    def __init__(
        self,
        *,
        sql: typing___Optional[typing___Text] = None,
        args: typing___Optional[
            typing___Mapping[typing___Text, spark___connect___expressions_pb2___Expression.Literal]
        ] = None,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions___Literal["args", b"args", "sql", b"sql"]
    ) -> None: ...

type___SqlCommand = SqlCommand

class CreateDataFrameViewCommand(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...
    is_global: builtin___bool = ...
    replace: builtin___bool = ...

    @property
    def input(self) -> spark___connect___relations_pb2___Relation: ...
    def __init__(
        self,
        *,
        input: typing___Optional[spark___connect___relations_pb2___Relation] = None,
        name: typing___Optional[typing___Text] = None,
        is_global: typing___Optional[builtin___bool] = None,
        replace: typing___Optional[builtin___bool] = None,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions___Literal["input", b"input"]
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "input", b"input", "is_global", b"is_global", "name", b"name", "replace", b"replace"
        ],
    ) -> None: ...

type___CreateDataFrameViewCommand = CreateDataFrameViewCommand

class WriteOperation(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    SaveModeValue = typing___NewType("SaveModeValue", builtin___int)
    type___SaveModeValue = SaveModeValue
    SaveMode: _SaveMode

    class _SaveMode(
        google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[
            WriteOperation.SaveModeValue
        ]
    ):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        SAVE_MODE_UNSPECIFIED = typing___cast(WriteOperation.SaveModeValue, 0)
        SAVE_MODE_APPEND = typing___cast(WriteOperation.SaveModeValue, 1)
        SAVE_MODE_OVERWRITE = typing___cast(WriteOperation.SaveModeValue, 2)
        SAVE_MODE_ERROR_IF_EXISTS = typing___cast(WriteOperation.SaveModeValue, 3)
        SAVE_MODE_IGNORE = typing___cast(WriteOperation.SaveModeValue, 4)
    SAVE_MODE_UNSPECIFIED = typing___cast(WriteOperation.SaveModeValue, 0)
    SAVE_MODE_APPEND = typing___cast(WriteOperation.SaveModeValue, 1)
    SAVE_MODE_OVERWRITE = typing___cast(WriteOperation.SaveModeValue, 2)
    SAVE_MODE_ERROR_IF_EXISTS = typing___cast(WriteOperation.SaveModeValue, 3)
    SAVE_MODE_IGNORE = typing___cast(WriteOperation.SaveModeValue, 4)

    class OptionsEntry(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        key: typing___Text = ...
        value: typing___Text = ...

        def __init__(
            self,
            *,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[typing___Text] = None,
        ) -> None: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["key", b"key", "value", b"value"]
        ) -> None: ...
    type___OptionsEntry = OptionsEntry

    class SaveTable(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        TableSaveMethodValue = typing___NewType("TableSaveMethodValue", builtin___int)
        type___TableSaveMethodValue = TableSaveMethodValue
        TableSaveMethod: _TableSaveMethod

        class _TableSaveMethod(
            google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[
                WriteOperation.SaveTable.TableSaveMethodValue
            ]
        ):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            TABLE_SAVE_METHOD_UNSPECIFIED = typing___cast(
                WriteOperation.SaveTable.TableSaveMethodValue, 0
            )
            TABLE_SAVE_METHOD_SAVE_AS_TABLE = typing___cast(
                WriteOperation.SaveTable.TableSaveMethodValue, 1
            )
            TABLE_SAVE_METHOD_INSERT_INTO = typing___cast(
                WriteOperation.SaveTable.TableSaveMethodValue, 2
            )
        TABLE_SAVE_METHOD_UNSPECIFIED = typing___cast(
            WriteOperation.SaveTable.TableSaveMethodValue, 0
        )
        TABLE_SAVE_METHOD_SAVE_AS_TABLE = typing___cast(
            WriteOperation.SaveTable.TableSaveMethodValue, 1
        )
        TABLE_SAVE_METHOD_INSERT_INTO = typing___cast(
            WriteOperation.SaveTable.TableSaveMethodValue, 2
        )

        table_name: typing___Text = ...
        save_method: type___WriteOperation.SaveTable.TableSaveMethodValue = ...

        def __init__(
            self,
            *,
            table_name: typing___Optional[typing___Text] = None,
            save_method: typing___Optional[
                type___WriteOperation.SaveTable.TableSaveMethodValue
            ] = None,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "save_method", b"save_method", "table_name", b"table_name"
            ],
        ) -> None: ...
    type___SaveTable = SaveTable

    class BucketBy(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        bucket_column_names: google___protobuf___internal___containers___RepeatedScalarFieldContainer[
            typing___Text
        ] = ...
        num_buckets: builtin___int = ...

        def __init__(
            self,
            *,
            bucket_column_names: typing___Optional[typing___Iterable[typing___Text]] = None,
            num_buckets: typing___Optional[builtin___int] = None,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "bucket_column_names", b"bucket_column_names", "num_buckets", b"num_buckets"
            ],
        ) -> None: ...
    type___BucketBy = BucketBy

    source: typing___Text = ...
    path: typing___Text = ...
    mode: type___WriteOperation.SaveModeValue = ...
    sort_column_names: google___protobuf___internal___containers___RepeatedScalarFieldContainer[
        typing___Text
    ] = ...
    partitioning_columns: google___protobuf___internal___containers___RepeatedScalarFieldContainer[
        typing___Text
    ] = ...

    @property
    def input(self) -> spark___connect___relations_pb2___Relation: ...
    @property
    def table(self) -> type___WriteOperation.SaveTable: ...
    @property
    def bucket_by(self) -> type___WriteOperation.BucketBy: ...
    @property
    def options(
        self,
    ) -> google___protobuf___internal___containers___ScalarMap[typing___Text, typing___Text]: ...
    def __init__(
        self,
        *,
        input: typing___Optional[spark___connect___relations_pb2___Relation] = None,
        source: typing___Optional[typing___Text] = None,
        path: typing___Optional[typing___Text] = None,
        table: typing___Optional[type___WriteOperation.SaveTable] = None,
        mode: typing___Optional[type___WriteOperation.SaveModeValue] = None,
        sort_column_names: typing___Optional[typing___Iterable[typing___Text]] = None,
        partitioning_columns: typing___Optional[typing___Iterable[typing___Text]] = None,
        bucket_by: typing___Optional[type___WriteOperation.BucketBy] = None,
        options: typing___Optional[typing___Mapping[typing___Text, typing___Text]] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "_source",
            b"_source",
            "bucket_by",
            b"bucket_by",
            "input",
            b"input",
            "path",
            b"path",
            "save_type",
            b"save_type",
            "source",
            b"source",
            "table",
            b"table",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "_source",
            b"_source",
            "bucket_by",
            b"bucket_by",
            "input",
            b"input",
            "mode",
            b"mode",
            "options",
            b"options",
            "partitioning_columns",
            b"partitioning_columns",
            "path",
            b"path",
            "save_type",
            b"save_type",
            "sort_column_names",
            b"sort_column_names",
            "source",
            b"source",
            "table",
            b"table",
        ],
    ) -> None: ...
    @typing___overload
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["_source", b"_source"]
    ) -> typing_extensions___Literal["source"]: ...
    @typing___overload
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["save_type", b"save_type"]
    ) -> typing_extensions___Literal["path", "table"]: ...

type___WriteOperation = WriteOperation

class WriteOperationV2(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ModeValue = typing___NewType("ModeValue", builtin___int)
    type___ModeValue = ModeValue
    Mode: _Mode

    class _Mode(
        google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[
            WriteOperationV2.ModeValue
        ]
    ):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        MODE_UNSPECIFIED = typing___cast(WriteOperationV2.ModeValue, 0)
        MODE_CREATE = typing___cast(WriteOperationV2.ModeValue, 1)
        MODE_OVERWRITE = typing___cast(WriteOperationV2.ModeValue, 2)
        MODE_OVERWRITE_PARTITIONS = typing___cast(WriteOperationV2.ModeValue, 3)
        MODE_APPEND = typing___cast(WriteOperationV2.ModeValue, 4)
        MODE_REPLACE = typing___cast(WriteOperationV2.ModeValue, 5)
        MODE_CREATE_OR_REPLACE = typing___cast(WriteOperationV2.ModeValue, 6)
    MODE_UNSPECIFIED = typing___cast(WriteOperationV2.ModeValue, 0)
    MODE_CREATE = typing___cast(WriteOperationV2.ModeValue, 1)
    MODE_OVERWRITE = typing___cast(WriteOperationV2.ModeValue, 2)
    MODE_OVERWRITE_PARTITIONS = typing___cast(WriteOperationV2.ModeValue, 3)
    MODE_APPEND = typing___cast(WriteOperationV2.ModeValue, 4)
    MODE_REPLACE = typing___cast(WriteOperationV2.ModeValue, 5)
    MODE_CREATE_OR_REPLACE = typing___cast(WriteOperationV2.ModeValue, 6)

    class OptionsEntry(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        key: typing___Text = ...
        value: typing___Text = ...

        def __init__(
            self,
            *,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[typing___Text] = None,
        ) -> None: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["key", b"key", "value", b"value"]
        ) -> None: ...
    type___OptionsEntry = OptionsEntry

    class TablePropertiesEntry(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        key: typing___Text = ...
        value: typing___Text = ...

        def __init__(
            self,
            *,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[typing___Text] = None,
        ) -> None: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["key", b"key", "value", b"value"]
        ) -> None: ...
    type___TablePropertiesEntry = TablePropertiesEntry

    table_name: typing___Text = ...
    provider: typing___Text = ...
    mode: type___WriteOperationV2.ModeValue = ...

    @property
    def input(self) -> spark___connect___relations_pb2___Relation: ...
    @property
    def partitioning_columns(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        spark___connect___expressions_pb2___Expression
    ]: ...
    @property
    def options(
        self,
    ) -> google___protobuf___internal___containers___ScalarMap[typing___Text, typing___Text]: ...
    @property
    def table_properties(
        self,
    ) -> google___protobuf___internal___containers___ScalarMap[typing___Text, typing___Text]: ...
    @property
    def overwrite_condition(self) -> spark___connect___expressions_pb2___Expression: ...
    def __init__(
        self,
        *,
        input: typing___Optional[spark___connect___relations_pb2___Relation] = None,
        table_name: typing___Optional[typing___Text] = None,
        provider: typing___Optional[typing___Text] = None,
        partitioning_columns: typing___Optional[
            typing___Iterable[spark___connect___expressions_pb2___Expression]
        ] = None,
        options: typing___Optional[typing___Mapping[typing___Text, typing___Text]] = None,
        table_properties: typing___Optional[typing___Mapping[typing___Text, typing___Text]] = None,
        mode: typing___Optional[type___WriteOperationV2.ModeValue] = None,
        overwrite_condition: typing___Optional[
            spark___connect___expressions_pb2___Expression
        ] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "_provider",
            b"_provider",
            "input",
            b"input",
            "overwrite_condition",
            b"overwrite_condition",
            "provider",
            b"provider",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "_provider",
            b"_provider",
            "input",
            b"input",
            "mode",
            b"mode",
            "options",
            b"options",
            "overwrite_condition",
            b"overwrite_condition",
            "partitioning_columns",
            b"partitioning_columns",
            "provider",
            b"provider",
            "table_name",
            b"table_name",
            "table_properties",
            b"table_properties",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["_provider", b"_provider"]
    ) -> typing_extensions___Literal["provider"]: ...

type___WriteOperationV2 = WriteOperationV2

class WriteStreamOperationStart(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    class OptionsEntry(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        key: typing___Text = ...
        value: typing___Text = ...

        def __init__(
            self,
            *,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[typing___Text] = None,
        ) -> None: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["key", b"key", "value", b"value"]
        ) -> None: ...
    type___OptionsEntry = OptionsEntry

    format: typing___Text = ...
    partitioning_column_names: google___protobuf___internal___containers___RepeatedScalarFieldContainer[
        typing___Text
    ] = ...
    processing_time_interval: typing___Text = ...
    available_now: builtin___bool = ...
    once: builtin___bool = ...
    continuous_checkpoint_interval: typing___Text = ...
    output_mode: typing___Text = ...
    query_name: typing___Text = ...
    path: typing___Text = ...
    table_name: typing___Text = ...

    @property
    def input(self) -> spark___connect___relations_pb2___Relation: ...
    @property
    def options(
        self,
    ) -> google___protobuf___internal___containers___ScalarMap[typing___Text, typing___Text]: ...
    def __init__(
        self,
        *,
        input: typing___Optional[spark___connect___relations_pb2___Relation] = None,
        format: typing___Optional[typing___Text] = None,
        options: typing___Optional[typing___Mapping[typing___Text, typing___Text]] = None,
        partitioning_column_names: typing___Optional[typing___Iterable[typing___Text]] = None,
        processing_time_interval: typing___Optional[typing___Text] = None,
        available_now: typing___Optional[builtin___bool] = None,
        once: typing___Optional[builtin___bool] = None,
        continuous_checkpoint_interval: typing___Optional[typing___Text] = None,
        output_mode: typing___Optional[typing___Text] = None,
        query_name: typing___Optional[typing___Text] = None,
        path: typing___Optional[typing___Text] = None,
        table_name: typing___Optional[typing___Text] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "available_now",
            b"available_now",
            "continuous_checkpoint_interval",
            b"continuous_checkpoint_interval",
            "input",
            b"input",
            "once",
            b"once",
            "path",
            b"path",
            "processing_time_interval",
            b"processing_time_interval",
            "sink_destination",
            b"sink_destination",
            "table_name",
            b"table_name",
            "trigger",
            b"trigger",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "available_now",
            b"available_now",
            "continuous_checkpoint_interval",
            b"continuous_checkpoint_interval",
            "format",
            b"format",
            "input",
            b"input",
            "once",
            b"once",
            "options",
            b"options",
            "output_mode",
            b"output_mode",
            "partitioning_column_names",
            b"partitioning_column_names",
            "path",
            b"path",
            "processing_time_interval",
            b"processing_time_interval",
            "query_name",
            b"query_name",
            "sink_destination",
            b"sink_destination",
            "table_name",
            b"table_name",
            "trigger",
            b"trigger",
        ],
    ) -> None: ...
    @typing___overload
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["sink_destination", b"sink_destination"]
    ) -> typing_extensions___Literal["path", "table_name"]: ...
    @typing___overload
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["trigger", b"trigger"]
    ) -> typing_extensions___Literal[
        "processing_time_interval", "available_now", "once", "continuous_checkpoint_interval"
    ]: ...

type___WriteStreamOperationStart = WriteStreamOperationStart

class WriteStreamOperationStartResult(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...

    @property
    def query_id(self) -> type___StreamingQueryInstanceId: ...
    def __init__(
        self,
        *,
        query_id: typing___Optional[type___StreamingQueryInstanceId] = None,
        name: typing___Optional[typing___Text] = None,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions___Literal["query_id", b"query_id"]
    ) -> builtin___bool: ...
    def ClearField(
        self, field_name: typing_extensions___Literal["name", b"name", "query_id", b"query_id"]
    ) -> None: ...

type___WriteStreamOperationStartResult = WriteStreamOperationStartResult

class StreamingQueryInstanceId(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    run_id: typing___Text = ...

    def __init__(
        self,
        *,
        id: typing___Optional[typing___Text] = None,
        run_id: typing___Optional[typing___Text] = None,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions___Literal["id", b"id", "run_id", b"run_id"]
    ) -> None: ...

type___StreamingQueryInstanceId = StreamingQueryInstanceId

class StreamingQueryCommand(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    class ExplainCommand(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        extended: builtin___bool = ...

        def __init__(
            self,
            *,
            extended: typing___Optional[builtin___bool] = None,
        ) -> None: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["extended", b"extended"]
        ) -> None: ...
    type___ExplainCommand = ExplainCommand

    class AwaitTerminationCommand(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        timeout_ms: builtin___int = ...

        def __init__(
            self,
            *,
            timeout_ms: typing___Optional[builtin___int] = None,
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "_timeout_ms", b"_timeout_ms", "timeout_ms", b"timeout_ms"
            ],
        ) -> builtin___bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "_timeout_ms", b"_timeout_ms", "timeout_ms", b"timeout_ms"
            ],
        ) -> None: ...
        def WhichOneof(
            self, oneof_group: typing_extensions___Literal["_timeout_ms", b"_timeout_ms"]
        ) -> typing_extensions___Literal["timeout_ms"]: ...
    type___AwaitTerminationCommand = AwaitTerminationCommand

    status: builtin___bool = ...
    last_progress: builtin___bool = ...
    recent_progress: builtin___bool = ...
    stop: builtin___bool = ...
    process_all_available: builtin___bool = ...
    exception: builtin___bool = ...

    @property
    def query_id(self) -> type___StreamingQueryInstanceId: ...
    @property
    def explain(self) -> type___StreamingQueryCommand.ExplainCommand: ...
    @property
    def await_termination(self) -> type___StreamingQueryCommand.AwaitTerminationCommand: ...
    def __init__(
        self,
        *,
        query_id: typing___Optional[type___StreamingQueryInstanceId] = None,
        status: typing___Optional[builtin___bool] = None,
        last_progress: typing___Optional[builtin___bool] = None,
        recent_progress: typing___Optional[builtin___bool] = None,
        stop: typing___Optional[builtin___bool] = None,
        process_all_available: typing___Optional[builtin___bool] = None,
        explain: typing___Optional[type___StreamingQueryCommand.ExplainCommand] = None,
        exception: typing___Optional[builtin___bool] = None,
        await_termination: typing___Optional[
            type___StreamingQueryCommand.AwaitTerminationCommand
        ] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "await_termination",
            b"await_termination",
            "command",
            b"command",
            "exception",
            b"exception",
            "explain",
            b"explain",
            "last_progress",
            b"last_progress",
            "process_all_available",
            b"process_all_available",
            "query_id",
            b"query_id",
            "recent_progress",
            b"recent_progress",
            "status",
            b"status",
            "stop",
            b"stop",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "await_termination",
            b"await_termination",
            "command",
            b"command",
            "exception",
            b"exception",
            "explain",
            b"explain",
            "last_progress",
            b"last_progress",
            "process_all_available",
            b"process_all_available",
            "query_id",
            b"query_id",
            "recent_progress",
            b"recent_progress",
            "status",
            b"status",
            "stop",
            b"stop",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["command", b"command"]
    ) -> typing_extensions___Literal[
        "status",
        "last_progress",
        "recent_progress",
        "stop",
        "process_all_available",
        "explain",
        "exception",
        "await_termination",
    ]: ...

type___StreamingQueryCommand = StreamingQueryCommand

class StreamingQueryCommandResult(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    class StatusResult(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        status_message: typing___Text = ...
        is_data_available: builtin___bool = ...
        is_trigger_active: builtin___bool = ...
        is_active: builtin___bool = ...

        def __init__(
            self,
            *,
            status_message: typing___Optional[typing___Text] = None,
            is_data_available: typing___Optional[builtin___bool] = None,
            is_trigger_active: typing___Optional[builtin___bool] = None,
            is_active: typing___Optional[builtin___bool] = None,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "is_active",
                b"is_active",
                "is_data_available",
                b"is_data_available",
                "is_trigger_active",
                b"is_trigger_active",
                "status_message",
                b"status_message",
            ],
        ) -> None: ...
    type___StatusResult = StatusResult

    class RecentProgressResult(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        recent_progress_json: google___protobuf___internal___containers___RepeatedScalarFieldContainer[
            typing___Text
        ] = ...

        def __init__(
            self,
            *,
            recent_progress_json: typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "recent_progress_json", b"recent_progress_json"
            ],
        ) -> None: ...
    type___RecentProgressResult = RecentProgressResult

    class ExplainResult(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        result: typing___Text = ...

        def __init__(
            self,
            *,
            result: typing___Optional[typing___Text] = None,
        ) -> None: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["result", b"result"]
        ) -> None: ...
    type___ExplainResult = ExplainResult

    class ExceptionResult(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        exception_message: typing___Text = ...
        error_class: typing___Text = ...
        stack_trace: typing___Text = ...

        def __init__(
            self,
            *,
            exception_message: typing___Optional[typing___Text] = None,
            error_class: typing___Optional[typing___Text] = None,
            stack_trace: typing___Optional[typing___Text] = None,
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "_error_class",
                b"_error_class",
                "_exception_message",
                b"_exception_message",
                "_stack_trace",
                b"_stack_trace",
                "error_class",
                b"error_class",
                "exception_message",
                b"exception_message",
                "stack_trace",
                b"stack_trace",
            ],
        ) -> builtin___bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "_error_class",
                b"_error_class",
                "_exception_message",
                b"_exception_message",
                "_stack_trace",
                b"_stack_trace",
                "error_class",
                b"error_class",
                "exception_message",
                b"exception_message",
                "stack_trace",
                b"stack_trace",
            ],
        ) -> None: ...
        @typing___overload
        def WhichOneof(
            self, oneof_group: typing_extensions___Literal["_error_class", b"_error_class"]
        ) -> typing_extensions___Literal["error_class"]: ...
        @typing___overload
        def WhichOneof(
            self,
            oneof_group: typing_extensions___Literal["_exception_message", b"_exception_message"],
        ) -> typing_extensions___Literal["exception_message"]: ...
        @typing___overload
        def WhichOneof(
            self, oneof_group: typing_extensions___Literal["_stack_trace", b"_stack_trace"]
        ) -> typing_extensions___Literal["stack_trace"]: ...
    type___ExceptionResult = ExceptionResult

    class AwaitTerminationResult(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        terminated: builtin___bool = ...

        def __init__(
            self,
            *,
            terminated: typing___Optional[builtin___bool] = None,
        ) -> None: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["terminated", b"terminated"]
        ) -> None: ...
    type___AwaitTerminationResult = AwaitTerminationResult

    @property
    def query_id(self) -> type___StreamingQueryInstanceId: ...
    @property
    def status(self) -> type___StreamingQueryCommandResult.StatusResult: ...
    @property
    def recent_progress(self) -> type___StreamingQueryCommandResult.RecentProgressResult: ...
    @property
    def explain(self) -> type___StreamingQueryCommandResult.ExplainResult: ...
    @property
    def exception(self) -> type___StreamingQueryCommandResult.ExceptionResult: ...
    @property
    def await_termination(self) -> type___StreamingQueryCommandResult.AwaitTerminationResult: ...
    def __init__(
        self,
        *,
        query_id: typing___Optional[type___StreamingQueryInstanceId] = None,
        status: typing___Optional[type___StreamingQueryCommandResult.StatusResult] = None,
        recent_progress: typing___Optional[
            type___StreamingQueryCommandResult.RecentProgressResult
        ] = None,
        explain: typing___Optional[type___StreamingQueryCommandResult.ExplainResult] = None,
        exception: typing___Optional[type___StreamingQueryCommandResult.ExceptionResult] = None,
        await_termination: typing___Optional[
            type___StreamingQueryCommandResult.AwaitTerminationResult
        ] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "await_termination",
            b"await_termination",
            "exception",
            b"exception",
            "explain",
            b"explain",
            "query_id",
            b"query_id",
            "recent_progress",
            b"recent_progress",
            "result_type",
            b"result_type",
            "status",
            b"status",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "await_termination",
            b"await_termination",
            "exception",
            b"exception",
            "explain",
            b"explain",
            "query_id",
            b"query_id",
            "recent_progress",
            b"recent_progress",
            "result_type",
            b"result_type",
            "status",
            b"status",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["result_type", b"result_type"]
    ) -> typing_extensions___Literal[
        "status", "recent_progress", "explain", "exception", "await_termination"
    ]: ...

type___StreamingQueryCommandResult = StreamingQueryCommandResult

class StreamingQueryManagerCommand(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    class AwaitAnyTerminationCommand(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        timeout_ms: builtin___int = ...

        def __init__(
            self,
            *,
            timeout_ms: typing___Optional[builtin___int] = None,
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "_timeout_ms", b"_timeout_ms", "timeout_ms", b"timeout_ms"
            ],
        ) -> builtin___bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "_timeout_ms", b"_timeout_ms", "timeout_ms", b"timeout_ms"
            ],
        ) -> None: ...
        def WhichOneof(
            self, oneof_group: typing_extensions.Literal["_timeout_ms", b"_timeout_ms"]
        ) -> typing_extensions.Literal["timeout_ms"] | None: ...

    ACTIVE_FIELD_NUMBER: builtins.int
    GET_QUERY_FIELD_NUMBER: builtins.int
    AWAIT_ANY_TERMINATION_FIELD_NUMBER: builtins.int
    RESET_TERMINATED_FIELD_NUMBER: builtins.int
    active: builtins.bool
    """active() API, returns a list of active queries."""
    get_query: builtins.str
    """get() API, returns the StreamingQuery identified by id."""
    @property
    def await_any_termination(
        self,
    ) -> type___StreamingQueryManagerCommand.AwaitAnyTerminationCommand: ...
    def __init__(
        self,
        *,
        active: builtins.bool = ...,
        get_query: builtins.str = ...,
        await_any_termination: global___StreamingQueryManagerCommand.AwaitAnyTerminationCommand
        | None = ...,
        reset_terminated: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "active",
            b"active",
            "await_any_termination",
            b"await_any_termination",
            "command",
            b"command",
            "get_query",
            b"get_query",
            "reset_terminated",
            b"reset_terminated",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "active",
            b"active",
            "await_any_termination",
            b"await_any_termination",
            "command",
            b"command",
            "get_query",
            b"get_query",
            "reset_terminated",
            b"reset_terminated",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["command", b"command"]
    ) -> typing_extensions.Literal[
        "active", "get_query", "await_any_termination", "reset_terminated"
    ] | None: ...

global___StreamingQueryManagerCommand = StreamingQueryManagerCommand

type___StreamingQueryManagerCommand = StreamingQueryManagerCommand

class StreamingQueryManagerCommandResult(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    class ActiveResult(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def active_queries(
            self,
        ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
            type___StreamingQueryManagerCommandResult.StreamingQueryInstance
        ]: ...
        def __init__(
            self,
            *,
            active_queries: typing___Optional[
                typing___Iterable[type___StreamingQueryManagerCommandResult.StreamingQueryInstance]
            ] = None,
        ) -> None: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["active_queries", b"active_queries"]
        ) -> None: ...
    type___ActiveResult = ActiveResult

    class StreamingQueryInstance(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        name: typing___Text = ...

        @property
        def id(self) -> type___StreamingQueryInstanceId: ...
        def __init__(
            self,
            *,
            id: typing___Optional[type___StreamingQueryInstanceId] = None,
            name: typing___Optional[typing___Text] = None,
        ) -> None: ...
        def HasField(
            self, field_name: typing_extensions___Literal["id", b"id"]
        ) -> builtin___bool: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["id", b"id", "name", b"name"]
        ) -> None: ...
    type___StreamingQueryInstance = StreamingQueryInstance

    class AwaitAnyTerminationResult(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        terminated: builtin___bool = ...

        def __init__(
            self,
            *,
            terminated: typing___Optional[builtin___bool] = None,
        ) -> None: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["terminated", b"terminated"]
        ) -> None: ...
    type___AwaitAnyTerminationResult = AwaitAnyTerminationResult

    reset_terminated: builtin___bool = ...

    @property
    def active(self) -> type___StreamingQueryManagerCommandResult.ActiveResult: ...
    @property
    def query(self) -> type___StreamingQueryManagerCommandResult.StreamingQueryInstance: ...
    @property
    def await_any_termination(
        self,
    ) -> type___StreamingQueryManagerCommandResult.AwaitAnyTerminationResult: ...
    def __init__(
        self,
        *,
        active: typing___Optional[type___StreamingQueryManagerCommandResult.ActiveResult] = None,
        query: typing___Optional[
            type___StreamingQueryManagerCommandResult.StreamingQueryInstance
        ] = None,
        await_any_termination: typing___Optional[
            type___StreamingQueryManagerCommandResult.AwaitAnyTerminationResult
        ] = None,
        reset_terminated: typing___Optional[builtin___bool] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "active",
            b"active",
            "await_any_termination",
            b"await_any_termination",
            "query",
            b"query",
            "reset_terminated",
            b"reset_terminated",
            "result_type",
            b"result_type",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "active",
            b"active",
            "await_any_termination",
            b"await_any_termination",
            "query",
            b"query",
            "reset_terminated",
            b"reset_terminated",
            "result_type",
            b"result_type",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["result_type", b"result_type"]
    ) -> typing_extensions___Literal[
        "active", "query", "await_any_termination", "reset_terminated"
    ]: ...

type___StreamingQueryManagerCommandResult = StreamingQueryManagerCommandResult

class GetResourcesCommand(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    def __init__(
        self,
    ) -> None: ...

type___GetResourcesCommand = GetResourcesCommand

class GetResourcesCommandResult(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    class ResourcesEntry(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        key: typing___Text = ...

        @property
        def value(self) -> spark___connect___common_pb2___ResourceInformation: ...
        def __init__(
            self,
            *,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[spark___connect___common_pb2___ResourceInformation] = None,
        ) -> None: ...
        def HasField(
            self, field_name: typing_extensions___Literal["value", b"value"]
        ) -> builtin___bool: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["key", b"key", "value", b"value"]
        ) -> None: ...
    type___ResourcesEntry = ResourcesEntry

    @property
    def resources(
        self,
    ) -> google___protobuf___internal___containers___MessageMap[
        typing___Text, spark___connect___common_pb2___ResourceInformation
    ]: ...
    def __init__(
        self,
        *,
        resources: typing___Optional[
            typing___Mapping[typing___Text, spark___connect___common_pb2___ResourceInformation]
        ] = None,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions___Literal["resources", b"resources"]
    ) -> None: ...

type___GetResourcesCommandResult = GetResourcesCommandResult
