#!/usr/bin/env bash

#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Run test suites and indivisual test suite.
#
# Usage: run-tests [-v python version] [core|sql|mllib|ml|streaming]
#
# When you select none, all test suites are run. You can also select
# multiple test suites.

function usage() {
    echo "Usage: run-tests [-v python version] [core|sql|mllib|ml|streaming]"
}

SUPPORT_PYTHON_VERSIONS="2.6 3.4 pypy"
TARGET_PYTHON_VERSION=
if [ $# != 0 -a $1 == "-v" ]; then
    TARGET_PYTHON_VERSION=$2
    shift 2
fi

if [ $# == 0 ]; then
    DO_CORE_TESTS=1
    DO_SQL_TESTS=1
    DO_MLLIB_TESTS=1
    DO_ML_TESTS=1
    DO_STREAMING_TESTS=1
else
    DO_CORE_TESTS=0
    DO_SQL_TESTS=0
    DO_MLLIB_TESTS=0
    DO_ML_TESTS=0
    DO_STREAMING_TESTS=0

    while (("$#")); do
        case $1 in
            core)
                DO_CORE_TESTS=1
                ;;
            sql)
                DO_SQL_TESTS=1
                ;;
            mllib)
                DO_MLLIB_TESTS=1
                ;;
            ml)
                DO_ML_TESTS=1
                ;;
            streaming)
                DO_STREAMING_TESTS=1
                ;;
            *)
                usage
                exit 1
                ;;
        esac
        shift
    done
fi

# set the directory that this script stored in.
SCRIPT_DIR="$(cd "`dirname "$0"`"; pwd)"

# Figure out where the Spark framework is installed
FWDIR="$(cd "`dirname "$0"`"; cd ../; pwd)"

. "$FWDIR"/bin/load-spark-env.sh

# CD into the python directory to find things on the right path
cd "$FWDIR/python"

LOG_FILE=unit-tests.log

rm -f $LOG_FILE

echo "Running PySpark tests. Output is in python/$LOG_FILE."

if [ -n "$TARGET_PYTHON_VERSION" ]; then
    if [[ ! "$SUPPORT_PYTHON_VERSIONS" =~ "$TARGET_PYTHON_VERSION" ]]; then
        echo "python $TARGET_PYTHON_VERSION is not supported."
        exit 1
    fi

    SUPPORT_PYTHON_VERSIONS=$TARGET_PYTHON_VERSION
fi

for PYVERSION in $SUPPORT_PYTHON_VERSIONS;
do
    # Remove the metastore and warehouse directory created by the HiveContext tests in Spark SQL
    rm -rf metastore warehouse

    START=$(date +"%s")
    FAILED=0

    if [ -f "${SCRIPT_DIR}/tests/$PYVERSION.sh" ]; then
        . "${SCRIPT_DIR}/tests/$PYVERSION.sh"
    else
        . "${SCRIPT_DIR}/tests/default" $PYVERSION
    fi

    if [[ $FAILED == 0 ]]; then
        now=$(date +"%s")
        echo -e "\033[32mTests passed \033[0min $(($now - $START)) seconds"
    fi
done
