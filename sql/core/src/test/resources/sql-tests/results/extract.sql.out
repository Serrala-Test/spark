-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 28


-- !query 0
CREATE TEMPORARY VIEW t AS select '2011-05-06 07:08:09.1234567' as c
-- !query 0 schema
struct<>
-- !query 0 output



-- !query 1
select extract(year from c) from t
-- !query 1 schema
struct<year(CAST(c AS DATE)):int>
-- !query 1 output
2011


-- !query 2
select extract(isoyear from c) from t
-- !query 2 schema
struct<isoyear(CAST(c AS DATE)):int>
-- !query 2 output
2011


-- !query 3
select extract(quarter from c) from t
-- !query 3 schema
struct<quarter(CAST(c AS DATE)):int>
-- !query 3 output
2


-- !query 4
select extract(month from c) from t
-- !query 4 schema
struct<month(CAST(c AS DATE)):int>
-- !query 4 output
5


-- !query 5
select extract(week from c) from t
-- !query 5 schema
struct<weekofyear(CAST(c AS DATE)):int>
-- !query 5 output
18


-- !query 6
select extract(day from c) from t
-- !query 6 schema
struct<dayofmonth(CAST(c AS DATE)):int>
-- !query 6 output
6


-- !query 7
select extract(dayofweek from c) from t
-- !query 7 schema
struct<dayofweek(CAST(c AS DATE)):int>
-- !query 7 output
6


-- !query 8
select extract(dow from c) from t
-- !query 8 schema
struct<(dayofweek(CAST(c AS DATE)) - 1):int>
-- !query 8 output
5


-- !query 9
select extract(isodow from c) from t
-- !query 9 schema
struct<(weekday(CAST(c AS DATE)) + 1):int>
-- !query 9 output
5


-- !query 10
select extract(doy from c) from t
-- !query 10 schema
struct<dayofyear(CAST(c AS DATE)):int>
-- !query 10 output
126


-- !query 11
select extract(hour from c) from t
-- !query 11 schema
struct<hour(CAST(c AS TIMESTAMP)):int>
-- !query 11 output
7


-- !query 12
select extract(minute from c) from t
-- !query 12 schema
struct<minute(CAST(c AS TIMESTAMP)):int>
-- !query 12 output
8


-- !query 13
select extract(second from c) from t
-- !query 13 schema
struct<second(CAST(c AS TIMESTAMP)):int>
-- !query 13 output
9


-- !query 14
select extract(milliseconds from c) from t
-- !query 14 schema
struct<milliseconds(CAST(c AS TIMESTAMP)):decimal(8,3)>
-- !query 14 output
9123.456


-- !query 15
select extract(msec from c) from t
-- !query 15 schema
struct<milliseconds(CAST(c AS TIMESTAMP)):decimal(8,3)>
-- !query 15 output
9123.456


-- !query 16
select extract(msecs from c) from t
-- !query 16 schema
struct<milliseconds(CAST(c AS TIMESTAMP)):decimal(8,3)>
-- !query 16 output
9123.456


-- !query 17
select extract(millisecon from c) from t
-- !query 17 schema
struct<milliseconds(CAST(c AS TIMESTAMP)):decimal(8,3)>
-- !query 17 output
9123.456


-- !query 18
select extract(mseconds from c) from t
-- !query 18 schema
struct<milliseconds(CAST(c AS TIMESTAMP)):decimal(8,3)>
-- !query 18 output
9123.456


-- !query 19
select extract(ms from c) from t
-- !query 19 schema
struct<milliseconds(CAST(c AS TIMESTAMP)):decimal(8,3)>
-- !query 19 output
9123.456


-- !query 20
select extract(microseconds from c) from t
-- !query 20 schema
struct<microseconds(CAST(c AS TIMESTAMP)):int>
-- !query 20 output
9123456


-- !query 21
select extract(usec from c) from t
-- !query 21 schema
struct<microseconds(CAST(c AS TIMESTAMP)):int>
-- !query 21 output
9123456


-- !query 22
select extract(usecs from c) from t
-- !query 22 schema
struct<microseconds(CAST(c AS TIMESTAMP)):int>
-- !query 22 output
9123456


-- !query 23
select extract(useconds from c) from t
-- !query 23 schema
struct<microseconds(CAST(c AS TIMESTAMP)):int>
-- !query 23 output
9123456


-- !query 24
select extract(microsecon from c) from t
-- !query 24 schema
struct<microseconds(CAST(c AS TIMESTAMP)):int>
-- !query 24 output
9123456


-- !query 25
select extract(us from c) from t
-- !query 25 schema
struct<microseconds(CAST(c AS TIMESTAMP)):int>
-- !query 25 output
9123456


-- !query 26
select extract(epoch from c) from t
-- !query 26 schema
struct<epoch(CAST(c AS TIMESTAMP)):decimal(20,6)>
-- !query 26 output
1304665689.123456


-- !query 27
select extract(not_supported from c) from t
-- !query 27 schema
struct<>
-- !query 27 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'NOT_SUPPORTED' are currently not supported.(line 1, pos 7)

== SQL ==
select extract(not_supported from c) from t
-------^^^
