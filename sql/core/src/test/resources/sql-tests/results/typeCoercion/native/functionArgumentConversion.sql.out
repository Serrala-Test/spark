-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 901


-- !query 0
CREATE TEMPORARY VIEW t AS SELECT 1
-- !query 0 schema
struct<>
-- !query 0 output



-- !query 1
SELECT array(cast(1 as tinyint), cast(1 as tinyint)) FROM t
-- !query 1 schema
struct<array(CAST(1 AS TINYINT), CAST(1 AS TINYINT)):array<tinyint>>
-- !query 1 output
[1,1]


-- !query 2
SELECT array(cast(1 as tinyint), cast(1 as smallint)) FROM t
-- !query 2 schema
struct<array(CAST(CAST(1 AS TINYINT) AS SMALLINT), CAST(CAST(1 AS SMALLINT) AS SMALLINT)):array<smallint>>
-- !query 2 output
[1,1]


-- !query 3
SELECT array(cast(1 as tinyint), cast(1 as int)) FROM t
-- !query 3 schema
struct<array(CAST(CAST(1 AS TINYINT) AS INT), CAST(CAST(1 AS INT) AS INT)):array<int>>
-- !query 3 output
[1,1]


-- !query 4
SELECT array(cast(1 as tinyint), cast(1 as bigint)) FROM t
-- !query 4 schema
struct<array(CAST(CAST(1 AS TINYINT) AS BIGINT), CAST(CAST(1 AS BIGINT) AS BIGINT)):array<bigint>>
-- !query 4 output
[1,1]


-- !query 5
SELECT array(cast(1 as tinyint), cast(1 as float)) FROM t
-- !query 5 schema
struct<array(CAST(CAST(1 AS TINYINT) AS FLOAT), CAST(CAST(1 AS FLOAT) AS FLOAT)):array<float>>
-- !query 5 output
[1.0,1.0]


-- !query 6
SELECT array(cast(1 as tinyint), cast(1 as double)) FROM t
-- !query 6 schema
struct<array(CAST(CAST(1 AS TINYINT) AS DOUBLE), CAST(CAST(1 AS DOUBLE) AS DOUBLE)):array<double>>
-- !query 6 output
[1.0,1.0]


-- !query 7
SELECT array(cast(1 as tinyint), cast(1 as decimal(10, 0))) FROM t
-- !query 7 schema
struct<array(CAST(CAST(1 AS TINYINT) AS DECIMAL(10,0)), CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(10,0))):array<decimal(10,0)>>
-- !query 7 output
[1,1]


-- !query 8
SELECT array(cast(1 as tinyint), cast(1 as string)) FROM t
-- !query 8 schema
struct<array(CAST(CAST(1 AS TINYINT) AS STRING), CAST(CAST(1 AS STRING) AS STRING)):array<string>>
-- !query 8 output
["1","1"]


-- !query 9
SELECT size(array(cast(1 as tinyint), cast('1' as binary))) FROM t
-- !query 9 schema
struct<>
-- !query 9 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS TINYINT), CAST('1' AS BINARY))' due to data type mismatch: input to function array should all be the same type, but it's [tinyint, binary]; line 1 pos 12


-- !query 10
SELECT array(cast(1 as tinyint), cast(1 as boolean)) FROM t
-- !query 10 schema
struct<>
-- !query 10 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS TINYINT), CAST(1 AS BOOLEAN))' due to data type mismatch: input to function array should all be the same type, but it's [tinyint, boolean]; line 1 pos 7


-- !query 11
SELECT array(cast(1 as tinyint), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 11 schema
struct<>
-- !query 11 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS TINYINT), CAST('2017-12-11 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function array should all be the same type, but it's [tinyint, timestamp]; line 1 pos 7


-- !query 12
SELECT array(cast(1 as tinyint), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 12 schema
struct<>
-- !query 12 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS TINYINT), CAST('2017-12-11 09:30:00' AS DATE))' due to data type mismatch: input to function array should all be the same type, but it's [tinyint, date]; line 1 pos 7


-- !query 13
SELECT array(cast(1 as smallint), cast(1 as tinyint)) FROM t
-- !query 13 schema
struct<array(CAST(CAST(1 AS SMALLINT) AS SMALLINT), CAST(CAST(1 AS TINYINT) AS SMALLINT)):array<smallint>>
-- !query 13 output
[1,1]


-- !query 14
SELECT array(cast(1 as smallint), cast(1 as smallint)) FROM t
-- !query 14 schema
struct<array(CAST(1 AS SMALLINT), CAST(1 AS SMALLINT)):array<smallint>>
-- !query 14 output
[1,1]


-- !query 15
SELECT array(cast(1 as smallint), cast(1 as int)) FROM t
-- !query 15 schema
struct<array(CAST(CAST(1 AS SMALLINT) AS INT), CAST(CAST(1 AS INT) AS INT)):array<int>>
-- !query 15 output
[1,1]


-- !query 16
SELECT array(cast(1 as smallint), cast(1 as bigint)) FROM t
-- !query 16 schema
struct<array(CAST(CAST(1 AS SMALLINT) AS BIGINT), CAST(CAST(1 AS BIGINT) AS BIGINT)):array<bigint>>
-- !query 16 output
[1,1]


-- !query 17
SELECT array(cast(1 as smallint), cast(1 as float)) FROM t
-- !query 17 schema
struct<array(CAST(CAST(1 AS SMALLINT) AS FLOAT), CAST(CAST(1 AS FLOAT) AS FLOAT)):array<float>>
-- !query 17 output
[1.0,1.0]


-- !query 18
SELECT array(cast(1 as smallint), cast(1 as double)) FROM t
-- !query 18 schema
struct<array(CAST(CAST(1 AS SMALLINT) AS DOUBLE), CAST(CAST(1 AS DOUBLE) AS DOUBLE)):array<double>>
-- !query 18 output
[1.0,1.0]


-- !query 19
SELECT array(cast(1 as smallint), cast(1 as decimal(10, 0))) FROM t
-- !query 19 schema
struct<array(CAST(CAST(1 AS SMALLINT) AS DECIMAL(10,0)), CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(10,0))):array<decimal(10,0)>>
-- !query 19 output
[1,1]


-- !query 20
SELECT array(cast(1 as smallint), cast(1 as string)) FROM t
-- !query 20 schema
struct<array(CAST(CAST(1 AS SMALLINT) AS STRING), CAST(CAST(1 AS STRING) AS STRING)):array<string>>
-- !query 20 output
["1","1"]


-- !query 21
SELECT size(array(cast(1 as smallint), cast('1' as binary))) FROM t
-- !query 21 schema
struct<>
-- !query 21 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS SMALLINT), CAST('1' AS BINARY))' due to data type mismatch: input to function array should all be the same type, but it's [smallint, binary]; line 1 pos 12


-- !query 22
SELECT array(cast(1 as smallint), cast(1 as boolean)) FROM t
-- !query 22 schema
struct<>
-- !query 22 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS SMALLINT), CAST(1 AS BOOLEAN))' due to data type mismatch: input to function array should all be the same type, but it's [smallint, boolean]; line 1 pos 7


-- !query 23
SELECT array(cast(1 as smallint), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 23 schema
struct<>
-- !query 23 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS SMALLINT), CAST('2017-12-11 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function array should all be the same type, but it's [smallint, timestamp]; line 1 pos 7


-- !query 24
SELECT array(cast(1 as smallint), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 24 schema
struct<>
-- !query 24 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS SMALLINT), CAST('2017-12-11 09:30:00' AS DATE))' due to data type mismatch: input to function array should all be the same type, but it's [smallint, date]; line 1 pos 7


-- !query 25
SELECT array(cast(1 as int), cast(1 as tinyint)) FROM t
-- !query 25 schema
struct<array(CAST(CAST(1 AS INT) AS INT), CAST(CAST(1 AS TINYINT) AS INT)):array<int>>
-- !query 25 output
[1,1]


-- !query 26
SELECT array(cast(1 as int), cast(1 as smallint)) FROM t
-- !query 26 schema
struct<array(CAST(CAST(1 AS INT) AS INT), CAST(CAST(1 AS SMALLINT) AS INT)):array<int>>
-- !query 26 output
[1,1]


-- !query 27
SELECT array(cast(1 as int), cast(1 as int)) FROM t
-- !query 27 schema
struct<array(CAST(1 AS INT), CAST(1 AS INT)):array<int>>
-- !query 27 output
[1,1]


-- !query 28
SELECT array(cast(1 as int), cast(1 as bigint)) FROM t
-- !query 28 schema
struct<array(CAST(CAST(1 AS INT) AS BIGINT), CAST(CAST(1 AS BIGINT) AS BIGINT)):array<bigint>>
-- !query 28 output
[1,1]


-- !query 29
SELECT array(cast(1 as int), cast(1 as float)) FROM t
-- !query 29 schema
struct<array(CAST(CAST(1 AS INT) AS FLOAT), CAST(CAST(1 AS FLOAT) AS FLOAT)):array<float>>
-- !query 29 output
[1.0,1.0]


-- !query 30
SELECT array(cast(1 as int), cast(1 as double)) FROM t
-- !query 30 schema
struct<array(CAST(CAST(1 AS INT) AS DOUBLE), CAST(CAST(1 AS DOUBLE) AS DOUBLE)):array<double>>
-- !query 30 output
[1.0,1.0]


-- !query 31
SELECT array(cast(1 as int), cast(1 as decimal(10, 0))) FROM t
-- !query 31 schema
struct<array(CAST(CAST(1 AS INT) AS DECIMAL(10,0)), CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(10,0))):array<decimal(10,0)>>
-- !query 31 output
[1,1]


-- !query 32
SELECT array(cast(1 as int), cast(1 as string)) FROM t
-- !query 32 schema
struct<array(CAST(CAST(1 AS INT) AS STRING), CAST(CAST(1 AS STRING) AS STRING)):array<string>>
-- !query 32 output
["1","1"]


-- !query 33
SELECT size(array(cast(1 as int), cast('1' as binary))) FROM t
-- !query 33 schema
struct<>
-- !query 33 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS INT), CAST('1' AS BINARY))' due to data type mismatch: input to function array should all be the same type, but it's [int, binary]; line 1 pos 12


-- !query 34
SELECT array(cast(1 as int), cast(1 as boolean)) FROM t
-- !query 34 schema
struct<>
-- !query 34 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS INT), CAST(1 AS BOOLEAN))' due to data type mismatch: input to function array should all be the same type, but it's [int, boolean]; line 1 pos 7


-- !query 35
SELECT array(cast(1 as int), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 35 schema
struct<>
-- !query 35 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS INT), CAST('2017-12-11 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function array should all be the same type, but it's [int, timestamp]; line 1 pos 7


-- !query 36
SELECT array(cast(1 as int), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 36 schema
struct<>
-- !query 36 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS INT), CAST('2017-12-11 09:30:00' AS DATE))' due to data type mismatch: input to function array should all be the same type, but it's [int, date]; line 1 pos 7


-- !query 37
SELECT array(cast(1 as bigint), cast(1 as tinyint)) FROM t
-- !query 37 schema
struct<array(CAST(CAST(1 AS BIGINT) AS BIGINT), CAST(CAST(1 AS TINYINT) AS BIGINT)):array<bigint>>
-- !query 37 output
[1,1]


-- !query 38
SELECT array(cast(1 as bigint), cast(1 as smallint)) FROM t
-- !query 38 schema
struct<array(CAST(CAST(1 AS BIGINT) AS BIGINT), CAST(CAST(1 AS SMALLINT) AS BIGINT)):array<bigint>>
-- !query 38 output
[1,1]


-- !query 39
SELECT array(cast(1 as bigint), cast(1 as int)) FROM t
-- !query 39 schema
struct<array(CAST(CAST(1 AS BIGINT) AS BIGINT), CAST(CAST(1 AS INT) AS BIGINT)):array<bigint>>
-- !query 39 output
[1,1]


-- !query 40
SELECT array(cast(1 as bigint), cast(1 as bigint)) FROM t
-- !query 40 schema
struct<array(CAST(1 AS BIGINT), CAST(1 AS BIGINT)):array<bigint>>
-- !query 40 output
[1,1]


-- !query 41
SELECT array(cast(1 as bigint), cast(1 as float)) FROM t
-- !query 41 schema
struct<array(CAST(CAST(1 AS BIGINT) AS FLOAT), CAST(CAST(1 AS FLOAT) AS FLOAT)):array<float>>
-- !query 41 output
[1.0,1.0]


-- !query 42
SELECT array(cast(1 as bigint), cast(1 as double)) FROM t
-- !query 42 schema
struct<array(CAST(CAST(1 AS BIGINT) AS DOUBLE), CAST(CAST(1 AS DOUBLE) AS DOUBLE)):array<double>>
-- !query 42 output
[1.0,1.0]


-- !query 43
SELECT array(cast(1 as bigint), cast(1 as decimal(10, 0))) FROM t
-- !query 43 schema
struct<array(CAST(CAST(1 AS BIGINT) AS DECIMAL(20,0)), CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(20,0))):array<decimal(20,0)>>
-- !query 43 output
[1,1]


-- !query 44
SELECT array(cast(1 as bigint), cast(1 as string)) FROM t
-- !query 44 schema
struct<array(CAST(CAST(1 AS BIGINT) AS STRING), CAST(CAST(1 AS STRING) AS STRING)):array<string>>
-- !query 44 output
["1","1"]


-- !query 45
SELECT size(array(cast(1 as bigint), cast('1' as binary))) FROM t
-- !query 45 schema
struct<>
-- !query 45 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS BIGINT), CAST('1' AS BINARY))' due to data type mismatch: input to function array should all be the same type, but it's [bigint, binary]; line 1 pos 12


-- !query 46
SELECT array(cast(1 as bigint), cast(1 as boolean)) FROM t
-- !query 46 schema
struct<>
-- !query 46 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS BIGINT), CAST(1 AS BOOLEAN))' due to data type mismatch: input to function array should all be the same type, but it's [bigint, boolean]; line 1 pos 7


-- !query 47
SELECT array(cast(1 as bigint), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 47 schema
struct<>
-- !query 47 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS BIGINT), CAST('2017-12-11 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function array should all be the same type, but it's [bigint, timestamp]; line 1 pos 7


-- !query 48
SELECT array(cast(1 as bigint), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 48 schema
struct<>
-- !query 48 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS BIGINT), CAST('2017-12-11 09:30:00' AS DATE))' due to data type mismatch: input to function array should all be the same type, but it's [bigint, date]; line 1 pos 7


-- !query 49
SELECT array(cast(1 as float), cast(1 as tinyint)) FROM t
-- !query 49 schema
struct<array(CAST(CAST(1 AS FLOAT) AS FLOAT), CAST(CAST(1 AS TINYINT) AS FLOAT)):array<float>>
-- !query 49 output
[1.0,1.0]


-- !query 50
SELECT array(cast(1 as float), cast(1 as smallint)) FROM t
-- !query 50 schema
struct<array(CAST(CAST(1 AS FLOAT) AS FLOAT), CAST(CAST(1 AS SMALLINT) AS FLOAT)):array<float>>
-- !query 50 output
[1.0,1.0]


-- !query 51
SELECT array(cast(1 as float), cast(1 as int)) FROM t
-- !query 51 schema
struct<array(CAST(CAST(1 AS FLOAT) AS FLOAT), CAST(CAST(1 AS INT) AS FLOAT)):array<float>>
-- !query 51 output
[1.0,1.0]


-- !query 52
SELECT array(cast(1 as float), cast(1 as bigint)) FROM t
-- !query 52 schema
struct<array(CAST(CAST(1 AS FLOAT) AS FLOAT), CAST(CAST(1 AS BIGINT) AS FLOAT)):array<float>>
-- !query 52 output
[1.0,1.0]


-- !query 53
SELECT array(cast(1 as float), cast(1 as float)) FROM t
-- !query 53 schema
struct<array(CAST(1 AS FLOAT), CAST(1 AS FLOAT)):array<float>>
-- !query 53 output
[1.0,1.0]


-- !query 54
SELECT array(cast(1 as float), cast(1 as double)) FROM t
-- !query 54 schema
struct<array(CAST(CAST(1 AS FLOAT) AS DOUBLE), CAST(CAST(1 AS DOUBLE) AS DOUBLE)):array<double>>
-- !query 54 output
[1.0,1.0]


-- !query 55
SELECT array(cast(1 as float), cast(1 as decimal(10, 0))) FROM t
-- !query 55 schema
struct<array(CAST(CAST(1 AS FLOAT) AS DOUBLE), CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE)):array<double>>
-- !query 55 output
[1.0,1.0]


-- !query 56
SELECT array(cast(1 as float), cast(1 as string)) FROM t
-- !query 56 schema
struct<array(CAST(CAST(1 AS FLOAT) AS STRING), CAST(CAST(1 AS STRING) AS STRING)):array<string>>
-- !query 56 output
["1.0","1"]


-- !query 57
SELECT size(array(cast(1 as float), cast('1' as binary))) FROM t
-- !query 57 schema
struct<>
-- !query 57 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS FLOAT), CAST('1' AS BINARY))' due to data type mismatch: input to function array should all be the same type, but it's [float, binary]; line 1 pos 12


-- !query 58
SELECT array(cast(1 as float), cast(1 as boolean)) FROM t
-- !query 58 schema
struct<>
-- !query 58 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS FLOAT), CAST(1 AS BOOLEAN))' due to data type mismatch: input to function array should all be the same type, but it's [float, boolean]; line 1 pos 7


-- !query 59
SELECT array(cast(1 as float), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 59 schema
struct<>
-- !query 59 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS FLOAT), CAST('2017-12-11 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function array should all be the same type, but it's [float, timestamp]; line 1 pos 7


-- !query 60
SELECT array(cast(1 as float), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 60 schema
struct<>
-- !query 60 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS FLOAT), CAST('2017-12-11 09:30:00' AS DATE))' due to data type mismatch: input to function array should all be the same type, but it's [float, date]; line 1 pos 7


-- !query 61
SELECT array(cast(1 as double), cast(1 as tinyint)) FROM t
-- !query 61 schema
struct<array(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(1 AS TINYINT) AS DOUBLE)):array<double>>
-- !query 61 output
[1.0,1.0]


-- !query 62
SELECT array(cast(1 as double), cast(1 as smallint)) FROM t
-- !query 62 schema
struct<array(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(1 AS SMALLINT) AS DOUBLE)):array<double>>
-- !query 62 output
[1.0,1.0]


-- !query 63
SELECT array(cast(1 as double), cast(1 as int)) FROM t
-- !query 63 schema
struct<array(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(1 AS INT) AS DOUBLE)):array<double>>
-- !query 63 output
[1.0,1.0]


-- !query 64
SELECT array(cast(1 as double), cast(1 as bigint)) FROM t
-- !query 64 schema
struct<array(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(1 AS BIGINT) AS DOUBLE)):array<double>>
-- !query 64 output
[1.0,1.0]


-- !query 65
SELECT array(cast(1 as double), cast(1 as float)) FROM t
-- !query 65 schema
struct<array(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(1 AS FLOAT) AS DOUBLE)):array<double>>
-- !query 65 output
[1.0,1.0]


-- !query 66
SELECT array(cast(1 as double), cast(1 as double)) FROM t
-- !query 66 schema
struct<array(CAST(1 AS DOUBLE), CAST(1 AS DOUBLE)):array<double>>
-- !query 66 output
[1.0,1.0]


-- !query 67
SELECT array(cast(1 as double), cast(1 as decimal(10, 0))) FROM t
-- !query 67 schema
struct<array(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE)):array<double>>
-- !query 67 output
[1.0,1.0]


-- !query 68
SELECT array(cast(1 as double), cast(1 as string)) FROM t
-- !query 68 schema
struct<array(CAST(CAST(1 AS DOUBLE) AS STRING), CAST(CAST(1 AS STRING) AS STRING)):array<string>>
-- !query 68 output
["1.0","1"]


-- !query 69
SELECT size(array(cast(1 as double), cast('1' as binary))) FROM t
-- !query 69 schema
struct<>
-- !query 69 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS DOUBLE), CAST('1' AS BINARY))' due to data type mismatch: input to function array should all be the same type, but it's [double, binary]; line 1 pos 12


-- !query 70
SELECT array(cast(1 as double), cast(1 as boolean)) FROM t
-- !query 70 schema
struct<>
-- !query 70 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS DOUBLE), CAST(1 AS BOOLEAN))' due to data type mismatch: input to function array should all be the same type, but it's [double, boolean]; line 1 pos 7


-- !query 71
SELECT array(cast(1 as double), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 71 schema
struct<>
-- !query 71 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS DOUBLE), CAST('2017-12-11 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function array should all be the same type, but it's [double, timestamp]; line 1 pos 7


-- !query 72
SELECT array(cast(1 as double), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 72 schema
struct<>
-- !query 72 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS DOUBLE), CAST('2017-12-11 09:30:00' AS DATE))' due to data type mismatch: input to function array should all be the same type, but it's [double, date]; line 1 pos 7


-- !query 73
SELECT array(cast(1 as decimal(10, 0)), cast(1 as tinyint)) FROM t
-- !query 73 schema
struct<array(CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(10,0)), CAST(CAST(1 AS TINYINT) AS DECIMAL(10,0))):array<decimal(10,0)>>
-- !query 73 output
[1,1]


-- !query 74
SELECT array(cast(1 as decimal(10, 0)), cast(1 as smallint)) FROM t
-- !query 74 schema
struct<array(CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(10,0)), CAST(CAST(1 AS SMALLINT) AS DECIMAL(10,0))):array<decimal(10,0)>>
-- !query 74 output
[1,1]


-- !query 75
SELECT array(cast(1 as decimal(10, 0)), cast(1 as int)) FROM t
-- !query 75 schema
struct<array(CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(10,0)), CAST(CAST(1 AS INT) AS DECIMAL(10,0))):array<decimal(10,0)>>
-- !query 75 output
[1,1]


-- !query 76
SELECT array(cast(1 as decimal(10, 0)), cast(1 as bigint)) FROM t
-- !query 76 schema
struct<array(CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(20,0)), CAST(CAST(1 AS BIGINT) AS DECIMAL(20,0))):array<decimal(20,0)>>
-- !query 76 output
[1,1]


-- !query 77
SELECT array(cast(1 as decimal(10, 0)), cast(1 as float)) FROM t
-- !query 77 schema
struct<array(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST(CAST(1 AS FLOAT) AS DOUBLE)):array<double>>
-- !query 77 output
[1.0,1.0]


-- !query 78
SELECT array(cast(1 as decimal(10, 0)), cast(1 as double)) FROM t
-- !query 78 schema
struct<array(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST(CAST(1 AS DOUBLE) AS DOUBLE)):array<double>>
-- !query 78 output
[1.0,1.0]


-- !query 79
SELECT array(cast(1 as decimal(10, 0)), cast(1 as decimal(10, 0))) FROM t
-- !query 79 schema
struct<array(CAST(1 AS DECIMAL(10,0)), CAST(1 AS DECIMAL(10,0))):array<decimal(10,0)>>
-- !query 79 output
[1,1]


-- !query 80
SELECT array(cast(1 as decimal(10, 0)), cast(1 as string)) FROM t
-- !query 80 schema
struct<array(CAST(CAST(1 AS DECIMAL(10,0)) AS STRING), CAST(CAST(1 AS STRING) AS STRING)):array<string>>
-- !query 80 output
["1","1"]


-- !query 81
SELECT size(array(cast(1 as decimal(10, 0)), cast('1' as binary))) FROM t
-- !query 81 schema
struct<>
-- !query 81 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS DECIMAL(10,0)), CAST('1' AS BINARY))' due to data type mismatch: input to function array should all be the same type, but it's [decimal(10,0), binary]; line 1 pos 12


-- !query 82
SELECT array(cast(1 as decimal(10, 0)), cast(1 as boolean)) FROM t
-- !query 82 schema
struct<>
-- !query 82 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS DECIMAL(10,0)), CAST(1 AS BOOLEAN))' due to data type mismatch: input to function array should all be the same type, but it's [decimal(10,0), boolean]; line 1 pos 7


-- !query 83
SELECT array(cast(1 as decimal(10, 0)), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 83 schema
struct<>
-- !query 83 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS DECIMAL(10,0)), CAST('2017-12-11 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function array should all be the same type, but it's [decimal(10,0), timestamp]; line 1 pos 7


-- !query 84
SELECT array(cast(1 as decimal(10, 0)), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 84 schema
struct<>
-- !query 84 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS DECIMAL(10,0)), CAST('2017-12-11 09:30:00' AS DATE))' due to data type mismatch: input to function array should all be the same type, but it's [decimal(10,0), date]; line 1 pos 7


-- !query 85
SELECT array(cast(1 as string), cast(1 as tinyint)) FROM t
-- !query 85 schema
struct<array(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(1 AS TINYINT) AS STRING)):array<string>>
-- !query 85 output
["1","1"]


-- !query 86
SELECT array(cast(1 as string), cast(1 as smallint)) FROM t
-- !query 86 schema
struct<array(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(1 AS SMALLINT) AS STRING)):array<string>>
-- !query 86 output
["1","1"]


-- !query 87
SELECT array(cast(1 as string), cast(1 as int)) FROM t
-- !query 87 schema
struct<array(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(1 AS INT) AS STRING)):array<string>>
-- !query 87 output
["1","1"]


-- !query 88
SELECT array(cast(1 as string), cast(1 as bigint)) FROM t
-- !query 88 schema
struct<array(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(1 AS BIGINT) AS STRING)):array<string>>
-- !query 88 output
["1","1"]


-- !query 89
SELECT array(cast(1 as string), cast(1 as float)) FROM t
-- !query 89 schema
struct<array(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(1 AS FLOAT) AS STRING)):array<string>>
-- !query 89 output
["1","1.0"]


-- !query 90
SELECT array(cast(1 as string), cast(1 as double)) FROM t
-- !query 90 schema
struct<array(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(1 AS DOUBLE) AS STRING)):array<string>>
-- !query 90 output
["1","1.0"]


-- !query 91
SELECT array(cast(1 as string), cast(1 as decimal(10, 0))) FROM t
-- !query 91 schema
struct<array(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(1 AS DECIMAL(10,0)) AS STRING)):array<string>>
-- !query 91 output
["1","1"]


-- !query 92
SELECT array(cast(1 as string), cast(1 as string)) FROM t
-- !query 92 schema
struct<array(CAST(1 AS STRING), CAST(1 AS STRING)):array<string>>
-- !query 92 output
["1","1"]


-- !query 93
SELECT size(array(cast(1 as string), cast('1' as binary))) FROM t
-- !query 93 schema
struct<>
-- !query 93 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS STRING), CAST('1' AS BINARY))' due to data type mismatch: input to function array should all be the same type, but it's [string, binary]; line 1 pos 12


-- !query 94
SELECT array(cast(1 as string), cast(1 as boolean)) FROM t
-- !query 94 schema
struct<>
-- !query 94 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS STRING), CAST(1 AS BOOLEAN))' due to data type mismatch: input to function array should all be the same type, but it's [string, boolean]; line 1 pos 7


-- !query 95
SELECT array(cast(1 as string), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 95 schema
struct<array(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) AS STRING)):array<string>>
-- !query 95 output
["1","2017-12-11 09:30:00"]


-- !query 96
SELECT array(cast(1 as string), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 96 schema
struct<array(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(2017-12-11 09:30:00 AS DATE) AS STRING)):array<string>>
-- !query 96 output
["1","2017-12-11"]


-- !query 97
SELECT size(array(cast('1' as binary), cast(1 as tinyint))) FROM t
-- !query 97 schema
struct<>
-- !query 97 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('1' AS BINARY), CAST(1 AS TINYINT))' due to data type mismatch: input to function array should all be the same type, but it's [binary, tinyint]; line 1 pos 12


-- !query 98
SELECT size(array(cast('1' as binary), cast(1 as smallint))) FROM t
-- !query 98 schema
struct<>
-- !query 98 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('1' AS BINARY), CAST(1 AS SMALLINT))' due to data type mismatch: input to function array should all be the same type, but it's [binary, smallint]; line 1 pos 12


-- !query 99
SELECT size(array(cast('1' as binary), cast(1 as int))) FROM t
-- !query 99 schema
struct<>
-- !query 99 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('1' AS BINARY), CAST(1 AS INT))' due to data type mismatch: input to function array should all be the same type, but it's [binary, int]; line 1 pos 12


-- !query 100
SELECT size(array(cast('1' as binary), cast(1 as bigint))) FROM t
-- !query 100 schema
struct<>
-- !query 100 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('1' AS BINARY), CAST(1 AS BIGINT))' due to data type mismatch: input to function array should all be the same type, but it's [binary, bigint]; line 1 pos 12


-- !query 101
SELECT size(array(cast('1' as binary), cast(1 as float))) FROM t
-- !query 101 schema
struct<>
-- !query 101 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('1' AS BINARY), CAST(1 AS FLOAT))' due to data type mismatch: input to function array should all be the same type, but it's [binary, float]; line 1 pos 12


-- !query 102
SELECT size(array(cast('1' as binary), cast(1 as double))) FROM t
-- !query 102 schema
struct<>
-- !query 102 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('1' AS BINARY), CAST(1 AS DOUBLE))' due to data type mismatch: input to function array should all be the same type, but it's [binary, double]; line 1 pos 12


-- !query 103
SELECT size(array(cast('1' as binary), cast(1 as decimal(10, 0)))) FROM t
-- !query 103 schema
struct<>
-- !query 103 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('1' AS BINARY), CAST(1 AS DECIMAL(10,0)))' due to data type mismatch: input to function array should all be the same type, but it's [binary, decimal(10,0)]; line 1 pos 12


-- !query 104
SELECT size(array(cast('1' as binary), cast(1 as string))) FROM t
-- !query 104 schema
struct<>
-- !query 104 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('1' AS BINARY), CAST(1 AS STRING))' due to data type mismatch: input to function array should all be the same type, but it's [binary, string]; line 1 pos 12


-- !query 105
SELECT size(array(cast('1' as binary), cast('1' as binary))) FROM t
-- !query 105 schema
struct<size(array(CAST(1 AS BINARY), CAST(1 AS BINARY))):int>
-- !query 105 output
2


-- !query 106
SELECT size(array(cast('1' as binary), cast(1 as boolean))) FROM t
-- !query 106 schema
struct<>
-- !query 106 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('1' AS BINARY), CAST(1 AS BOOLEAN))' due to data type mismatch: input to function array should all be the same type, but it's [binary, boolean]; line 1 pos 12


-- !query 107
SELECT size(array(cast('1' as binary), cast('2017-12-11 09:30:00.0' as timestamp))) FROM t
-- !query 107 schema
struct<>
-- !query 107 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('1' AS BINARY), CAST('2017-12-11 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function array should all be the same type, but it's [binary, timestamp]; line 1 pos 12


-- !query 108
SELECT size(array(cast('1' as binary), cast('2017-12-11 09:30:00' as date))) FROM t
-- !query 108 schema
struct<>
-- !query 108 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('1' AS BINARY), CAST('2017-12-11 09:30:00' AS DATE))' due to data type mismatch: input to function array should all be the same type, but it's [binary, date]; line 1 pos 12


-- !query 109
SELECT array(cast(1 as boolean), cast(1 as tinyint)) FROM t
-- !query 109 schema
struct<>
-- !query 109 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS BOOLEAN), CAST(1 AS TINYINT))' due to data type mismatch: input to function array should all be the same type, but it's [boolean, tinyint]; line 1 pos 7


-- !query 110
SELECT array(cast(1 as boolean), cast(1 as smallint)) FROM t
-- !query 110 schema
struct<>
-- !query 110 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS BOOLEAN), CAST(1 AS SMALLINT))' due to data type mismatch: input to function array should all be the same type, but it's [boolean, smallint]; line 1 pos 7


-- !query 111
SELECT array(cast(1 as boolean), cast(1 as int)) FROM t
-- !query 111 schema
struct<>
-- !query 111 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS BOOLEAN), CAST(1 AS INT))' due to data type mismatch: input to function array should all be the same type, but it's [boolean, int]; line 1 pos 7


-- !query 112
SELECT array(cast(1 as boolean), cast(1 as bigint)) FROM t
-- !query 112 schema
struct<>
-- !query 112 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS BOOLEAN), CAST(1 AS BIGINT))' due to data type mismatch: input to function array should all be the same type, but it's [boolean, bigint]; line 1 pos 7


-- !query 113
SELECT array(cast(1 as boolean), cast(1 as float)) FROM t
-- !query 113 schema
struct<>
-- !query 113 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS BOOLEAN), CAST(1 AS FLOAT))' due to data type mismatch: input to function array should all be the same type, but it's [boolean, float]; line 1 pos 7


-- !query 114
SELECT array(cast(1 as boolean), cast(1 as double)) FROM t
-- !query 114 schema
struct<>
-- !query 114 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS BOOLEAN), CAST(1 AS DOUBLE))' due to data type mismatch: input to function array should all be the same type, but it's [boolean, double]; line 1 pos 7


-- !query 115
SELECT array(cast(1 as boolean), cast(1 as decimal(10, 0))) FROM t
-- !query 115 schema
struct<>
-- !query 115 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS BOOLEAN), CAST(1 AS DECIMAL(10,0)))' due to data type mismatch: input to function array should all be the same type, but it's [boolean, decimal(10,0)]; line 1 pos 7


-- !query 116
SELECT array(cast(1 as boolean), cast(1 as string)) FROM t
-- !query 116 schema
struct<>
-- !query 116 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS BOOLEAN), CAST(1 AS STRING))' due to data type mismatch: input to function array should all be the same type, but it's [boolean, string]; line 1 pos 7


-- !query 117
SELECT size(array(cast(1 as boolean), cast('1' as binary))) FROM t
-- !query 117 schema
struct<>
-- !query 117 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS BOOLEAN), CAST('1' AS BINARY))' due to data type mismatch: input to function array should all be the same type, but it's [boolean, binary]; line 1 pos 12


-- !query 118
SELECT array(cast(1 as boolean), cast(1 as boolean)) FROM t
-- !query 118 schema
struct<array(CAST(1 AS BOOLEAN), CAST(1 AS BOOLEAN)):array<boolean>>
-- !query 118 output
[true,true]


-- !query 119
SELECT array(cast(1 as boolean), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 119 schema
struct<>
-- !query 119 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS BOOLEAN), CAST('2017-12-11 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function array should all be the same type, but it's [boolean, timestamp]; line 1 pos 7


-- !query 120
SELECT array(cast(1 as boolean), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 120 schema
struct<>
-- !query 120 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST(1 AS BOOLEAN), CAST('2017-12-11 09:30:00' AS DATE))' due to data type mismatch: input to function array should all be the same type, but it's [boolean, date]; line 1 pos 7


-- !query 121
SELECT array(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as tinyint)) FROM t
-- !query 121 schema
struct<>
-- !query 121 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(1 AS TINYINT))' due to data type mismatch: input to function array should all be the same type, but it's [timestamp, tinyint]; line 1 pos 7


-- !query 122
SELECT array(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as smallint)) FROM t
-- !query 122 schema
struct<>
-- !query 122 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(1 AS SMALLINT))' due to data type mismatch: input to function array should all be the same type, but it's [timestamp, smallint]; line 1 pos 7


-- !query 123
SELECT array(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as int)) FROM t
-- !query 123 schema
struct<>
-- !query 123 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(1 AS INT))' due to data type mismatch: input to function array should all be the same type, but it's [timestamp, int]; line 1 pos 7


-- !query 124
SELECT array(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as bigint)) FROM t
-- !query 124 schema
struct<>
-- !query 124 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(1 AS BIGINT))' due to data type mismatch: input to function array should all be the same type, but it's [timestamp, bigint]; line 1 pos 7


-- !query 125
SELECT array(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as float)) FROM t
-- !query 125 schema
struct<>
-- !query 125 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(1 AS FLOAT))' due to data type mismatch: input to function array should all be the same type, but it's [timestamp, float]; line 1 pos 7


-- !query 126
SELECT array(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as double)) FROM t
-- !query 126 schema
struct<>
-- !query 126 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(1 AS DOUBLE))' due to data type mismatch: input to function array should all be the same type, but it's [timestamp, double]; line 1 pos 7


-- !query 127
SELECT array(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as decimal(10, 0))) FROM t
-- !query 127 schema
struct<>
-- !query 127 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(1 AS DECIMAL(10,0)))' due to data type mismatch: input to function array should all be the same type, but it's [timestamp, decimal(10,0)]; line 1 pos 7


-- !query 128
SELECT array(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as string)) FROM t
-- !query 128 schema
struct<array(CAST(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) AS STRING), CAST(CAST(1 AS STRING) AS STRING)):array<string>>
-- !query 128 output
["2017-12-11 09:30:00","1"]


-- !query 129
SELECT size(array(cast('2017-12-11 09:30:00.0' as timestamp), cast('1' as binary))) FROM t
-- !query 129 schema
struct<>
-- !query 129 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST('1' AS BINARY))' due to data type mismatch: input to function array should all be the same type, but it's [timestamp, binary]; line 1 pos 12


-- !query 130
SELECT array(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as boolean)) FROM t
-- !query 130 schema
struct<>
-- !query 130 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(1 AS BOOLEAN))' due to data type mismatch: input to function array should all be the same type, but it's [timestamp, boolean]; line 1 pos 7


-- !query 131
SELECT array(cast('2017-12-11 09:30:00.0' as timestamp), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 131 schema
struct<array(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP), CAST(2017-12-11 09:30:00.0 AS TIMESTAMP)):array<timestamp>>
-- !query 131 output
[2017-12-11 09:30:00.0,2017-12-11 09:30:00.0]


-- !query 132
SELECT array(cast('2017-12-11 09:30:00.0' as timestamp), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 132 schema
struct<array(CAST(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) AS TIMESTAMP), CAST(CAST(2017-12-11 09:30:00 AS DATE) AS TIMESTAMP)):array<timestamp>>
-- !query 132 output
[2017-12-11 09:30:00.0,2017-12-11 00:00:00.0]


-- !query 133
SELECT array(cast('2017-12-11 09:30:00' as date), cast(1 as tinyint)) FROM t
-- !query 133 schema
struct<>
-- !query 133 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00' AS DATE), CAST(1 AS TINYINT))' due to data type mismatch: input to function array should all be the same type, but it's [date, tinyint]; line 1 pos 7


-- !query 134
SELECT array(cast('2017-12-11 09:30:00' as date), cast(1 as smallint)) FROM t
-- !query 134 schema
struct<>
-- !query 134 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00' AS DATE), CAST(1 AS SMALLINT))' due to data type mismatch: input to function array should all be the same type, but it's [date, smallint]; line 1 pos 7


-- !query 135
SELECT array(cast('2017-12-11 09:30:00' as date), cast(1 as int)) FROM t
-- !query 135 schema
struct<>
-- !query 135 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00' AS DATE), CAST(1 AS INT))' due to data type mismatch: input to function array should all be the same type, but it's [date, int]; line 1 pos 7


-- !query 136
SELECT array(cast('2017-12-11 09:30:00' as date), cast(1 as bigint)) FROM t
-- !query 136 schema
struct<>
-- !query 136 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00' AS DATE), CAST(1 AS BIGINT))' due to data type mismatch: input to function array should all be the same type, but it's [date, bigint]; line 1 pos 7


-- !query 137
SELECT array(cast('2017-12-11 09:30:00' as date), cast(1 as float)) FROM t
-- !query 137 schema
struct<>
-- !query 137 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00' AS DATE), CAST(1 AS FLOAT))' due to data type mismatch: input to function array should all be the same type, but it's [date, float]; line 1 pos 7


-- !query 138
SELECT array(cast('2017-12-11 09:30:00' as date), cast(1 as double)) FROM t
-- !query 138 schema
struct<>
-- !query 138 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00' AS DATE), CAST(1 AS DOUBLE))' due to data type mismatch: input to function array should all be the same type, but it's [date, double]; line 1 pos 7


-- !query 139
SELECT array(cast('2017-12-11 09:30:00' as date), cast(1 as decimal(10, 0))) FROM t
-- !query 139 schema
struct<>
-- !query 139 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00' AS DATE), CAST(1 AS DECIMAL(10,0)))' due to data type mismatch: input to function array should all be the same type, but it's [date, decimal(10,0)]; line 1 pos 7


-- !query 140
SELECT array(cast('2017-12-11 09:30:00' as date), cast(1 as string)) FROM t
-- !query 140 schema
struct<array(CAST(CAST(2017-12-11 09:30:00 AS DATE) AS STRING), CAST(CAST(1 AS STRING) AS STRING)):array<string>>
-- !query 140 output
["2017-12-11","1"]


-- !query 141
SELECT size(array(cast('2017-12-11 09:30:00' as date), cast('1' as binary))) FROM t
-- !query 141 schema
struct<>
-- !query 141 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00' AS DATE), CAST('1' AS BINARY))' due to data type mismatch: input to function array should all be the same type, but it's [date, binary]; line 1 pos 12


-- !query 142
SELECT array(cast('2017-12-11 09:30:00' as date), cast(1 as boolean)) FROM t
-- !query 142 schema
struct<>
-- !query 142 output
org.apache.spark.sql.AnalysisException
cannot resolve 'array(CAST('2017-12-11 09:30:00' AS DATE), CAST(1 AS BOOLEAN))' due to data type mismatch: input to function array should all be the same type, but it's [date, boolean]; line 1 pos 7


-- !query 143
SELECT array(cast('2017-12-11 09:30:00' as date), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 143 schema
struct<array(CAST(CAST(2017-12-11 09:30:00 AS DATE) AS TIMESTAMP), CAST(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) AS TIMESTAMP)):array<timestamp>>
-- !query 143 output
[2017-12-11 00:00:00.0,2017-12-11 09:30:00.0]


-- !query 144
SELECT array(cast('2017-12-11 09:30:00' as date), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 144 schema
struct<array(CAST(2017-12-11 09:30:00 AS DATE), CAST(2017-12-11 09:30:00 AS DATE)):array<date>>
-- !query 144 output
[2017-12-11,2017-12-11]


-- !query 145
SELECT map(cast(1 as tinyint), cast(1 as tinyint)) FROM t
-- !query 145 schema
struct<map(CAST(1 AS TINYINT), CAST(1 AS TINYINT)):map<tinyint,tinyint>>
-- !query 145 output
{1:1}


-- !query 146
SELECT map(cast(1 as tinyint), cast(1 as smallint)) FROM t
-- !query 146 schema
struct<map(CAST(1 AS TINYINT), CAST(1 AS SMALLINT)):map<tinyint,smallint>>
-- !query 146 output
{1:1}


-- !query 147
SELECT map(cast(1 as tinyint), cast(1 as int)) FROM t
-- !query 147 schema
struct<map(CAST(1 AS TINYINT), CAST(1 AS INT)):map<tinyint,int>>
-- !query 147 output
{1:1}


-- !query 148
SELECT map(cast(1 as tinyint), cast(1 as bigint)) FROM t
-- !query 148 schema
struct<map(CAST(1 AS TINYINT), CAST(1 AS BIGINT)):map<tinyint,bigint>>
-- !query 148 output
{1:1}


-- !query 149
SELECT map(cast(1 as tinyint), cast(1 as float)) FROM t
-- !query 149 schema
struct<map(CAST(1 AS TINYINT), CAST(1 AS FLOAT)):map<tinyint,float>>
-- !query 149 output
{1:1.0}


-- !query 150
SELECT map(cast(1 as tinyint), cast(1 as double)) FROM t
-- !query 150 schema
struct<map(CAST(1 AS TINYINT), CAST(1 AS DOUBLE)):map<tinyint,double>>
-- !query 150 output
{1:1.0}


-- !query 151
SELECT map(cast(1 as tinyint), cast(1 as decimal(10, 0))) FROM t
-- !query 151 schema
struct<map(CAST(1 AS TINYINT), CAST(1 AS DECIMAL(10,0))):map<tinyint,decimal(10,0)>>
-- !query 151 output
{1:1}


-- !query 152
SELECT map(cast(1 as tinyint), cast(1 as string)) FROM t
-- !query 152 schema
struct<map(CAST(1 AS TINYINT), CAST(1 AS STRING)):map<tinyint,string>>
-- !query 152 output
{1:"1"}


-- !query 153
SELECT size(map(cast(1 as tinyint), cast('1' as binary))) FROM t
-- !query 153 schema
struct<size(map(CAST(1 AS TINYINT), CAST(1 AS BINARY))):int>
-- !query 153 output
1


-- !query 154
SELECT map(cast(1 as tinyint), cast(1 as boolean)) FROM t
-- !query 154 schema
struct<map(CAST(1 AS TINYINT), CAST(1 AS BOOLEAN)):map<tinyint,boolean>>
-- !query 154 output
{1:true}


-- !query 155
SELECT map(cast(1 as tinyint), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 155 schema
struct<map(CAST(1 AS TINYINT), CAST(2017-12-11 09:30:00.0 AS TIMESTAMP)):map<tinyint,timestamp>>
-- !query 155 output
{1:2017-12-11 09:30:00.0}


-- !query 156
SELECT map(cast(1 as tinyint), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 156 schema
struct<map(CAST(1 AS TINYINT), CAST(2017-12-11 09:30:00 AS DATE)):map<tinyint,date>>
-- !query 156 output
{1:2017-12-11}


-- !query 157
SELECT map(cast(1 as smallint), cast(1 as tinyint)) FROM t
-- !query 157 schema
struct<map(CAST(1 AS SMALLINT), CAST(1 AS TINYINT)):map<smallint,tinyint>>
-- !query 157 output
{1:1}


-- !query 158
SELECT map(cast(1 as smallint), cast(1 as smallint)) FROM t
-- !query 158 schema
struct<map(CAST(1 AS SMALLINT), CAST(1 AS SMALLINT)):map<smallint,smallint>>
-- !query 158 output
{1:1}


-- !query 159
SELECT map(cast(1 as smallint), cast(1 as int)) FROM t
-- !query 159 schema
struct<map(CAST(1 AS SMALLINT), CAST(1 AS INT)):map<smallint,int>>
-- !query 159 output
{1:1}


-- !query 160
SELECT map(cast(1 as smallint), cast(1 as bigint)) FROM t
-- !query 160 schema
struct<map(CAST(1 AS SMALLINT), CAST(1 AS BIGINT)):map<smallint,bigint>>
-- !query 160 output
{1:1}


-- !query 161
SELECT map(cast(1 as smallint), cast(1 as float)) FROM t
-- !query 161 schema
struct<map(CAST(1 AS SMALLINT), CAST(1 AS FLOAT)):map<smallint,float>>
-- !query 161 output
{1:1.0}


-- !query 162
SELECT map(cast(1 as smallint), cast(1 as double)) FROM t
-- !query 162 schema
struct<map(CAST(1 AS SMALLINT), CAST(1 AS DOUBLE)):map<smallint,double>>
-- !query 162 output
{1:1.0}


-- !query 163
SELECT map(cast(1 as smallint), cast(1 as decimal(10, 0))) FROM t
-- !query 163 schema
struct<map(CAST(1 AS SMALLINT), CAST(1 AS DECIMAL(10,0))):map<smallint,decimal(10,0)>>
-- !query 163 output
{1:1}


-- !query 164
SELECT map(cast(1 as smallint), cast(1 as string)) FROM t
-- !query 164 schema
struct<map(CAST(1 AS SMALLINT), CAST(1 AS STRING)):map<smallint,string>>
-- !query 164 output
{1:"1"}


-- !query 165
SELECT size(map(cast(1 as smallint), cast('1' as binary))) FROM t
-- !query 165 schema
struct<size(map(CAST(1 AS SMALLINT), CAST(1 AS BINARY))):int>
-- !query 165 output
1


-- !query 166
SELECT map(cast(1 as smallint), cast(1 as boolean)) FROM t
-- !query 166 schema
struct<map(CAST(1 AS SMALLINT), CAST(1 AS BOOLEAN)):map<smallint,boolean>>
-- !query 166 output
{1:true}


-- !query 167
SELECT map(cast(1 as smallint), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 167 schema
struct<map(CAST(1 AS SMALLINT), CAST(2017-12-11 09:30:00.0 AS TIMESTAMP)):map<smallint,timestamp>>
-- !query 167 output
{1:2017-12-11 09:30:00.0}


-- !query 168
SELECT map(cast(1 as smallint), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 168 schema
struct<map(CAST(1 AS SMALLINT), CAST(2017-12-11 09:30:00 AS DATE)):map<smallint,date>>
-- !query 168 output
{1:2017-12-11}


-- !query 169
SELECT map(cast(1 as int), cast(1 as tinyint)) FROM t
-- !query 169 schema
struct<map(CAST(1 AS INT), CAST(1 AS TINYINT)):map<int,tinyint>>
-- !query 169 output
{1:1}


-- !query 170
SELECT map(cast(1 as int), cast(1 as smallint)) FROM t
-- !query 170 schema
struct<map(CAST(1 AS INT), CAST(1 AS SMALLINT)):map<int,smallint>>
-- !query 170 output
{1:1}


-- !query 171
SELECT map(cast(1 as int), cast(1 as int)) FROM t
-- !query 171 schema
struct<map(CAST(1 AS INT), CAST(1 AS INT)):map<int,int>>
-- !query 171 output
{1:1}


-- !query 172
SELECT map(cast(1 as int), cast(1 as bigint)) FROM t
-- !query 172 schema
struct<map(CAST(1 AS INT), CAST(1 AS BIGINT)):map<int,bigint>>
-- !query 172 output
{1:1}


-- !query 173
SELECT map(cast(1 as int), cast(1 as float)) FROM t
-- !query 173 schema
struct<map(CAST(1 AS INT), CAST(1 AS FLOAT)):map<int,float>>
-- !query 173 output
{1:1.0}


-- !query 174
SELECT map(cast(1 as int), cast(1 as double)) FROM t
-- !query 174 schema
struct<map(CAST(1 AS INT), CAST(1 AS DOUBLE)):map<int,double>>
-- !query 174 output
{1:1.0}


-- !query 175
SELECT map(cast(1 as int), cast(1 as decimal(10, 0))) FROM t
-- !query 175 schema
struct<map(CAST(1 AS INT), CAST(1 AS DECIMAL(10,0))):map<int,decimal(10,0)>>
-- !query 175 output
{1:1}


-- !query 176
SELECT map(cast(1 as int), cast(1 as string)) FROM t
-- !query 176 schema
struct<map(CAST(1 AS INT), CAST(1 AS STRING)):map<int,string>>
-- !query 176 output
{1:"1"}


-- !query 177
SELECT size(map(cast(1 as int), cast('1' as binary))) FROM t
-- !query 177 schema
struct<size(map(CAST(1 AS INT), CAST(1 AS BINARY))):int>
-- !query 177 output
1


-- !query 178
SELECT map(cast(1 as int), cast(1 as boolean)) FROM t
-- !query 178 schema
struct<map(CAST(1 AS INT), CAST(1 AS BOOLEAN)):map<int,boolean>>
-- !query 178 output
{1:true}


-- !query 179
SELECT map(cast(1 as int), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 179 schema
struct<map(CAST(1 AS INT), CAST(2017-12-11 09:30:00.0 AS TIMESTAMP)):map<int,timestamp>>
-- !query 179 output
{1:2017-12-11 09:30:00.0}


-- !query 180
SELECT map(cast(1 as int), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 180 schema
struct<map(CAST(1 AS INT), CAST(2017-12-11 09:30:00 AS DATE)):map<int,date>>
-- !query 180 output
{1:2017-12-11}


-- !query 181
SELECT map(cast(1 as bigint), cast(1 as tinyint)) FROM t
-- !query 181 schema
struct<map(CAST(1 AS BIGINT), CAST(1 AS TINYINT)):map<bigint,tinyint>>
-- !query 181 output
{1:1}


-- !query 182
SELECT map(cast(1 as bigint), cast(1 as smallint)) FROM t
-- !query 182 schema
struct<map(CAST(1 AS BIGINT), CAST(1 AS SMALLINT)):map<bigint,smallint>>
-- !query 182 output
{1:1}


-- !query 183
SELECT map(cast(1 as bigint), cast(1 as int)) FROM t
-- !query 183 schema
struct<map(CAST(1 AS BIGINT), CAST(1 AS INT)):map<bigint,int>>
-- !query 183 output
{1:1}


-- !query 184
SELECT map(cast(1 as bigint), cast(1 as bigint)) FROM t
-- !query 184 schema
struct<map(CAST(1 AS BIGINT), CAST(1 AS BIGINT)):map<bigint,bigint>>
-- !query 184 output
{1:1}


-- !query 185
SELECT map(cast(1 as bigint), cast(1 as float)) FROM t
-- !query 185 schema
struct<map(CAST(1 AS BIGINT), CAST(1 AS FLOAT)):map<bigint,float>>
-- !query 185 output
{1:1.0}


-- !query 186
SELECT map(cast(1 as bigint), cast(1 as double)) FROM t
-- !query 186 schema
struct<map(CAST(1 AS BIGINT), CAST(1 AS DOUBLE)):map<bigint,double>>
-- !query 186 output
{1:1.0}


-- !query 187
SELECT map(cast(1 as bigint), cast(1 as decimal(10, 0))) FROM t
-- !query 187 schema
struct<map(CAST(1 AS BIGINT), CAST(1 AS DECIMAL(10,0))):map<bigint,decimal(10,0)>>
-- !query 187 output
{1:1}


-- !query 188
SELECT map(cast(1 as bigint), cast(1 as string)) FROM t
-- !query 188 schema
struct<map(CAST(1 AS BIGINT), CAST(1 AS STRING)):map<bigint,string>>
-- !query 188 output
{1:"1"}


-- !query 189
SELECT size(map(cast(1 as bigint), cast('1' as binary))) FROM t
-- !query 189 schema
struct<size(map(CAST(1 AS BIGINT), CAST(1 AS BINARY))):int>
-- !query 189 output
1


-- !query 190
SELECT map(cast(1 as bigint), cast(1 as boolean)) FROM t
-- !query 190 schema
struct<map(CAST(1 AS BIGINT), CAST(1 AS BOOLEAN)):map<bigint,boolean>>
-- !query 190 output
{1:true}


-- !query 191
SELECT map(cast(1 as bigint), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 191 schema
struct<map(CAST(1 AS BIGINT), CAST(2017-12-11 09:30:00.0 AS TIMESTAMP)):map<bigint,timestamp>>
-- !query 191 output
{1:2017-12-11 09:30:00.0}


-- !query 192
SELECT map(cast(1 as bigint), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 192 schema
struct<map(CAST(1 AS BIGINT), CAST(2017-12-11 09:30:00 AS DATE)):map<bigint,date>>
-- !query 192 output
{1:2017-12-11}


-- !query 193
SELECT map(cast(1 as float), cast(1 as tinyint)) FROM t
-- !query 193 schema
struct<map(CAST(1 AS FLOAT), CAST(1 AS TINYINT)):map<float,tinyint>>
-- !query 193 output
{1.0:1}


-- !query 194
SELECT map(cast(1 as float), cast(1 as smallint)) FROM t
-- !query 194 schema
struct<map(CAST(1 AS FLOAT), CAST(1 AS SMALLINT)):map<float,smallint>>
-- !query 194 output
{1.0:1}


-- !query 195
SELECT map(cast(1 as float), cast(1 as int)) FROM t
-- !query 195 schema
struct<map(CAST(1 AS FLOAT), CAST(1 AS INT)):map<float,int>>
-- !query 195 output
{1.0:1}


-- !query 196
SELECT map(cast(1 as float), cast(1 as bigint)) FROM t
-- !query 196 schema
struct<map(CAST(1 AS FLOAT), CAST(1 AS BIGINT)):map<float,bigint>>
-- !query 196 output
{1.0:1}


-- !query 197
SELECT map(cast(1 as float), cast(1 as float)) FROM t
-- !query 197 schema
struct<map(CAST(1 AS FLOAT), CAST(1 AS FLOAT)):map<float,float>>
-- !query 197 output
{1.0:1.0}


-- !query 198
SELECT map(cast(1 as float), cast(1 as double)) FROM t
-- !query 198 schema
struct<map(CAST(1 AS FLOAT), CAST(1 AS DOUBLE)):map<float,double>>
-- !query 198 output
{1.0:1.0}


-- !query 199
SELECT map(cast(1 as float), cast(1 as decimal(10, 0))) FROM t
-- !query 199 schema
struct<map(CAST(1 AS FLOAT), CAST(1 AS DECIMAL(10,0))):map<float,decimal(10,0)>>
-- !query 199 output
{1.0:1}


-- !query 200
SELECT map(cast(1 as float), cast(1 as string)) FROM t
-- !query 200 schema
struct<map(CAST(1 AS FLOAT), CAST(1 AS STRING)):map<float,string>>
-- !query 200 output
{1.0:"1"}


-- !query 201
SELECT size(map(cast(1 as float), cast('1' as binary))) FROM t
-- !query 201 schema
struct<size(map(CAST(1 AS FLOAT), CAST(1 AS BINARY))):int>
-- !query 201 output
1


-- !query 202
SELECT map(cast(1 as float), cast(1 as boolean)) FROM t
-- !query 202 schema
struct<map(CAST(1 AS FLOAT), CAST(1 AS BOOLEAN)):map<float,boolean>>
-- !query 202 output
{1.0:true}


-- !query 203
SELECT map(cast(1 as float), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 203 schema
struct<map(CAST(1 AS FLOAT), CAST(2017-12-11 09:30:00.0 AS TIMESTAMP)):map<float,timestamp>>
-- !query 203 output
{1.0:2017-12-11 09:30:00.0}


-- !query 204
SELECT map(cast(1 as float), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 204 schema
struct<map(CAST(1 AS FLOAT), CAST(2017-12-11 09:30:00 AS DATE)):map<float,date>>
-- !query 204 output
{1.0:2017-12-11}


-- !query 205
SELECT map(cast(1 as double), cast(1 as tinyint)) FROM t
-- !query 205 schema
struct<map(CAST(1 AS DOUBLE), CAST(1 AS TINYINT)):map<double,tinyint>>
-- !query 205 output
{1.0:1}


-- !query 206
SELECT map(cast(1 as double), cast(1 as smallint)) FROM t
-- !query 206 schema
struct<map(CAST(1 AS DOUBLE), CAST(1 AS SMALLINT)):map<double,smallint>>
-- !query 206 output
{1.0:1}


-- !query 207
SELECT map(cast(1 as double), cast(1 as int)) FROM t
-- !query 207 schema
struct<map(CAST(1 AS DOUBLE), CAST(1 AS INT)):map<double,int>>
-- !query 207 output
{1.0:1}


-- !query 208
SELECT map(cast(1 as double), cast(1 as bigint)) FROM t
-- !query 208 schema
struct<map(CAST(1 AS DOUBLE), CAST(1 AS BIGINT)):map<double,bigint>>
-- !query 208 output
{1.0:1}


-- !query 209
SELECT map(cast(1 as double), cast(1 as float)) FROM t
-- !query 209 schema
struct<map(CAST(1 AS DOUBLE), CAST(1 AS FLOAT)):map<double,float>>
-- !query 209 output
{1.0:1.0}


-- !query 210
SELECT map(cast(1 as double), cast(1 as double)) FROM t
-- !query 210 schema
struct<map(CAST(1 AS DOUBLE), CAST(1 AS DOUBLE)):map<double,double>>
-- !query 210 output
{1.0:1.0}


-- !query 211
SELECT map(cast(1 as double), cast(1 as decimal(10, 0))) FROM t
-- !query 211 schema
struct<map(CAST(1 AS DOUBLE), CAST(1 AS DECIMAL(10,0))):map<double,decimal(10,0)>>
-- !query 211 output
{1.0:1}


-- !query 212
SELECT map(cast(1 as double), cast(1 as string)) FROM t
-- !query 212 schema
struct<map(CAST(1 AS DOUBLE), CAST(1 AS STRING)):map<double,string>>
-- !query 212 output
{1.0:"1"}


-- !query 213
SELECT size(map(cast(1 as double), cast('1' as binary))) FROM t
-- !query 213 schema
struct<size(map(CAST(1 AS DOUBLE), CAST(1 AS BINARY))):int>
-- !query 213 output
1


-- !query 214
SELECT map(cast(1 as double), cast(1 as boolean)) FROM t
-- !query 214 schema
struct<map(CAST(1 AS DOUBLE), CAST(1 AS BOOLEAN)):map<double,boolean>>
-- !query 214 output
{1.0:true}


-- !query 215
SELECT map(cast(1 as double), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 215 schema
struct<map(CAST(1 AS DOUBLE), CAST(2017-12-11 09:30:00.0 AS TIMESTAMP)):map<double,timestamp>>
-- !query 215 output
{1.0:2017-12-11 09:30:00.0}


-- !query 216
SELECT map(cast(1 as double), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 216 schema
struct<map(CAST(1 AS DOUBLE), CAST(2017-12-11 09:30:00 AS DATE)):map<double,date>>
-- !query 216 output
{1.0:2017-12-11}


-- !query 217
SELECT map(cast(1 as decimal(10, 0)), cast(1 as tinyint)) FROM t
-- !query 217 schema
struct<map(CAST(1 AS DECIMAL(10,0)), CAST(1 AS TINYINT)):map<decimal(10,0),tinyint>>
-- !query 217 output
{1:1}


-- !query 218
SELECT map(cast(1 as decimal(10, 0)), cast(1 as smallint)) FROM t
-- !query 218 schema
struct<map(CAST(1 AS DECIMAL(10,0)), CAST(1 AS SMALLINT)):map<decimal(10,0),smallint>>
-- !query 218 output
{1:1}


-- !query 219
SELECT map(cast(1 as decimal(10, 0)), cast(1 as int)) FROM t
-- !query 219 schema
struct<map(CAST(1 AS DECIMAL(10,0)), CAST(1 AS INT)):map<decimal(10,0),int>>
-- !query 219 output
{1:1}


-- !query 220
SELECT map(cast(1 as decimal(10, 0)), cast(1 as bigint)) FROM t
-- !query 220 schema
struct<map(CAST(1 AS DECIMAL(10,0)), CAST(1 AS BIGINT)):map<decimal(10,0),bigint>>
-- !query 220 output
{1:1}


-- !query 221
SELECT map(cast(1 as decimal(10, 0)), cast(1 as float)) FROM t
-- !query 221 schema
struct<map(CAST(1 AS DECIMAL(10,0)), CAST(1 AS FLOAT)):map<decimal(10,0),float>>
-- !query 221 output
{1:1.0}


-- !query 222
SELECT map(cast(1 as decimal(10, 0)), cast(1 as double)) FROM t
-- !query 222 schema
struct<map(CAST(1 AS DECIMAL(10,0)), CAST(1 AS DOUBLE)):map<decimal(10,0),double>>
-- !query 222 output
{1:1.0}


-- !query 223
SELECT map(cast(1 as decimal(10, 0)), cast(1 as decimal(10, 0))) FROM t
-- !query 223 schema
struct<map(CAST(1 AS DECIMAL(10,0)), CAST(1 AS DECIMAL(10,0))):map<decimal(10,0),decimal(10,0)>>
-- !query 223 output
{1:1}


-- !query 224
SELECT map(cast(1 as decimal(10, 0)), cast(1 as string)) FROM t
-- !query 224 schema
struct<map(CAST(1 AS DECIMAL(10,0)), CAST(1 AS STRING)):map<decimal(10,0),string>>
-- !query 224 output
{1:"1"}


-- !query 225
SELECT size(map(cast(1 as decimal(10, 0)), cast('1' as binary))) FROM t
-- !query 225 schema
struct<size(map(CAST(1 AS DECIMAL(10,0)), CAST(1 AS BINARY))):int>
-- !query 225 output
1


-- !query 226
SELECT map(cast(1 as decimal(10, 0)), cast(1 as boolean)) FROM t
-- !query 226 schema
struct<map(CAST(1 AS DECIMAL(10,0)), CAST(1 AS BOOLEAN)):map<decimal(10,0),boolean>>
-- !query 226 output
{1:true}


-- !query 227
SELECT map(cast(1 as decimal(10, 0)), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 227 schema
struct<map(CAST(1 AS DECIMAL(10,0)), CAST(2017-12-11 09:30:00.0 AS TIMESTAMP)):map<decimal(10,0),timestamp>>
-- !query 227 output
{1:2017-12-11 09:30:00.0}


-- !query 228
SELECT map(cast(1 as decimal(10, 0)), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 228 schema
struct<map(CAST(1 AS DECIMAL(10,0)), CAST(2017-12-11 09:30:00 AS DATE)):map<decimal(10,0),date>>
-- !query 228 output
{1:2017-12-11}


-- !query 229
SELECT map(cast(1 as string), cast(1 as tinyint)) FROM t
-- !query 229 schema
struct<map(CAST(1 AS STRING), CAST(1 AS TINYINT)):map<string,tinyint>>
-- !query 229 output
{"1":1}


-- !query 230
SELECT map(cast(1 as string), cast(1 as smallint)) FROM t
-- !query 230 schema
struct<map(CAST(1 AS STRING), CAST(1 AS SMALLINT)):map<string,smallint>>
-- !query 230 output
{"1":1}


-- !query 231
SELECT map(cast(1 as string), cast(1 as int)) FROM t
-- !query 231 schema
struct<map(CAST(1 AS STRING), CAST(1 AS INT)):map<string,int>>
-- !query 231 output
{"1":1}


-- !query 232
SELECT map(cast(1 as string), cast(1 as bigint)) FROM t
-- !query 232 schema
struct<map(CAST(1 AS STRING), CAST(1 AS BIGINT)):map<string,bigint>>
-- !query 232 output
{"1":1}


-- !query 233
SELECT map(cast(1 as string), cast(1 as float)) FROM t
-- !query 233 schema
struct<map(CAST(1 AS STRING), CAST(1 AS FLOAT)):map<string,float>>
-- !query 233 output
{"1":1.0}


-- !query 234
SELECT map(cast(1 as string), cast(1 as double)) FROM t
-- !query 234 schema
struct<map(CAST(1 AS STRING), CAST(1 AS DOUBLE)):map<string,double>>
-- !query 234 output
{"1":1.0}


-- !query 235
SELECT map(cast(1 as string), cast(1 as decimal(10, 0))) FROM t
-- !query 235 schema
struct<map(CAST(1 AS STRING), CAST(1 AS DECIMAL(10,0))):map<string,decimal(10,0)>>
-- !query 235 output
{"1":1}


-- !query 236
SELECT map(cast(1 as string), cast(1 as string)) FROM t
-- !query 236 schema
struct<map(CAST(1 AS STRING), CAST(1 AS STRING)):map<string,string>>
-- !query 236 output
{"1":"1"}


-- !query 237
SELECT size(map(cast(1 as string), cast('1' as binary))) FROM t
-- !query 237 schema
struct<size(map(CAST(1 AS STRING), CAST(1 AS BINARY))):int>
-- !query 237 output
1


-- !query 238
SELECT map(cast(1 as string), cast(1 as boolean)) FROM t
-- !query 238 schema
struct<map(CAST(1 AS STRING), CAST(1 AS BOOLEAN)):map<string,boolean>>
-- !query 238 output
{"1":true}


-- !query 239
SELECT map(cast(1 as string), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 239 schema
struct<map(CAST(1 AS STRING), CAST(2017-12-11 09:30:00.0 AS TIMESTAMP)):map<string,timestamp>>
-- !query 239 output
{"1":2017-12-11 09:30:00.0}


-- !query 240
SELECT map(cast(1 as string), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 240 schema
struct<map(CAST(1 AS STRING), CAST(2017-12-11 09:30:00 AS DATE)):map<string,date>>
-- !query 240 output
{"1":2017-12-11}


-- !query 241
SELECT size(map(cast('1' as binary), cast(1 as tinyint))) FROM t
-- !query 241 schema
struct<size(map(CAST(1 AS BINARY), CAST(1 AS TINYINT))):int>
-- !query 241 output
1


-- !query 242
SELECT size(map(cast('1' as binary), cast(1 as smallint))) FROM t
-- !query 242 schema
struct<size(map(CAST(1 AS BINARY), CAST(1 AS SMALLINT))):int>
-- !query 242 output
1


-- !query 243
SELECT size(map(cast('1' as binary), cast(1 as int))) FROM t
-- !query 243 schema
struct<size(map(CAST(1 AS BINARY), CAST(1 AS INT))):int>
-- !query 243 output
1


-- !query 244
SELECT size(map(cast('1' as binary), cast(1 as bigint))) FROM t
-- !query 244 schema
struct<size(map(CAST(1 AS BINARY), CAST(1 AS BIGINT))):int>
-- !query 244 output
1


-- !query 245
SELECT size(map(cast('1' as binary), cast(1 as float))) FROM t
-- !query 245 schema
struct<size(map(CAST(1 AS BINARY), CAST(1 AS FLOAT))):int>
-- !query 245 output
1


-- !query 246
SELECT size(map(cast('1' as binary), cast(1 as double))) FROM t
-- !query 246 schema
struct<size(map(CAST(1 AS BINARY), CAST(1 AS DOUBLE))):int>
-- !query 246 output
1


-- !query 247
SELECT size(map(cast('1' as binary), cast(1 as decimal(10, 0)))) FROM t
-- !query 247 schema
struct<size(map(CAST(1 AS BINARY), CAST(1 AS DECIMAL(10,0)))):int>
-- !query 247 output
1


-- !query 248
SELECT size(map(cast('1' as binary), cast(1 as string))) FROM t
-- !query 248 schema
struct<size(map(CAST(1 AS BINARY), CAST(1 AS STRING))):int>
-- !query 248 output
1


-- !query 249
SELECT size(map(cast('1' as binary), cast('1' as binary))) FROM t
-- !query 249 schema
struct<size(map(CAST(1 AS BINARY), CAST(1 AS BINARY))):int>
-- !query 249 output
1


-- !query 250
SELECT size(map(cast('1' as binary), cast(1 as boolean))) FROM t
-- !query 250 schema
struct<size(map(CAST(1 AS BINARY), CAST(1 AS BOOLEAN))):int>
-- !query 250 output
1


-- !query 251
SELECT size(map(cast('1' as binary), cast('2017-12-11 09:30:00.0' as timestamp))) FROM t
-- !query 251 schema
struct<size(map(CAST(1 AS BINARY), CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))):int>
-- !query 251 output
1


-- !query 252
SELECT size(map(cast('1' as binary), cast('2017-12-11 09:30:00' as date))) FROM t
-- !query 252 schema
struct<size(map(CAST(1 AS BINARY), CAST(2017-12-11 09:30:00 AS DATE))):int>
-- !query 252 output
1


-- !query 253
SELECT map(cast(1 as boolean), cast(1 as tinyint)) FROM t
-- !query 253 schema
struct<map(CAST(1 AS BOOLEAN), CAST(1 AS TINYINT)):map<boolean,tinyint>>
-- !query 253 output
{true:1}


-- !query 254
SELECT map(cast(1 as boolean), cast(1 as smallint)) FROM t
-- !query 254 schema
struct<map(CAST(1 AS BOOLEAN), CAST(1 AS SMALLINT)):map<boolean,smallint>>
-- !query 254 output
{true:1}


-- !query 255
SELECT map(cast(1 as boolean), cast(1 as int)) FROM t
-- !query 255 schema
struct<map(CAST(1 AS BOOLEAN), CAST(1 AS INT)):map<boolean,int>>
-- !query 255 output
{true:1}


-- !query 256
SELECT map(cast(1 as boolean), cast(1 as bigint)) FROM t
-- !query 256 schema
struct<map(CAST(1 AS BOOLEAN), CAST(1 AS BIGINT)):map<boolean,bigint>>
-- !query 256 output
{true:1}


-- !query 257
SELECT map(cast(1 as boolean), cast(1 as float)) FROM t
-- !query 257 schema
struct<map(CAST(1 AS BOOLEAN), CAST(1 AS FLOAT)):map<boolean,float>>
-- !query 257 output
{true:1.0}


-- !query 258
SELECT map(cast(1 as boolean), cast(1 as double)) FROM t
-- !query 258 schema
struct<map(CAST(1 AS BOOLEAN), CAST(1 AS DOUBLE)):map<boolean,double>>
-- !query 258 output
{true:1.0}


-- !query 259
SELECT map(cast(1 as boolean), cast(1 as decimal(10, 0))) FROM t
-- !query 259 schema
struct<map(CAST(1 AS BOOLEAN), CAST(1 AS DECIMAL(10,0))):map<boolean,decimal(10,0)>>
-- !query 259 output
{true:1}


-- !query 260
SELECT map(cast(1 as boolean), cast(1 as string)) FROM t
-- !query 260 schema
struct<map(CAST(1 AS BOOLEAN), CAST(1 AS STRING)):map<boolean,string>>
-- !query 260 output
{true:"1"}


-- !query 261
SELECT size(map(cast(1 as boolean), cast('1' as binary))) FROM t
-- !query 261 schema
struct<size(map(CAST(1 AS BOOLEAN), CAST(1 AS BINARY))):int>
-- !query 261 output
1


-- !query 262
SELECT map(cast(1 as boolean), cast(1 as boolean)) FROM t
-- !query 262 schema
struct<map(CAST(1 AS BOOLEAN), CAST(1 AS BOOLEAN)):map<boolean,boolean>>
-- !query 262 output
{true:true}


-- !query 263
SELECT map(cast(1 as boolean), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 263 schema
struct<map(CAST(1 AS BOOLEAN), CAST(2017-12-11 09:30:00.0 AS TIMESTAMP)):map<boolean,timestamp>>
-- !query 263 output
{true:2017-12-11 09:30:00.0}


-- !query 264
SELECT map(cast(1 as boolean), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 264 schema
struct<map(CAST(1 AS BOOLEAN), CAST(2017-12-11 09:30:00 AS DATE)):map<boolean,date>>
-- !query 264 output
{true:2017-12-11}


-- !query 265
SELECT map(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as tinyint)) FROM t
-- !query 265 schema
struct<map(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP), CAST(1 AS TINYINT)):map<timestamp,tinyint>>
-- !query 265 output
{2017-12-11 09:30:00.0:1}


-- !query 266
SELECT map(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as smallint)) FROM t
-- !query 266 schema
struct<map(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP), CAST(1 AS SMALLINT)):map<timestamp,smallint>>
-- !query 266 output
{2017-12-11 09:30:00.0:1}


-- !query 267
SELECT map(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as int)) FROM t
-- !query 267 schema
struct<map(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP), CAST(1 AS INT)):map<timestamp,int>>
-- !query 267 output
{2017-12-11 09:30:00.0:1}


-- !query 268
SELECT map(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as bigint)) FROM t
-- !query 268 schema
struct<map(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP), CAST(1 AS BIGINT)):map<timestamp,bigint>>
-- !query 268 output
{2017-12-11 09:30:00.0:1}


-- !query 269
SELECT map(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as float)) FROM t
-- !query 269 schema
struct<map(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP), CAST(1 AS FLOAT)):map<timestamp,float>>
-- !query 269 output
{2017-12-11 09:30:00.0:1.0}


-- !query 270
SELECT map(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as double)) FROM t
-- !query 270 schema
struct<map(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP), CAST(1 AS DOUBLE)):map<timestamp,double>>
-- !query 270 output
{2017-12-11 09:30:00.0:1.0}


-- !query 271
SELECT map(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as decimal(10, 0))) FROM t
-- !query 271 schema
struct<map(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP), CAST(1 AS DECIMAL(10,0))):map<timestamp,decimal(10,0)>>
-- !query 271 output
{2017-12-11 09:30:00.0:1}


-- !query 272
SELECT map(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as string)) FROM t
-- !query 272 schema
struct<map(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP), CAST(1 AS STRING)):map<timestamp,string>>
-- !query 272 output
{2017-12-11 09:30:00.0:"1"}


-- !query 273
SELECT size(map(cast('2017-12-11 09:30:00.0' as timestamp), cast('1' as binary))) FROM t
-- !query 273 schema
struct<size(map(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP), CAST(1 AS BINARY))):int>
-- !query 273 output
1


-- !query 274
SELECT map(cast('2017-12-11 09:30:00.0' as timestamp), cast(1 as boolean)) FROM t
-- !query 274 schema
struct<map(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP), CAST(1 AS BOOLEAN)):map<timestamp,boolean>>
-- !query 274 output
{2017-12-11 09:30:00.0:true}


-- !query 275
SELECT map(cast('2017-12-11 09:30:00.0' as timestamp), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 275 schema
struct<map(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP), CAST(2017-12-11 09:30:00.0 AS TIMESTAMP)):map<timestamp,timestamp>>
-- !query 275 output
{2017-12-11 09:30:00.0:2017-12-11 09:30:00.0}


-- !query 276
SELECT map(cast('2017-12-11 09:30:00.0' as timestamp), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 276 schema
struct<map(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP), CAST(2017-12-11 09:30:00 AS DATE)):map<timestamp,date>>
-- !query 276 output
{2017-12-11 09:30:00.0:2017-12-11}


-- !query 277
SELECT map(cast('2017-12-11 09:30:00' as date), cast(1 as tinyint)) FROM t
-- !query 277 schema
struct<map(CAST(2017-12-11 09:30:00 AS DATE), CAST(1 AS TINYINT)):map<date,tinyint>>
-- !query 277 output
{2017-12-11:1}


-- !query 278
SELECT map(cast('2017-12-11 09:30:00' as date), cast(1 as smallint)) FROM t
-- !query 278 schema
struct<map(CAST(2017-12-11 09:30:00 AS DATE), CAST(1 AS SMALLINT)):map<date,smallint>>
-- !query 278 output
{2017-12-11:1}


-- !query 279
SELECT map(cast('2017-12-11 09:30:00' as date), cast(1 as int)) FROM t
-- !query 279 schema
struct<map(CAST(2017-12-11 09:30:00 AS DATE), CAST(1 AS INT)):map<date,int>>
-- !query 279 output
{2017-12-11:1}


-- !query 280
SELECT map(cast('2017-12-11 09:30:00' as date), cast(1 as bigint)) FROM t
-- !query 280 schema
struct<map(CAST(2017-12-11 09:30:00 AS DATE), CAST(1 AS BIGINT)):map<date,bigint>>
-- !query 280 output
{2017-12-11:1}


-- !query 281
SELECT map(cast('2017-12-11 09:30:00' as date), cast(1 as float)) FROM t
-- !query 281 schema
struct<map(CAST(2017-12-11 09:30:00 AS DATE), CAST(1 AS FLOAT)):map<date,float>>
-- !query 281 output
{2017-12-11:1.0}


-- !query 282
SELECT map(cast('2017-12-11 09:30:00' as date), cast(1 as double)) FROM t
-- !query 282 schema
struct<map(CAST(2017-12-11 09:30:00 AS DATE), CAST(1 AS DOUBLE)):map<date,double>>
-- !query 282 output
{2017-12-11:1.0}


-- !query 283
SELECT map(cast('2017-12-11 09:30:00' as date), cast(1 as decimal(10, 0))) FROM t
-- !query 283 schema
struct<map(CAST(2017-12-11 09:30:00 AS DATE), CAST(1 AS DECIMAL(10,0))):map<date,decimal(10,0)>>
-- !query 283 output
{2017-12-11:1}


-- !query 284
SELECT map(cast('2017-12-11 09:30:00' as date), cast(1 as string)) FROM t
-- !query 284 schema
struct<map(CAST(2017-12-11 09:30:00 AS DATE), CAST(1 AS STRING)):map<date,string>>
-- !query 284 output
{2017-12-11:"1"}


-- !query 285
SELECT size(map(cast('2017-12-11 09:30:00' as date), cast('1' as binary))) FROM t
-- !query 285 schema
struct<size(map(CAST(2017-12-11 09:30:00 AS DATE), CAST(1 AS BINARY))):int>
-- !query 285 output
1


-- !query 286
SELECT map(cast('2017-12-11 09:30:00' as date), cast(1 as boolean)) FROM t
-- !query 286 schema
struct<map(CAST(2017-12-11 09:30:00 AS DATE), CAST(1 AS BOOLEAN)):map<date,boolean>>
-- !query 286 output
{2017-12-11:true}


-- !query 287
SELECT map(cast('2017-12-11 09:30:00' as date), cast('2017-12-11 09:30:00.0' as timestamp)) FROM t
-- !query 287 schema
struct<map(CAST(2017-12-11 09:30:00 AS DATE), CAST(2017-12-11 09:30:00.0 AS TIMESTAMP)):map<date,timestamp>>
-- !query 287 output
{2017-12-11:2017-12-11 09:30:00.0}


-- !query 288
SELECT map(cast('2017-12-11 09:30:00' as date), cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 288 schema
struct<map(CAST(2017-12-11 09:30:00 AS DATE), CAST(2017-12-11 09:30:00 AS DATE)):map<date,date>>
-- !query 288 output
{2017-12-11:2017-12-11}


-- !query 289
SELECT sum(cast(1 as tinyint)) FROM t
-- !query 289 schema
struct<sum(CAST(1 AS TINYINT)):bigint>
-- !query 289 output
1


-- !query 290
SELECT sum(cast(1 as smallint)) FROM t
-- !query 290 schema
struct<sum(CAST(1 AS SMALLINT)):bigint>
-- !query 290 output
1


-- !query 291
SELECT sum(cast(1 as int)) FROM t
-- !query 291 schema
struct<sum(CAST(1 AS INT)):bigint>
-- !query 291 output
1


-- !query 292
SELECT sum(cast(1 as bigint)) FROM t
-- !query 292 schema
struct<sum(CAST(1 AS BIGINT)):bigint>
-- !query 292 output
1


-- !query 293
SELECT sum(cast(1 as float)) FROM t
-- !query 293 schema
struct<sum(CAST(1 AS FLOAT)):double>
-- !query 293 output
1.0


-- !query 294
SELECT sum(cast(1 as double)) FROM t
-- !query 294 schema
struct<sum(CAST(1 AS DOUBLE)):double>
-- !query 294 output
1.0


-- !query 295
SELECT sum(cast(1 as decimal(10, 0))) FROM t
-- !query 295 schema
struct<sum(CAST(1 AS DECIMAL(10,0))):decimal(20,0)>
-- !query 295 output
1


-- !query 296
SELECT sum(cast(1 as string)) FROM t
-- !query 296 schema
struct<sum(CAST(CAST(1 AS STRING) AS DOUBLE)):double>
-- !query 296 output
1.0


-- !query 297
SELECT sum(cast('1' as binary)) FROM t
-- !query 297 schema
struct<>
-- !query 297 output
org.apache.spark.sql.AnalysisException
cannot resolve 'sum(CAST('1' AS BINARY))' due to data type mismatch: function sum requires numeric types, not BinaryType; line 1 pos 7


-- !query 298
SELECT sum(cast(1 as boolean)) FROM t
-- !query 298 schema
struct<>
-- !query 298 output
org.apache.spark.sql.AnalysisException
cannot resolve 'sum(CAST(1 AS BOOLEAN))' due to data type mismatch: function sum requires numeric types, not BooleanType; line 1 pos 7


-- !query 299
SELECT sum(cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 299 schema
struct<sum(CAST(CAST(2017-12-12 09:30:00.0 AS TIMESTAMP) AS DOUBLE)):double>
-- !query 299 output
1.5130998E9


-- !query 300
SELECT sum(cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 300 schema
struct<>
-- !query 300 output
org.apache.spark.sql.AnalysisException
cannot resolve 'sum(CAST('2017-12-11 09:30:00' AS DATE))' due to data type mismatch: function sum requires numeric types, not DateType; line 1 pos 7


-- !query 301
SELECT avg(cast(1 as tinyint)) FROM t
-- !query 301 schema
struct<avg(CAST(1 AS TINYINT)):double>
-- !query 301 output
1.0


-- !query 302
SELECT avg(cast(1 as smallint)) FROM t
-- !query 302 schema
struct<avg(CAST(1 AS SMALLINT)):double>
-- !query 302 output
1.0


-- !query 303
SELECT avg(cast(1 as int)) FROM t
-- !query 303 schema
struct<avg(CAST(1 AS INT)):double>
-- !query 303 output
1.0


-- !query 304
SELECT avg(cast(1 as bigint)) FROM t
-- !query 304 schema
struct<avg(CAST(1 AS BIGINT)):double>
-- !query 304 output
1.0


-- !query 305
SELECT avg(cast(1 as float)) FROM t
-- !query 305 schema
struct<avg(CAST(1 AS FLOAT)):double>
-- !query 305 output
1.0


-- !query 306
SELECT avg(cast(1 as double)) FROM t
-- !query 306 schema
struct<avg(CAST(1 AS DOUBLE)):double>
-- !query 306 output
1.0


-- !query 307
SELECT avg(cast(1 as decimal(10, 0))) FROM t
-- !query 307 schema
struct<avg(CAST(1 AS DECIMAL(10,0))):decimal(14,4)>
-- !query 307 output
1


-- !query 308
SELECT avg(cast(1 as string)) FROM t
-- !query 308 schema
struct<avg(CAST(CAST(1 AS STRING) AS DOUBLE)):double>
-- !query 308 output
1.0


-- !query 309
SELECT avg(cast('1' as binary)) FROM t
-- !query 309 schema
struct<>
-- !query 309 output
org.apache.spark.sql.AnalysisException
cannot resolve 'avg(CAST('1' AS BINARY))' due to data type mismatch: function average requires numeric types, not BinaryType; line 1 pos 7


-- !query 310
SELECT avg(cast(1 as boolean)) FROM t
-- !query 310 schema
struct<>
-- !query 310 output
org.apache.spark.sql.AnalysisException
cannot resolve 'avg(CAST(1 AS BOOLEAN))' due to data type mismatch: function average requires numeric types, not BooleanType; line 1 pos 7


-- !query 311
SELECT avg(cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 311 schema
struct<avg(CAST(CAST(2017-12-12 09:30:00.0 AS TIMESTAMP) AS DOUBLE)):double>
-- !query 311 output
1.5130998E9


-- !query 312
SELECT avg(cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 312 schema
struct<>
-- !query 312 output
org.apache.spark.sql.AnalysisException
cannot resolve 'avg(CAST('2017-12-11 09:30:00' AS DATE))' due to data type mismatch: function average requires numeric types, not DateType; line 1 pos 7


-- !query 313
SELECT avg(cast(1 as tinyint)) FROM t
-- !query 313 schema
struct<avg(CAST(1 AS TINYINT)):double>
-- !query 313 output
1.0


-- !query 314
SELECT avg(cast(1 as smallint)) FROM t
-- !query 314 schema
struct<avg(CAST(1 AS SMALLINT)):double>
-- !query 314 output
1.0


-- !query 315
SELECT avg(cast(1 as int)) FROM t
-- !query 315 schema
struct<avg(CAST(1 AS INT)):double>
-- !query 315 output
1.0


-- !query 316
SELECT avg(cast(1 as bigint)) FROM t
-- !query 316 schema
struct<avg(CAST(1 AS BIGINT)):double>
-- !query 316 output
1.0


-- !query 317
SELECT avg(cast(1 as float)) FROM t
-- !query 317 schema
struct<avg(CAST(1 AS FLOAT)):double>
-- !query 317 output
1.0


-- !query 318
SELECT avg(cast(1 as double)) FROM t
-- !query 318 schema
struct<avg(CAST(1 AS DOUBLE)):double>
-- !query 318 output
1.0


-- !query 319
SELECT avg(cast(1 as decimal(10, 0))) FROM t
-- !query 319 schema
struct<avg(CAST(1 AS DECIMAL(10,0))):decimal(14,4)>
-- !query 319 output
1


-- !query 320
SELECT avg(cast(1 as string)) FROM t
-- !query 320 schema
struct<avg(CAST(CAST(1 AS STRING) AS DOUBLE)):double>
-- !query 320 output
1.0


-- !query 321
SELECT avg(cast('1' as binary)) FROM t
-- !query 321 schema
struct<>
-- !query 321 output
org.apache.spark.sql.AnalysisException
cannot resolve 'avg(CAST('1' AS BINARY))' due to data type mismatch: function average requires numeric types, not BinaryType; line 1 pos 7


-- !query 322
SELECT avg(cast(1 as boolean)) FROM t
-- !query 322 schema
struct<>
-- !query 322 output
org.apache.spark.sql.AnalysisException
cannot resolve 'avg(CAST(1 AS BOOLEAN))' due to data type mismatch: function average requires numeric types, not BooleanType; line 1 pos 7


-- !query 323
SELECT avg(cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 323 schema
struct<avg(CAST(CAST(2017-12-12 09:30:00.0 AS TIMESTAMP) AS DOUBLE)):double>
-- !query 323 output
1.5130998E9


-- !query 324
SELECT avg(cast('2017-12-11 09:30:00' as date)) FROM t
-- !query 324 schema
struct<>
-- !query 324 output
org.apache.spark.sql.AnalysisException
cannot resolve 'avg(CAST('2017-12-11 09:30:00' AS DATE))' due to data type mismatch: function average requires numeric types, not DateType; line 1 pos 7


-- !query 325
SELECT coalesce(cast(1 as tinyint), cast(2 as tinyint)) FROM t
-- !query 325 schema
struct<coalesce(CAST(1 AS TINYINT), CAST(2 AS TINYINT)):tinyint>
-- !query 325 output
1


-- !query 326
SELECT coalesce(cast(1 as tinyint), cast(2 as smallint)) FROM t
-- !query 326 schema
struct<coalesce(CAST(CAST(1 AS TINYINT) AS SMALLINT), CAST(CAST(2 AS SMALLINT) AS SMALLINT)):smallint>
-- !query 326 output
1


-- !query 327
SELECT coalesce(cast(1 as tinyint), cast(2 as int)) FROM t
-- !query 327 schema
struct<coalesce(CAST(CAST(1 AS TINYINT) AS INT), CAST(CAST(2 AS INT) AS INT)):int>
-- !query 327 output
1


-- !query 328
SELECT coalesce(cast(1 as tinyint), cast(2 as bigint)) FROM t
-- !query 328 schema
struct<coalesce(CAST(CAST(1 AS TINYINT) AS BIGINT), CAST(CAST(2 AS BIGINT) AS BIGINT)):bigint>
-- !query 328 output
1


-- !query 329
SELECT coalesce(cast(1 as tinyint), cast(2 as float)) FROM t
-- !query 329 schema
struct<coalesce(CAST(CAST(1 AS TINYINT) AS FLOAT), CAST(CAST(2 AS FLOAT) AS FLOAT)):float>
-- !query 329 output
1.0


-- !query 330
SELECT coalesce(cast(1 as tinyint), cast(2 as double)) FROM t
-- !query 330 schema
struct<coalesce(CAST(CAST(1 AS TINYINT) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 330 output
1.0


-- !query 331
SELECT coalesce(cast(1 as tinyint), cast(2 as decimal(10, 0))) FROM t
-- !query 331 schema
struct<coalesce(CAST(CAST(1 AS TINYINT) AS DECIMAL(10,0)), CAST(CAST(2 AS DECIMAL(10,0)) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 331 output
1


-- !query 332
SELECT coalesce(cast(1 as tinyint), cast(2 as string)) FROM t
-- !query 332 schema
struct<coalesce(CAST(CAST(1 AS TINYINT) AS STRING), CAST(CAST(2 AS STRING) AS STRING)):string>
-- !query 332 output
1


-- !query 333
SELECT coalesce(cast(1 as tinyint), cast('2' as binary)) FROM t
-- !query 333 schema
struct<>
-- !query 333 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS TINYINT), CAST('2' AS BINARY))' due to data type mismatch: input to function coalesce should all be the same type, but it's [tinyint, binary]; line 1 pos 7


-- !query 334
SELECT coalesce(cast(1 as tinyint), cast(2 as boolean)) FROM t
-- !query 334 schema
struct<>
-- !query 334 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS TINYINT), CAST(2 AS BOOLEAN))' due to data type mismatch: input to function coalesce should all be the same type, but it's [tinyint, boolean]; line 1 pos 7


-- !query 335
SELECT coalesce(cast(1 as tinyint), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 335 schema
struct<>
-- !query 335 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS TINYINT), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function coalesce should all be the same type, but it's [tinyint, timestamp]; line 1 pos 7


-- !query 336
SELECT coalesce(cast(1 as tinyint), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 336 schema
struct<>
-- !query 336 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS TINYINT), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: input to function coalesce should all be the same type, but it's [tinyint, date]; line 1 pos 7


-- !query 337
SELECT coalesce(cast(1 as smallint), cast(2 as tinyint)) FROM t
-- !query 337 schema
struct<coalesce(CAST(CAST(1 AS SMALLINT) AS SMALLINT), CAST(CAST(2 AS TINYINT) AS SMALLINT)):smallint>
-- !query 337 output
1


-- !query 338
SELECT coalesce(cast(1 as smallint), cast(2 as smallint)) FROM t
-- !query 338 schema
struct<coalesce(CAST(1 AS SMALLINT), CAST(2 AS SMALLINT)):smallint>
-- !query 338 output
1


-- !query 339
SELECT coalesce(cast(1 as smallint), cast(2 as int)) FROM t
-- !query 339 schema
struct<coalesce(CAST(CAST(1 AS SMALLINT) AS INT), CAST(CAST(2 AS INT) AS INT)):int>
-- !query 339 output
1


-- !query 340
SELECT coalesce(cast(1 as smallint), cast(2 as bigint)) FROM t
-- !query 340 schema
struct<coalesce(CAST(CAST(1 AS SMALLINT) AS BIGINT), CAST(CAST(2 AS BIGINT) AS BIGINT)):bigint>
-- !query 340 output
1


-- !query 341
SELECT coalesce(cast(1 as smallint), cast(2 as float)) FROM t
-- !query 341 schema
struct<coalesce(CAST(CAST(1 AS SMALLINT) AS FLOAT), CAST(CAST(2 AS FLOAT) AS FLOAT)):float>
-- !query 341 output
1.0


-- !query 342
SELECT coalesce(cast(1 as smallint), cast(2 as double)) FROM t
-- !query 342 schema
struct<coalesce(CAST(CAST(1 AS SMALLINT) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 342 output
1.0


-- !query 343
SELECT coalesce(cast(1 as smallint), cast(2 as decimal(10, 0))) FROM t
-- !query 343 schema
struct<coalesce(CAST(CAST(1 AS SMALLINT) AS DECIMAL(10,0)), CAST(CAST(2 AS DECIMAL(10,0)) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 343 output
1


-- !query 344
SELECT coalesce(cast(1 as smallint), cast(2 as string)) FROM t
-- !query 344 schema
struct<coalesce(CAST(CAST(1 AS SMALLINT) AS STRING), CAST(CAST(2 AS STRING) AS STRING)):string>
-- !query 344 output
1


-- !query 345
SELECT coalesce(cast(1 as smallint), cast('2' as binary)) FROM t
-- !query 345 schema
struct<>
-- !query 345 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS SMALLINT), CAST('2' AS BINARY))' due to data type mismatch: input to function coalesce should all be the same type, but it's [smallint, binary]; line 1 pos 7


-- !query 346
SELECT coalesce(cast(1 as smallint), cast(2 as boolean)) FROM t
-- !query 346 schema
struct<>
-- !query 346 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS SMALLINT), CAST(2 AS BOOLEAN))' due to data type mismatch: input to function coalesce should all be the same type, but it's [smallint, boolean]; line 1 pos 7


-- !query 347
SELECT coalesce(cast(1 as smallint), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 347 schema
struct<>
-- !query 347 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS SMALLINT), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function coalesce should all be the same type, but it's [smallint, timestamp]; line 1 pos 7


-- !query 348
SELECT coalesce(cast(1 as smallint), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 348 schema
struct<>
-- !query 348 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS SMALLINT), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: input to function coalesce should all be the same type, but it's [smallint, date]; line 1 pos 7


-- !query 349
SELECT coalesce(cast(1 as int), cast(2 as tinyint)) FROM t
-- !query 349 schema
struct<coalesce(CAST(CAST(1 AS INT) AS INT), CAST(CAST(2 AS TINYINT) AS INT)):int>
-- !query 349 output
1


-- !query 350
SELECT coalesce(cast(1 as int), cast(2 as smallint)) FROM t
-- !query 350 schema
struct<coalesce(CAST(CAST(1 AS INT) AS INT), CAST(CAST(2 AS SMALLINT) AS INT)):int>
-- !query 350 output
1


-- !query 351
SELECT coalesce(cast(1 as int), cast(2 as int)) FROM t
-- !query 351 schema
struct<coalesce(CAST(1 AS INT), CAST(2 AS INT)):int>
-- !query 351 output
1


-- !query 352
SELECT coalesce(cast(1 as int), cast(2 as bigint)) FROM t
-- !query 352 schema
struct<coalesce(CAST(CAST(1 AS INT) AS BIGINT), CAST(CAST(2 AS BIGINT) AS BIGINT)):bigint>
-- !query 352 output
1


-- !query 353
SELECT coalesce(cast(1 as int), cast(2 as float)) FROM t
-- !query 353 schema
struct<coalesce(CAST(CAST(1 AS INT) AS FLOAT), CAST(CAST(2 AS FLOAT) AS FLOAT)):float>
-- !query 353 output
1.0


-- !query 354
SELECT coalesce(cast(1 as int), cast(2 as double)) FROM t
-- !query 354 schema
struct<coalesce(CAST(CAST(1 AS INT) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 354 output
1.0


-- !query 355
SELECT coalesce(cast(1 as int), cast(2 as decimal(10, 0))) FROM t
-- !query 355 schema
struct<coalesce(CAST(CAST(1 AS INT) AS DECIMAL(10,0)), CAST(CAST(2 AS DECIMAL(10,0)) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 355 output
1


-- !query 356
SELECT coalesce(cast(1 as int), cast(2 as string)) FROM t
-- !query 356 schema
struct<coalesce(CAST(CAST(1 AS INT) AS STRING), CAST(CAST(2 AS STRING) AS STRING)):string>
-- !query 356 output
1


-- !query 357
SELECT coalesce(cast(1 as int), cast('2' as binary)) FROM t
-- !query 357 schema
struct<>
-- !query 357 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS INT), CAST('2' AS BINARY))' due to data type mismatch: input to function coalesce should all be the same type, but it's [int, binary]; line 1 pos 7


-- !query 358
SELECT coalesce(cast(1 as int), cast(2 as boolean)) FROM t
-- !query 358 schema
struct<>
-- !query 358 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS INT), CAST(2 AS BOOLEAN))' due to data type mismatch: input to function coalesce should all be the same type, but it's [int, boolean]; line 1 pos 7


-- !query 359
SELECT coalesce(cast(1 as int), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 359 schema
struct<>
-- !query 359 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS INT), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function coalesce should all be the same type, but it's [int, timestamp]; line 1 pos 7


-- !query 360
SELECT coalesce(cast(1 as int), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 360 schema
struct<>
-- !query 360 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS INT), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: input to function coalesce should all be the same type, but it's [int, date]; line 1 pos 7


-- !query 361
SELECT coalesce(cast(1 as bigint), cast(2 as tinyint)) FROM t
-- !query 361 schema
struct<coalesce(CAST(CAST(1 AS BIGINT) AS BIGINT), CAST(CAST(2 AS TINYINT) AS BIGINT)):bigint>
-- !query 361 output
1


-- !query 362
SELECT coalesce(cast(1 as bigint), cast(2 as smallint)) FROM t
-- !query 362 schema
struct<coalesce(CAST(CAST(1 AS BIGINT) AS BIGINT), CAST(CAST(2 AS SMALLINT) AS BIGINT)):bigint>
-- !query 362 output
1


-- !query 363
SELECT coalesce(cast(1 as bigint), cast(2 as int)) FROM t
-- !query 363 schema
struct<coalesce(CAST(CAST(1 AS BIGINT) AS BIGINT), CAST(CAST(2 AS INT) AS BIGINT)):bigint>
-- !query 363 output
1


-- !query 364
SELECT coalesce(cast(1 as bigint), cast(2 as bigint)) FROM t
-- !query 364 schema
struct<coalesce(CAST(1 AS BIGINT), CAST(2 AS BIGINT)):bigint>
-- !query 364 output
1


-- !query 365
SELECT coalesce(cast(1 as bigint), cast(2 as float)) FROM t
-- !query 365 schema
struct<coalesce(CAST(CAST(1 AS BIGINT) AS FLOAT), CAST(CAST(2 AS FLOAT) AS FLOAT)):float>
-- !query 365 output
1.0


-- !query 366
SELECT coalesce(cast(1 as bigint), cast(2 as double)) FROM t
-- !query 366 schema
struct<coalesce(CAST(CAST(1 AS BIGINT) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 366 output
1.0


-- !query 367
SELECT coalesce(cast(1 as bigint), cast(2 as decimal(10, 0))) FROM t
-- !query 367 schema
struct<coalesce(CAST(CAST(1 AS BIGINT) AS DECIMAL(20,0)), CAST(CAST(2 AS DECIMAL(10,0)) AS DECIMAL(20,0))):decimal(20,0)>
-- !query 367 output
1


-- !query 368
SELECT coalesce(cast(1 as bigint), cast(2 as string)) FROM t
-- !query 368 schema
struct<coalesce(CAST(CAST(1 AS BIGINT) AS STRING), CAST(CAST(2 AS STRING) AS STRING)):string>
-- !query 368 output
1


-- !query 369
SELECT coalesce(cast(1 as bigint), cast('2' as binary)) FROM t
-- !query 369 schema
struct<>
-- !query 369 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS BIGINT), CAST('2' AS BINARY))' due to data type mismatch: input to function coalesce should all be the same type, but it's [bigint, binary]; line 1 pos 7


-- !query 370
SELECT coalesce(cast(1 as bigint), cast(2 as boolean)) FROM t
-- !query 370 schema
struct<>
-- !query 370 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS BIGINT), CAST(2 AS BOOLEAN))' due to data type mismatch: input to function coalesce should all be the same type, but it's [bigint, boolean]; line 1 pos 7


-- !query 371
SELECT coalesce(cast(1 as bigint), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 371 schema
struct<>
-- !query 371 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS BIGINT), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function coalesce should all be the same type, but it's [bigint, timestamp]; line 1 pos 7


-- !query 372
SELECT coalesce(cast(1 as bigint), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 372 schema
struct<>
-- !query 372 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS BIGINT), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: input to function coalesce should all be the same type, but it's [bigint, date]; line 1 pos 7


-- !query 373
SELECT coalesce(cast(1 as float), cast(2 as tinyint)) FROM t
-- !query 373 schema
struct<coalesce(CAST(CAST(1 AS FLOAT) AS FLOAT), CAST(CAST(2 AS TINYINT) AS FLOAT)):float>
-- !query 373 output
1.0


-- !query 374
SELECT coalesce(cast(1 as float), cast(2 as smallint)) FROM t
-- !query 374 schema
struct<coalesce(CAST(CAST(1 AS FLOAT) AS FLOAT), CAST(CAST(2 AS SMALLINT) AS FLOAT)):float>
-- !query 374 output
1.0


-- !query 375
SELECT coalesce(cast(1 as float), cast(2 as int)) FROM t
-- !query 375 schema
struct<coalesce(CAST(CAST(1 AS FLOAT) AS FLOAT), CAST(CAST(2 AS INT) AS FLOAT)):float>
-- !query 375 output
1.0


-- !query 376
SELECT coalesce(cast(1 as float), cast(2 as bigint)) FROM t
-- !query 376 schema
struct<coalesce(CAST(CAST(1 AS FLOAT) AS FLOAT), CAST(CAST(2 AS BIGINT) AS FLOAT)):float>
-- !query 376 output
1.0


-- !query 377
SELECT coalesce(cast(1 as float), cast(2 as float)) FROM t
-- !query 377 schema
struct<coalesce(CAST(1 AS FLOAT), CAST(2 AS FLOAT)):float>
-- !query 377 output
1.0


-- !query 378
SELECT coalesce(cast(1 as float), cast(2 as double)) FROM t
-- !query 378 schema
struct<coalesce(CAST(CAST(1 AS FLOAT) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 378 output
1.0


-- !query 379
SELECT coalesce(cast(1 as float), cast(2 as decimal(10, 0))) FROM t
-- !query 379 schema
struct<coalesce(CAST(CAST(1 AS FLOAT) AS DOUBLE), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE)):double>
-- !query 379 output
1.0


-- !query 380
SELECT coalesce(cast(1 as float), cast(2 as string)) FROM t
-- !query 380 schema
struct<coalesce(CAST(CAST(1 AS FLOAT) AS STRING), CAST(CAST(2 AS STRING) AS STRING)):string>
-- !query 380 output
1.0


-- !query 381
SELECT coalesce(cast(1 as float), cast('2' as binary)) FROM t
-- !query 381 schema
struct<>
-- !query 381 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS FLOAT), CAST('2' AS BINARY))' due to data type mismatch: input to function coalesce should all be the same type, but it's [float, binary]; line 1 pos 7


-- !query 382
SELECT coalesce(cast(1 as float), cast(2 as boolean)) FROM t
-- !query 382 schema
struct<>
-- !query 382 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS FLOAT), CAST(2 AS BOOLEAN))' due to data type mismatch: input to function coalesce should all be the same type, but it's [float, boolean]; line 1 pos 7


-- !query 383
SELECT coalesce(cast(1 as float), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 383 schema
struct<>
-- !query 383 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS FLOAT), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function coalesce should all be the same type, but it's [float, timestamp]; line 1 pos 7


-- !query 384
SELECT coalesce(cast(1 as float), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 384 schema
struct<>
-- !query 384 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS FLOAT), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: input to function coalesce should all be the same type, but it's [float, date]; line 1 pos 7


-- !query 385
SELECT coalesce(cast(1 as double), cast(2 as tinyint)) FROM t
-- !query 385 schema
struct<coalesce(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS TINYINT) AS DOUBLE)):double>
-- !query 385 output
1.0


-- !query 386
SELECT coalesce(cast(1 as double), cast(2 as smallint)) FROM t
-- !query 386 schema
struct<coalesce(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS SMALLINT) AS DOUBLE)):double>
-- !query 386 output
1.0


-- !query 387
SELECT coalesce(cast(1 as double), cast(2 as int)) FROM t
-- !query 387 schema
struct<coalesce(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS INT) AS DOUBLE)):double>
-- !query 387 output
1.0


-- !query 388
SELECT coalesce(cast(1 as double), cast(2 as bigint)) FROM t
-- !query 388 schema
struct<coalesce(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS BIGINT) AS DOUBLE)):double>
-- !query 388 output
1.0


-- !query 389
SELECT coalesce(cast(1 as double), cast(2 as float)) FROM t
-- !query 389 schema
struct<coalesce(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS FLOAT) AS DOUBLE)):double>
-- !query 389 output
1.0


-- !query 390
SELECT coalesce(cast(1 as double), cast(2 as double)) FROM t
-- !query 390 schema
struct<coalesce(CAST(1 AS DOUBLE), CAST(2 AS DOUBLE)):double>
-- !query 390 output
1.0


-- !query 391
SELECT coalesce(cast(1 as double), cast(2 as decimal(10, 0))) FROM t
-- !query 391 schema
struct<coalesce(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE)):double>
-- !query 391 output
1.0


-- !query 392
SELECT coalesce(cast(1 as double), cast(2 as string)) FROM t
-- !query 392 schema
struct<coalesce(CAST(CAST(1 AS DOUBLE) AS STRING), CAST(CAST(2 AS STRING) AS STRING)):string>
-- !query 392 output
1.0


-- !query 393
SELECT coalesce(cast(1 as double), cast('2' as binary)) FROM t
-- !query 393 schema
struct<>
-- !query 393 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS DOUBLE), CAST('2' AS BINARY))' due to data type mismatch: input to function coalesce should all be the same type, but it's [double, binary]; line 1 pos 7


-- !query 394
SELECT coalesce(cast(1 as double), cast(2 as boolean)) FROM t
-- !query 394 schema
struct<>
-- !query 394 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS DOUBLE), CAST(2 AS BOOLEAN))' due to data type mismatch: input to function coalesce should all be the same type, but it's [double, boolean]; line 1 pos 7


-- !query 395
SELECT coalesce(cast(1 as double), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 395 schema
struct<>
-- !query 395 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS DOUBLE), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function coalesce should all be the same type, but it's [double, timestamp]; line 1 pos 7


-- !query 396
SELECT coalesce(cast(1 as double), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 396 schema
struct<>
-- !query 396 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS DOUBLE), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: input to function coalesce should all be the same type, but it's [double, date]; line 1 pos 7


-- !query 397
SELECT coalesce(cast(1 as decimal(10, 0)), cast(2 as tinyint)) FROM t
-- !query 397 schema
struct<coalesce(CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(10,0)), CAST(CAST(2 AS TINYINT) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 397 output
1


-- !query 398
SELECT coalesce(cast(1 as decimal(10, 0)), cast(2 as smallint)) FROM t
-- !query 398 schema
struct<coalesce(CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(10,0)), CAST(CAST(2 AS SMALLINT) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 398 output
1


-- !query 399
SELECT coalesce(cast(1 as decimal(10, 0)), cast(2 as int)) FROM t
-- !query 399 schema
struct<coalesce(CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(10,0)), CAST(CAST(2 AS INT) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 399 output
1


-- !query 400
SELECT coalesce(cast(1 as decimal(10, 0)), cast(2 as bigint)) FROM t
-- !query 400 schema
struct<coalesce(CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(20,0)), CAST(CAST(2 AS BIGINT) AS DECIMAL(20,0))):decimal(20,0)>
-- !query 400 output
1


-- !query 401
SELECT coalesce(cast(1 as decimal(10, 0)), cast(2 as float)) FROM t
-- !query 401 schema
struct<coalesce(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST(CAST(2 AS FLOAT) AS DOUBLE)):double>
-- !query 401 output
1.0


-- !query 402
SELECT coalesce(cast(1 as decimal(10, 0)), cast(2 as double)) FROM t
-- !query 402 schema
struct<coalesce(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 402 output
1.0


-- !query 403
SELECT coalesce(cast(1 as decimal(10, 0)), cast(2 as decimal(10, 0))) FROM t
-- !query 403 schema
struct<coalesce(CAST(1 AS DECIMAL(10,0)), CAST(2 AS DECIMAL(10,0))):decimal(10,0)>
-- !query 403 output
1


-- !query 404
SELECT coalesce(cast(1 as decimal(10, 0)), cast(2 as string)) FROM t
-- !query 404 schema
struct<coalesce(CAST(CAST(1 AS DECIMAL(10,0)) AS STRING), CAST(CAST(2 AS STRING) AS STRING)):string>
-- !query 404 output
1


-- !query 405
SELECT coalesce(cast(1 as decimal(10, 0)), cast('2' as binary)) FROM t
-- !query 405 schema
struct<>
-- !query 405 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS DECIMAL(10,0)), CAST('2' AS BINARY))' due to data type mismatch: input to function coalesce should all be the same type, but it's [decimal(10,0), binary]; line 1 pos 7


-- !query 406
SELECT coalesce(cast(1 as decimal(10, 0)), cast(2 as boolean)) FROM t
-- !query 406 schema
struct<>
-- !query 406 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS DECIMAL(10,0)), CAST(2 AS BOOLEAN))' due to data type mismatch: input to function coalesce should all be the same type, but it's [decimal(10,0), boolean]; line 1 pos 7


-- !query 407
SELECT coalesce(cast(1 as decimal(10, 0)), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 407 schema
struct<>
-- !query 407 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS DECIMAL(10,0)), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function coalesce should all be the same type, but it's [decimal(10,0), timestamp]; line 1 pos 7


-- !query 408
SELECT coalesce(cast(1 as decimal(10, 0)), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 408 schema
struct<>
-- !query 408 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS DECIMAL(10,0)), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: input to function coalesce should all be the same type, but it's [decimal(10,0), date]; line 1 pos 7


-- !query 409
SELECT coalesce(cast(1 as string), cast(2 as tinyint)) FROM t
-- !query 409 schema
struct<coalesce(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(2 AS TINYINT) AS STRING)):string>
-- !query 409 output
1


-- !query 410
SELECT coalesce(cast(1 as string), cast(2 as smallint)) FROM t
-- !query 410 schema
struct<coalesce(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(2 AS SMALLINT) AS STRING)):string>
-- !query 410 output
1


-- !query 411
SELECT coalesce(cast(1 as string), cast(2 as int)) FROM t
-- !query 411 schema
struct<coalesce(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(2 AS INT) AS STRING)):string>
-- !query 411 output
1


-- !query 412
SELECT coalesce(cast(1 as string), cast(2 as bigint)) FROM t
-- !query 412 schema
struct<coalesce(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(2 AS BIGINT) AS STRING)):string>
-- !query 412 output
1


-- !query 413
SELECT coalesce(cast(1 as string), cast(2 as float)) FROM t
-- !query 413 schema
struct<coalesce(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(2 AS FLOAT) AS STRING)):string>
-- !query 413 output
1


-- !query 414
SELECT coalesce(cast(1 as string), cast(2 as double)) FROM t
-- !query 414 schema
struct<coalesce(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(2 AS DOUBLE) AS STRING)):string>
-- !query 414 output
1


-- !query 415
SELECT coalesce(cast(1 as string), cast(2 as decimal(10, 0))) FROM t
-- !query 415 schema
struct<coalesce(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(2 AS DECIMAL(10,0)) AS STRING)):string>
-- !query 415 output
1


-- !query 416
SELECT coalesce(cast(1 as string), cast(2 as string)) FROM t
-- !query 416 schema
struct<coalesce(CAST(1 AS STRING), CAST(2 AS STRING)):string>
-- !query 416 output
1


-- !query 417
SELECT coalesce(cast(1 as string), cast('2' as binary)) FROM t
-- !query 417 schema
struct<>
-- !query 417 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS STRING), CAST('2' AS BINARY))' due to data type mismatch: input to function coalesce should all be the same type, but it's [string, binary]; line 1 pos 7


-- !query 418
SELECT coalesce(cast(1 as string), cast(2 as boolean)) FROM t
-- !query 418 schema
struct<>
-- !query 418 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS STRING), CAST(2 AS BOOLEAN))' due to data type mismatch: input to function coalesce should all be the same type, but it's [string, boolean]; line 1 pos 7


-- !query 419
SELECT coalesce(cast(1 as string), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 419 schema
struct<coalesce(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(2017-12-12 09:30:00.0 AS TIMESTAMP) AS STRING)):string>
-- !query 419 output
1


-- !query 420
SELECT coalesce(cast(1 as string), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 420 schema
struct<coalesce(CAST(CAST(1 AS STRING) AS STRING), CAST(CAST(2017-12-12 09:30:00 AS DATE) AS STRING)):string>
-- !query 420 output
1


-- !query 421
SELECT coalesce(cast('1' as binary), cast(2 as tinyint)) FROM t
-- !query 421 schema
struct<>
-- !query 421 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('1' AS BINARY), CAST(2 AS TINYINT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [binary, tinyint]; line 1 pos 7


-- !query 422
SELECT coalesce(cast('1' as binary), cast(2 as smallint)) FROM t
-- !query 422 schema
struct<>
-- !query 422 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('1' AS BINARY), CAST(2 AS SMALLINT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [binary, smallint]; line 1 pos 7


-- !query 423
SELECT coalesce(cast('1' as binary), cast(2 as int)) FROM t
-- !query 423 schema
struct<>
-- !query 423 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('1' AS BINARY), CAST(2 AS INT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [binary, int]; line 1 pos 7


-- !query 424
SELECT coalesce(cast('1' as binary), cast(2 as bigint)) FROM t
-- !query 424 schema
struct<>
-- !query 424 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('1' AS BINARY), CAST(2 AS BIGINT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [binary, bigint]; line 1 pos 7


-- !query 425
SELECT coalesce(cast('1' as binary), cast(2 as float)) FROM t
-- !query 425 schema
struct<>
-- !query 425 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('1' AS BINARY), CAST(2 AS FLOAT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [binary, float]; line 1 pos 7


-- !query 426
SELECT coalesce(cast('1' as binary), cast(2 as double)) FROM t
-- !query 426 schema
struct<>
-- !query 426 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('1' AS BINARY), CAST(2 AS DOUBLE))' due to data type mismatch: input to function coalesce should all be the same type, but it's [binary, double]; line 1 pos 7


-- !query 427
SELECT coalesce(cast('1' as binary), cast(2 as decimal(10, 0))) FROM t
-- !query 427 schema
struct<>
-- !query 427 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('1' AS BINARY), CAST(2 AS DECIMAL(10,0)))' due to data type mismatch: input to function coalesce should all be the same type, but it's [binary, decimal(10,0)]; line 1 pos 7


-- !query 428
SELECT coalesce(cast('1' as binary), cast(2 as string)) FROM t
-- !query 428 schema
struct<>
-- !query 428 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('1' AS BINARY), CAST(2 AS STRING))' due to data type mismatch: input to function coalesce should all be the same type, but it's [binary, string]; line 1 pos 7


-- !query 429
SELECT coalesce(cast('1' as binary), cast('2' as binary)) FROM t
-- !query 429 schema
struct<coalesce(CAST(1 AS BINARY), CAST(2 AS BINARY)):binary>
-- !query 429 output
1


-- !query 430
SELECT coalesce(cast('1' as binary), cast(2 as boolean)) FROM t
-- !query 430 schema
struct<>
-- !query 430 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('1' AS BINARY), CAST(2 AS BOOLEAN))' due to data type mismatch: input to function coalesce should all be the same type, but it's [binary, boolean]; line 1 pos 7


-- !query 431
SELECT coalesce(cast('1' as binary), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 431 schema
struct<>
-- !query 431 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('1' AS BINARY), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function coalesce should all be the same type, but it's [binary, timestamp]; line 1 pos 7


-- !query 432
SELECT coalesce(cast('1' as binary), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 432 schema
struct<>
-- !query 432 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('1' AS BINARY), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: input to function coalesce should all be the same type, but it's [binary, date]; line 1 pos 7


-- !query 433
SELECT coalesce(cast(1 as boolean), cast(2 as tinyint)) FROM t
-- !query 433 schema
struct<>
-- !query 433 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS BOOLEAN), CAST(2 AS TINYINT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [boolean, tinyint]; line 1 pos 7


-- !query 434
SELECT coalesce(cast(1 as boolean), cast(2 as smallint)) FROM t
-- !query 434 schema
struct<>
-- !query 434 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS BOOLEAN), CAST(2 AS SMALLINT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [boolean, smallint]; line 1 pos 7


-- !query 435
SELECT coalesce(cast(1 as boolean), cast(2 as int)) FROM t
-- !query 435 schema
struct<>
-- !query 435 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS BOOLEAN), CAST(2 AS INT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [boolean, int]; line 1 pos 7


-- !query 436
SELECT coalesce(cast(1 as boolean), cast(2 as bigint)) FROM t
-- !query 436 schema
struct<>
-- !query 436 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS BOOLEAN), CAST(2 AS BIGINT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [boolean, bigint]; line 1 pos 7


-- !query 437
SELECT coalesce(cast(1 as boolean), cast(2 as float)) FROM t
-- !query 437 schema
struct<>
-- !query 437 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS BOOLEAN), CAST(2 AS FLOAT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [boolean, float]; line 1 pos 7


-- !query 438
SELECT coalesce(cast(1 as boolean), cast(2 as double)) FROM t
-- !query 438 schema
struct<>
-- !query 438 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS BOOLEAN), CAST(2 AS DOUBLE))' due to data type mismatch: input to function coalesce should all be the same type, but it's [boolean, double]; line 1 pos 7


-- !query 439
SELECT coalesce(cast(1 as boolean), cast(2 as decimal(10, 0))) FROM t
-- !query 439 schema
struct<>
-- !query 439 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS BOOLEAN), CAST(2 AS DECIMAL(10,0)))' due to data type mismatch: input to function coalesce should all be the same type, but it's [boolean, decimal(10,0)]; line 1 pos 7


-- !query 440
SELECT coalesce(cast(1 as boolean), cast(2 as string)) FROM t
-- !query 440 schema
struct<>
-- !query 440 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS BOOLEAN), CAST(2 AS STRING))' due to data type mismatch: input to function coalesce should all be the same type, but it's [boolean, string]; line 1 pos 7


-- !query 441
SELECT coalesce(cast(1 as boolean), cast('2' as binary)) FROM t
-- !query 441 schema
struct<>
-- !query 441 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS BOOLEAN), CAST('2' AS BINARY))' due to data type mismatch: input to function coalesce should all be the same type, but it's [boolean, binary]; line 1 pos 7


-- !query 442
SELECT coalesce(cast(1 as boolean), cast(2 as boolean)) FROM t
-- !query 442 schema
struct<coalesce(CAST(1 AS BOOLEAN), CAST(2 AS BOOLEAN)):boolean>
-- !query 442 output
true


-- !query 443
SELECT coalesce(cast(1 as boolean), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 443 schema
struct<>
-- !query 443 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS BOOLEAN), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: input to function coalesce should all be the same type, but it's [boolean, timestamp]; line 1 pos 7


-- !query 444
SELECT coalesce(cast(1 as boolean), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 444 schema
struct<>
-- !query 444 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST(1 AS BOOLEAN), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: input to function coalesce should all be the same type, but it's [boolean, date]; line 1 pos 7


-- !query 445
SELECT coalesce(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as tinyint)) FROM t
-- !query 445 schema
struct<>
-- !query 445 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS TINYINT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [timestamp, tinyint]; line 1 pos 7


-- !query 446
SELECT coalesce(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as smallint)) FROM t
-- !query 446 schema
struct<>
-- !query 446 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS SMALLINT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [timestamp, smallint]; line 1 pos 7


-- !query 447
SELECT coalesce(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as int)) FROM t
-- !query 447 schema
struct<>
-- !query 447 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS INT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [timestamp, int]; line 1 pos 7


-- !query 448
SELECT coalesce(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as bigint)) FROM t
-- !query 448 schema
struct<>
-- !query 448 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS BIGINT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [timestamp, bigint]; line 1 pos 7


-- !query 449
SELECT coalesce(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as float)) FROM t
-- !query 449 schema
struct<>
-- !query 449 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS FLOAT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [timestamp, float]; line 1 pos 7


-- !query 450
SELECT coalesce(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as double)) FROM t
-- !query 450 schema
struct<>
-- !query 450 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS DOUBLE))' due to data type mismatch: input to function coalesce should all be the same type, but it's [timestamp, double]; line 1 pos 7


-- !query 451
SELECT coalesce(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as decimal(10, 0))) FROM t
-- !query 451 schema
struct<>
-- !query 451 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS DECIMAL(10,0)))' due to data type mismatch: input to function coalesce should all be the same type, but it's [timestamp, decimal(10,0)]; line 1 pos 7


-- !query 452
SELECT coalesce(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as string)) FROM t
-- !query 452 schema
struct<coalesce(CAST(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) AS STRING), CAST(CAST(2 AS STRING) AS STRING)):string>
-- !query 452 output
2017-12-11 09:30:00


-- !query 453
SELECT coalesce(cast('2017-12-11 09:30:00.0' as timestamp), cast('2' as binary)) FROM t
-- !query 453 schema
struct<>
-- !query 453 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST('2' AS BINARY))' due to data type mismatch: input to function coalesce should all be the same type, but it's [timestamp, binary]; line 1 pos 7


-- !query 454
SELECT coalesce(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as boolean)) FROM t
-- !query 454 schema
struct<>
-- !query 454 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS BOOLEAN))' due to data type mismatch: input to function coalesce should all be the same type, but it's [timestamp, boolean]; line 1 pos 7


-- !query 455
SELECT coalesce(cast('2017-12-11 09:30:00.0' as timestamp), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 455 schema
struct<coalesce(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP), CAST(2017-12-12 09:30:00.0 AS TIMESTAMP)):timestamp>
-- !query 455 output
2017-12-11 09:30:00


-- !query 456
SELECT coalesce(cast('2017-12-11 09:30:00.0' as timestamp), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 456 schema
struct<coalesce(CAST(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) AS TIMESTAMP), CAST(CAST(2017-12-12 09:30:00 AS DATE) AS TIMESTAMP)):timestamp>
-- !query 456 output
2017-12-11 09:30:00


-- !query 457
SELECT coalesce(cast('2017-12-11 09:30:00' as date), cast(2 as tinyint)) FROM t
-- !query 457 schema
struct<>
-- !query 457 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS TINYINT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [date, tinyint]; line 1 pos 7


-- !query 458
SELECT coalesce(cast('2017-12-11 09:30:00' as date), cast(2 as smallint)) FROM t
-- !query 458 schema
struct<>
-- !query 458 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS SMALLINT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [date, smallint]; line 1 pos 7


-- !query 459
SELECT coalesce(cast('2017-12-11 09:30:00' as date), cast(2 as int)) FROM t
-- !query 459 schema
struct<>
-- !query 459 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS INT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [date, int]; line 1 pos 7


-- !query 460
SELECT coalesce(cast('2017-12-11 09:30:00' as date), cast(2 as bigint)) FROM t
-- !query 460 schema
struct<>
-- !query 460 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS BIGINT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [date, bigint]; line 1 pos 7


-- !query 461
SELECT coalesce(cast('2017-12-11 09:30:00' as date), cast(2 as float)) FROM t
-- !query 461 schema
struct<>
-- !query 461 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS FLOAT))' due to data type mismatch: input to function coalesce should all be the same type, but it's [date, float]; line 1 pos 7


-- !query 462
SELECT coalesce(cast('2017-12-11 09:30:00' as date), cast(2 as double)) FROM t
-- !query 462 schema
struct<>
-- !query 462 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS DOUBLE))' due to data type mismatch: input to function coalesce should all be the same type, but it's [date, double]; line 1 pos 7


-- !query 463
SELECT coalesce(cast('2017-12-11 09:30:00' as date), cast(2 as decimal(10, 0))) FROM t
-- !query 463 schema
struct<>
-- !query 463 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS DECIMAL(10,0)))' due to data type mismatch: input to function coalesce should all be the same type, but it's [date, decimal(10,0)]; line 1 pos 7


-- !query 464
SELECT coalesce(cast('2017-12-11 09:30:00' as date), cast(2 as string)) FROM t
-- !query 464 schema
struct<coalesce(CAST(CAST(2017-12-11 09:30:00 AS DATE) AS STRING), CAST(CAST(2 AS STRING) AS STRING)):string>
-- !query 464 output
2017-12-11


-- !query 465
SELECT coalesce(cast('2017-12-11 09:30:00' as date), cast('2' as binary)) FROM t
-- !query 465 schema
struct<>
-- !query 465 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00' AS DATE), CAST('2' AS BINARY))' due to data type mismatch: input to function coalesce should all be the same type, but it's [date, binary]; line 1 pos 7


-- !query 466
SELECT coalesce(cast('2017-12-11 09:30:00' as date), cast(2 as boolean)) FROM t
-- !query 466 schema
struct<>
-- !query 466 output
org.apache.spark.sql.AnalysisException
cannot resolve 'coalesce(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS BOOLEAN))' due to data type mismatch: input to function coalesce should all be the same type, but it's [date, boolean]; line 1 pos 7


-- !query 467
SELECT coalesce(cast('2017-12-11 09:30:00' as date), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 467 schema
struct<coalesce(CAST(CAST(2017-12-11 09:30:00 AS DATE) AS TIMESTAMP), CAST(CAST(2017-12-12 09:30:00.0 AS TIMESTAMP) AS TIMESTAMP)):timestamp>
-- !query 467 output
2017-12-11 00:00:00


-- !query 468
SELECT coalesce(cast('2017-12-11 09:30:00' as date), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 468 schema
struct<coalesce(CAST(2017-12-11 09:30:00 AS DATE), CAST(2017-12-12 09:30:00 AS DATE)):date>
-- !query 468 output
2017-12-11


-- !query 469
SELECT greatest(cast(1 as tinyint), cast(2 as tinyint)) FROM t
-- !query 469 schema
struct<greatest(CAST(1 AS TINYINT), CAST(2 AS TINYINT)):tinyint>
-- !query 469 output
2


-- !query 470
SELECT greatest(cast(1 as tinyint), cast(2 as smallint)) FROM t
-- !query 470 schema
struct<greatest(CAST(CAST(1 AS TINYINT) AS SMALLINT), CAST(CAST(2 AS SMALLINT) AS SMALLINT)):smallint>
-- !query 470 output
2


-- !query 471
SELECT greatest(cast(1 as tinyint), cast(2 as int)) FROM t
-- !query 471 schema
struct<greatest(CAST(CAST(1 AS TINYINT) AS INT), CAST(CAST(2 AS INT) AS INT)):int>
-- !query 471 output
2


-- !query 472
SELECT greatest(cast(1 as tinyint), cast(2 as bigint)) FROM t
-- !query 472 schema
struct<greatest(CAST(CAST(1 AS TINYINT) AS BIGINT), CAST(CAST(2 AS BIGINT) AS BIGINT)):bigint>
-- !query 472 output
2


-- !query 473
SELECT greatest(cast(1 as tinyint), cast(2 as float)) FROM t
-- !query 473 schema
struct<greatest(CAST(CAST(1 AS TINYINT) AS FLOAT), CAST(CAST(2 AS FLOAT) AS FLOAT)):float>
-- !query 473 output
2.0


-- !query 474
SELECT greatest(cast(1 as tinyint), cast(2 as double)) FROM t
-- !query 474 schema
struct<greatest(CAST(CAST(1 AS TINYINT) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 474 output
2.0


-- !query 475
SELECT greatest(cast(1 as tinyint), cast(2 as decimal(10, 0))) FROM t
-- !query 475 schema
struct<greatest(CAST(CAST(1 AS TINYINT) AS DECIMAL(10,0)), CAST(CAST(2 AS DECIMAL(10,0)) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 475 output
2


-- !query 476
SELECT greatest(cast(1 as tinyint), cast(2 as string)) FROM t
-- !query 476 schema
struct<>
-- !query 476 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS TINYINT), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got GREATEST(tinyint, string).; line 1 pos 7


-- !query 477
SELECT greatest(cast(1 as tinyint), cast('2' as binary)) FROM t
-- !query 477 schema
struct<>
-- !query 477 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS TINYINT), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got GREATEST(tinyint, binary).; line 1 pos 7


-- !query 478
SELECT greatest(cast(1 as tinyint), cast(2 as boolean)) FROM t
-- !query 478 schema
struct<>
-- !query 478 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS TINYINT), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got GREATEST(tinyint, boolean).; line 1 pos 7


-- !query 479
SELECT greatest(cast(1 as tinyint), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 479 schema
struct<>
-- !query 479 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS TINYINT), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got GREATEST(tinyint, timestamp).; line 1 pos 7


-- !query 480
SELECT greatest(cast(1 as tinyint), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 480 schema
struct<>
-- !query 480 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS TINYINT), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got GREATEST(tinyint, date).; line 1 pos 7


-- !query 481
SELECT greatest(cast(1 as smallint), cast(2 as tinyint)) FROM t
-- !query 481 schema
struct<greatest(CAST(CAST(1 AS SMALLINT) AS SMALLINT), CAST(CAST(2 AS TINYINT) AS SMALLINT)):smallint>
-- !query 481 output
2


-- !query 482
SELECT greatest(cast(1 as smallint), cast(2 as smallint)) FROM t
-- !query 482 schema
struct<greatest(CAST(1 AS SMALLINT), CAST(2 AS SMALLINT)):smallint>
-- !query 482 output
2


-- !query 483
SELECT greatest(cast(1 as smallint), cast(2 as int)) FROM t
-- !query 483 schema
struct<greatest(CAST(CAST(1 AS SMALLINT) AS INT), CAST(CAST(2 AS INT) AS INT)):int>
-- !query 483 output
2


-- !query 484
SELECT greatest(cast(1 as smallint), cast(2 as bigint)) FROM t
-- !query 484 schema
struct<greatest(CAST(CAST(1 AS SMALLINT) AS BIGINT), CAST(CAST(2 AS BIGINT) AS BIGINT)):bigint>
-- !query 484 output
2


-- !query 485
SELECT greatest(cast(1 as smallint), cast(2 as float)) FROM t
-- !query 485 schema
struct<greatest(CAST(CAST(1 AS SMALLINT) AS FLOAT), CAST(CAST(2 AS FLOAT) AS FLOAT)):float>
-- !query 485 output
2.0


-- !query 486
SELECT greatest(cast(1 as smallint), cast(2 as double)) FROM t
-- !query 486 schema
struct<greatest(CAST(CAST(1 AS SMALLINT) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 486 output
2.0


-- !query 487
SELECT greatest(cast(1 as smallint), cast(2 as decimal(10, 0))) FROM t
-- !query 487 schema
struct<greatest(CAST(CAST(1 AS SMALLINT) AS DECIMAL(10,0)), CAST(CAST(2 AS DECIMAL(10,0)) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 487 output
2


-- !query 488
SELECT greatest(cast(1 as smallint), cast(2 as string)) FROM t
-- !query 488 schema
struct<>
-- !query 488 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS SMALLINT), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got GREATEST(smallint, string).; line 1 pos 7


-- !query 489
SELECT greatest(cast(1 as smallint), cast('2' as binary)) FROM t
-- !query 489 schema
struct<>
-- !query 489 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS SMALLINT), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got GREATEST(smallint, binary).; line 1 pos 7


-- !query 490
SELECT greatest(cast(1 as smallint), cast(2 as boolean)) FROM t
-- !query 490 schema
struct<>
-- !query 490 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS SMALLINT), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got GREATEST(smallint, boolean).; line 1 pos 7


-- !query 491
SELECT greatest(cast(1 as smallint), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 491 schema
struct<>
-- !query 491 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS SMALLINT), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got GREATEST(smallint, timestamp).; line 1 pos 7


-- !query 492
SELECT greatest(cast(1 as smallint), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 492 schema
struct<>
-- !query 492 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS SMALLINT), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got GREATEST(smallint, date).; line 1 pos 7


-- !query 493
SELECT greatest(cast(1 as int), cast(2 as tinyint)) FROM t
-- !query 493 schema
struct<greatest(CAST(CAST(1 AS INT) AS INT), CAST(CAST(2 AS TINYINT) AS INT)):int>
-- !query 493 output
2


-- !query 494
SELECT greatest(cast(1 as int), cast(2 as smallint)) FROM t
-- !query 494 schema
struct<greatest(CAST(CAST(1 AS INT) AS INT), CAST(CAST(2 AS SMALLINT) AS INT)):int>
-- !query 494 output
2


-- !query 495
SELECT greatest(cast(1 as int), cast(2 as int)) FROM t
-- !query 495 schema
struct<greatest(CAST(1 AS INT), CAST(2 AS INT)):int>
-- !query 495 output
2


-- !query 496
SELECT greatest(cast(1 as int), cast(2 as bigint)) FROM t
-- !query 496 schema
struct<greatest(CAST(CAST(1 AS INT) AS BIGINT), CAST(CAST(2 AS BIGINT) AS BIGINT)):bigint>
-- !query 496 output
2


-- !query 497
SELECT greatest(cast(1 as int), cast(2 as float)) FROM t
-- !query 497 schema
struct<greatest(CAST(CAST(1 AS INT) AS FLOAT), CAST(CAST(2 AS FLOAT) AS FLOAT)):float>
-- !query 497 output
2.0


-- !query 498
SELECT greatest(cast(1 as int), cast(2 as double)) FROM t
-- !query 498 schema
struct<greatest(CAST(CAST(1 AS INT) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 498 output
2.0


-- !query 499
SELECT greatest(cast(1 as int), cast(2 as decimal(10, 0))) FROM t
-- !query 499 schema
struct<greatest(CAST(CAST(1 AS INT) AS DECIMAL(10,0)), CAST(CAST(2 AS DECIMAL(10,0)) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 499 output
2


-- !query 500
SELECT greatest(cast(1 as int), cast(2 as string)) FROM t
-- !query 500 schema
struct<>
-- !query 500 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS INT), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got GREATEST(int, string).; line 1 pos 7


-- !query 501
SELECT greatest(cast(1 as int), cast('2' as binary)) FROM t
-- !query 501 schema
struct<>
-- !query 501 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS INT), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got GREATEST(int, binary).; line 1 pos 7


-- !query 502
SELECT greatest(cast(1 as int), cast(2 as boolean)) FROM t
-- !query 502 schema
struct<>
-- !query 502 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS INT), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got GREATEST(int, boolean).; line 1 pos 7


-- !query 503
SELECT greatest(cast(1 as int), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 503 schema
struct<>
-- !query 503 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS INT), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got GREATEST(int, timestamp).; line 1 pos 7


-- !query 504
SELECT greatest(cast(1 as int), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 504 schema
struct<>
-- !query 504 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS INT), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got GREATEST(int, date).; line 1 pos 7


-- !query 505
SELECT greatest(cast(1 as bigint), cast(2 as tinyint)) FROM t
-- !query 505 schema
struct<greatest(CAST(CAST(1 AS BIGINT) AS BIGINT), CAST(CAST(2 AS TINYINT) AS BIGINT)):bigint>
-- !query 505 output
2


-- !query 506
SELECT greatest(cast(1 as bigint), cast(2 as smallint)) FROM t
-- !query 506 schema
struct<greatest(CAST(CAST(1 AS BIGINT) AS BIGINT), CAST(CAST(2 AS SMALLINT) AS BIGINT)):bigint>
-- !query 506 output
2


-- !query 507
SELECT greatest(cast(1 as bigint), cast(2 as int)) FROM t
-- !query 507 schema
struct<greatest(CAST(CAST(1 AS BIGINT) AS BIGINT), CAST(CAST(2 AS INT) AS BIGINT)):bigint>
-- !query 507 output
2


-- !query 508
SELECT greatest(cast(1 as bigint), cast(2 as bigint)) FROM t
-- !query 508 schema
struct<greatest(CAST(1 AS BIGINT), CAST(2 AS BIGINT)):bigint>
-- !query 508 output
2


-- !query 509
SELECT greatest(cast(1 as bigint), cast(2 as float)) FROM t
-- !query 509 schema
struct<greatest(CAST(CAST(1 AS BIGINT) AS FLOAT), CAST(CAST(2 AS FLOAT) AS FLOAT)):float>
-- !query 509 output
2.0


-- !query 510
SELECT greatest(cast(1 as bigint), cast(2 as double)) FROM t
-- !query 510 schema
struct<greatest(CAST(CAST(1 AS BIGINT) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 510 output
2.0


-- !query 511
SELECT greatest(cast(1 as bigint), cast(2 as decimal(10, 0))) FROM t
-- !query 511 schema
struct<greatest(CAST(CAST(1 AS BIGINT) AS DECIMAL(20,0)), CAST(CAST(2 AS DECIMAL(10,0)) AS DECIMAL(20,0))):decimal(20,0)>
-- !query 511 output
2


-- !query 512
SELECT greatest(cast(1 as bigint), cast(2 as string)) FROM t
-- !query 512 schema
struct<>
-- !query 512 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS BIGINT), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got GREATEST(bigint, string).; line 1 pos 7


-- !query 513
SELECT greatest(cast(1 as bigint), cast('2' as binary)) FROM t
-- !query 513 schema
struct<>
-- !query 513 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS BIGINT), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got GREATEST(bigint, binary).; line 1 pos 7


-- !query 514
SELECT greatest(cast(1 as bigint), cast(2 as boolean)) FROM t
-- !query 514 schema
struct<>
-- !query 514 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS BIGINT), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got GREATEST(bigint, boolean).; line 1 pos 7


-- !query 515
SELECT greatest(cast(1 as bigint), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 515 schema
struct<>
-- !query 515 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS BIGINT), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got GREATEST(bigint, timestamp).; line 1 pos 7


-- !query 516
SELECT greatest(cast(1 as bigint), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 516 schema
struct<>
-- !query 516 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS BIGINT), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got GREATEST(bigint, date).; line 1 pos 7


-- !query 517
SELECT greatest(cast(1 as float), cast(2 as tinyint)) FROM t
-- !query 517 schema
struct<greatest(CAST(CAST(1 AS FLOAT) AS FLOAT), CAST(CAST(2 AS TINYINT) AS FLOAT)):float>
-- !query 517 output
2.0


-- !query 518
SELECT greatest(cast(1 as float), cast(2 as smallint)) FROM t
-- !query 518 schema
struct<greatest(CAST(CAST(1 AS FLOAT) AS FLOAT), CAST(CAST(2 AS SMALLINT) AS FLOAT)):float>
-- !query 518 output
2.0


-- !query 519
SELECT greatest(cast(1 as float), cast(2 as int)) FROM t
-- !query 519 schema
struct<greatest(CAST(CAST(1 AS FLOAT) AS FLOAT), CAST(CAST(2 AS INT) AS FLOAT)):float>
-- !query 519 output
2.0


-- !query 520
SELECT greatest(cast(1 as float), cast(2 as bigint)) FROM t
-- !query 520 schema
struct<greatest(CAST(CAST(1 AS FLOAT) AS FLOAT), CAST(CAST(2 AS BIGINT) AS FLOAT)):float>
-- !query 520 output
2.0


-- !query 521
SELECT greatest(cast(1 as float), cast(2 as float)) FROM t
-- !query 521 schema
struct<greatest(CAST(1 AS FLOAT), CAST(2 AS FLOAT)):float>
-- !query 521 output
2.0


-- !query 522
SELECT greatest(cast(1 as float), cast(2 as double)) FROM t
-- !query 522 schema
struct<greatest(CAST(CAST(1 AS FLOAT) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 522 output
2.0


-- !query 523
SELECT greatest(cast(1 as float), cast(2 as decimal(10, 0))) FROM t
-- !query 523 schema
struct<greatest(CAST(CAST(1 AS FLOAT) AS DOUBLE), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE)):double>
-- !query 523 output
2.0


-- !query 524
SELECT greatest(cast(1 as float), cast(2 as string)) FROM t
-- !query 524 schema
struct<>
-- !query 524 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS FLOAT), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got GREATEST(float, string).; line 1 pos 7


-- !query 525
SELECT greatest(cast(1 as float), cast('2' as binary)) FROM t
-- !query 525 schema
struct<>
-- !query 525 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS FLOAT), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got GREATEST(float, binary).; line 1 pos 7


-- !query 526
SELECT greatest(cast(1 as float), cast(2 as boolean)) FROM t
-- !query 526 schema
struct<>
-- !query 526 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS FLOAT), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got GREATEST(float, boolean).; line 1 pos 7


-- !query 527
SELECT greatest(cast(1 as float), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 527 schema
struct<>
-- !query 527 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS FLOAT), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got GREATEST(float, timestamp).; line 1 pos 7


-- !query 528
SELECT greatest(cast(1 as float), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 528 schema
struct<>
-- !query 528 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS FLOAT), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got GREATEST(float, date).; line 1 pos 7


-- !query 529
SELECT greatest(cast(1 as double), cast(2 as tinyint)) FROM t
-- !query 529 schema
struct<greatest(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS TINYINT) AS DOUBLE)):double>
-- !query 529 output
2.0


-- !query 530
SELECT greatest(cast(1 as double), cast(2 as smallint)) FROM t
-- !query 530 schema
struct<greatest(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS SMALLINT) AS DOUBLE)):double>
-- !query 530 output
2.0


-- !query 531
SELECT greatest(cast(1 as double), cast(2 as int)) FROM t
-- !query 531 schema
struct<greatest(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS INT) AS DOUBLE)):double>
-- !query 531 output
2.0


-- !query 532
SELECT greatest(cast(1 as double), cast(2 as bigint)) FROM t
-- !query 532 schema
struct<greatest(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS BIGINT) AS DOUBLE)):double>
-- !query 532 output
2.0


-- !query 533
SELECT greatest(cast(1 as double), cast(2 as float)) FROM t
-- !query 533 schema
struct<greatest(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS FLOAT) AS DOUBLE)):double>
-- !query 533 output
2.0


-- !query 534
SELECT greatest(cast(1 as double), cast(2 as double)) FROM t
-- !query 534 schema
struct<greatest(CAST(1 AS DOUBLE), CAST(2 AS DOUBLE)):double>
-- !query 534 output
2.0


-- !query 535
SELECT greatest(cast(1 as double), cast(2 as decimal(10, 0))) FROM t
-- !query 535 schema
struct<greatest(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE)):double>
-- !query 535 output
2.0


-- !query 536
SELECT greatest(cast(1 as double), cast(2 as string)) FROM t
-- !query 536 schema
struct<>
-- !query 536 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS DOUBLE), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got GREATEST(double, string).; line 1 pos 7


-- !query 537
SELECT greatest(cast(1 as double), cast('2' as binary)) FROM t
-- !query 537 schema
struct<>
-- !query 537 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS DOUBLE), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got GREATEST(double, binary).; line 1 pos 7


-- !query 538
SELECT greatest(cast(1 as double), cast(2 as boolean)) FROM t
-- !query 538 schema
struct<>
-- !query 538 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS DOUBLE), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got GREATEST(double, boolean).; line 1 pos 7


-- !query 539
SELECT greatest(cast(1 as double), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 539 schema
struct<>
-- !query 539 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS DOUBLE), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got GREATEST(double, timestamp).; line 1 pos 7


-- !query 540
SELECT greatest(cast(1 as double), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 540 schema
struct<>
-- !query 540 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS DOUBLE), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got GREATEST(double, date).; line 1 pos 7


-- !query 541
SELECT greatest(cast(1 as decimal(10, 0)), cast(2 as tinyint)) FROM t
-- !query 541 schema
struct<greatest(CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(10,0)), CAST(CAST(2 AS TINYINT) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 541 output
2


-- !query 542
SELECT greatest(cast(1 as decimal(10, 0)), cast(2 as smallint)) FROM t
-- !query 542 schema
struct<greatest(CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(10,0)), CAST(CAST(2 AS SMALLINT) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 542 output
2


-- !query 543
SELECT greatest(cast(1 as decimal(10, 0)), cast(2 as int)) FROM t
-- !query 543 schema
struct<greatest(CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(10,0)), CAST(CAST(2 AS INT) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 543 output
2


-- !query 544
SELECT greatest(cast(1 as decimal(10, 0)), cast(2 as bigint)) FROM t
-- !query 544 schema
struct<greatest(CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(20,0)), CAST(CAST(2 AS BIGINT) AS DECIMAL(20,0))):decimal(20,0)>
-- !query 544 output
2


-- !query 545
SELECT greatest(cast(1 as decimal(10, 0)), cast(2 as float)) FROM t
-- !query 545 schema
struct<greatest(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST(CAST(2 AS FLOAT) AS DOUBLE)):double>
-- !query 545 output
2.0


-- !query 546
SELECT greatest(cast(1 as decimal(10, 0)), cast(2 as double)) FROM t
-- !query 546 schema
struct<greatest(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 546 output
2.0


-- !query 547
SELECT greatest(cast(1 as decimal(10, 0)), cast(2 as decimal(10, 0))) FROM t
-- !query 547 schema
struct<greatest(CAST(1 AS DECIMAL(10,0)), CAST(2 AS DECIMAL(10,0))):decimal(10,0)>
-- !query 547 output
2


-- !query 548
SELECT greatest(cast(1 as decimal(10, 0)), cast(2 as string)) FROM t
-- !query 548 schema
struct<>
-- !query 548 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS DECIMAL(10,0)), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got GREATEST(decimal(10,0), string).; line 1 pos 7


-- !query 549
SELECT greatest(cast(1 as decimal(10, 0)), cast('2' as binary)) FROM t
-- !query 549 schema
struct<>
-- !query 549 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS DECIMAL(10,0)), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got GREATEST(decimal(10,0), binary).; line 1 pos 7


-- !query 550
SELECT greatest(cast(1 as decimal(10, 0)), cast(2 as boolean)) FROM t
-- !query 550 schema
struct<>
-- !query 550 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS DECIMAL(10,0)), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got GREATEST(decimal(10,0), boolean).; line 1 pos 7


-- !query 551
SELECT greatest(cast(1 as decimal(10, 0)), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 551 schema
struct<>
-- !query 551 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS DECIMAL(10,0)), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got GREATEST(decimal(10,0), timestamp).; line 1 pos 7


-- !query 552
SELECT greatest(cast(1 as decimal(10, 0)), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 552 schema
struct<>
-- !query 552 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS DECIMAL(10,0)), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got GREATEST(decimal(10,0), date).; line 1 pos 7


-- !query 553
SELECT greatest(cast(1 as string), cast(2 as tinyint)) FROM t
-- !query 553 schema
struct<>
-- !query 553 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS STRING), CAST(2 AS TINYINT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(string, tinyint).; line 1 pos 7


-- !query 554
SELECT greatest(cast(1 as string), cast(2 as smallint)) FROM t
-- !query 554 schema
struct<>
-- !query 554 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS STRING), CAST(2 AS SMALLINT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(string, smallint).; line 1 pos 7


-- !query 555
SELECT greatest(cast(1 as string), cast(2 as int)) FROM t
-- !query 555 schema
struct<>
-- !query 555 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS STRING), CAST(2 AS INT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(string, int).; line 1 pos 7


-- !query 556
SELECT greatest(cast(1 as string), cast(2 as bigint)) FROM t
-- !query 556 schema
struct<>
-- !query 556 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS STRING), CAST(2 AS BIGINT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(string, bigint).; line 1 pos 7


-- !query 557
SELECT greatest(cast(1 as string), cast(2 as float)) FROM t
-- !query 557 schema
struct<>
-- !query 557 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS STRING), CAST(2 AS FLOAT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(string, float).; line 1 pos 7


-- !query 558
SELECT greatest(cast(1 as string), cast(2 as double)) FROM t
-- !query 558 schema
struct<>
-- !query 558 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS STRING), CAST(2 AS DOUBLE))' due to data type mismatch: The expressions should all have the same type, got GREATEST(string, double).; line 1 pos 7


-- !query 559
SELECT greatest(cast(1 as string), cast(2 as decimal(10, 0))) FROM t
-- !query 559 schema
struct<>
-- !query 559 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS STRING), CAST(2 AS DECIMAL(10,0)))' due to data type mismatch: The expressions should all have the same type, got GREATEST(string, decimal(10,0)).; line 1 pos 7


-- !query 560
SELECT greatest(cast(1 as string), cast(2 as string)) FROM t
-- !query 560 schema
struct<greatest(CAST(1 AS STRING), CAST(2 AS STRING)):string>
-- !query 560 output
2


-- !query 561
SELECT greatest(cast(1 as string), cast('2' as binary)) FROM t
-- !query 561 schema
struct<>
-- !query 561 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS STRING), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got GREATEST(string, binary).; line 1 pos 7


-- !query 562
SELECT greatest(cast(1 as string), cast(2 as boolean)) FROM t
-- !query 562 schema
struct<>
-- !query 562 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS STRING), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got GREATEST(string, boolean).; line 1 pos 7


-- !query 563
SELECT greatest(cast(1 as string), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 563 schema
struct<>
-- !query 563 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS STRING), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got GREATEST(string, timestamp).; line 1 pos 7


-- !query 564
SELECT greatest(cast(1 as string), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 564 schema
struct<>
-- !query 564 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS STRING), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got GREATEST(string, date).; line 1 pos 7


-- !query 565
SELECT greatest(cast('1' as binary), cast(2 as tinyint)) FROM t
-- !query 565 schema
struct<>
-- !query 565 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('1' AS BINARY), CAST(2 AS TINYINT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(binary, tinyint).; line 1 pos 7


-- !query 566
SELECT greatest(cast('1' as binary), cast(2 as smallint)) FROM t
-- !query 566 schema
struct<>
-- !query 566 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('1' AS BINARY), CAST(2 AS SMALLINT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(binary, smallint).; line 1 pos 7


-- !query 567
SELECT greatest(cast('1' as binary), cast(2 as int)) FROM t
-- !query 567 schema
struct<>
-- !query 567 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('1' AS BINARY), CAST(2 AS INT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(binary, int).; line 1 pos 7


-- !query 568
SELECT greatest(cast('1' as binary), cast(2 as bigint)) FROM t
-- !query 568 schema
struct<>
-- !query 568 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('1' AS BINARY), CAST(2 AS BIGINT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(binary, bigint).; line 1 pos 7


-- !query 569
SELECT greatest(cast('1' as binary), cast(2 as float)) FROM t
-- !query 569 schema
struct<>
-- !query 569 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('1' AS BINARY), CAST(2 AS FLOAT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(binary, float).; line 1 pos 7


-- !query 570
SELECT greatest(cast('1' as binary), cast(2 as double)) FROM t
-- !query 570 schema
struct<>
-- !query 570 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('1' AS BINARY), CAST(2 AS DOUBLE))' due to data type mismatch: The expressions should all have the same type, got GREATEST(binary, double).; line 1 pos 7


-- !query 571
SELECT greatest(cast('1' as binary), cast(2 as decimal(10, 0))) FROM t
-- !query 571 schema
struct<>
-- !query 571 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('1' AS BINARY), CAST(2 AS DECIMAL(10,0)))' due to data type mismatch: The expressions should all have the same type, got GREATEST(binary, decimal(10,0)).; line 1 pos 7


-- !query 572
SELECT greatest(cast('1' as binary), cast(2 as string)) FROM t
-- !query 572 schema
struct<>
-- !query 572 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('1' AS BINARY), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got GREATEST(binary, string).; line 1 pos 7


-- !query 573
SELECT greatest(cast('1' as binary), cast('2' as binary)) FROM t
-- !query 573 schema
struct<greatest(CAST(1 AS BINARY), CAST(2 AS BINARY)):binary>
-- !query 573 output
2


-- !query 574
SELECT greatest(cast('1' as binary), cast(2 as boolean)) FROM t
-- !query 574 schema
struct<>
-- !query 574 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('1' AS BINARY), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got GREATEST(binary, boolean).; line 1 pos 7


-- !query 575
SELECT greatest(cast('1' as binary), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 575 schema
struct<>
-- !query 575 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('1' AS BINARY), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got GREATEST(binary, timestamp).; line 1 pos 7


-- !query 576
SELECT greatest(cast('1' as binary), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 576 schema
struct<>
-- !query 576 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('1' AS BINARY), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got GREATEST(binary, date).; line 1 pos 7


-- !query 577
SELECT greatest(cast(1 as boolean), cast(2 as tinyint)) FROM t
-- !query 577 schema
struct<>
-- !query 577 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS BOOLEAN), CAST(2 AS TINYINT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(boolean, tinyint).; line 1 pos 7


-- !query 578
SELECT greatest(cast(1 as boolean), cast(2 as smallint)) FROM t
-- !query 578 schema
struct<>
-- !query 578 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS BOOLEAN), CAST(2 AS SMALLINT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(boolean, smallint).; line 1 pos 7


-- !query 579
SELECT greatest(cast(1 as boolean), cast(2 as int)) FROM t
-- !query 579 schema
struct<>
-- !query 579 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS BOOLEAN), CAST(2 AS INT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(boolean, int).; line 1 pos 7


-- !query 580
SELECT greatest(cast(1 as boolean), cast(2 as bigint)) FROM t
-- !query 580 schema
struct<>
-- !query 580 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS BOOLEAN), CAST(2 AS BIGINT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(boolean, bigint).; line 1 pos 7


-- !query 581
SELECT greatest(cast(1 as boolean), cast(2 as float)) FROM t
-- !query 581 schema
struct<>
-- !query 581 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS BOOLEAN), CAST(2 AS FLOAT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(boolean, float).; line 1 pos 7


-- !query 582
SELECT greatest(cast(1 as boolean), cast(2 as double)) FROM t
-- !query 582 schema
struct<>
-- !query 582 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS BOOLEAN), CAST(2 AS DOUBLE))' due to data type mismatch: The expressions should all have the same type, got GREATEST(boolean, double).; line 1 pos 7


-- !query 583
SELECT greatest(cast(1 as boolean), cast(2 as decimal(10, 0))) FROM t
-- !query 583 schema
struct<>
-- !query 583 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS BOOLEAN), CAST(2 AS DECIMAL(10,0)))' due to data type mismatch: The expressions should all have the same type, got GREATEST(boolean, decimal(10,0)).; line 1 pos 7


-- !query 584
SELECT greatest(cast(1 as boolean), cast(2 as string)) FROM t
-- !query 584 schema
struct<>
-- !query 584 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS BOOLEAN), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got GREATEST(boolean, string).; line 1 pos 7


-- !query 585
SELECT greatest(cast(1 as boolean), cast('2' as binary)) FROM t
-- !query 585 schema
struct<>
-- !query 585 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS BOOLEAN), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got GREATEST(boolean, binary).; line 1 pos 7


-- !query 586
SELECT greatest(cast(1 as boolean), cast(2 as boolean)) FROM t
-- !query 586 schema
struct<greatest(CAST(1 AS BOOLEAN), CAST(2 AS BOOLEAN)):boolean>
-- !query 586 output
true


-- !query 587
SELECT greatest(cast(1 as boolean), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 587 schema
struct<>
-- !query 587 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS BOOLEAN), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got GREATEST(boolean, timestamp).; line 1 pos 7


-- !query 588
SELECT greatest(cast(1 as boolean), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 588 schema
struct<>
-- !query 588 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST(1 AS BOOLEAN), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got GREATEST(boolean, date).; line 1 pos 7


-- !query 589
SELECT greatest(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as tinyint)) FROM t
-- !query 589 schema
struct<>
-- !query 589 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS TINYINT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(timestamp, tinyint).; line 1 pos 7


-- !query 590
SELECT greatest(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as smallint)) FROM t
-- !query 590 schema
struct<>
-- !query 590 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS SMALLINT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(timestamp, smallint).; line 1 pos 7


-- !query 591
SELECT greatest(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as int)) FROM t
-- !query 591 schema
struct<>
-- !query 591 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS INT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(timestamp, int).; line 1 pos 7


-- !query 592
SELECT greatest(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as bigint)) FROM t
-- !query 592 schema
struct<>
-- !query 592 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS BIGINT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(timestamp, bigint).; line 1 pos 7


-- !query 593
SELECT greatest(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as float)) FROM t
-- !query 593 schema
struct<>
-- !query 593 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS FLOAT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(timestamp, float).; line 1 pos 7


-- !query 594
SELECT greatest(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as double)) FROM t
-- !query 594 schema
struct<>
-- !query 594 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS DOUBLE))' due to data type mismatch: The expressions should all have the same type, got GREATEST(timestamp, double).; line 1 pos 7


-- !query 595
SELECT greatest(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as decimal(10, 0))) FROM t
-- !query 595 schema
struct<>
-- !query 595 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS DECIMAL(10,0)))' due to data type mismatch: The expressions should all have the same type, got GREATEST(timestamp, decimal(10,0)).; line 1 pos 7


-- !query 596
SELECT greatest(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as string)) FROM t
-- !query 596 schema
struct<>
-- !query 596 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got GREATEST(timestamp, string).; line 1 pos 7


-- !query 597
SELECT greatest(cast('2017-12-11 09:30:00.0' as timestamp), cast('2' as binary)) FROM t
-- !query 597 schema
struct<>
-- !query 597 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got GREATEST(timestamp, binary).; line 1 pos 7


-- !query 598
SELECT greatest(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as boolean)) FROM t
-- !query 598 schema
struct<>
-- !query 598 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got GREATEST(timestamp, boolean).; line 1 pos 7


-- !query 599
SELECT greatest(cast('2017-12-11 09:30:00.0' as timestamp), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 599 schema
struct<greatest(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP), CAST(2017-12-12 09:30:00.0 AS TIMESTAMP)):timestamp>
-- !query 599 output
2017-12-12 09:30:00


-- !query 600
SELECT greatest(cast('2017-12-11 09:30:00.0' as timestamp), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 600 schema
struct<greatest(CAST(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) AS TIMESTAMP), CAST(CAST(2017-12-12 09:30:00 AS DATE) AS TIMESTAMP)):timestamp>
-- !query 600 output
2017-12-12 00:00:00


-- !query 601
SELECT greatest(cast('2017-12-11 09:30:00' as date), cast(2 as tinyint)) FROM t
-- !query 601 schema
struct<>
-- !query 601 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS TINYINT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(date, tinyint).; line 1 pos 7


-- !query 602
SELECT greatest(cast('2017-12-11 09:30:00' as date), cast(2 as smallint)) FROM t
-- !query 602 schema
struct<>
-- !query 602 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS SMALLINT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(date, smallint).; line 1 pos 7


-- !query 603
SELECT greatest(cast('2017-12-11 09:30:00' as date), cast(2 as int)) FROM t
-- !query 603 schema
struct<>
-- !query 603 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS INT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(date, int).; line 1 pos 7


-- !query 604
SELECT greatest(cast('2017-12-11 09:30:00' as date), cast(2 as bigint)) FROM t
-- !query 604 schema
struct<>
-- !query 604 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS BIGINT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(date, bigint).; line 1 pos 7


-- !query 605
SELECT greatest(cast('2017-12-11 09:30:00' as date), cast(2 as float)) FROM t
-- !query 605 schema
struct<>
-- !query 605 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS FLOAT))' due to data type mismatch: The expressions should all have the same type, got GREATEST(date, float).; line 1 pos 7


-- !query 606
SELECT greatest(cast('2017-12-11 09:30:00' as date), cast(2 as double)) FROM t
-- !query 606 schema
struct<>
-- !query 606 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS DOUBLE))' due to data type mismatch: The expressions should all have the same type, got GREATEST(date, double).; line 1 pos 7


-- !query 607
SELECT greatest(cast('2017-12-11 09:30:00' as date), cast(2 as decimal(10, 0))) FROM t
-- !query 607 schema
struct<>
-- !query 607 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS DECIMAL(10,0)))' due to data type mismatch: The expressions should all have the same type, got GREATEST(date, decimal(10,0)).; line 1 pos 7


-- !query 608
SELECT greatest(cast('2017-12-11 09:30:00' as date), cast(2 as string)) FROM t
-- !query 608 schema
struct<>
-- !query 608 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got GREATEST(date, string).; line 1 pos 7


-- !query 609
SELECT greatest(cast('2017-12-11 09:30:00' as date), cast('2' as binary)) FROM t
-- !query 609 schema
struct<>
-- !query 609 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00' AS DATE), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got GREATEST(date, binary).; line 1 pos 7


-- !query 610
SELECT greatest(cast('2017-12-11 09:30:00' as date), cast(2 as boolean)) FROM t
-- !query 610 schema
struct<>
-- !query 610 output
org.apache.spark.sql.AnalysisException
cannot resolve 'greatest(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got GREATEST(date, boolean).; line 1 pos 7


-- !query 611
SELECT greatest(cast('2017-12-11 09:30:00' as date), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 611 schema
struct<greatest(CAST(CAST(2017-12-11 09:30:00 AS DATE) AS TIMESTAMP), CAST(CAST(2017-12-12 09:30:00.0 AS TIMESTAMP) AS TIMESTAMP)):timestamp>
-- !query 611 output
2017-12-12 09:30:00


-- !query 612
SELECT greatest(cast('2017-12-11 09:30:00' as date), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 612 schema
struct<greatest(CAST(2017-12-11 09:30:00 AS DATE), CAST(2017-12-12 09:30:00 AS DATE)):date>
-- !query 612 output
2017-12-12


-- !query 613
SELECT least(cast(1 as tinyint), cast(2 as tinyint)) FROM t
-- !query 613 schema
struct<least(CAST(1 AS TINYINT), CAST(2 AS TINYINT)):tinyint>
-- !query 613 output
1


-- !query 614
SELECT least(cast(1 as tinyint), cast(2 as smallint)) FROM t
-- !query 614 schema
struct<least(CAST(CAST(1 AS TINYINT) AS SMALLINT), CAST(CAST(2 AS SMALLINT) AS SMALLINT)):smallint>
-- !query 614 output
1


-- !query 615
SELECT least(cast(1 as tinyint), cast(2 as int)) FROM t
-- !query 615 schema
struct<least(CAST(CAST(1 AS TINYINT) AS INT), CAST(CAST(2 AS INT) AS INT)):int>
-- !query 615 output
1


-- !query 616
SELECT least(cast(1 as tinyint), cast(2 as bigint)) FROM t
-- !query 616 schema
struct<least(CAST(CAST(1 AS TINYINT) AS BIGINT), CAST(CAST(2 AS BIGINT) AS BIGINT)):bigint>
-- !query 616 output
1


-- !query 617
SELECT least(cast(1 as tinyint), cast(2 as float)) FROM t
-- !query 617 schema
struct<least(CAST(CAST(1 AS TINYINT) AS FLOAT), CAST(CAST(2 AS FLOAT) AS FLOAT)):float>
-- !query 617 output
1.0


-- !query 618
SELECT least(cast(1 as tinyint), cast(2 as double)) FROM t
-- !query 618 schema
struct<least(CAST(CAST(1 AS TINYINT) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 618 output
1.0


-- !query 619
SELECT least(cast(1 as tinyint), cast(2 as decimal(10, 0))) FROM t
-- !query 619 schema
struct<least(CAST(CAST(1 AS TINYINT) AS DECIMAL(10,0)), CAST(CAST(2 AS DECIMAL(10,0)) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 619 output
1


-- !query 620
SELECT least(cast(1 as tinyint), cast(2 as string)) FROM t
-- !query 620 schema
struct<>
-- !query 620 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS TINYINT), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got LEAST(tinyint, string).; line 1 pos 7


-- !query 621
SELECT least(cast(1 as tinyint), cast('2' as binary)) FROM t
-- !query 621 schema
struct<>
-- !query 621 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS TINYINT), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got LEAST(tinyint, binary).; line 1 pos 7


-- !query 622
SELECT least(cast(1 as tinyint), cast(2 as boolean)) FROM t
-- !query 622 schema
struct<>
-- !query 622 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS TINYINT), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got LEAST(tinyint, boolean).; line 1 pos 7


-- !query 623
SELECT least(cast(1 as tinyint), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 623 schema
struct<>
-- !query 623 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS TINYINT), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got LEAST(tinyint, timestamp).; line 1 pos 7


-- !query 624
SELECT least(cast(1 as tinyint), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 624 schema
struct<>
-- !query 624 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS TINYINT), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got LEAST(tinyint, date).; line 1 pos 7


-- !query 625
SELECT least(cast(1 as smallint), cast(2 as tinyint)) FROM t
-- !query 625 schema
struct<least(CAST(CAST(1 AS SMALLINT) AS SMALLINT), CAST(CAST(2 AS TINYINT) AS SMALLINT)):smallint>
-- !query 625 output
1


-- !query 626
SELECT least(cast(1 as smallint), cast(2 as smallint)) FROM t
-- !query 626 schema
struct<least(CAST(1 AS SMALLINT), CAST(2 AS SMALLINT)):smallint>
-- !query 626 output
1


-- !query 627
SELECT least(cast(1 as smallint), cast(2 as int)) FROM t
-- !query 627 schema
struct<least(CAST(CAST(1 AS SMALLINT) AS INT), CAST(CAST(2 AS INT) AS INT)):int>
-- !query 627 output
1


-- !query 628
SELECT least(cast(1 as smallint), cast(2 as bigint)) FROM t
-- !query 628 schema
struct<least(CAST(CAST(1 AS SMALLINT) AS BIGINT), CAST(CAST(2 AS BIGINT) AS BIGINT)):bigint>
-- !query 628 output
1


-- !query 629
SELECT least(cast(1 as smallint), cast(2 as float)) FROM t
-- !query 629 schema
struct<least(CAST(CAST(1 AS SMALLINT) AS FLOAT), CAST(CAST(2 AS FLOAT) AS FLOAT)):float>
-- !query 629 output
1.0


-- !query 630
SELECT least(cast(1 as smallint), cast(2 as double)) FROM t
-- !query 630 schema
struct<least(CAST(CAST(1 AS SMALLINT) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 630 output
1.0


-- !query 631
SELECT least(cast(1 as smallint), cast(2 as decimal(10, 0))) FROM t
-- !query 631 schema
struct<least(CAST(CAST(1 AS SMALLINT) AS DECIMAL(10,0)), CAST(CAST(2 AS DECIMAL(10,0)) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 631 output
1


-- !query 632
SELECT least(cast(1 as smallint), cast(2 as string)) FROM t
-- !query 632 schema
struct<>
-- !query 632 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS SMALLINT), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got LEAST(smallint, string).; line 1 pos 7


-- !query 633
SELECT least(cast(1 as smallint), cast('2' as binary)) FROM t
-- !query 633 schema
struct<>
-- !query 633 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS SMALLINT), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got LEAST(smallint, binary).; line 1 pos 7


-- !query 634
SELECT least(cast(1 as smallint), cast(2 as boolean)) FROM t
-- !query 634 schema
struct<>
-- !query 634 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS SMALLINT), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got LEAST(smallint, boolean).; line 1 pos 7


-- !query 635
SELECT least(cast(1 as smallint), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 635 schema
struct<>
-- !query 635 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS SMALLINT), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got LEAST(smallint, timestamp).; line 1 pos 7


-- !query 636
SELECT least(cast(1 as smallint), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 636 schema
struct<>
-- !query 636 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS SMALLINT), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got LEAST(smallint, date).; line 1 pos 7


-- !query 637
SELECT least(cast(1 as int), cast(2 as tinyint)) FROM t
-- !query 637 schema
struct<least(CAST(CAST(1 AS INT) AS INT), CAST(CAST(2 AS TINYINT) AS INT)):int>
-- !query 637 output
1


-- !query 638
SELECT least(cast(1 as int), cast(2 as smallint)) FROM t
-- !query 638 schema
struct<least(CAST(CAST(1 AS INT) AS INT), CAST(CAST(2 AS SMALLINT) AS INT)):int>
-- !query 638 output
1


-- !query 639
SELECT least(cast(1 as int), cast(2 as int)) FROM t
-- !query 639 schema
struct<least(CAST(1 AS INT), CAST(2 AS INT)):int>
-- !query 639 output
1


-- !query 640
SELECT least(cast(1 as int), cast(2 as bigint)) FROM t
-- !query 640 schema
struct<least(CAST(CAST(1 AS INT) AS BIGINT), CAST(CAST(2 AS BIGINT) AS BIGINT)):bigint>
-- !query 640 output
1


-- !query 641
SELECT least(cast(1 as int), cast(2 as float)) FROM t
-- !query 641 schema
struct<least(CAST(CAST(1 AS INT) AS FLOAT), CAST(CAST(2 AS FLOAT) AS FLOAT)):float>
-- !query 641 output
1.0


-- !query 642
SELECT least(cast(1 as int), cast(2 as double)) FROM t
-- !query 642 schema
struct<least(CAST(CAST(1 AS INT) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 642 output
1.0


-- !query 643
SELECT least(cast(1 as int), cast(2 as decimal(10, 0))) FROM t
-- !query 643 schema
struct<least(CAST(CAST(1 AS INT) AS DECIMAL(10,0)), CAST(CAST(2 AS DECIMAL(10,0)) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 643 output
1


-- !query 644
SELECT least(cast(1 as int), cast(2 as string)) FROM t
-- !query 644 schema
struct<>
-- !query 644 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS INT), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got LEAST(int, string).; line 1 pos 7


-- !query 645
SELECT least(cast(1 as int), cast('2' as binary)) FROM t
-- !query 645 schema
struct<>
-- !query 645 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS INT), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got LEAST(int, binary).; line 1 pos 7


-- !query 646
SELECT least(cast(1 as int), cast(2 as boolean)) FROM t
-- !query 646 schema
struct<>
-- !query 646 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS INT), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got LEAST(int, boolean).; line 1 pos 7


-- !query 647
SELECT least(cast(1 as int), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 647 schema
struct<>
-- !query 647 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS INT), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got LEAST(int, timestamp).; line 1 pos 7


-- !query 648
SELECT least(cast(1 as int), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 648 schema
struct<>
-- !query 648 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS INT), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got LEAST(int, date).; line 1 pos 7


-- !query 649
SELECT least(cast(1 as bigint), cast(2 as tinyint)) FROM t
-- !query 649 schema
struct<least(CAST(CAST(1 AS BIGINT) AS BIGINT), CAST(CAST(2 AS TINYINT) AS BIGINT)):bigint>
-- !query 649 output
1


-- !query 650
SELECT least(cast(1 as bigint), cast(2 as smallint)) FROM t
-- !query 650 schema
struct<least(CAST(CAST(1 AS BIGINT) AS BIGINT), CAST(CAST(2 AS SMALLINT) AS BIGINT)):bigint>
-- !query 650 output
1


-- !query 651
SELECT least(cast(1 as bigint), cast(2 as int)) FROM t
-- !query 651 schema
struct<least(CAST(CAST(1 AS BIGINT) AS BIGINT), CAST(CAST(2 AS INT) AS BIGINT)):bigint>
-- !query 651 output
1


-- !query 652
SELECT least(cast(1 as bigint), cast(2 as bigint)) FROM t
-- !query 652 schema
struct<least(CAST(1 AS BIGINT), CAST(2 AS BIGINT)):bigint>
-- !query 652 output
1


-- !query 653
SELECT least(cast(1 as bigint), cast(2 as float)) FROM t
-- !query 653 schema
struct<least(CAST(CAST(1 AS BIGINT) AS FLOAT), CAST(CAST(2 AS FLOAT) AS FLOAT)):float>
-- !query 653 output
1.0


-- !query 654
SELECT least(cast(1 as bigint), cast(2 as double)) FROM t
-- !query 654 schema
struct<least(CAST(CAST(1 AS BIGINT) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 654 output
1.0


-- !query 655
SELECT least(cast(1 as bigint), cast(2 as decimal(10, 0))) FROM t
-- !query 655 schema
struct<least(CAST(CAST(1 AS BIGINT) AS DECIMAL(20,0)), CAST(CAST(2 AS DECIMAL(10,0)) AS DECIMAL(20,0))):decimal(20,0)>
-- !query 655 output
1


-- !query 656
SELECT least(cast(1 as bigint), cast(2 as string)) FROM t
-- !query 656 schema
struct<>
-- !query 656 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS BIGINT), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got LEAST(bigint, string).; line 1 pos 7


-- !query 657
SELECT least(cast(1 as bigint), cast('2' as binary)) FROM t
-- !query 657 schema
struct<>
-- !query 657 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS BIGINT), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got LEAST(bigint, binary).; line 1 pos 7


-- !query 658
SELECT least(cast(1 as bigint), cast(2 as boolean)) FROM t
-- !query 658 schema
struct<>
-- !query 658 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS BIGINT), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got LEAST(bigint, boolean).; line 1 pos 7


-- !query 659
SELECT least(cast(1 as bigint), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 659 schema
struct<>
-- !query 659 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS BIGINT), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got LEAST(bigint, timestamp).; line 1 pos 7


-- !query 660
SELECT least(cast(1 as bigint), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 660 schema
struct<>
-- !query 660 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS BIGINT), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got LEAST(bigint, date).; line 1 pos 7


-- !query 661
SELECT least(cast(1 as float), cast(2 as tinyint)) FROM t
-- !query 661 schema
struct<least(CAST(CAST(1 AS FLOAT) AS FLOAT), CAST(CAST(2 AS TINYINT) AS FLOAT)):float>
-- !query 661 output
1.0


-- !query 662
SELECT least(cast(1 as float), cast(2 as smallint)) FROM t
-- !query 662 schema
struct<least(CAST(CAST(1 AS FLOAT) AS FLOAT), CAST(CAST(2 AS SMALLINT) AS FLOAT)):float>
-- !query 662 output
1.0


-- !query 663
SELECT least(cast(1 as float), cast(2 as int)) FROM t
-- !query 663 schema
struct<least(CAST(CAST(1 AS FLOAT) AS FLOAT), CAST(CAST(2 AS INT) AS FLOAT)):float>
-- !query 663 output
1.0


-- !query 664
SELECT least(cast(1 as float), cast(2 as bigint)) FROM t
-- !query 664 schema
struct<least(CAST(CAST(1 AS FLOAT) AS FLOAT), CAST(CAST(2 AS BIGINT) AS FLOAT)):float>
-- !query 664 output
1.0


-- !query 665
SELECT least(cast(1 as float), cast(2 as float)) FROM t
-- !query 665 schema
struct<least(CAST(1 AS FLOAT), CAST(2 AS FLOAT)):float>
-- !query 665 output
1.0


-- !query 666
SELECT least(cast(1 as float), cast(2 as double)) FROM t
-- !query 666 schema
struct<least(CAST(CAST(1 AS FLOAT) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 666 output
1.0


-- !query 667
SELECT least(cast(1 as float), cast(2 as decimal(10, 0))) FROM t
-- !query 667 schema
struct<least(CAST(CAST(1 AS FLOAT) AS DOUBLE), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE)):double>
-- !query 667 output
1.0


-- !query 668
SELECT least(cast(1 as float), cast(2 as string)) FROM t
-- !query 668 schema
struct<>
-- !query 668 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS FLOAT), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got LEAST(float, string).; line 1 pos 7


-- !query 669
SELECT least(cast(1 as float), cast('2' as binary)) FROM t
-- !query 669 schema
struct<>
-- !query 669 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS FLOAT), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got LEAST(float, binary).; line 1 pos 7


-- !query 670
SELECT least(cast(1 as float), cast(2 as boolean)) FROM t
-- !query 670 schema
struct<>
-- !query 670 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS FLOAT), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got LEAST(float, boolean).; line 1 pos 7


-- !query 671
SELECT least(cast(1 as float), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 671 schema
struct<>
-- !query 671 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS FLOAT), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got LEAST(float, timestamp).; line 1 pos 7


-- !query 672
SELECT least(cast(1 as float), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 672 schema
struct<>
-- !query 672 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS FLOAT), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got LEAST(float, date).; line 1 pos 7


-- !query 673
SELECT least(cast(1 as double), cast(2 as tinyint)) FROM t
-- !query 673 schema
struct<least(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS TINYINT) AS DOUBLE)):double>
-- !query 673 output
1.0


-- !query 674
SELECT least(cast(1 as double), cast(2 as smallint)) FROM t
-- !query 674 schema
struct<least(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS SMALLINT) AS DOUBLE)):double>
-- !query 674 output
1.0


-- !query 675
SELECT least(cast(1 as double), cast(2 as int)) FROM t
-- !query 675 schema
struct<least(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS INT) AS DOUBLE)):double>
-- !query 675 output
1.0


-- !query 676
SELECT least(cast(1 as double), cast(2 as bigint)) FROM t
-- !query 676 schema
struct<least(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS BIGINT) AS DOUBLE)):double>
-- !query 676 output
1.0


-- !query 677
SELECT least(cast(1 as double), cast(2 as float)) FROM t
-- !query 677 schema
struct<least(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS FLOAT) AS DOUBLE)):double>
-- !query 677 output
1.0


-- !query 678
SELECT least(cast(1 as double), cast(2 as double)) FROM t
-- !query 678 schema
struct<least(CAST(1 AS DOUBLE), CAST(2 AS DOUBLE)):double>
-- !query 678 output
1.0


-- !query 679
SELECT least(cast(1 as double), cast(2 as decimal(10, 0))) FROM t
-- !query 679 schema
struct<least(CAST(CAST(1 AS DOUBLE) AS DOUBLE), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE)):double>
-- !query 679 output
1.0


-- !query 680
SELECT least(cast(1 as double), cast(2 as string)) FROM t
-- !query 680 schema
struct<>
-- !query 680 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS DOUBLE), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got LEAST(double, string).; line 1 pos 7


-- !query 681
SELECT least(cast(1 as double), cast('2' as binary)) FROM t
-- !query 681 schema
struct<>
-- !query 681 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS DOUBLE), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got LEAST(double, binary).; line 1 pos 7


-- !query 682
SELECT least(cast(1 as double), cast(2 as boolean)) FROM t
-- !query 682 schema
struct<>
-- !query 682 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS DOUBLE), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got LEAST(double, boolean).; line 1 pos 7


-- !query 683
SELECT least(cast(1 as double), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 683 schema
struct<>
-- !query 683 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS DOUBLE), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got LEAST(double, timestamp).; line 1 pos 7


-- !query 684
SELECT least(cast(1 as double), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 684 schema
struct<>
-- !query 684 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS DOUBLE), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got LEAST(double, date).; line 1 pos 7


-- !query 685
SELECT least(cast(1 as decimal(10, 0)), cast(2 as tinyint)) FROM t
-- !query 685 schema
struct<least(CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(10,0)), CAST(CAST(2 AS TINYINT) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 685 output
1


-- !query 686
SELECT least(cast(1 as decimal(10, 0)), cast(2 as smallint)) FROM t
-- !query 686 schema
struct<least(CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(10,0)), CAST(CAST(2 AS SMALLINT) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 686 output
1


-- !query 687
SELECT least(cast(1 as decimal(10, 0)), cast(2 as int)) FROM t
-- !query 687 schema
struct<least(CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(10,0)), CAST(CAST(2 AS INT) AS DECIMAL(10,0))):decimal(10,0)>
-- !query 687 output
1


-- !query 688
SELECT least(cast(1 as decimal(10, 0)), cast(2 as bigint)) FROM t
-- !query 688 schema
struct<least(CAST(CAST(1 AS DECIMAL(10,0)) AS DECIMAL(20,0)), CAST(CAST(2 AS BIGINT) AS DECIMAL(20,0))):decimal(20,0)>
-- !query 688 output
1


-- !query 689
SELECT least(cast(1 as decimal(10, 0)), cast(2 as float)) FROM t
-- !query 689 schema
struct<least(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST(CAST(2 AS FLOAT) AS DOUBLE)):double>
-- !query 689 output
1.0


-- !query 690
SELECT least(cast(1 as decimal(10, 0)), cast(2 as double)) FROM t
-- !query 690 schema
struct<least(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST(CAST(2 AS DOUBLE) AS DOUBLE)):double>
-- !query 690 output
1.0


-- !query 691
SELECT least(cast(1 as decimal(10, 0)), cast(2 as decimal(10, 0))) FROM t
-- !query 691 schema
struct<least(CAST(1 AS DECIMAL(10,0)), CAST(2 AS DECIMAL(10,0))):decimal(10,0)>
-- !query 691 output
1


-- !query 692
SELECT least(cast(1 as decimal(10, 0)), cast(2 as string)) FROM t
-- !query 692 schema
struct<>
-- !query 692 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS DECIMAL(10,0)), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got LEAST(decimal(10,0), string).; line 1 pos 7


-- !query 693
SELECT least(cast(1 as decimal(10, 0)), cast('2' as binary)) FROM t
-- !query 693 schema
struct<>
-- !query 693 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS DECIMAL(10,0)), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got LEAST(decimal(10,0), binary).; line 1 pos 7


-- !query 694
SELECT least(cast(1 as decimal(10, 0)), cast(2 as boolean)) FROM t
-- !query 694 schema
struct<>
-- !query 694 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS DECIMAL(10,0)), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got LEAST(decimal(10,0), boolean).; line 1 pos 7


-- !query 695
SELECT least(cast(1 as decimal(10, 0)), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 695 schema
struct<>
-- !query 695 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS DECIMAL(10,0)), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got LEAST(decimal(10,0), timestamp).; line 1 pos 7


-- !query 696
SELECT least(cast(1 as decimal(10, 0)), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 696 schema
struct<>
-- !query 696 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS DECIMAL(10,0)), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got LEAST(decimal(10,0), date).; line 1 pos 7


-- !query 697
SELECT least(cast(1 as string), cast(2 as tinyint)) FROM t
-- !query 697 schema
struct<>
-- !query 697 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS STRING), CAST(2 AS TINYINT))' due to data type mismatch: The expressions should all have the same type, got LEAST(string, tinyint).; line 1 pos 7


-- !query 698
SELECT least(cast(1 as string), cast(2 as smallint)) FROM t
-- !query 698 schema
struct<>
-- !query 698 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS STRING), CAST(2 AS SMALLINT))' due to data type mismatch: The expressions should all have the same type, got LEAST(string, smallint).; line 1 pos 7


-- !query 699
SELECT least(cast(1 as string), cast(2 as int)) FROM t
-- !query 699 schema
struct<>
-- !query 699 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS STRING), CAST(2 AS INT))' due to data type mismatch: The expressions should all have the same type, got LEAST(string, int).; line 1 pos 7


-- !query 700
SELECT least(cast(1 as string), cast(2 as bigint)) FROM t
-- !query 700 schema
struct<>
-- !query 700 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS STRING), CAST(2 AS BIGINT))' due to data type mismatch: The expressions should all have the same type, got LEAST(string, bigint).; line 1 pos 7


-- !query 701
SELECT least(cast(1 as string), cast(2 as float)) FROM t
-- !query 701 schema
struct<>
-- !query 701 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS STRING), CAST(2 AS FLOAT))' due to data type mismatch: The expressions should all have the same type, got LEAST(string, float).; line 1 pos 7


-- !query 702
SELECT least(cast(1 as string), cast(2 as double)) FROM t
-- !query 702 schema
struct<>
-- !query 702 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS STRING), CAST(2 AS DOUBLE))' due to data type mismatch: The expressions should all have the same type, got LEAST(string, double).; line 1 pos 7


-- !query 703
SELECT least(cast(1 as string), cast(2 as decimal(10, 0))) FROM t
-- !query 703 schema
struct<>
-- !query 703 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS STRING), CAST(2 AS DECIMAL(10,0)))' due to data type mismatch: The expressions should all have the same type, got LEAST(string, decimal(10,0)).; line 1 pos 7


-- !query 704
SELECT least(cast(1 as string), cast(2 as string)) FROM t
-- !query 704 schema
struct<least(CAST(1 AS STRING), CAST(2 AS STRING)):string>
-- !query 704 output
1


-- !query 705
SELECT least(cast(1 as string), cast('2' as binary)) FROM t
-- !query 705 schema
struct<>
-- !query 705 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS STRING), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got LEAST(string, binary).; line 1 pos 7


-- !query 706
SELECT least(cast(1 as string), cast(2 as boolean)) FROM t
-- !query 706 schema
struct<>
-- !query 706 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS STRING), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got LEAST(string, boolean).; line 1 pos 7


-- !query 707
SELECT least(cast(1 as string), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 707 schema
struct<>
-- !query 707 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS STRING), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got LEAST(string, timestamp).; line 1 pos 7


-- !query 708
SELECT least(cast(1 as string), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 708 schema
struct<>
-- !query 708 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS STRING), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got LEAST(string, date).; line 1 pos 7


-- !query 709
SELECT least(cast('1' as binary), cast(2 as tinyint)) FROM t
-- !query 709 schema
struct<>
-- !query 709 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('1' AS BINARY), CAST(2 AS TINYINT))' due to data type mismatch: The expressions should all have the same type, got LEAST(binary, tinyint).; line 1 pos 7


-- !query 710
SELECT least(cast('1' as binary), cast(2 as smallint)) FROM t
-- !query 710 schema
struct<>
-- !query 710 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('1' AS BINARY), CAST(2 AS SMALLINT))' due to data type mismatch: The expressions should all have the same type, got LEAST(binary, smallint).; line 1 pos 7


-- !query 711
SELECT least(cast('1' as binary), cast(2 as int)) FROM t
-- !query 711 schema
struct<>
-- !query 711 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('1' AS BINARY), CAST(2 AS INT))' due to data type mismatch: The expressions should all have the same type, got LEAST(binary, int).; line 1 pos 7


-- !query 712
SELECT least(cast('1' as binary), cast(2 as bigint)) FROM t
-- !query 712 schema
struct<>
-- !query 712 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('1' AS BINARY), CAST(2 AS BIGINT))' due to data type mismatch: The expressions should all have the same type, got LEAST(binary, bigint).; line 1 pos 7


-- !query 713
SELECT least(cast('1' as binary), cast(2 as float)) FROM t
-- !query 713 schema
struct<>
-- !query 713 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('1' AS BINARY), CAST(2 AS FLOAT))' due to data type mismatch: The expressions should all have the same type, got LEAST(binary, float).; line 1 pos 7


-- !query 714
SELECT least(cast('1' as binary), cast(2 as double)) FROM t
-- !query 714 schema
struct<>
-- !query 714 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('1' AS BINARY), CAST(2 AS DOUBLE))' due to data type mismatch: The expressions should all have the same type, got LEAST(binary, double).; line 1 pos 7


-- !query 715
SELECT least(cast('1' as binary), cast(2 as decimal(10, 0))) FROM t
-- !query 715 schema
struct<>
-- !query 715 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('1' AS BINARY), CAST(2 AS DECIMAL(10,0)))' due to data type mismatch: The expressions should all have the same type, got LEAST(binary, decimal(10,0)).; line 1 pos 7


-- !query 716
SELECT least(cast('1' as binary), cast(2 as string)) FROM t
-- !query 716 schema
struct<>
-- !query 716 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('1' AS BINARY), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got LEAST(binary, string).; line 1 pos 7


-- !query 717
SELECT least(cast('1' as binary), cast('2' as binary)) FROM t
-- !query 717 schema
struct<least(CAST(1 AS BINARY), CAST(2 AS BINARY)):binary>
-- !query 717 output
1


-- !query 718
SELECT least(cast('1' as binary), cast(2 as boolean)) FROM t
-- !query 718 schema
struct<>
-- !query 718 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('1' AS BINARY), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got LEAST(binary, boolean).; line 1 pos 7


-- !query 719
SELECT least(cast('1' as binary), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 719 schema
struct<>
-- !query 719 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('1' AS BINARY), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got LEAST(binary, timestamp).; line 1 pos 7


-- !query 720
SELECT least(cast('1' as binary), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 720 schema
struct<>
-- !query 720 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('1' AS BINARY), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got LEAST(binary, date).; line 1 pos 7


-- !query 721
SELECT least(cast(1 as boolean), cast(2 as tinyint)) FROM t
-- !query 721 schema
struct<>
-- !query 721 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS BOOLEAN), CAST(2 AS TINYINT))' due to data type mismatch: The expressions should all have the same type, got LEAST(boolean, tinyint).; line 1 pos 7


-- !query 722
SELECT least(cast(1 as boolean), cast(2 as smallint)) FROM t
-- !query 722 schema
struct<>
-- !query 722 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS BOOLEAN), CAST(2 AS SMALLINT))' due to data type mismatch: The expressions should all have the same type, got LEAST(boolean, smallint).; line 1 pos 7


-- !query 723
SELECT least(cast(1 as boolean), cast(2 as int)) FROM t
-- !query 723 schema
struct<>
-- !query 723 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS BOOLEAN), CAST(2 AS INT))' due to data type mismatch: The expressions should all have the same type, got LEAST(boolean, int).; line 1 pos 7


-- !query 724
SELECT least(cast(1 as boolean), cast(2 as bigint)) FROM t
-- !query 724 schema
struct<>
-- !query 724 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS BOOLEAN), CAST(2 AS BIGINT))' due to data type mismatch: The expressions should all have the same type, got LEAST(boolean, bigint).; line 1 pos 7


-- !query 725
SELECT least(cast(1 as boolean), cast(2 as float)) FROM t
-- !query 725 schema
struct<>
-- !query 725 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS BOOLEAN), CAST(2 AS FLOAT))' due to data type mismatch: The expressions should all have the same type, got LEAST(boolean, float).; line 1 pos 7


-- !query 726
SELECT least(cast(1 as boolean), cast(2 as double)) FROM t
-- !query 726 schema
struct<>
-- !query 726 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS BOOLEAN), CAST(2 AS DOUBLE))' due to data type mismatch: The expressions should all have the same type, got LEAST(boolean, double).; line 1 pos 7


-- !query 727
SELECT least(cast(1 as boolean), cast(2 as decimal(10, 0))) FROM t
-- !query 727 schema
struct<>
-- !query 727 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS BOOLEAN), CAST(2 AS DECIMAL(10,0)))' due to data type mismatch: The expressions should all have the same type, got LEAST(boolean, decimal(10,0)).; line 1 pos 7


-- !query 728
SELECT least(cast(1 as boolean), cast(2 as string)) FROM t
-- !query 728 schema
struct<>
-- !query 728 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS BOOLEAN), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got LEAST(boolean, string).; line 1 pos 7


-- !query 729
SELECT least(cast(1 as boolean), cast('2' as binary)) FROM t
-- !query 729 schema
struct<>
-- !query 729 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS BOOLEAN), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got LEAST(boolean, binary).; line 1 pos 7


-- !query 730
SELECT least(cast(1 as boolean), cast(2 as boolean)) FROM t
-- !query 730 schema
struct<least(CAST(1 AS BOOLEAN), CAST(2 AS BOOLEAN)):boolean>
-- !query 730 output
true


-- !query 731
SELECT least(cast(1 as boolean), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 731 schema
struct<>
-- !query 731 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS BOOLEAN), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: The expressions should all have the same type, got LEAST(boolean, timestamp).; line 1 pos 7


-- !query 732
SELECT least(cast(1 as boolean), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 732 schema
struct<>
-- !query 732 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST(1 AS BOOLEAN), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: The expressions should all have the same type, got LEAST(boolean, date).; line 1 pos 7


-- !query 733
SELECT least(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as tinyint)) FROM t
-- !query 733 schema
struct<>
-- !query 733 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS TINYINT))' due to data type mismatch: The expressions should all have the same type, got LEAST(timestamp, tinyint).; line 1 pos 7


-- !query 734
SELECT least(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as smallint)) FROM t
-- !query 734 schema
struct<>
-- !query 734 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS SMALLINT))' due to data type mismatch: The expressions should all have the same type, got LEAST(timestamp, smallint).; line 1 pos 7


-- !query 735
SELECT least(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as int)) FROM t
-- !query 735 schema
struct<>
-- !query 735 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS INT))' due to data type mismatch: The expressions should all have the same type, got LEAST(timestamp, int).; line 1 pos 7


-- !query 736
SELECT least(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as bigint)) FROM t
-- !query 736 schema
struct<>
-- !query 736 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS BIGINT))' due to data type mismatch: The expressions should all have the same type, got LEAST(timestamp, bigint).; line 1 pos 7


-- !query 737
SELECT least(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as float)) FROM t
-- !query 737 schema
struct<>
-- !query 737 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS FLOAT))' due to data type mismatch: The expressions should all have the same type, got LEAST(timestamp, float).; line 1 pos 7


-- !query 738
SELECT least(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as double)) FROM t
-- !query 738 schema
struct<>
-- !query 738 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS DOUBLE))' due to data type mismatch: The expressions should all have the same type, got LEAST(timestamp, double).; line 1 pos 7


-- !query 739
SELECT least(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as decimal(10, 0))) FROM t
-- !query 739 schema
struct<>
-- !query 739 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS DECIMAL(10,0)))' due to data type mismatch: The expressions should all have the same type, got LEAST(timestamp, decimal(10,0)).; line 1 pos 7


-- !query 740
SELECT least(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as string)) FROM t
-- !query 740 schema
struct<>
-- !query 740 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got LEAST(timestamp, string).; line 1 pos 7


-- !query 741
SELECT least(cast('2017-12-11 09:30:00.0' as timestamp), cast('2' as binary)) FROM t
-- !query 741 schema
struct<>
-- !query 741 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got LEAST(timestamp, binary).; line 1 pos 7


-- !query 742
SELECT least(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as boolean)) FROM t
-- !query 742 schema
struct<>
-- !query 742 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got LEAST(timestamp, boolean).; line 1 pos 7


-- !query 743
SELECT least(cast('2017-12-11 09:30:00.0' as timestamp), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 743 schema
struct<least(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP), CAST(2017-12-12 09:30:00.0 AS TIMESTAMP)):timestamp>
-- !query 743 output
2017-12-11 09:30:00


-- !query 744
SELECT least(cast('2017-12-11 09:30:00.0' as timestamp), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 744 schema
struct<least(CAST(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) AS TIMESTAMP), CAST(CAST(2017-12-12 09:30:00 AS DATE) AS TIMESTAMP)):timestamp>
-- !query 744 output
2017-12-11 09:30:00


-- !query 745
SELECT least(cast('2017-12-11 09:30:00' as date), cast(2 as tinyint)) FROM t
-- !query 745 schema
struct<>
-- !query 745 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS TINYINT))' due to data type mismatch: The expressions should all have the same type, got LEAST(date, tinyint).; line 1 pos 7


-- !query 746
SELECT least(cast('2017-12-11 09:30:00' as date), cast(2 as smallint)) FROM t
-- !query 746 schema
struct<>
-- !query 746 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS SMALLINT))' due to data type mismatch: The expressions should all have the same type, got LEAST(date, smallint).; line 1 pos 7


-- !query 747
SELECT least(cast('2017-12-11 09:30:00' as date), cast(2 as int)) FROM t
-- !query 747 schema
struct<>
-- !query 747 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS INT))' due to data type mismatch: The expressions should all have the same type, got LEAST(date, int).; line 1 pos 7


-- !query 748
SELECT least(cast('2017-12-11 09:30:00' as date), cast(2 as bigint)) FROM t
-- !query 748 schema
struct<>
-- !query 748 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS BIGINT))' due to data type mismatch: The expressions should all have the same type, got LEAST(date, bigint).; line 1 pos 7


-- !query 749
SELECT least(cast('2017-12-11 09:30:00' as date), cast(2 as float)) FROM t
-- !query 749 schema
struct<>
-- !query 749 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS FLOAT))' due to data type mismatch: The expressions should all have the same type, got LEAST(date, float).; line 1 pos 7


-- !query 750
SELECT least(cast('2017-12-11 09:30:00' as date), cast(2 as double)) FROM t
-- !query 750 schema
struct<>
-- !query 750 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS DOUBLE))' due to data type mismatch: The expressions should all have the same type, got LEAST(date, double).; line 1 pos 7


-- !query 751
SELECT least(cast('2017-12-11 09:30:00' as date), cast(2 as decimal(10, 0))) FROM t
-- !query 751 schema
struct<>
-- !query 751 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS DECIMAL(10,0)))' due to data type mismatch: The expressions should all have the same type, got LEAST(date, decimal(10,0)).; line 1 pos 7


-- !query 752
SELECT least(cast('2017-12-11 09:30:00' as date), cast(2 as string)) FROM t
-- !query 752 schema
struct<>
-- !query 752 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS STRING))' due to data type mismatch: The expressions should all have the same type, got LEAST(date, string).; line 1 pos 7


-- !query 753
SELECT least(cast('2017-12-11 09:30:00' as date), cast('2' as binary)) FROM t
-- !query 753 schema
struct<>
-- !query 753 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00' AS DATE), CAST('2' AS BINARY))' due to data type mismatch: The expressions should all have the same type, got LEAST(date, binary).; line 1 pos 7


-- !query 754
SELECT least(cast('2017-12-11 09:30:00' as date), cast(2 as boolean)) FROM t
-- !query 754 schema
struct<>
-- !query 754 output
org.apache.spark.sql.AnalysisException
cannot resolve 'least(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS BOOLEAN))' due to data type mismatch: The expressions should all have the same type, got LEAST(date, boolean).; line 1 pos 7


-- !query 755
SELECT least(cast('2017-12-11 09:30:00' as date), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 755 schema
struct<least(CAST(CAST(2017-12-11 09:30:00 AS DATE) AS TIMESTAMP), CAST(CAST(2017-12-12 09:30:00.0 AS TIMESTAMP) AS TIMESTAMP)):timestamp>
-- !query 755 output
2017-12-11 00:00:00


-- !query 756
SELECT least(cast('2017-12-11 09:30:00' as date), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 756 schema
struct<least(CAST(2017-12-11 09:30:00 AS DATE), CAST(2017-12-12 09:30:00 AS DATE)):date>
-- !query 756 output
2017-12-11


-- !query 757
SELECT nanvl(cast(1 as tinyint), cast(2 as tinyint)) FROM t
-- !query 757 schema
struct<nanvl(CAST(CAST(1 AS TINYINT) AS DOUBLE), CAST(CAST(2 AS TINYINT) AS DOUBLE)):double>
-- !query 757 output
1.0


-- !query 758
SELECT nanvl(cast(1 as tinyint), cast(2 as smallint)) FROM t
-- !query 758 schema
struct<nanvl(CAST(CAST(1 AS TINYINT) AS DOUBLE), CAST(CAST(2 AS SMALLINT) AS DOUBLE)):double>
-- !query 758 output
1.0


-- !query 759
SELECT nanvl(cast(1 as tinyint), cast(2 as int)) FROM t
-- !query 759 schema
struct<nanvl(CAST(CAST(1 AS TINYINT) AS DOUBLE), CAST(CAST(2 AS INT) AS DOUBLE)):double>
-- !query 759 output
1.0


-- !query 760
SELECT nanvl(cast(1 as tinyint), cast(2 as bigint)) FROM t
-- !query 760 schema
struct<nanvl(CAST(CAST(1 AS TINYINT) AS DOUBLE), CAST(CAST(2 AS BIGINT) AS DOUBLE)):double>
-- !query 760 output
1.0


-- !query 761
SELECT nanvl(cast(1 as tinyint), cast(2 as float)) FROM t
-- !query 761 schema
struct<nanvl(CAST(CAST(1 AS TINYINT) AS DOUBLE), CAST(2 AS FLOAT)):double>
-- !query 761 output
1.0


-- !query 762
SELECT nanvl(cast(1 as tinyint), cast(2 as double)) FROM t
-- !query 762 schema
struct<nanvl(CAST(CAST(1 AS TINYINT) AS DOUBLE), CAST(2 AS DOUBLE)):double>
-- !query 762 output
1.0


-- !query 763
SELECT nanvl(cast(1 as tinyint), cast(2 as decimal(10, 0))) FROM t
-- !query 763 schema
struct<nanvl(CAST(CAST(1 AS TINYINT) AS DOUBLE), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE)):double>
-- !query 763 output
1.0


-- !query 764
SELECT nanvl(cast(1 as tinyint), cast(2 as string)) FROM t
-- !query 764 schema
struct<nanvl(CAST(CAST(1 AS TINYINT) AS DOUBLE), CAST(CAST(2 AS STRING) AS DOUBLE)):double>
-- !query 764 output
1.0


-- !query 765
SELECT nanvl(cast(1 as tinyint), cast('2' as binary)) FROM t
-- !query 765 schema
struct<>
-- !query 765 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS TINYINT) AS DOUBLE), CAST('2' AS BINARY))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 766
SELECT nanvl(cast(1 as tinyint), cast(2 as boolean)) FROM t
-- !query 766 schema
struct<>
-- !query 766 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS TINYINT) AS DOUBLE), CAST(2 AS BOOLEAN))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST(2 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 767
SELECT nanvl(cast(1 as tinyint), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 767 schema
struct<>
-- !query 767 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS TINYINT) AS DOUBLE), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 768
SELECT nanvl(cast(1 as tinyint), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 768 schema
struct<>
-- !query 768 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS TINYINT) AS DOUBLE), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 769
SELECT nanvl(cast(1 as smallint), cast(2 as tinyint)) FROM t
-- !query 769 schema
struct<nanvl(CAST(CAST(1 AS SMALLINT) AS DOUBLE), CAST(CAST(2 AS TINYINT) AS DOUBLE)):double>
-- !query 769 output
1.0


-- !query 770
SELECT nanvl(cast(1 as smallint), cast(2 as smallint)) FROM t
-- !query 770 schema
struct<nanvl(CAST(CAST(1 AS SMALLINT) AS DOUBLE), CAST(CAST(2 AS SMALLINT) AS DOUBLE)):double>
-- !query 770 output
1.0


-- !query 771
SELECT nanvl(cast(1 as smallint), cast(2 as int)) FROM t
-- !query 771 schema
struct<nanvl(CAST(CAST(1 AS SMALLINT) AS DOUBLE), CAST(CAST(2 AS INT) AS DOUBLE)):double>
-- !query 771 output
1.0


-- !query 772
SELECT nanvl(cast(1 as smallint), cast(2 as bigint)) FROM t
-- !query 772 schema
struct<nanvl(CAST(CAST(1 AS SMALLINT) AS DOUBLE), CAST(CAST(2 AS BIGINT) AS DOUBLE)):double>
-- !query 772 output
1.0


-- !query 773
SELECT nanvl(cast(1 as smallint), cast(2 as float)) FROM t
-- !query 773 schema
struct<nanvl(CAST(CAST(1 AS SMALLINT) AS DOUBLE), CAST(2 AS FLOAT)):double>
-- !query 773 output
1.0


-- !query 774
SELECT nanvl(cast(1 as smallint), cast(2 as double)) FROM t
-- !query 774 schema
struct<nanvl(CAST(CAST(1 AS SMALLINT) AS DOUBLE), CAST(2 AS DOUBLE)):double>
-- !query 774 output
1.0


-- !query 775
SELECT nanvl(cast(1 as smallint), cast(2 as decimal(10, 0))) FROM t
-- !query 775 schema
struct<nanvl(CAST(CAST(1 AS SMALLINT) AS DOUBLE), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE)):double>
-- !query 775 output
1.0


-- !query 776
SELECT nanvl(cast(1 as smallint), cast(2 as string)) FROM t
-- !query 776 schema
struct<nanvl(CAST(CAST(1 AS SMALLINT) AS DOUBLE), CAST(CAST(2 AS STRING) AS DOUBLE)):double>
-- !query 776 output
1.0


-- !query 777
SELECT nanvl(cast(1 as smallint), cast('2' as binary)) FROM t
-- !query 777 schema
struct<>
-- !query 777 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS SMALLINT) AS DOUBLE), CAST('2' AS BINARY))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 778
SELECT nanvl(cast(1 as smallint), cast(2 as boolean)) FROM t
-- !query 778 schema
struct<>
-- !query 778 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS SMALLINT) AS DOUBLE), CAST(2 AS BOOLEAN))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST(2 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 779
SELECT nanvl(cast(1 as smallint), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 779 schema
struct<>
-- !query 779 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS SMALLINT) AS DOUBLE), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 780
SELECT nanvl(cast(1 as smallint), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 780 schema
struct<>
-- !query 780 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS SMALLINT) AS DOUBLE), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 781
SELECT nanvl(cast(1 as int), cast(2 as tinyint)) FROM t
-- !query 781 schema
struct<nanvl(CAST(CAST(1 AS INT) AS DOUBLE), CAST(CAST(2 AS TINYINT) AS DOUBLE)):double>
-- !query 781 output
1.0


-- !query 782
SELECT nanvl(cast(1 as int), cast(2 as smallint)) FROM t
-- !query 782 schema
struct<nanvl(CAST(CAST(1 AS INT) AS DOUBLE), CAST(CAST(2 AS SMALLINT) AS DOUBLE)):double>
-- !query 782 output
1.0


-- !query 783
SELECT nanvl(cast(1 as int), cast(2 as int)) FROM t
-- !query 783 schema
struct<nanvl(CAST(CAST(1 AS INT) AS DOUBLE), CAST(CAST(2 AS INT) AS DOUBLE)):double>
-- !query 783 output
1.0


-- !query 784
SELECT nanvl(cast(1 as int), cast(2 as bigint)) FROM t
-- !query 784 schema
struct<nanvl(CAST(CAST(1 AS INT) AS DOUBLE), CAST(CAST(2 AS BIGINT) AS DOUBLE)):double>
-- !query 784 output
1.0


-- !query 785
SELECT nanvl(cast(1 as int), cast(2 as float)) FROM t
-- !query 785 schema
struct<nanvl(CAST(CAST(1 AS INT) AS DOUBLE), CAST(2 AS FLOAT)):double>
-- !query 785 output
1.0


-- !query 786
SELECT nanvl(cast(1 as int), cast(2 as double)) FROM t
-- !query 786 schema
struct<nanvl(CAST(CAST(1 AS INT) AS DOUBLE), CAST(2 AS DOUBLE)):double>
-- !query 786 output
1.0


-- !query 787
SELECT nanvl(cast(1 as int), cast(2 as decimal(10, 0))) FROM t
-- !query 787 schema
struct<nanvl(CAST(CAST(1 AS INT) AS DOUBLE), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE)):double>
-- !query 787 output
1.0


-- !query 788
SELECT nanvl(cast(1 as int), cast(2 as string)) FROM t
-- !query 788 schema
struct<nanvl(CAST(CAST(1 AS INT) AS DOUBLE), CAST(CAST(2 AS STRING) AS DOUBLE)):double>
-- !query 788 output
1.0


-- !query 789
SELECT nanvl(cast(1 as int), cast('2' as binary)) FROM t
-- !query 789 schema
struct<>
-- !query 789 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS INT) AS DOUBLE), CAST('2' AS BINARY))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 790
SELECT nanvl(cast(1 as int), cast(2 as boolean)) FROM t
-- !query 790 schema
struct<>
-- !query 790 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS INT) AS DOUBLE), CAST(2 AS BOOLEAN))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST(2 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 791
SELECT nanvl(cast(1 as int), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 791 schema
struct<>
-- !query 791 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS INT) AS DOUBLE), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 792
SELECT nanvl(cast(1 as int), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 792 schema
struct<>
-- !query 792 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS INT) AS DOUBLE), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 793
SELECT nanvl(cast(1 as bigint), cast(2 as tinyint)) FROM t
-- !query 793 schema
struct<nanvl(CAST(CAST(1 AS BIGINT) AS DOUBLE), CAST(CAST(2 AS TINYINT) AS DOUBLE)):double>
-- !query 793 output
1.0


-- !query 794
SELECT nanvl(cast(1 as bigint), cast(2 as smallint)) FROM t
-- !query 794 schema
struct<nanvl(CAST(CAST(1 AS BIGINT) AS DOUBLE), CAST(CAST(2 AS SMALLINT) AS DOUBLE)):double>
-- !query 794 output
1.0


-- !query 795
SELECT nanvl(cast(1 as bigint), cast(2 as int)) FROM t
-- !query 795 schema
struct<nanvl(CAST(CAST(1 AS BIGINT) AS DOUBLE), CAST(CAST(2 AS INT) AS DOUBLE)):double>
-- !query 795 output
1.0


-- !query 796
SELECT nanvl(cast(1 as bigint), cast(2 as bigint)) FROM t
-- !query 796 schema
struct<nanvl(CAST(CAST(1 AS BIGINT) AS DOUBLE), CAST(CAST(2 AS BIGINT) AS DOUBLE)):double>
-- !query 796 output
1.0


-- !query 797
SELECT nanvl(cast(1 as bigint), cast(2 as float)) FROM t
-- !query 797 schema
struct<nanvl(CAST(CAST(1 AS BIGINT) AS DOUBLE), CAST(2 AS FLOAT)):double>
-- !query 797 output
1.0


-- !query 798
SELECT nanvl(cast(1 as bigint), cast(2 as double)) FROM t
-- !query 798 schema
struct<nanvl(CAST(CAST(1 AS BIGINT) AS DOUBLE), CAST(2 AS DOUBLE)):double>
-- !query 798 output
1.0


-- !query 799
SELECT nanvl(cast(1 as bigint), cast(2 as decimal(10, 0))) FROM t
-- !query 799 schema
struct<nanvl(CAST(CAST(1 AS BIGINT) AS DOUBLE), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE)):double>
-- !query 799 output
1.0


-- !query 800
SELECT nanvl(cast(1 as bigint), cast(2 as string)) FROM t
-- !query 800 schema
struct<nanvl(CAST(CAST(1 AS BIGINT) AS DOUBLE), CAST(CAST(2 AS STRING) AS DOUBLE)):double>
-- !query 800 output
1.0


-- !query 801
SELECT nanvl(cast(1 as bigint), cast('2' as binary)) FROM t
-- !query 801 schema
struct<>
-- !query 801 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS BIGINT) AS DOUBLE), CAST('2' AS BINARY))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 802
SELECT nanvl(cast(1 as bigint), cast(2 as boolean)) FROM t
-- !query 802 schema
struct<>
-- !query 802 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS BIGINT) AS DOUBLE), CAST(2 AS BOOLEAN))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST(2 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 803
SELECT nanvl(cast(1 as bigint), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 803 schema
struct<>
-- !query 803 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS BIGINT) AS DOUBLE), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 804
SELECT nanvl(cast(1 as bigint), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 804 schema
struct<>
-- !query 804 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS BIGINT) AS DOUBLE), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 805
SELECT nanvl(cast(1 as float), cast(2 as tinyint)) FROM t
-- !query 805 schema
struct<nanvl(CAST(1 AS FLOAT), CAST(CAST(2 AS TINYINT) AS DOUBLE)):double>
-- !query 805 output
1.0


-- !query 806
SELECT nanvl(cast(1 as float), cast(2 as smallint)) FROM t
-- !query 806 schema
struct<nanvl(CAST(1 AS FLOAT), CAST(CAST(2 AS SMALLINT) AS DOUBLE)):double>
-- !query 806 output
1.0


-- !query 807
SELECT nanvl(cast(1 as float), cast(2 as int)) FROM t
-- !query 807 schema
struct<nanvl(CAST(1 AS FLOAT), CAST(CAST(2 AS INT) AS DOUBLE)):double>
-- !query 807 output
1.0


-- !query 808
SELECT nanvl(cast(1 as float), cast(2 as bigint)) FROM t
-- !query 808 schema
struct<nanvl(CAST(1 AS FLOAT), CAST(CAST(2 AS BIGINT) AS DOUBLE)):double>
-- !query 808 output
1.0


-- !query 809
SELECT nanvl(cast(1 as float), cast(2 as float)) FROM t
-- !query 809 schema
struct<nanvl(CAST(1 AS FLOAT), CAST(2 AS FLOAT)):float>
-- !query 809 output
1.0


-- !query 810
SELECT nanvl(cast(1 as float), cast(2 as double)) FROM t
-- !query 810 schema
struct<nanvl(CAST(1 AS FLOAT), CAST(2 AS DOUBLE)):double>
-- !query 810 output
1.0


-- !query 811
SELECT nanvl(cast(1 as float), cast(2 as decimal(10, 0))) FROM t
-- !query 811 schema
struct<nanvl(CAST(1 AS FLOAT), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE)):double>
-- !query 811 output
1.0


-- !query 812
SELECT nanvl(cast(1 as float), cast(2 as string)) FROM t
-- !query 812 schema
struct<nanvl(CAST(1 AS FLOAT), CAST(CAST(2 AS STRING) AS DOUBLE)):double>
-- !query 812 output
1.0


-- !query 813
SELECT nanvl(cast(1 as float), cast('2' as binary)) FROM t
-- !query 813 schema
struct<>
-- !query 813 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS FLOAT), CAST('2' AS BINARY))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 814
SELECT nanvl(cast(1 as float), cast(2 as boolean)) FROM t
-- !query 814 schema
struct<>
-- !query 814 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS FLOAT), CAST(2 AS BOOLEAN))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST(2 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 815
SELECT nanvl(cast(1 as float), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 815 schema
struct<>
-- !query 815 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS FLOAT), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 816
SELECT nanvl(cast(1 as float), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 816 schema
struct<>
-- !query 816 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS FLOAT), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 817
SELECT nanvl(cast(1 as double), cast(2 as tinyint)) FROM t
-- !query 817 schema
struct<nanvl(CAST(1 AS DOUBLE), CAST(CAST(2 AS TINYINT) AS DOUBLE)):double>
-- !query 817 output
1.0


-- !query 818
SELECT nanvl(cast(1 as double), cast(2 as smallint)) FROM t
-- !query 818 schema
struct<nanvl(CAST(1 AS DOUBLE), CAST(CAST(2 AS SMALLINT) AS DOUBLE)):double>
-- !query 818 output
1.0


-- !query 819
SELECT nanvl(cast(1 as double), cast(2 as int)) FROM t
-- !query 819 schema
struct<nanvl(CAST(1 AS DOUBLE), CAST(CAST(2 AS INT) AS DOUBLE)):double>
-- !query 819 output
1.0


-- !query 820
SELECT nanvl(cast(1 as double), cast(2 as bigint)) FROM t
-- !query 820 schema
struct<nanvl(CAST(1 AS DOUBLE), CAST(CAST(2 AS BIGINT) AS DOUBLE)):double>
-- !query 820 output
1.0


-- !query 821
SELECT nanvl(cast(1 as double), cast(2 as float)) FROM t
-- !query 821 schema
struct<nanvl(CAST(1 AS DOUBLE), CAST(2 AS FLOAT)):double>
-- !query 821 output
1.0


-- !query 822
SELECT nanvl(cast(1 as double), cast(2 as double)) FROM t
-- !query 822 schema
struct<nanvl(CAST(1 AS DOUBLE), CAST(2 AS DOUBLE)):double>
-- !query 822 output
1.0


-- !query 823
SELECT nanvl(cast(1 as double), cast(2 as decimal(10, 0))) FROM t
-- !query 823 schema
struct<nanvl(CAST(1 AS DOUBLE), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE)):double>
-- !query 823 output
1.0


-- !query 824
SELECT nanvl(cast(1 as double), cast(2 as string)) FROM t
-- !query 824 schema
struct<nanvl(CAST(1 AS DOUBLE), CAST(CAST(2 AS STRING) AS DOUBLE)):double>
-- !query 824 output
1.0


-- !query 825
SELECT nanvl(cast(1 as double), cast('2' as binary)) FROM t
-- !query 825 schema
struct<>
-- !query 825 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS DOUBLE), CAST('2' AS BINARY))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 826
SELECT nanvl(cast(1 as double), cast(2 as boolean)) FROM t
-- !query 826 schema
struct<>
-- !query 826 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS DOUBLE), CAST(2 AS BOOLEAN))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST(2 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 827
SELECT nanvl(cast(1 as double), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 827 schema
struct<>
-- !query 827 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS DOUBLE), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 828
SELECT nanvl(cast(1 as double), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 828 schema
struct<>
-- !query 828 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS DOUBLE), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 829
SELECT nanvl(cast(1 as decimal(10, 0)), cast(2 as tinyint)) FROM t
-- !query 829 schema
struct<nanvl(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST(CAST(2 AS TINYINT) AS DOUBLE)):double>
-- !query 829 output
1.0


-- !query 830
SELECT nanvl(cast(1 as decimal(10, 0)), cast(2 as smallint)) FROM t
-- !query 830 schema
struct<nanvl(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST(CAST(2 AS SMALLINT) AS DOUBLE)):double>
-- !query 830 output
1.0


-- !query 831
SELECT nanvl(cast(1 as decimal(10, 0)), cast(2 as int)) FROM t
-- !query 831 schema
struct<nanvl(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST(CAST(2 AS INT) AS DOUBLE)):double>
-- !query 831 output
1.0


-- !query 832
SELECT nanvl(cast(1 as decimal(10, 0)), cast(2 as bigint)) FROM t
-- !query 832 schema
struct<nanvl(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST(CAST(2 AS BIGINT) AS DOUBLE)):double>
-- !query 832 output
1.0


-- !query 833
SELECT nanvl(cast(1 as decimal(10, 0)), cast(2 as float)) FROM t
-- !query 833 schema
struct<nanvl(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST(2 AS FLOAT)):double>
-- !query 833 output
1.0


-- !query 834
SELECT nanvl(cast(1 as decimal(10, 0)), cast(2 as double)) FROM t
-- !query 834 schema
struct<nanvl(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST(2 AS DOUBLE)):double>
-- !query 834 output
1.0


-- !query 835
SELECT nanvl(cast(1 as decimal(10, 0)), cast(2 as decimal(10, 0))) FROM t
-- !query 835 schema
struct<nanvl(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE)):double>
-- !query 835 output
1.0


-- !query 836
SELECT nanvl(cast(1 as decimal(10, 0)), cast(2 as string)) FROM t
-- !query 836 schema
struct<nanvl(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST(CAST(2 AS STRING) AS DOUBLE)):double>
-- !query 836 output
1.0


-- !query 837
SELECT nanvl(cast(1 as decimal(10, 0)), cast('2' as binary)) FROM t
-- !query 837 schema
struct<>
-- !query 837 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST('2' AS BINARY))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 838
SELECT nanvl(cast(1 as decimal(10, 0)), cast(2 as boolean)) FROM t
-- !query 838 schema
struct<>
-- !query 838 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST(2 AS BOOLEAN))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST(2 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 839
SELECT nanvl(cast(1 as decimal(10, 0)), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 839 schema
struct<>
-- !query 839 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 840
SELECT nanvl(cast(1 as decimal(10, 0)), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 840 schema
struct<>
-- !query 840 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS DECIMAL(10,0)) AS DOUBLE), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 841
SELECT nanvl(cast(1 as string), cast(2 as tinyint)) FROM t
-- !query 841 schema
struct<nanvl(CAST(CAST(1 AS STRING) AS DOUBLE), CAST(CAST(2 AS TINYINT) AS DOUBLE)):double>
-- !query 841 output
1.0


-- !query 842
SELECT nanvl(cast(1 as string), cast(2 as smallint)) FROM t
-- !query 842 schema
struct<nanvl(CAST(CAST(1 AS STRING) AS DOUBLE), CAST(CAST(2 AS SMALLINT) AS DOUBLE)):double>
-- !query 842 output
1.0


-- !query 843
SELECT nanvl(cast(1 as string), cast(2 as int)) FROM t
-- !query 843 schema
struct<nanvl(CAST(CAST(1 AS STRING) AS DOUBLE), CAST(CAST(2 AS INT) AS DOUBLE)):double>
-- !query 843 output
1.0


-- !query 844
SELECT nanvl(cast(1 as string), cast(2 as bigint)) FROM t
-- !query 844 schema
struct<nanvl(CAST(CAST(1 AS STRING) AS DOUBLE), CAST(CAST(2 AS BIGINT) AS DOUBLE)):double>
-- !query 844 output
1.0


-- !query 845
SELECT nanvl(cast(1 as string), cast(2 as float)) FROM t
-- !query 845 schema
struct<nanvl(CAST(CAST(1 AS STRING) AS DOUBLE), CAST(2 AS FLOAT)):double>
-- !query 845 output
1.0


-- !query 846
SELECT nanvl(cast(1 as string), cast(2 as double)) FROM t
-- !query 846 schema
struct<nanvl(CAST(CAST(1 AS STRING) AS DOUBLE), CAST(2 AS DOUBLE)):double>
-- !query 846 output
1.0


-- !query 847
SELECT nanvl(cast(1 as string), cast(2 as decimal(10, 0))) FROM t
-- !query 847 schema
struct<nanvl(CAST(CAST(1 AS STRING) AS DOUBLE), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE)):double>
-- !query 847 output
1.0


-- !query 848
SELECT nanvl(cast(1 as string), cast(2 as string)) FROM t
-- !query 848 schema
struct<nanvl(CAST(CAST(1 AS STRING) AS DOUBLE), CAST(CAST(2 AS STRING) AS DOUBLE)):double>
-- !query 848 output
1.0


-- !query 849
SELECT nanvl(cast(1 as string), cast('2' as binary)) FROM t
-- !query 849 schema
struct<>
-- !query 849 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS STRING) AS DOUBLE), CAST('2' AS BINARY))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 850
SELECT nanvl(cast(1 as string), cast(2 as boolean)) FROM t
-- !query 850 schema
struct<>
-- !query 850 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS STRING) AS DOUBLE), CAST(2 AS BOOLEAN))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST(2 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 851
SELECT nanvl(cast(1 as string), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 851 schema
struct<>
-- !query 851 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS STRING) AS DOUBLE), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 852
SELECT nanvl(cast(1 as string), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 852 schema
struct<>
-- !query 852 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(CAST(1 AS STRING) AS DOUBLE), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 853
SELECT nanvl(cast('1' as binary), cast(2 as tinyint)) FROM t
-- !query 853 schema
struct<>
-- !query 853 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('1' AS BINARY), CAST(CAST(2 AS TINYINT) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('1' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 854
SELECT nanvl(cast('1' as binary), cast(2 as smallint)) FROM t
-- !query 854 schema
struct<>
-- !query 854 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('1' AS BINARY), CAST(CAST(2 AS SMALLINT) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('1' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 855
SELECT nanvl(cast('1' as binary), cast(2 as int)) FROM t
-- !query 855 schema
struct<>
-- !query 855 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('1' AS BINARY), CAST(CAST(2 AS INT) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('1' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 856
SELECT nanvl(cast('1' as binary), cast(2 as bigint)) FROM t
-- !query 856 schema
struct<>
-- !query 856 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('1' AS BINARY), CAST(CAST(2 AS BIGINT) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('1' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 857
SELECT nanvl(cast('1' as binary), cast(2 as float)) FROM t
-- !query 857 schema
struct<>
-- !query 857 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('1' AS BINARY), CAST(2 AS FLOAT))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('1' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 858
SELECT nanvl(cast('1' as binary), cast(2 as double)) FROM t
-- !query 858 schema
struct<>
-- !query 858 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('1' AS BINARY), CAST(2 AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('1' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 859
SELECT nanvl(cast('1' as binary), cast(2 as decimal(10, 0))) FROM t
-- !query 859 schema
struct<>
-- !query 859 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('1' AS BINARY), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('1' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 860
SELECT nanvl(cast('1' as binary), cast(2 as string)) FROM t
-- !query 860 schema
struct<>
-- !query 860 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('1' AS BINARY), CAST(CAST(2 AS STRING) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('1' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 861
SELECT nanvl(cast('1' as binary), cast('2' as binary)) FROM t
-- !query 861 schema
struct<>
-- !query 861 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('1' AS BINARY), CAST('2' AS BINARY))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('1' AS BINARY)' is of binary type. argument 2 requires (double or float) type, however, 'CAST('2' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 862
SELECT nanvl(cast('1' as binary), cast(2 as boolean)) FROM t
-- !query 862 schema
struct<>
-- !query 862 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('1' AS BINARY), CAST(2 AS BOOLEAN))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('1' AS BINARY)' is of binary type. argument 2 requires (double or float) type, however, 'CAST(2 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 863
SELECT nanvl(cast('1' as binary), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 863 schema
struct<>
-- !query 863 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('1' AS BINARY), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('1' AS BINARY)' is of binary type. argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 864
SELECT nanvl(cast('1' as binary), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 864 schema
struct<>
-- !query 864 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('1' AS BINARY), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('1' AS BINARY)' is of binary type. argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 865
SELECT nanvl(cast(1 as boolean), cast(2 as tinyint)) FROM t
-- !query 865 schema
struct<>
-- !query 865 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS BOOLEAN), CAST(CAST(2 AS TINYINT) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST(1 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 866
SELECT nanvl(cast(1 as boolean), cast(2 as smallint)) FROM t
-- !query 866 schema
struct<>
-- !query 866 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS BOOLEAN), CAST(CAST(2 AS SMALLINT) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST(1 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 867
SELECT nanvl(cast(1 as boolean), cast(2 as int)) FROM t
-- !query 867 schema
struct<>
-- !query 867 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS BOOLEAN), CAST(CAST(2 AS INT) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST(1 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 868
SELECT nanvl(cast(1 as boolean), cast(2 as bigint)) FROM t
-- !query 868 schema
struct<>
-- !query 868 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS BOOLEAN), CAST(CAST(2 AS BIGINT) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST(1 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 869
SELECT nanvl(cast(1 as boolean), cast(2 as float)) FROM t
-- !query 869 schema
struct<>
-- !query 869 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS BOOLEAN), CAST(2 AS FLOAT))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST(1 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 870
SELECT nanvl(cast(1 as boolean), cast(2 as double)) FROM t
-- !query 870 schema
struct<>
-- !query 870 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS BOOLEAN), CAST(2 AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST(1 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 871
SELECT nanvl(cast(1 as boolean), cast(2 as decimal(10, 0))) FROM t
-- !query 871 schema
struct<>
-- !query 871 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS BOOLEAN), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST(1 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 872
SELECT nanvl(cast(1 as boolean), cast(2 as string)) FROM t
-- !query 872 schema
struct<>
-- !query 872 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS BOOLEAN), CAST(CAST(2 AS STRING) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST(1 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 873
SELECT nanvl(cast(1 as boolean), cast('2' as binary)) FROM t
-- !query 873 schema
struct<>
-- !query 873 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS BOOLEAN), CAST('2' AS BINARY))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST(1 AS BOOLEAN)' is of boolean type. argument 2 requires (double or float) type, however, 'CAST('2' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 874
SELECT nanvl(cast(1 as boolean), cast(2 as boolean)) FROM t
-- !query 874 schema
struct<>
-- !query 874 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS BOOLEAN), CAST(2 AS BOOLEAN))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST(1 AS BOOLEAN)' is of boolean type. argument 2 requires (double or float) type, however, 'CAST(2 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 875
SELECT nanvl(cast(1 as boolean), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 875 schema
struct<>
-- !query 875 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS BOOLEAN), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST(1 AS BOOLEAN)' is of boolean type. argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 876
SELECT nanvl(cast(1 as boolean), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 876 schema
struct<>
-- !query 876 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST(1 AS BOOLEAN), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST(1 AS BOOLEAN)' is of boolean type. argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 877
SELECT nanvl(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as tinyint)) FROM t
-- !query 877 schema
struct<>
-- !query 877 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(CAST(2 AS TINYINT) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 878
SELECT nanvl(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as smallint)) FROM t
-- !query 878 schema
struct<>
-- !query 878 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(CAST(2 AS SMALLINT) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 879
SELECT nanvl(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as int)) FROM t
-- !query 879 schema
struct<>
-- !query 879 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(CAST(2 AS INT) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 880
SELECT nanvl(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as bigint)) FROM t
-- !query 880 schema
struct<>
-- !query 880 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(CAST(2 AS BIGINT) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 881
SELECT nanvl(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as float)) FROM t
-- !query 881 schema
struct<>
-- !query 881 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS FLOAT))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 882
SELECT nanvl(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as double)) FROM t
-- !query 882 schema
struct<>
-- !query 882 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 883
SELECT nanvl(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as decimal(10, 0))) FROM t
-- !query 883 schema
struct<>
-- !query 883 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 884
SELECT nanvl(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as string)) FROM t
-- !query 884 schema
struct<>
-- !query 884 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(CAST(2 AS STRING) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 885
SELECT nanvl(cast('2017-12-11 09:30:00.0' as timestamp), cast('2' as binary)) FROM t
-- !query 885 schema
struct<>
-- !query 885 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST('2' AS BINARY))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00.0' AS TIMESTAMP)' is of timestamp type. argument 2 requires (double or float) type, however, 'CAST('2' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 886
SELECT nanvl(cast('2017-12-11 09:30:00.0' as timestamp), cast(2 as boolean)) FROM t
-- !query 886 schema
struct<>
-- !query 886 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST(2 AS BOOLEAN))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00.0' AS TIMESTAMP)' is of timestamp type. argument 2 requires (double or float) type, however, 'CAST(2 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 887
SELECT nanvl(cast('2017-12-11 09:30:00.0' as timestamp), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 887 schema
struct<>
-- !query 887 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00.0' AS TIMESTAMP)' is of timestamp type. argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 888
SELECT nanvl(cast('2017-12-11 09:30:00.0' as timestamp), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 888 schema
struct<>
-- !query 888 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00.0' AS TIMESTAMP), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00.0' AS TIMESTAMP)' is of timestamp type. argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 889
SELECT nanvl(cast('2017-12-11 09:30:00' as date), cast(2 as tinyint)) FROM t
-- !query 889 schema
struct<>
-- !query 889 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00' AS DATE), CAST(CAST(2 AS TINYINT) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 890
SELECT nanvl(cast('2017-12-11 09:30:00' as date), cast(2 as smallint)) FROM t
-- !query 890 schema
struct<>
-- !query 890 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00' AS DATE), CAST(CAST(2 AS SMALLINT) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 891
SELECT nanvl(cast('2017-12-11 09:30:00' as date), cast(2 as int)) FROM t
-- !query 891 schema
struct<>
-- !query 891 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00' AS DATE), CAST(CAST(2 AS INT) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 892
SELECT nanvl(cast('2017-12-11 09:30:00' as date), cast(2 as bigint)) FROM t
-- !query 892 schema
struct<>
-- !query 892 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00' AS DATE), CAST(CAST(2 AS BIGINT) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 893
SELECT nanvl(cast('2017-12-11 09:30:00' as date), cast(2 as float)) FROM t
-- !query 893 schema
struct<>
-- !query 893 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS FLOAT))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 894
SELECT nanvl(cast('2017-12-11 09:30:00' as date), cast(2 as double)) FROM t
-- !query 894 schema
struct<>
-- !query 894 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 895
SELECT nanvl(cast('2017-12-11 09:30:00' as date), cast(2 as decimal(10, 0))) FROM t
-- !query 895 schema
struct<>
-- !query 895 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00' AS DATE), CAST(CAST(2 AS DECIMAL(10,0)) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 896
SELECT nanvl(cast('2017-12-11 09:30:00' as date), cast(2 as string)) FROM t
-- !query 896 schema
struct<>
-- !query 896 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00' AS DATE), CAST(CAST(2 AS STRING) AS DOUBLE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00' AS DATE)' is of date type.; line 1 pos 7


-- !query 897
SELECT nanvl(cast('2017-12-11 09:30:00' as date), cast('2' as binary)) FROM t
-- !query 897 schema
struct<>
-- !query 897 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00' AS DATE), CAST('2' AS BINARY))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00' AS DATE)' is of date type. argument 2 requires (double or float) type, however, 'CAST('2' AS BINARY)' is of binary type.; line 1 pos 7


-- !query 898
SELECT nanvl(cast('2017-12-11 09:30:00' as date), cast(2 as boolean)) FROM t
-- !query 898 schema
struct<>
-- !query 898 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00' AS DATE), CAST(2 AS BOOLEAN))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00' AS DATE)' is of date type. argument 2 requires (double or float) type, however, 'CAST(2 AS BOOLEAN)' is of boolean type.; line 1 pos 7


-- !query 899
SELECT nanvl(cast('2017-12-11 09:30:00' as date), cast('2017-12-12 09:30:00.0' as timestamp)) FROM t
-- !query 899 schema
struct<>
-- !query 899 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00' AS DATE), CAST('2017-12-12 09:30:00.0' AS TIMESTAMP))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00' AS DATE)' is of date type. argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00.0' AS TIMESTAMP)' is of timestamp type.; line 1 pos 7


-- !query 900
SELECT nanvl(cast('2017-12-11 09:30:00' as date), cast('2017-12-12 09:30:00' as date)) FROM t
-- !query 900 schema
struct<>
-- !query 900 output
org.apache.spark.sql.AnalysisException
cannot resolve 'nanvl(CAST('2017-12-11 09:30:00' AS DATE), CAST('2017-12-12 09:30:00' AS DATE))' due to data type mismatch: argument 1 requires (double or float) type, however, 'CAST('2017-12-11 09:30:00' AS DATE)' is of date type. argument 2 requires (double or float) type, however, 'CAST('2017-12-12 09:30:00' AS DATE)' is of date type.; line 1 pos 7
