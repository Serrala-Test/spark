-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 70


-- !query 0
CREATE DATABASE mydb1
-- !query 0 schema
struct<>
-- !query 0 output



-- !query 1
use mydb1
-- !query 1 schema
struct<>
-- !query 1 output



-- !query 2
CREATE TABLE t1 USING parquet as SELECT 1 as i1
-- !query 2 schema
struct<>
-- !query 2 output



-- !query 3
CREATE DATABASE mydb2
-- !query 3 schema
struct<>
-- !query 3 output



-- !query 4
use mydb2
-- !query 4 schema
struct<>
-- !query 4 output



-- !query 5
CREATE TABLE t1 USING parquet as SELECT 20 as i1
-- !query 5 schema
struct<>
-- !query 5 output



-- !query 6
USE mydb1
-- !query 6 schema
struct<>
-- !query 6 output



-- !query 7
SELECT i1 FROM t1
-- !query 7 schema
struct<i1:int>
-- !query 7 output
1


-- !query 8
SELECT i1 FROM mydb1.t1
-- !query 8 schema
struct<i1:int>
-- !query 8 output
1


-- !query 9
SELECT t1.i1 FROM t1
-- !query 9 schema
struct<i1:int>
-- !query 9 output
1


-- !query 10
SELECT t1.i1 FROM mydb1.t1
-- !query 10 schema
struct<i1:int>
-- !query 10 output
1


-- !query 11
SELECT mydb1.t1.i1 FROM t1
-- !query 11 schema
struct<>
-- !query 11 output
org.apache.spark.sql.AnalysisException
cannot resolve '`mydb1.t1.i1`' given input columns: [i1]; line 1 pos 7


-- !query 12
SELECT mydb1.t1.i1 FROM mydb1.t1
-- !query 12 schema
struct<>
-- !query 12 output
org.apache.spark.sql.AnalysisException
cannot resolve '`mydb1.t1.i1`' given input columns: [i1]; line 1 pos 7


-- !query 13
USE mydb2
-- !query 13 schema
struct<>
-- !query 13 output



-- !query 14
SELECT i1 FROM t1
-- !query 14 schema
struct<i1:int>
-- !query 14 output
20


-- !query 15
SELECT i1 FROM mydb1.t1
-- !query 15 schema
struct<i1:int>
-- !query 15 output
1


-- !query 16
SELECT t1.i1 FROM t1
-- !query 16 schema
struct<i1:int>
-- !query 16 output
20


-- !query 17
SELECT t1.i1 FROM mydb1.t1
-- !query 17 schema
struct<i1:int>
-- !query 17 output
1


-- !query 18
SELECT mydb1.t1.i1 FROM mydb1.t1
-- !query 18 schema
struct<>
-- !query 18 output
org.apache.spark.sql.AnalysisException
cannot resolve '`mydb1.t1.i1`' given input columns: [i1]; line 1 pos 7


-- !query 19
use mydb1
-- !query 19 schema
struct<>
-- !query 19 output



-- !query 20
SELECT t1.* FROM t1
-- !query 20 schema
struct<i1:int>
-- !query 20 output
1


-- !query 21
SELECT mydb1.t1.* FROM mydb1.t1
-- !query 21 schema
struct<>
-- !query 21 output
org.apache.spark.sql.AnalysisException
cannot resolve 'mydb1.t1.*' give input columns 'i1';


-- !query 22
SELECT t1.* FROM mydb1.t1
-- !query 22 schema
struct<i1:int>
-- !query 22 output
1


-- !query 23
use mydb2
-- !query 23 schema
struct<>
-- !query 23 output



-- !query 24
SELECT t1.* FROM t1
-- !query 24 schema
struct<i1:int>
-- !query 24 output
20


-- !query 25
SELECT mydb1.t1.* FROM mydb1.t1
-- !query 25 schema
struct<>
-- !query 25 output
org.apache.spark.sql.AnalysisException
cannot resolve 'mydb1.t1.*' give input columns 'i1';


-- !query 26
SELECT t1.* FROM mydb1.t1
-- !query 26 schema
struct<i1:int>
-- !query 26 output
1


-- !query 27
SELECT a.* FROM mydb1.t1 AS a
-- !query 27 schema
struct<i1:int>
-- !query 27 output
1


-- !query 28
USE mydb1
-- !query 28 schema
struct<>
-- !query 28 output



-- !query 29
CREATE TABLE t3 USING parquet AS SELECT * FROM VALUES (4,1), (3,1) AS t3(c1, c2)
-- !query 29 schema
struct<>
-- !query 29 output



-- !query 30
CREATE TABLE t4 USING parquet AS SELECT * FROM VALUES (4,1), (2,1) AS t4(c2, c3)
-- !query 30 schema
struct<>
-- !query 30 output



-- !query 31
SELECT * FROM t3 WHERE c1 IN (SELECT c2 FROM t4 WHERE t4.c3 = t3.c2)
-- !query 31 schema
struct<c1:int,c2:int>
-- !query 31 output
4	1


-- !query 32
SELECT * FROM mydb1.t3 WHERE c1 IN
  (SELECT mydb1.t4.c2 FROM mydb1.t4 WHERE mydb1.t4.c3 = mydb1.t3.c2)
-- !query 32 schema
struct<>
-- !query 32 output
org.apache.spark.sql.AnalysisException
cannot resolve '`mydb1.t4.c3`' given input columns: [c2, c3]; line 2 pos 42


-- !query 33
set spark.sql.crossJoin.enabled = true
-- !query 33 schema
struct<key:string,value:string>
-- !query 33 output
spark.sql.crossJoin.enabled


-- !query 34
SELECT mydb1.t1.i1 FROM t1, mydb2.t1
-- !query 34 schema
struct<>
-- !query 34 output
org.apache.spark.sql.AnalysisException
cannot resolve '`mydb1.t1.i1`' given input columns: [i1, i1]; line 1 pos 7


-- !query 35
SELECT mydb1.t1.i1 FROM mydb1.t1, mydb2.t1
-- !query 35 schema
struct<>
-- !query 35 output
org.apache.spark.sql.AnalysisException
cannot resolve '`mydb1.t1.i1`' given input columns: [i1, i1]; line 1 pos 7


-- !query 36
USE mydb2
-- !query 36 schema
struct<>
-- !query 36 output



-- !query 37
SELECT mydb1.t1.i1 FROM t1, mydb1.t1
-- !query 37 schema
struct<>
-- !query 37 output
org.apache.spark.sql.AnalysisException
cannot resolve '`mydb1.t1.i1`' given input columns: [i1, i1]; line 1 pos 7


-- !query 38
USE mydb1
-- !query 38 schema
struct<>
-- !query 38 output



-- !query 39
CREATE TABLE t5(i1 INT, t5 STRUCT<i1:INT, i2:INT>) USING PARQUET
-- !query 39 schema
struct<>
-- !query 39 output



-- !query 40
INSERT INTO t5 VALUES(1, (2, 3))
-- !query 40 schema
struct<>
-- !query 40 output



-- !query 41
SELECT t5.i1 FROM t5
-- !query 41 schema
struct<i1:int>
-- !query 41 output
1


-- !query 42
SELECT t5.t5.i1 FROM t5
-- !query 42 schema
struct<i1:int>
-- !query 42 output
2


-- !query 43
SELECT t5.t5.i1 FROM mydb1.t5
-- !query 43 schema
struct<i1:int>
-- !query 43 output
2


-- !query 44
SELECT t5.i1 FROM mydb1.t5
-- !query 44 schema
struct<i1:int>
-- !query 44 output
1


-- !query 45
SELECT mydb1.t5.t5.i1 FROM mydb1.t5
-- !query 45 schema
struct<>
-- !query 45 output
org.apache.spark.sql.AnalysisException
cannot resolve '`mydb1.t5.t5.i1`' given input columns: [i1, t5]; line 1 pos 7


-- !query 46
SELECT mydb1.t5.t5.i2 from mydb1.t5
-- !query 46 schema
struct<>
-- !query 46 output
org.apache.spark.sql.AnalysisException
cannot resolve '`mydb1.t5.t5.i2`' given input columns: [i1, t5]; line 1 pos 7


-- !query 47
USE mydb1
-- !query 47 schema
struct<>
-- !query 47 output



-- !query 48
SELECT mydb1.t1 FROM t1
-- !query 48 schema
struct<>
-- !query 48 output
org.apache.spark.sql.AnalysisException
cannot resolve '`mydb1.t1`' given input columns: [i1]; line 1 pos 7


-- !query 49
SELECT t1.x.y.* FROM t1
-- !query 49 schema
struct<>
-- !query 49 output
org.apache.spark.sql.AnalysisException
cannot resolve 't1.x.y.*' give input columns 'i1';


-- !query 50
SELECT t1 FROM mydb1.t1
-- !query 50 schema
struct<>
-- !query 50 output
org.apache.spark.sql.AnalysisException
cannot resolve '`t1`' given input columns: [i1]; line 1 pos 7


-- !query 51
USE mydb2
-- !query 51 schema
struct<>
-- !query 51 output



-- !query 52
SELECT mydb1.t1.i1 FROM t1
-- !query 52 schema
struct<>
-- !query 52 output
org.apache.spark.sql.AnalysisException
cannot resolve '`mydb1.t1.i1`' given input columns: [i1]; line 1 pos 7


-- !query 53
set spark.sql.crossJoin.enabled = true
-- !query 53 schema
struct<key:string,value:string>
-- !query 53 output
spark.sql.crossJoin.enabled


-- !query 54
USE mydb1
-- !query 54 schema
struct<>
-- !query 54 output



-- !query 55
SELECT i1 FROM t1, mydb1.t1
-- !query 55 schema
struct<>
-- !query 55 output
org.apache.spark.sql.AnalysisException
Reference 'i1' is ambiguous, could be: i1#575, i1#729.; line 1 pos 7


-- !query 56
SELECT t1.i1 FROM t1, mydb1.t1
-- !query 56 schema
struct<>
-- !query 56 output
org.apache.spark.sql.AnalysisException
Reference 't1.i1' is ambiguous, could be: i1#575, i1#735.; line 1 pos 7


-- !query 57
SELECT mydb1.t1.i1 FROM t1, mydb1.t1
-- !query 57 schema
struct<>
-- !query 57 output
org.apache.spark.sql.AnalysisException
cannot resolve '`mydb1.t1.i1`' given input columns: [i1, i1]; line 1 pos 7


-- !query 58
SELECT i1 FROM t1, mydb2.t1
-- !query 58 schema
struct<>
-- !query 58 output
org.apache.spark.sql.AnalysisException
Reference 'i1' is ambiguous, could be: i1#575, i1#591.; line 1 pos 7


-- !query 59
SELECT t1.i1 FROM t1, mydb2.t1
-- !query 59 schema
struct<>
-- !query 59 output
org.apache.spark.sql.AnalysisException
Reference 't1.i1' is ambiguous, could be: i1#575, i1#591.; line 1 pos 7


-- !query 60
USE mydb2
-- !query 60 schema
struct<>
-- !query 60 output



-- !query 61
SELECT i1 FROM t1, mydb1.t1
-- !query 61 schema
struct<>
-- !query 61 output
org.apache.spark.sql.AnalysisException
Reference 'i1' is ambiguous, could be: i1#591, i1#575.; line 1 pos 7


-- !query 62
SELECT t1.i1 FROM t1, mydb1.t1
-- !query 62 schema
struct<>
-- !query 62 output
org.apache.spark.sql.AnalysisException
Reference 't1.i1' is ambiguous, could be: i1#591, i1#575.; line 1 pos 7


-- !query 63
SELECT i1 FROM t1, mydb2.t1
-- !query 63 schema
struct<>
-- !query 63 output
org.apache.spark.sql.AnalysisException
Reference 'i1' is ambiguous, could be: i1#591, i1#761.; line 1 pos 7


-- !query 64
SELECT t1.i1 FROM t1, mydb2.t1
-- !query 64 schema
struct<>
-- !query 64 output
org.apache.spark.sql.AnalysisException
Reference 't1.i1' is ambiguous, could be: i1#591, i1#767.; line 1 pos 7


-- !query 65
SELECT db1.t1.i1 FROM t1, mydb2.t1
-- !query 65 schema
struct<>
-- !query 65 output
org.apache.spark.sql.AnalysisException
cannot resolve '`db1.t1.i1`' given input columns: [i1, i1]; line 1 pos 7


-- !query 66
set spark.sql.crossJoin.enabled = true
-- !query 66 schema
struct<key:string,value:string>
-- !query 66 output
spark.sql.crossJoin.enabled


-- !query 67
USE default
-- !query 67 schema
struct<>
-- !query 67 output



-- !query 68
DROP DATABASE mydb1 CASCADE
-- !query 68 schema
struct<>
-- !query 68 output



-- !query 69
DROP DATABASE mydb2 CASCADE
-- !query 69 schema
struct<>
-- !query 69 output

