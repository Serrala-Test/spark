-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 80


-- !query
select concat_ws()
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
requirement failed: concat_ws requires at least one argument.; line 1 pos 7


-- !query
select format_string()
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
requirement failed: format_string() should take at least 1 argument; line 1 pos 7


-- !query
select 'a' || 'b' || 'c'
-- !query schema
struct<concat(concat(a, b), c):string>
-- !query output
abc


-- !query
select replace('abc', 'b', '123')
-- !query schema
struct<replace(abc, b, 123):string>
-- !query output
a123c


-- !query
select replace('abc', 'b')
-- !query schema
struct<replace(abc, b, ):string>
-- !query output
ac


-- !query
select length(uuid()), (uuid() <> uuid())
-- !query schema
struct<length(uuid()):int,(NOT (uuid() = uuid())):boolean>
-- !query output
36	true


-- !query
select position('bar' in 'foobarbar'), position(null, 'foobarbar'), position('aaads', null)
-- !query schema
struct<locate(bar, foobarbar, 1):int,position(NULL, foobarbar, 1):int,position(aaads, NULL, 1):int>
-- !query output
4	NULL	NULL


-- !query
select left("abcd", 2), left("abcd", 5), left("abcd", '2'), left("abcd", null)
-- !query schema
struct<left(abcd, 2):string,left(abcd, 5):string,left(abcd, 2):string,left(abcd, NULL):string>
-- !query output
ab	abcd	ab	NULL


-- !query
select left(null, -2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'substring(NULL, 1, -2)' due to data type mismatch: argument 1 requires (string or binary) type, however, 'NULL' is of void type.; line 1 pos 7


-- !query
select left("abcd", -2), left("abcd", 0), left("abcd", 'a')
-- !query schema
struct<>
-- !query output
java.lang.NumberFormatException
invalid input syntax for type numeric: a


-- !query
select right("abcd", 2), right("abcd", 5), right("abcd", '2'), right("abcd", null)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'substring('abcd', (- CAST('2' AS DOUBLE)), 2147483647)' due to data type mismatch: argument 2 requires int type, however, '(- CAST('2' AS DOUBLE))' is of double type.; line 1 pos 43


-- !query
select right(null, -2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'substring(NULL, (- -2), 2147483647)' due to data type mismatch: argument 1 requires (string or binary) type, however, 'NULL' is of void type.; line 1 pos 7


-- !query
select right("abcd", -2), right("abcd", 0), right("abcd", 'a')
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'substring('abcd', (- CAST('a' AS DOUBLE)), 2147483647)' due to data type mismatch: argument 2 requires int type, however, '(- CAST('a' AS DOUBLE))' is of double type.; line 1 pos 44


-- !query
SELECT split('aa1cc2ee3', '[1-9]+')
-- !query schema
struct<split(aa1cc2ee3, [1-9]+, -1):array<string>>
-- !query output
["aa","cc","ee",""]


-- !query
SELECT split('aa1cc2ee3', '[1-9]+', 2)
-- !query schema
struct<split(aa1cc2ee3, [1-9]+, 2):array<string>>
-- !query output
["aa","cc2ee3"]


-- !query
SELECT substr('Spark SQL', 5)
-- !query schema
struct<substr(Spark SQL, 5, 2147483647):string>
-- !query output
k SQL


-- !query
SELECT substr('Spark SQL', -3)
-- !query schema
struct<substr(Spark SQL, -3, 2147483647):string>
-- !query output
SQL


-- !query
SELECT substr('Spark SQL', 5, 1)
-- !query schema
struct<substr(Spark SQL, 5, 1):string>
-- !query output
k


-- !query
SELECT substr('Spark SQL' from 5)
-- !query schema
struct<substring(Spark SQL, 5, 2147483647):string>
-- !query output
k SQL


-- !query
SELECT substr('Spark SQL' from -3)
-- !query schema
struct<substring(Spark SQL, -3, 2147483647):string>
-- !query output
SQL


-- !query
SELECT substr('Spark SQL' from 5 for 1)
-- !query schema
struct<substring(Spark SQL, 5, 1):string>
-- !query output
k


-- !query
SELECT substring('Spark SQL', 5)
-- !query schema
struct<substring(Spark SQL, 5, 2147483647):string>
-- !query output
k SQL


-- !query
SELECT substring('Spark SQL', -3)
-- !query schema
struct<substring(Spark SQL, -3, 2147483647):string>
-- !query output
SQL


-- !query
SELECT substring('Spark SQL', 5, 1)
-- !query schema
struct<substring(Spark SQL, 5, 1):string>
-- !query output
k


-- !query
SELECT substring('Spark SQL' from 5)
-- !query schema
struct<substring(Spark SQL, 5, 2147483647):string>
-- !query output
k SQL


-- !query
SELECT substring('Spark SQL' from -3)
-- !query schema
struct<substring(Spark SQL, -3, 2147483647):string>
-- !query output
SQL


-- !query
SELECT substring('Spark SQL' from 5 for 1)
-- !query schema
struct<substring(Spark SQL, 5, 1):string>
-- !query output
k


-- !query
SELECT trim(" xyz "), ltrim(" xyz "), rtrim(" xyz ")
-- !query schema
struct<trim( xyz ):string,ltrim( xyz ):string,rtrim( xyz ):string>
-- !query output
xyz	xyz 	 xyz


-- !query
SELECT trim(BOTH 'xyz' FROM 'yxTomxx'), trim('xyz' FROM 'yxTomxx')
-- !query schema
struct<TRIM(BOTH xyz FROM yxTomxx):string,TRIM(BOTH xyz FROM yxTomxx):string>
-- !query output
Tom	Tom


-- !query
SELECT trim(BOTH 'x' FROM 'xxxbarxxx'), trim('x' FROM 'xxxbarxxx')
-- !query schema
struct<TRIM(BOTH x FROM xxxbarxxx):string,TRIM(BOTH x FROM xxxbarxxx):string>
-- !query output
bar	bar


-- !query
SELECT trim(LEADING 'xyz' FROM 'zzzytest')
-- !query schema
struct<TRIM(LEADING xyz FROM zzzytest):string>
-- !query output
test


-- !query
SELECT trim(LEADING 'xyz' FROM 'zzzytestxyz')
-- !query schema
struct<TRIM(LEADING xyz FROM zzzytestxyz):string>
-- !query output
testxyz


-- !query
SELECT trim(LEADING 'xy' FROM 'xyxXxyLAST WORD')
-- !query schema
struct<TRIM(LEADING xy FROM xyxXxyLAST WORD):string>
-- !query output
XxyLAST WORD


-- !query
SELECT trim(TRAILING 'xyz' FROM 'testxxzx')
-- !query schema
struct<TRIM(TRAILING xyz FROM testxxzx):string>
-- !query output
test


-- !query
SELECT trim(TRAILING 'xyz' FROM 'xyztestxxzx')
-- !query schema
struct<TRIM(TRAILING xyz FROM xyztestxxzx):string>
-- !query output
xyztest


-- !query
SELECT trim(TRAILING 'xy' FROM 'TURNERyxXxy')
-- !query schema
struct<TRIM(TRAILING xy FROM TURNERyxXxy):string>
-- !query output
TURNERyxX


-- !query
SELECT btrim('xyxtrimyyx', 'xy')
-- !query schema
struct<btrim(xyxtrimyyx, xy):string>
-- !query output
trim


-- !query
SELECT btrim(encode(" xyz ", 'utf-8'))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'trim(encode(' xyz ', 'utf-8'))' due to data type mismatch: argument 1 requires string type, however, 'encode(' xyz ', 'utf-8')' is of binary type.; line 1 pos 7


-- !query
SELECT btrim(encode('yxTomxx', 'utf-8'), encode('xyz', 'utf-8'))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'TRIM(BOTH encode('xyz', 'utf-8') FROM encode('yxTomxx', 'utf-8'))' due to data type mismatch: argument 1 requires string type, however, 'encode('yxTomxx', 'utf-8')' is of binary type. argument 2 requires string type, however, 'encode('xyz', 'utf-8')' is of binary type.; line 1 pos 7


-- !query
SELECT btrim(encode('xxxbarxxx', 'utf-8'), encode('x', 'utf-8'))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'TRIM(BOTH encode('x', 'utf-8') FROM encode('xxxbarxxx', 'utf-8'))' due to data type mismatch: argument 1 requires string type, however, 'encode('xxxbarxxx', 'utf-8')' is of binary type. argument 2 requires string type, however, 'encode('x', 'utf-8')' is of binary type.; line 1 pos 7


-- !query
SELECT lpad('hi', 'invalid_length')
-- !query schema
struct<>
-- !query output
java.lang.NumberFormatException
invalid input syntax for type numeric: invalid_length


-- !query
SELECT rpad('hi', 'invalid_length')
-- !query schema
struct<>
-- !query output
java.lang.NumberFormatException
invalid input syntax for type numeric: invalid_length


-- !query
select decode()
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Invalid number of arguments for function decode. Expected: 2; Found: 0; line 1 pos 7


-- !query
select decode(encode('abc', 'utf-8'))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Invalid number of arguments for function decode. Expected: 2; Found: 1; line 1 pos 7


-- !query
select decode(encode('abc', 'utf-8'), 'utf-8')
-- !query schema
struct<decode(encode(abc, utf-8), utf-8):string>
-- !query output
abc


-- !query
select decode(1, 1, 'Southlake')
-- !query schema
struct<decode(1, 1, Southlake):string>
-- !query output
Southlake


-- !query
select decode(2, 1, 'Southlake')
-- !query schema
struct<decode(2, 1, Southlake):string>
-- !query output
NULL


-- !query
select decode(2, 1, 'Southlake', 2, 'San Francisco', 3, 'New Jersey', 4, 'Seattle', 'Non domestic')
-- !query schema
struct<decode(2, 1, Southlake, 2, San Francisco, 3, New Jersey, 4, Seattle, Non domestic):string>
-- !query output
San Francisco


-- !query
select decode(6, 1, 'Southlake', 2, 'San Francisco', 3, 'New Jersey', 4, 'Seattle', 'Non domestic')
-- !query schema
struct<decode(6, 1, Southlake, 2, San Francisco, 3, New Jersey, 4, Seattle, Non domestic):string>
-- !query output
Non domestic


-- !query
select decode(6, 1, 'Southlake', 2, 'San Francisco', 3, 'New Jersey', 4, 'Seattle')
-- !query schema
struct<decode(6, 1, Southlake, 2, San Francisco, 3, New Jersey, 4, Seattle):string>
-- !query output
NULL


-- !query
select hex(bitand(null, unhex('11223344')))
-- !query schema
struct<hex(bitand(NULL, unhex(11223344))):string>
-- !query output
NULL


-- !query
select hex(bitand(unhex('aabb'), null))
-- !query schema
struct<hex(bitand(unhex(aabb), NULL)):string>
-- !query output
NULL


-- !query
select hex(bitand(unhex(''), unhex('')))
-- !query schema
struct<hex(bitand(unhex(), unhex())):string>
-- !query output



-- !query
select hex(bitand(unhex('aabb'), unhex('')))
-- !query schema
struct<hex(bitand(unhex(aabb), unhex())):string>
-- !query output
0000


-- !query
select hex(bitand(unhex(''), unhex('11223344')))
-- !query schema
struct<hex(bitand(unhex(), unhex(11223344))):string>
-- !query output
00000000


-- !query
select hex(bitand(unhex('aabb'), unhex('11223344')))
-- !query schema
struct<hex(bitand(unhex(aabb), unhex(11223344))):string>
-- !query output
00002200


-- !query
select hex(bitand(unhex('aabbccdd'), unhex('11223344')))
-- !query schema
struct<hex(bitand(unhex(aabbccdd), unhex(11223344))):string>
-- !query output
00220044


-- !query
select bitand(unhex('aabb'), unhex('11223344')) = bitand(unhex('11223344'), unhex('aabb'))
-- !query schema
struct<(bitand(unhex(aabb), unhex(11223344)) = bitand(unhex(11223344), unhex(aabb))):boolean>
-- !query output
true


-- !query
select bitand(unhex('aabbccdd'), unhex('11223344')) = bitand(unhex('11223344'), unhex('aabbccdd'))
-- !query schema
struct<(bitand(unhex(aabbccdd), unhex(11223344)) = bitand(unhex(11223344), unhex(aabbccdd))):boolean>
-- !query output
true


-- !query
select hex(bitnot(null))
-- !query schema
struct<hex(bitnot(NULL)):string>
-- !query output
NULL


-- !query
select hex(bitnot(unhex('')))
-- !query schema
struct<hex(bitnot(unhex())):string>
-- !query output



-- !query
select hex(bitnot(unhex('aabb')))
-- !query schema
struct<hex(bitnot(unhex(aabb))):string>
-- !query output
5544


-- !query
select hex(bitor(null, unhex('11223344')))
-- !query schema
struct<hex(bitor(NULL, unhex(11223344))):string>
-- !query output
NULL


-- !query
select hex(bitor(unhex('aabb'), null))
-- !query schema
struct<hex(bitor(unhex(aabb), NULL)):string>
-- !query output
NULL


-- !query
select hex(bitor(unhex(''), unhex('')))
-- !query schema
struct<hex(bitor(unhex(), unhex())):string>
-- !query output



-- !query
select hex(bitor(unhex('aabb'), unhex('')))
-- !query schema
struct<hex(bitor(unhex(aabb), unhex())):string>
-- !query output
AABB


-- !query
select hex(bitor(unhex(''), unhex('11223344')))
-- !query schema
struct<hex(bitor(unhex(), unhex(11223344))):string>
-- !query output
11223344


-- !query
select hex(bitor(unhex('aabb'), unhex('11223344')))
-- !query schema
struct<hex(bitor(unhex(aabb), unhex(11223344))):string>
-- !query output
1122BBFF


-- !query
select hex(bitor(unhex('aabbccdd'), unhex('11223344')))
-- !query schema
struct<hex(bitor(unhex(aabbccdd), unhex(11223344))):string>
-- !query output
BBBBFFDD


-- !query
select bitor(unhex('aabb'), unhex('11223344')) = bitor(unhex('11223344'), unhex('aabb'))
-- !query schema
struct<(bitor(unhex(aabb), unhex(11223344)) = bitor(unhex(11223344), unhex(aabb))):boolean>
-- !query output
true


-- !query
select bitor(unhex('aabbccdd'), unhex('11223344')) = bitor(unhex('11223344'), unhex('aabbccdd'))
-- !query schema
struct<(bitor(unhex(aabbccdd), unhex(11223344)) = bitor(unhex(11223344), unhex(aabbccdd))):boolean>
-- !query output
true


-- !query
select hex(bitxor(null, unhex('11223344')))
-- !query schema
struct<hex(bitxor(NULL, unhex(11223344))):string>
-- !query output
NULL


-- !query
select hex(bitxor(unhex('aabb'), null))
-- !query schema
struct<hex(bitxor(unhex(aabb), NULL)):string>
-- !query output
NULL


-- !query
select hex(bitxor(unhex(''), unhex('')))
-- !query schema
struct<hex(bitxor(unhex(), unhex())):string>
-- !query output



-- !query
select hex(bitxor(unhex('aabb'), unhex('')))
-- !query schema
struct<hex(bitxor(unhex(aabb), unhex())):string>
-- !query output
AABB


-- !query
select hex(bitxor(unhex(''), unhex('11223344')))
-- !query schema
struct<hex(bitxor(unhex(), unhex(11223344))):string>
-- !query output
11223344


-- !query
select hex(bitxor(unhex('aabb'), unhex('11223344')))
-- !query schema
struct<hex(bitxor(unhex(aabb), unhex(11223344))):string>
-- !query output
112299FF


-- !query
select hex(bitxor(unhex('aabbccdd'), unhex('11223344')))
-- !query schema
struct<hex(bitxor(unhex(aabbccdd), unhex(11223344))):string>
-- !query output
BB99FF99


-- !query
select bitxor(unhex('aabb'), unhex('11223344')) = bitxor(unhex('11223344'), unhex('aabb'))
-- !query schema
struct<(bitxor(unhex(aabb), unhex(11223344)) = bitxor(unhex(11223344), unhex(aabb))):boolean>
-- !query output
true


-- !query
select bitxor(unhex('aabbccdd'), unhex('11223344')) = bitxor(unhex('11223344'), unhex('aabbccdd'))
-- !query schema
struct<(bitxor(unhex(aabbccdd), unhex(11223344)) = bitxor(unhex(11223344), unhex(aabbccdd))):boolean>
-- !query output
true
