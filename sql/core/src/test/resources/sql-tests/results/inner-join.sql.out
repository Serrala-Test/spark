-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 11


-- !query 0
CREATE TEMPORARY VIEW t1 AS SELECT * FROM VALUES (1) AS GROUPING(a)
-- !query 0 schema
struct<>
-- !query 0 output



-- !query 1
CREATE TEMPORARY VIEW t2 AS SELECT * FROM VALUES (1) AS GROUPING(a)
-- !query 1 schema
struct<>
-- !query 1 output



-- !query 2
CREATE TEMPORARY VIEW t3 AS SELECT * FROM VALUES (1), (1) AS GROUPING(a)
-- !query 2 schema
struct<>
-- !query 2 output



-- !query 3
CREATE TEMPORARY VIEW t4 AS SELECT * FROM VALUES (1), (1) AS GROUPING(a)
-- !query 3 schema
struct<>
-- !query 3 output



-- !query 4
CREATE TEMPORARY VIEW ta AS
SELECT a, 'a' AS tag FROM t1
UNION ALL
SELECT a, 'b' AS tag FROM t2
-- !query 4 schema
struct<>
-- !query 4 output



-- !query 5
CREATE TEMPORARY VIEW tb AS
SELECT a, 'a' AS tag FROM t3
UNION ALL
SELECT a, 'b' AS tag FROM t4
-- !query 5 schema
struct<>
-- !query 5 output



-- !query 6
SELECT tb.* FROM ta INNER JOIN tb ON ta.a = tb.a AND ta.tag = tb.tag
-- !query 6 schema
struct<a:int,tag:string>
-- !query 6 output
1	a
1	a
1	b
1	b


-- !query 7
SET spark.sql.autoBroadcastJoinThreshold = -1
-- !query 7 schema
struct<key:string,value:string>
-- !query 7 output
spark.sql.autoBroadcastJoinThreshold	-1


-- !query 8
CREATE TEMPORARY VIEW t5 AS SELECT * FROM VALUES (1, 1), (3, 0) AS (k, v) DISTRIBUTE BY (k)
-- !query 8 schema
struct<>
-- !query 8 output



-- !query 9
CREATE TEMPORARY VIEW t6 AS SELECT * FROM VALUES (1, 1), (5, 1) AS (k, v) DISTRIBUTE BY (k)
-- !query 9 schema
struct<>
-- !query 9 output



-- !query 10
EXPLAIN SELECT * FROM (SELECT k AS k1 FROM t5) t5a
INNER JOIN (SELECT k AS k1 FROM t6) t6a ON t5a.k1 = t6a.k1
-- !query 10 schema
struct<plan:string>
-- !query 10 output
== Physical Plan ==
*SortMergeJoin [k1#x], [k1#x], Inner
:- *Sort [k1#x ASC NULLS FIRST], false, 0
:  +- *Project [k#x AS k1#x]
:     +- Exchange hashpartitioning(k#x, 200)
:        +- LocalTableScan [k#x]
+- *Sort [k1#x ASC NULLS FIRST], false, 0
   +- *Project [k#x AS k1#x]
      +- Exchange hashpartitioning(k#x, 200)
         +- LocalTableScan [k#x]
