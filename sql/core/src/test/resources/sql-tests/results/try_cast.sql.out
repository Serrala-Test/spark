-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 53


-- !query
SELECT TRY_CAST('1.23' AS int)
-- !query schema
struct<CAST(1.23 AS INT):int>
-- !query output
NULL


-- !query
SELECT TRY_CAST('1.23' AS long)
-- !query schema
struct<CAST(1.23 AS BIGINT):bigint>
-- !query output
NULL


-- !query
SELECT TRY_CAST('-4.56' AS int)
-- !query schema
struct<CAST(-4.56 AS INT):int>
-- !query output
NULL


-- !query
SELECT TRY_CAST('-4.56' AS long)
-- !query schema
struct<CAST(-4.56 AS BIGINT):bigint>
-- !query output
NULL


-- !query
SELECT TRY_CAST('abc' AS int)
-- !query schema
struct<CAST(abc AS INT):int>
-- !query output
NULL


-- !query
SELECT TRY_CAST('abc' AS long)
-- !query schema
struct<CAST(abc AS BIGINT):bigint>
-- !query output
NULL


-- !query
SELECT TRY_CAST('1234567890123' AS int)
-- !query schema
struct<CAST(1234567890123 AS INT):int>
-- !query output
NULL


-- !query
SELECT TRY_CAST('12345678901234567890123' AS long)
-- !query schema
struct<CAST(12345678901234567890123 AS BIGINT):bigint>
-- !query output
NULL


-- !query
SELECT TRY_CAST('' AS int)
-- !query schema
struct<CAST( AS INT):int>
-- !query output
NULL


-- !query
SELECT TRY_CAST('' AS long)
-- !query schema
struct<CAST( AS BIGINT):bigint>
-- !query output
NULL


-- !query
SELECT TRY_CAST(NULL AS int)
-- !query schema
struct<CAST(NULL AS INT):int>
-- !query output
NULL


-- !query
SELECT TRY_CAST(NULL AS long)
-- !query schema
struct<CAST(NULL AS BIGINT):bigint>
-- !query output
NULL


-- !query
SELECT TRY_CAST('123.a' AS int)
-- !query schema
struct<CAST(123.a AS INT):int>
-- !query output
NULL


-- !query
SELECT TRY_CAST('123.a' AS long)
-- !query schema
struct<CAST(123.a AS BIGINT):bigint>
-- !query output
NULL


-- !query
SELECT TRY_CAST('-2147483648' AS int)
-- !query schema
struct<CAST(-2147483648 AS INT):int>
-- !query output
-2147483648


-- !query
SELECT TRY_CAST('-2147483649' AS int)
-- !query schema
struct<CAST(-2147483649 AS INT):int>
-- !query output
NULL


-- !query
SELECT TRY_CAST('2147483647' AS int)
-- !query schema
struct<CAST(2147483647 AS INT):int>
-- !query output
2147483647


-- !query
SELECT TRY_CAST('2147483648' AS int)
-- !query schema
struct<CAST(2147483648 AS INT):int>
-- !query output
NULL


-- !query
SELECT TRY_CAST('-9223372036854775808' AS long)
-- !query schema
struct<CAST(-9223372036854775808 AS BIGINT):bigint>
-- !query output
-9223372036854775808


-- !query
SELECT TRY_CAST('-9223372036854775809' AS long)
-- !query schema
struct<CAST(-9223372036854775809 AS BIGINT):bigint>
-- !query output
NULL


-- !query
SELECT TRY_CAST('9223372036854775807' AS long)
-- !query schema
struct<CAST(9223372036854775807 AS BIGINT):bigint>
-- !query output
9223372036854775807


-- !query
SELECT TRY_CAST('9223372036854775808' AS long)
-- !query schema
struct<CAST(9223372036854775808 AS BIGINT):bigint>
-- !query output
NULL


-- !query
SELECT HEX(TRY_CAST('abc' AS binary))
-- !query schema
struct<hex(CAST(abc AS BINARY)):string>
-- !query output
616263


-- !query
SELECT HEX(TRY_CAST(TRY_CAST(123 AS byte) AS binary))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'CAST(CAST(123 AS TINYINT) AS BINARY)' due to data type mismatch: 
 cannot cast tinyint to binary with ANSI mode on.
 If you have to cast tinyint to binary, you can set spark.sql.ansi.enabled as false.
; line 1 pos 11


-- !query
SELECT HEX(TRY_CAST(TRY_CAST(-123 AS byte) AS binary))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'CAST(CAST(-123 AS TINYINT) AS BINARY)' due to data type mismatch: 
 cannot cast tinyint to binary with ANSI mode on.
 If you have to cast tinyint to binary, you can set spark.sql.ansi.enabled as false.
; line 1 pos 11


-- !query
SELECT HEX(TRY_CAST(123S AS binary))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'CAST(123S AS BINARY)' due to data type mismatch: 
 cannot cast smallint to binary with ANSI mode on.
 If you have to cast smallint to binary, you can set spark.sql.ansi.enabled as false.
; line 1 pos 11


-- !query
SELECT HEX(TRY_CAST(-123S AS binary))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'CAST(-123S AS BINARY)' due to data type mismatch: 
 cannot cast smallint to binary with ANSI mode on.
 If you have to cast smallint to binary, you can set spark.sql.ansi.enabled as false.
; line 1 pos 11


-- !query
SELECT HEX(TRY_CAST(123 AS binary))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'CAST(123 AS BINARY)' due to data type mismatch: 
 cannot cast int to binary with ANSI mode on.
 If you have to cast int to binary, you can set spark.sql.ansi.enabled as false.
; line 1 pos 11


-- !query
SELECT HEX(TRY_CAST(-123 AS binary))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'CAST(-123 AS BINARY)' due to data type mismatch: 
 cannot cast int to binary with ANSI mode on.
 If you have to cast int to binary, you can set spark.sql.ansi.enabled as false.
; line 1 pos 11


-- !query
SELECT HEX(TRY_CAST(123L AS binary))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'CAST(123L AS BINARY)' due to data type mismatch: 
 cannot cast bigint to binary with ANSI mode on.
 If you have to cast bigint to binary, you can set spark.sql.ansi.enabled as false.
; line 1 pos 11


-- !query
SELECT HEX(TRY_CAST(-123L AS binary))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'CAST(-123L AS BINARY)' due to data type mismatch: 
 cannot cast bigint to binary with ANSI mode on.
 If you have to cast bigint to binary, you can set spark.sql.ansi.enabled as false.
; line 1 pos 11


-- !query
SELECT TRY_CAST('interval 3 month 1 hour' AS interval)
-- !query schema
struct<CAST(interval 3 month 1 hour AS INTERVAL):interval>
-- !query output
3 months 1 hours


-- !query
SELECT TRY_CAST(interval 3 month 1 hour AS string)
-- !query schema
struct<CAST(INTERVAL '3 months 1 hours' AS STRING):string>
-- !query output
3 months 1 hours


-- !query
select TRY_CAST(' 1' as tinyint)
-- !query schema
struct<CAST( 1 AS TINYINT):tinyint>
-- !query output
1


-- !query
select TRY_CAST(' 1\t' as tinyint)
-- !query schema
struct<CAST( 1	 AS TINYINT):tinyint>
-- !query output
1


-- !query
select TRY_CAST(' 1' as smallint)
-- !query schema
struct<CAST( 1 AS SMALLINT):smallint>
-- !query output
1


-- !query
select TRY_CAST(' 1' as INT)
-- !query schema
struct<CAST( 1 AS INT):int>
-- !query output
1


-- !query
select TRY_CAST(' 1' as bigint)
-- !query schema
struct<CAST( 1 AS BIGINT):bigint>
-- !query output
1


-- !query
select TRY_CAST(' 1' as float)
-- !query schema
struct<CAST( 1 AS FLOAT):float>
-- !query output
1.0


-- !query
select TRY_CAST(' 1 ' as DOUBLE)
-- !query schema
struct<CAST( 1  AS DOUBLE):double>
-- !query output
1.0


-- !query
select TRY_CAST('1.0 ' as DEC)
-- !query schema
struct<CAST(1.0  AS DECIMAL(10,0)):decimal(10,0)>
-- !query output
1


-- !query
select TRY_CAST('1中文' as tinyint)
-- !query schema
struct<CAST(1中文 AS TINYINT):tinyint>
-- !query output
NULL


-- !query
select TRY_CAST('1中文' as smallint)
-- !query schema
struct<CAST(1中文 AS SMALLINT):smallint>
-- !query output
NULL


-- !query
select TRY_CAST('1中文' as INT)
-- !query schema
struct<CAST(1中文 AS INT):int>
-- !query output
NULL


-- !query
select TRY_CAST('中文1' as bigint)
-- !query schema
struct<CAST(中文1 AS BIGINT):bigint>
-- !query output
NULL


-- !query
select TRY_CAST('1中文' as bigint)
-- !query schema
struct<CAST(1中文 AS BIGINT):bigint>
-- !query output
NULL


-- !query
select TRY_CAST('\t\t true \n\r ' as boolean)
-- !query schema
struct<CAST(		 true 
  AS BOOLEAN):boolean>
-- !query output
true


-- !query
select TRY_CAST('\t\n false \t\r' as boolean)
-- !query schema
struct<CAST(	
 false 	 AS BOOLEAN):boolean>
-- !query output
false


-- !query
select TRY_CAST('\t\n xyz \t\r' as boolean)
-- !query schema
struct<CAST(	
 xyz 	 AS BOOLEAN):boolean>
-- !query output
NULL


-- !query
SELECT TRY_CAST("2021-01-01" AS date)
-- !query schema
struct<CAST(2021-01-01 AS DATE):date>
-- !query output
2021-01-01


-- !query
SELECT TRY_CAST("2021-101-01" AS date)
-- !query schema
struct<CAST(2021-101-01 AS DATE):date>
-- !query output
NULL


-- !query
SELECT TRY_CAST("2021-01-01 00:00:00" AS timestamp)
-- !query schema
struct<CAST(2021-01-01 00:00:00 AS TIMESTAMP):timestamp>
-- !query output
2021-01-01 00:00:00


-- !query
SELECT TRY_CAST("2021-101-01 00:00:00" AS timestamp)
-- !query schema
struct<CAST(2021-101-01 00:00:00 AS TIMESTAMP):timestamp>
-- !query output
NULL
