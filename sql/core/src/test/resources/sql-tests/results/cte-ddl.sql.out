-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 114


-- !query
CREATE NAMESPACE IF NOT EXISTS query_ddl_namespace
-- !query schema
struct<>
-- !query output



-- !query
USE NAMESPACE query_ddl_namespace
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE test_show_tables(a INT, b STRING, c INT) using parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE test_show_table_properties (a INT, b STRING, c INT) USING parquet TBLPROPERTIES('p1'='v1', 'p2'='v2')
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE test_show_partitions(a String, b Int, c String, d String) USING parquet PARTITIONED BY (c, d)
-- !query schema
struct<>
-- !query output



-- !query
ALTER TABLE test_show_partitions ADD PARTITION (c='Us', d=1)
-- !query schema
struct<>
-- !query output



-- !query
ALTER TABLE test_show_partitions ADD PARTITION (c='Us', d=2)
-- !query schema
struct<>
-- !query output



-- !query
ALTER TABLE test_show_partitions ADD PARTITION (c='Cn', d=1)
-- !query schema
struct<>
-- !query output



-- !query
CREATE VIEW view_1 AS SELECT * FROM test_show_tables
-- !query schema
struct<>
-- !query output



-- !query
CREATE VIEW view_2 AS SELECT * FROM test_show_tables WHERE c=1
-- !query schema
struct<>
-- !query output



-- !query
CREATE TEMPORARY VIEW test_show_views(e int) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE GLOBAL TEMP VIEW test_global_show_views AS SELECT 1 as col1
-- !query schema
struct<>
-- !query output



-- !query
SHOW NAMESPACES
-- !query schema
struct<namespace:string>
-- !query output
default
query_ddl_namespace


-- !query
WITH s AS (SHOW NAMESPACES) SELECT * FROM s
-- !query schema
struct<namespace:string>
-- !query output
default
query_ddl_namespace


-- !query
WITH s AS (SHOW NAMESPACES) SELECT namespace FROM s
-- !query schema
struct<namespace:string>
-- !query output
default
query_ddl_namespace


-- !query
WITH s AS (SHOW NAMESPACES) SELECT * FROM s WHERE namespace = 'query_ddl_namespace'
-- !query schema
struct<namespace:string>
-- !query output
query_ddl_namespace


-- !query
WITH s AS (SHOW NAMESPACES) SELECT namespace FROM s WHERE namespace = 'query_ddl_namespace'
-- !query schema
struct<namespace:string>
-- !query output
query_ddl_namespace


-- !query
WITH s(n) AS (SHOW NAMESPACES) SELECT * FROM s
-- !query schema
struct<n:string>
-- !query output
default
query_ddl_namespace


-- !query
WITH s(n) AS (SHOW NAMESPACES) SELECT n FROM s
-- !query schema
struct<n:string>
-- !query output
default
query_ddl_namespace


-- !query
WITH s(n) AS (SHOW NAMESPACES) SELECT * FROM s WHERE n = 'query_ddl_namespace'
-- !query schema
struct<n:string>
-- !query output
query_ddl_namespace


-- !query
WITH s(n) AS (SHOW NAMESPACES) SELECT n FROM s WHERE n = 'query_ddl_namespace'
-- !query schema
struct<n:string>
-- !query output
query_ddl_namespace


-- !query
WITH s AS (SHOW NAMESPACES) SELECT namespace FROM s ORDER BY namespace
-- !query schema
struct<namespace:string>
-- !query output
default
query_ddl_namespace


-- !query
WITH s AS (SHOW NAMESPACES) SELECT namespace FROM s GROUP BY namespace
-- !query schema
struct<namespace:string>
-- !query output
default
query_ddl_namespace


-- !query
WITH s(n) AS (SHOW NAMESPACES) SELECT n FROM s ORDER BY n
-- !query schema
struct<n:string>
-- !query output
default
query_ddl_namespace


-- !query
WITH s(n) AS (SHOW NAMESPACES) SELECT n FROM s GROUP BY n
-- !query schema
struct<n:string>
-- !query output
default
query_ddl_namespace


-- !query
SHOW TABLES
-- !query schema
struct<namespace:string,tableName:string,isTemporary:boolean>
-- !query output
test_show_partitions
test_show_table_properties
test_show_tables
test_show_views
view_1
view_2


-- !query
WITH s AS (SHOW TABLES) SELECT * FROM s
-- !query schema
struct<namespace:string,tableName:string,isTemporary:boolean>
-- !query output
test_show_partitions
test_show_table_properties
test_show_tables
test_show_views
view_1
view_2


-- !query
WITH s AS (SHOW TABLES) SELECT tableName FROM s
-- !query schema
struct<tableName:string>
-- !query output
test_show_partitions
test_show_table_properties
test_show_tables
test_show_views
view_1
view_2


-- !query
WITH s AS (SHOW TABLES) SELECT * FROM s WHERE tableName = 'test_show_tables'
-- !query schema
struct<namespace:string,tableName:string,isTemporary:boolean>
-- !query output
query_ddl_namespace	test_show_tables	false


-- !query
WITH s AS (SHOW TABLES) SELECT tableName FROM s WHERE tableName = 'test_show_tables'
-- !query schema
struct<tableName:string>
-- !query output
test_show_tables


-- !query
WITH s(ns, tn, t) AS (SHOW TABLES) SELECT * FROM s
-- !query schema
struct<ns:string,tn:string,t:boolean>
-- !query output
	test_show_views	true
query_ddl_namespace	test_show_partitions	false
query_ddl_namespace	test_show_table_properties	false
query_ddl_namespace	test_show_tables	false
query_ddl_namespace	view_1	false
query_ddl_namespace	view_2	false


-- !query
WITH s(ns, tn, t) AS (SHOW TABLES) SELECT tn FROM s
-- !query schema
struct<tn:string>
-- !query output
test_show_partitions
test_show_table_properties
test_show_tables
test_show_views
view_1
view_2


-- !query
WITH s(ns, tn, t) AS (SHOW TABLES) SELECT * FROM s WHERE tn = 'test_show_tables'
-- !query schema
struct<ns:string,tn:string,t:boolean>
-- !query output
query_ddl_namespace	test_show_tables	false


-- !query
WITH s(ns, tn, t) AS (SHOW TABLES) SELECT tn FROM s WHERE tn = 'test_show_tables'
-- !query schema
struct<tn:string>
-- !query output
test_show_tables


-- !query
WITH s AS (SHOW TABLES) SELECT tableName FROM s ORDER BY namespace, tableName
-- !query schema
struct<tableName:string>
-- !query output
test_show_views
test_show_partitions
test_show_table_properties
test_show_tables
view_1
view_2


-- !query
WITH s AS (SHOW TABLES) SELECT COUNT(tableName) FROM s GROUP BY namespace
-- !query schema
struct<count(tableName):bigint>
-- !query output
1
5


-- !query
WITH s(ns, tn, t) AS (SHOW TABLES) SELECT tn FROM s ORDER BY ns, tn
-- !query schema
struct<tn:string>
-- !query output
test_show_views
test_show_partitions
test_show_table_properties
test_show_tables
view_1
view_2


-- !query
WITH s(ns, tn, t) AS (SHOW TABLES) SELECT COUNT(tn) FROM s GROUP BY ns
-- !query schema
struct<count(tn):bigint>
-- !query output
1
5


-- !query
SHOW TABLE EXTENDED LIKE 'test_show_table*'
-- !query schema
struct<namespace:string,tableName:string,isTemporary:boolean,information:string>
-- !query output
query_ddl_namespace	test_show_table_properties	false	Database: query_ddl_namespace
Table: test_show_table_properties
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type: MANAGED
Provider: parquet
Table Properties: [p1=v1, p2=v2]
Location [not included in comparison]/{warehouse_dir}/query_ddl_namespace.db/test_show_table_properties
Schema: root
 |-- a: integer (nullable = true)
 |-- b: string (nullable = true)
 |-- c: integer (nullable = true)


query_ddl_namespace	test_show_tables	false	Database: query_ddl_namespace
Table: test_show_tables
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type: MANAGED
Provider: parquet
Location [not included in comparison]/{warehouse_dir}/query_ddl_namespace.db/test_show_tables
Schema: root
 |-- a: integer (nullable = true)
 |-- b: string (nullable = true)
 |-- c: integer (nullable = true)


-- !query
WITH s AS (SHOW TABLE EXTENDED LIKE 'test_show_table*') SELECT * FROM s
-- !query schema
struct<namespace:string,tableName:string,isTemporary:boolean,information:string>
-- !query output
query_ddl_namespace	test_show_table_properties	false	Database: query_ddl_namespace
Table: test_show_table_properties
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type: MANAGED
Provider: parquet
Table Properties: [p1=v1, p2=v2]
Location [not included in comparison]/{warehouse_dir}/query_ddl_namespace.db/test_show_table_properties
Schema: root
 |-- a: integer (nullable = true)
 |-- b: string (nullable = true)
 |-- c: integer (nullable = true)


query_ddl_namespace	test_show_tables	false	Database: query_ddl_namespace
Table: test_show_tables
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type: MANAGED
Provider: parquet
Location [not included in comparison]/{warehouse_dir}/query_ddl_namespace.db/test_show_tables
Schema: root
 |-- a: integer (nullable = true)
 |-- b: string (nullable = true)
 |-- c: integer (nullable = true)


-- !query
WITH s AS (SHOW TABLE EXTENDED LIKE 'test_show_table*') SELECT isTemporary FROM s
-- !query schema
struct<isTemporary:boolean>
-- !query output
false
false


-- !query
WITH s AS (SHOW TABLE EXTENDED LIKE 'test_show_table*') SELECT * FROM s WHERE tableName = 'test_show_tables'
-- !query schema
struct<namespace:string,tableName:string,isTemporary:boolean,information:string>
-- !query output
query_ddl_namespace	test_show_tables	false	Database: query_ddl_namespace
Table: test_show_tables
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type: MANAGED
Provider: parquet
Location [not included in comparison]/{warehouse_dir}/query_ddl_namespace.db/test_show_tables
Schema: root
 |-- a: integer (nullable = true)
 |-- b: string (nullable = true)
 |-- c: integer (nullable = true)


-- !query
WITH s AS (SHOW TABLE EXTENDED LIKE 'test_show_table*') SELECT isTemporary FROM s WHERE tableName = 'test_show_tables'
-- !query schema
struct<isTemporary:boolean>
-- !query output
false


-- !query
WITH s(ns, tn, t, info) AS (SHOW TABLE EXTENDED LIKE 'test_show_table*') SELECT * FROM s
-- !query schema
struct<ns:string,tn:string,t:boolean,info:string>
-- !query output
query_ddl_namespace	test_show_table_properties	false	Database: query_ddl_namespace
Table: test_show_table_properties
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type: MANAGED
Provider: parquet
Table Properties: [p1=v1, p2=v2]
Location [not included in comparison]/{warehouse_dir}/query_ddl_namespace.db/test_show_table_properties
Schema: root
 |-- a: integer (nullable = true)
 |-- b: string (nullable = true)
 |-- c: integer (nullable = true)


query_ddl_namespace	test_show_tables	false	Database: query_ddl_namespace
Table: test_show_tables
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type: MANAGED
Provider: parquet
Location [not included in comparison]/{warehouse_dir}/query_ddl_namespace.db/test_show_tables
Schema: root
 |-- a: integer (nullable = true)
 |-- b: string (nullable = true)
 |-- c: integer (nullable = true)


-- !query
WITH s(ns, tn, t, info) AS (SHOW TABLE EXTENDED LIKE 'test_show_table*') SELECT t FROM s
-- !query schema
struct<t:boolean>
-- !query output
false
false


-- !query
WITH s(ns, tn, t, info) AS (SHOW TABLE EXTENDED LIKE 'test_show_table*') SELECT * FROM s WHERE tn = 'test_show_tables'
-- !query schema
struct<ns:string,tn:string,t:boolean,info:string>
-- !query output
query_ddl_namespace	test_show_tables	false	Database: query_ddl_namespace
Table: test_show_tables
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type: MANAGED
Provider: parquet
Location [not included in comparison]/{warehouse_dir}/query_ddl_namespace.db/test_show_tables
Schema: root
 |-- a: integer (nullable = true)
 |-- b: string (nullable = true)
 |-- c: integer (nullable = true)


-- !query
WITH s(ns, tn, t, info) AS (SHOW TABLE EXTENDED LIKE 'test_show_table*') SELECT t FROM s WHERE tn = 'test_show_tables'
-- !query schema
struct<t:boolean>
-- !query output
false


-- !query
WITH s AS (SHOW TABLE EXTENDED LIKE 'test_show_table*') SELECT * FROM s ORDER BY tableName
-- !query schema
struct<namespace:string,tableName:string,isTemporary:boolean,information:string>
-- !query output
query_ddl_namespace	test_show_table_properties	false	Database: query_ddl_namespace
Table: test_show_table_properties
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type: MANAGED
Provider: parquet
Table Properties: [p1=v1, p2=v2]
Location [not included in comparison]/{warehouse_dir}/query_ddl_namespace.db/test_show_table_properties
Schema: root
 |-- a: integer (nullable = true)
 |-- b: string (nullable = true)
 |-- c: integer (nullable = true)


query_ddl_namespace	test_show_tables	false	Database: query_ddl_namespace
Table: test_show_tables
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type: MANAGED
Provider: parquet
Location [not included in comparison]/{warehouse_dir}/query_ddl_namespace.db/test_show_tables
Schema: root
 |-- a: integer (nullable = true)
 |-- b: string (nullable = true)
 |-- c: integer (nullable = true)


-- !query
WITH s AS (SHOW TABLE EXTENDED LIKE 'test_show_table*') SELECT COUNT(tableName) FROM s GROUP BY namespace
-- !query schema
struct<count(tableName):bigint>
-- !query output
2


-- !query
WITH s(ns, tn, t, info) AS (SHOW TABLE EXTENDED LIKE 'test_show_table*') SELECT * FROM s ORDER BY tn
-- !query schema
struct<ns:string,tn:string,t:boolean,info:string>
-- !query output
query_ddl_namespace	test_show_table_properties	false	Database: query_ddl_namespace
Table: test_show_table_properties
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type: MANAGED
Provider: parquet
Table Properties: [p1=v1, p2=v2]
Location [not included in comparison]/{warehouse_dir}/query_ddl_namespace.db/test_show_table_properties
Schema: root
 |-- a: integer (nullable = true)
 |-- b: string (nullable = true)
 |-- c: integer (nullable = true)


query_ddl_namespace	test_show_tables	false	Database: query_ddl_namespace
Table: test_show_tables
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type: MANAGED
Provider: parquet
Location [not included in comparison]/{warehouse_dir}/query_ddl_namespace.db/test_show_tables
Schema: root
 |-- a: integer (nullable = true)
 |-- b: string (nullable = true)
 |-- c: integer (nullable = true)


-- !query
WITH s(ns, tn, t, info) AS (SHOW TABLE EXTENDED LIKE 'test_show_table*') SELECT COUNT(tn) FROM s GROUP BY ns
-- !query schema
struct<count(tn):bigint>
-- !query output
2


-- !query
SHOW TBLPROPERTIES test_show_table_properties
-- !query schema
struct<key:string,value:string>
-- !query output
p1	v1
p2	v2


-- !query
WITH s AS (SHOW TBLPROPERTIES test_show_table_properties) SELECT * FROM s
-- !query schema
struct<key:string,value:string>
-- !query output
p1	v1
p2	v2


-- !query
WITH s AS (SHOW TBLPROPERTIES test_show_table_properties) SELECT key FROM s
-- !query schema
struct<key:string>
-- !query output
p1
p2


-- !query
WITH s AS (SHOW TBLPROPERTIES test_show_table_properties) SELECT * FROM s WHERE key = 'p1'
-- !query schema
struct<key:string,value:string>
-- !query output
p1	v1


-- !query
WITH s AS (SHOW TBLPROPERTIES test_show_table_properties) SELECT key FROM s WHERE key = 'p1'
-- !query schema
struct<key:string>
-- !query output
p1


-- !query
WITH s(k, v) AS (SHOW TBLPROPERTIES test_show_table_properties) SELECT * FROM s
-- !query schema
struct<k:string,v:string>
-- !query output
p1	v1
p2	v2


-- !query
WITH s(k, v) AS (SHOW TBLPROPERTIES test_show_table_properties) SELECT k FROM s
-- !query schema
struct<k:string>
-- !query output
p1
p2


-- !query
WITH s(k, v) AS (SHOW TBLPROPERTIES test_show_table_properties) SELECT * FROM s WHERE k = 'p1'
-- !query schema
struct<k:string,v:string>
-- !query output
p1	v1


-- !query
WITH s(k, v) AS (SHOW TBLPROPERTIES test_show_table_properties) SELECT k FROM s WHERE k = 'p1'
-- !query schema
struct<k:string>
-- !query output
p1


-- !query
WITH s(k, v) AS (SHOW TBLPROPERTIES test_show_table_properties) SELECT k FROM s ORDER BY v
-- !query schema
struct<k:string>
-- !query output
p1
p2


-- !query
WITH s(k, v) AS (SHOW TBLPROPERTIES test_show_table_properties) SELECT COUNT(k) FROM s GROUP BY v
-- !query schema
struct<count(k):bigint>
-- !query output
1
1


-- !query
SHOW PARTITIONS test_show_partitions
-- !query schema
struct<partition:string>
-- !query output
c=Cn/d=1
c=Us/d=1
c=Us/d=2


-- !query
WITH s AS (SHOW PARTITIONS test_show_partitions) SELECT * FROM s
-- !query schema
struct<partition:string>
-- !query output
c=Cn/d=1
c=Us/d=1
c=Us/d=2


-- !query
WITH s AS (SHOW PARTITIONS test_show_partitions) SELECT partition FROM s
-- !query schema
struct<partition:string>
-- !query output
c=Cn/d=1
c=Us/d=1
c=Us/d=2


-- !query
WITH s AS (SHOW PARTITIONS test_show_partitions) SELECT * FROM s WHERE partition = 'c=Us/d=1'
-- !query schema
struct<partition:string>
-- !query output
c=Us/d=1


-- !query
WITH s AS (SHOW PARTITIONS test_show_partitions) SELECT partition FROM s WHERE partition = 'c=Us/d=1'
-- !query schema
struct<partition:string>
-- !query output
c=Us/d=1


-- !query
WITH s(p) AS (SHOW PARTITIONS test_show_partitions) SELECT * FROM s
-- !query schema
struct<p:string>
-- !query output
c=Cn/d=1
c=Us/d=1
c=Us/d=2


-- !query
WITH s(p) AS (SHOW PARTITIONS test_show_partitions) SELECT p FROM s
-- !query schema
struct<p:string>
-- !query output
c=Cn/d=1
c=Us/d=1
c=Us/d=2


-- !query
WITH s(p) AS (SHOW PARTITIONS test_show_partitions) SELECT * FROM s WHERE p = 'c=Us/d=1'
-- !query schema
struct<p:string>
-- !query output
c=Us/d=1


-- !query
WITH s(p) AS (SHOW PARTITIONS test_show_partitions) SELECT p FROM s WHERE p = 'c=Us/d=1'
-- !query schema
struct<p:string>
-- !query output
c=Us/d=1


-- !query
WITH s(p) AS (SHOW PARTITIONS test_show_partitions) SELECT p FROM s ORDER BY p
-- !query schema
struct<p:string>
-- !query output
c=Cn/d=1
c=Us/d=1
c=Us/d=2


-- !query
WITH s(p) AS (SHOW PARTITIONS test_show_partitions) SELECT p FROM s GROUP BY p
-- !query schema
struct<p:string>
-- !query output
c=Cn/d=1
c=Us/d=1
c=Us/d=2


-- !query
SHOW COLUMNS in test_show_tables
-- !query schema
struct<col_name:string>
-- !query output
a
b
c


-- !query
WITH s AS (SHOW COLUMNS in test_show_tables) SELECT * FROM s
-- !query schema
struct<col_name:string>
-- !query output
a
b
c


-- !query
WITH s AS (SHOW COLUMNS in test_show_tables) SELECT col_name FROM s
-- !query schema
struct<col_name:string>
-- !query output
a
b
c


-- !query
WITH s AS (SHOW COLUMNS in test_show_tables) SELECT * FROM s WHERE col_name = 'a'
-- !query schema
struct<col_name:string>
-- !query output
a


-- !query
WITH s AS (SHOW COLUMNS in test_show_tables) SELECT col_name FROM s WHERE col_name = 'a'
-- !query schema
struct<col_name:string>
-- !query output
a


-- !query
WITH s(c) AS (SHOW COLUMNS in test_show_tables) SELECT * FROM s
-- !query schema
struct<c:string>
-- !query output
a
b
c


-- !query
WITH s(c) AS (SHOW COLUMNS in test_show_tables) SELECT c FROM s
-- !query schema
struct<c:string>
-- !query output
a
b
c


-- !query
WITH s(c) AS (SHOW COLUMNS in test_show_tables) SELECT * FROM s WHERE c = 'a'
-- !query schema
struct<c:string>
-- !query output
a


-- !query
WITH s(c) AS (SHOW COLUMNS in test_show_tables) SELECT c FROM s WHERE c = 'a'
-- !query schema
struct<c:string>
-- !query output
a


-- !query
WITH s(c) AS (SHOW COLUMNS in test_show_tables) SELECT c FROM s ORDER BY c
-- !query schema
struct<c:string>
-- !query output
a
b
c


-- !query
WITH s(c) AS (SHOW COLUMNS in test_show_tables) SELECT c FROM s GROUP BY c
-- !query schema
struct<c:string>
-- !query output
a
b
c


-- !query
SHOW VIEWS
-- !query schema
struct<namespace:string,viewName:string,isTemporary:boolean>
-- !query output
test_show_views
view_1
view_2


-- !query
WITH s AS (SHOW VIEWS) SELECT * FROM s
-- !query schema
struct<namespace:string,viewName:string,isTemporary:boolean>
-- !query output
test_show_views
view_1
view_2


-- !query
WITH s AS (SHOW VIEWS) SELECT viewName FROM s
-- !query schema
struct<viewName:string>
-- !query output
test_show_views
view_1
view_2


-- !query
WITH s AS (SHOW VIEWS) SELECT * FROM s WHERE viewName = 'test_show_views'
-- !query schema
struct<namespace:string,viewName:string,isTemporary:boolean>
-- !query output
	test_show_views	true


-- !query
WITH s AS (SHOW VIEWS) SELECT viewName FROM s WHERE viewName = 'test_show_views'
-- !query schema
struct<viewName:string>
-- !query output
test_show_views


-- !query
WITH s(ns, vn, t) AS (SHOW VIEWS) SELECT * FROM s
-- !query schema
struct<ns:string,vn:string,t:boolean>
-- !query output
	test_show_views	true
query_ddl_namespace	view_1	false
query_ddl_namespace	view_2	false


-- !query
WITH s(ns, vn, t) AS (SHOW VIEWS) SELECT vn FROM s
-- !query schema
struct<vn:string>
-- !query output
test_show_views
view_1
view_2


-- !query
WITH s(ns, vn, t) AS (SHOW VIEWS) SELECT * FROM s WHERE vn = 'test_show_views'
-- !query schema
struct<ns:string,vn:string,t:boolean>
-- !query output
	test_show_views	true


-- !query
WITH s(ns, vn, t) AS (SHOW VIEWS) SELECT vn FROM s WHERE vn = 'test_show_views'
-- !query schema
struct<vn:string>
-- !query output
test_show_views


-- !query
WITH s(ns, vn, t) AS (SHOW VIEWS) SELECT vn FROM s ORDER BY vn
-- !query schema
struct<vn:string>
-- !query output
test_show_views
view_1
view_2


-- !query
WITH s(ns, vn, t) AS (SHOW VIEWS) SELECT COUNT(vn) FROM s GROUP BY ns
-- !query schema
struct<count(vn):bigint>
-- !query output
1
2


-- !query
WITH s AS (SHOW FUNCTIONS) SELECT * FROM s LIMIT 3
-- !query schema
struct<function:string>
-- !query output
!
!=
%


-- !query
WITH s AS (SHOW FUNCTIONS) SELECT function FROM s LIMIT 3
-- !query schema
struct<function:string>
-- !query output
!
!=
%


-- !query
WITH s AS (SHOW FUNCTIONS) SELECT * FROM s WHERE function LIKE 'an%'
-- !query schema
struct<function:string>
-- !query output
and
any


-- !query
WITH s AS (SHOW FUNCTIONS) SELECT function FROM s WHERE function LIKE 'an%'
-- !query schema
struct<function:string>
-- !query output
and
any


-- !query
WITH s(f) AS (SHOW FUNCTIONS) SELECT * FROM s LIMIT 3
-- !query schema
struct<f:string>
-- !query output
!
!=
%


-- !query
WITH s(f) AS (SHOW FUNCTIONS) SELECT f FROM s LIMIT 3
-- !query schema
struct<f:string>
-- !query output
!
!=
%


-- !query
WITH s(f) AS (SHOW FUNCTIONS) SELECT * FROM s WHERE f LIKE 'an%'
-- !query schema
struct<f:string>
-- !query output
and
any


-- !query
WITH s(f) AS (SHOW FUNCTIONS) SELECT f FROM s WHERE f LIKE 'an%'
-- !query schema
struct<f:string>
-- !query output
and
any


-- !query
WITH s(f) AS (SHOW FUNCTIONS) SELECT f FROM s ORDER BY f LIMIT 3
-- !query schema
struct<f:string>
-- !query output
!
!=
%


-- !query
WITH s(f) AS (SHOW FUNCTIONS) SELECT f FROM s GROUP BY f LIMIT 3
-- !query schema
struct<f:string>
-- !query output
=
acosh
array_intersect


-- !query
DROP VIEW global_temp.test_global_show_views
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW test_show_views
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW view_2
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW view_1
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE test_show_partitions
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE test_show_table_properties
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE test_show_tables
-- !query schema
struct<>
-- !query output



-- !query
USE default
-- !query schema
struct<>
-- !query output



-- !query
DROP NAMESPACE query_ddl_namespace
-- !query schema
struct<>
-- !query output
