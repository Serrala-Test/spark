-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 101


-- !query 0
CREATE TABLE INT4_TBL(f1 int) USING parquet
-- !query 0 schema
struct<>
-- !query 0 output



-- !query 1
INSERT INTO INT4_TBL VALUES (trim('   0  '))
-- !query 1 schema
struct<>
-- !query 1 output



-- !query 2
INSERT INTO INT4_TBL VALUES (trim('123456     '))
-- !query 2 schema
struct<>
-- !query 2 output



-- !query 3
INSERT INTO INT4_TBL VALUES (trim('    -123456'))
-- !query 3 schema
struct<>
-- !query 3 output



-- !query 4
INSERT INTO INT4_TBL VALUES ('2147483647')
-- !query 4 schema
struct<>
-- !query 4 output



-- !query 5
INSERT INTO INT4_TBL VALUES ('-2147483647')
-- !query 5 schema
struct<>
-- !query 5 output



-- !query 6
set spark.sql.arithmetic.checkOverflow=false
-- !query 6 schema
struct<key:string,value:string>
-- !query 6 output
spark.sql.arithmetic.checkOverflow	false


-- !query 7
SELECT '' AS five, * FROM INT4_TBL
-- !query 7 schema
struct<five:string,f1:int>
-- !query 7 output
-123456
	-2147483647
	0
	123456
	2147483647


-- !query 8
SELECT '' AS four, i.* FROM INT4_TBL i WHERE i.f1 <> smallint('0')
-- !query 8 schema
struct<four:string,f1:int>
-- !query 8 output
-123456
	-2147483647
	123456
	2147483647


-- !query 9
SELECT '' AS four, i.* FROM INT4_TBL i WHERE i.f1 <> int('0')
-- !query 9 schema
struct<four:string,f1:int>
-- !query 9 output
-123456
	-2147483647
	123456
	2147483647


-- !query 10
SELECT '' AS one, i.* FROM INT4_TBL i WHERE i.f1 = smallint('0')
-- !query 10 schema
struct<one:string,f1:int>
-- !query 10 output
0


-- !query 11
SELECT '' AS one, i.* FROM INT4_TBL i WHERE i.f1 = int('0')
-- !query 11 schema
struct<one:string,f1:int>
-- !query 11 output
0


-- !query 12
SELECT '' AS two, i.* FROM INT4_TBL i WHERE i.f1 < smallint('0')
-- !query 12 schema
struct<two:string,f1:int>
-- !query 12 output
-123456
	-2147483647


-- !query 13
SELECT '' AS two, i.* FROM INT4_TBL i WHERE i.f1 < int('0')
-- !query 13 schema
struct<two:string,f1:int>
-- !query 13 output
-123456
	-2147483647


-- !query 14
SELECT '' AS three, i.* FROM INT4_TBL i WHERE i.f1 <= smallint('0')
-- !query 14 schema
struct<three:string,f1:int>
-- !query 14 output
-123456
	-2147483647
	0


-- !query 15
SELECT '' AS three, i.* FROM INT4_TBL i WHERE i.f1 <= int('0')
-- !query 15 schema
struct<three:string,f1:int>
-- !query 15 output
-123456
	-2147483647
	0


-- !query 16
SELECT '' AS two, i.* FROM INT4_TBL i WHERE i.f1 > smallint('0')
-- !query 16 schema
struct<two:string,f1:int>
-- !query 16 output
123456
	2147483647


-- !query 17
SELECT '' AS two, i.* FROM INT4_TBL i WHERE i.f1 > int('0')
-- !query 17 schema
struct<two:string,f1:int>
-- !query 17 output
123456
	2147483647


-- !query 18
SELECT '' AS three, i.* FROM INT4_TBL i WHERE i.f1 >= smallint('0')
-- !query 18 schema
struct<three:string,f1:int>
-- !query 18 output
0
	123456
	2147483647


-- !query 19
SELECT '' AS three, i.* FROM INT4_TBL i WHERE i.f1 >= int('0')
-- !query 19 schema
struct<three:string,f1:int>
-- !query 19 output
0
	123456
	2147483647


-- !query 20
SELECT '' AS one, i.* FROM INT4_TBL i WHERE (i.f1 % smallint('2')) = smallint('1')
-- !query 20 schema
struct<one:string,f1:int>
-- !query 20 output
2147483647


-- !query 21
SELECT '' AS three, i.* FROM INT4_TBL i WHERE (i.f1 % int('2')) = smallint('0')
-- !query 21 schema
struct<three:string,f1:int>
-- !query 21 output
-123456
	0
	123456


-- !query 22
SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT4_TBL i
-- !query 22 schema
struct<five:string,f1:int,x:int>
-- !query 22 output
-123456	-246912
	-2147483647	2
	0	0
	123456	246912
	2147483647	-2


-- !query 23
SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT4_TBL i
WHERE abs(f1) < 1073741824
-- !query 23 schema
struct<five:string,f1:int,x:int>
-- !query 23 output
-123456	-246912
	0	0
	123456	246912


-- !query 24
SELECT '' AS five, i.f1, i.f1 * int('2') AS x FROM INT4_TBL i
-- !query 24 schema
struct<five:string,f1:int,x:int>
-- !query 24 output
-123456	-246912
	-2147483647	2
	0	0
	123456	246912
	2147483647	-2


-- !query 25
SELECT '' AS five, i.f1, i.f1 * int('2') AS x FROM INT4_TBL i
WHERE abs(f1) < 1073741824
-- !query 25 schema
struct<five:string,f1:int,x:int>
-- !query 25 output
-123456	-246912
	0	0
	123456	246912


-- !query 26
SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT4_TBL i
-- !query 26 schema
struct<five:string,f1:int,x:int>
-- !query 26 output
-123456	-123454
	-2147483647	-2147483645
	0	2
	123456	123458
	2147483647	-2147483647


-- !query 27
SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT4_TBL i
WHERE f1 < 2147483646
-- !query 27 schema
struct<five:string,f1:int,x:int>
-- !query 27 output
-123456	-123454
	-2147483647	-2147483645
	0	2
	123456	123458


-- !query 28
SELECT '' AS five, i.f1, i.f1 + int('2') AS x FROM INT4_TBL i
-- !query 28 schema
struct<five:string,f1:int,x:int>
-- !query 28 output
-123456	-123454
	-2147483647	-2147483645
	0	2
	123456	123458
	2147483647	-2147483647


-- !query 29
SELECT '' AS five, i.f1, i.f1 + int('2') AS x FROM INT4_TBL i
WHERE f1 < 2147483646
-- !query 29 schema
struct<five:string,f1:int,x:int>
-- !query 29 output
-123456	-123454
	-2147483647	-2147483645
	0	2
	123456	123458


-- !query 30
SELECT '' AS five, i.f1, i.f1 - smallint('2') AS x FROM INT4_TBL i
-- !query 30 schema
struct<five:string,f1:int,x:int>
-- !query 30 output
-123456	-123458
	-2147483647	2147483647
	0	-2
	123456	123454
	2147483647	2147483645


-- !query 31
SELECT '' AS five, i.f1, i.f1 - smallint('2') AS x FROM INT4_TBL i
WHERE f1 > -2147483647
-- !query 31 schema
struct<five:string,f1:int,x:int>
-- !query 31 output
-123456	-123458
	0	-2
	123456	123454
	2147483647	2147483645


-- !query 32
SELECT '' AS five, i.f1, i.f1 - int('2') AS x FROM INT4_TBL i
-- !query 32 schema
struct<five:string,f1:int,x:int>
-- !query 32 output
-123456	-123458
	-2147483647	2147483647
	0	-2
	123456	123454
	2147483647	2147483645


-- !query 33
SELECT '' AS five, i.f1, i.f1 - int('2') AS x FROM INT4_TBL i
WHERE f1 > -2147483647
-- !query 33 schema
struct<five:string,f1:int,x:int>
-- !query 33 output
-123456	-123458
	0	-2
	123456	123454
	2147483647	2147483645


-- !query 34
SELECT '' AS five, i.f1, i.f1 / smallint('2') AS x FROM INT4_TBL i
-- !query 34 schema
struct<five:string,f1:int,x:double>
-- !query 34 output
-123456	-61728.0
	-2147483647	-1.0737418235E9
	0	0.0
	123456	61728.0
	2147483647	1.0737418235E9


-- !query 35
SELECT '' AS five, i.f1, i.f1 / int('2') AS x FROM INT4_TBL i
-- !query 35 schema
struct<five:string,f1:int,x:double>
-- !query 35 output
-123456	-61728.0
	-2147483647	-1.0737418235E9
	0	0.0
	123456	61728.0
	2147483647	1.0737418235E9


-- !query 36
SELECT -2+3 AS one
-- !query 36 schema
struct<one:int>
-- !query 36 output
1


-- !query 37
SELECT 4-2 AS two
-- !query 37 schema
struct<two:int>
-- !query 37 output
2


-- !query 38
SELECT 2- -1 AS three
-- !query 38 schema
struct<three:int>
-- !query 38 output
3


-- !query 39
SELECT 2 - -2 AS four
-- !query 39 schema
struct<four:int>
-- !query 39 output
4


-- !query 40
SELECT smallint('2') * smallint('2') = smallint('16') / smallint('4') AS true
-- !query 40 schema
struct<true:boolean>
-- !query 40 output
true


-- !query 41
SELECT int('2') * smallint('2') = smallint('16') / int('4') AS true
-- !query 41 schema
struct<true:boolean>
-- !query 41 output
true


-- !query 42
SELECT smallint('2') * int('2') = int('16') / smallint('4') AS true
-- !query 42 schema
struct<true:boolean>
-- !query 42 output
true


-- !query 43
SELECT int('1000') < int('999') AS false
-- !query 43 schema
struct<false:boolean>
-- !query 43 output
false


-- !query 44
SELECT 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 AS ten
-- !query 44 schema
struct<ten:int>
-- !query 44 output
10


-- !query 45
SELECT 2 + 2 / 2 AS three
-- !query 45 schema
struct<three:double>
-- !query 45 output
3.0


-- !query 46
SELECT (2 + 2) / 2 AS two
-- !query 46 schema
struct<two:double>
-- !query 46 output
2.0


-- !query 47
SELECT string(shiftleft(int(-1), 31))
-- !query 47 schema
struct<CAST(shiftleft(CAST(-1 AS INT), 31) AS STRING):string>
-- !query 47 output
-2147483648


-- !query 48
SELECT string(int(shiftleft(int(-1), 31))+1)
-- !query 48 schema
struct<CAST((CAST(shiftleft(CAST(-1 AS INT), 31) AS INT) + 1) AS STRING):string>
-- !query 48 output
-2147483647


-- !query 49
SELECT int(-2147483648) % int(-1)
-- !query 49 schema
struct<(CAST(-2147483648 AS INT) % CAST(-1 AS INT)):int>
-- !query 49 output
0


-- !query 50
SELECT int(-2147483648) % smallint(-1)
-- !query 50 schema
struct<(CAST(-2147483648 AS INT) % CAST(CAST(-1 AS SMALLINT) AS INT)):int>
-- !query 50 output
0


-- !query 51
SELECT x, int(x) AS int4_value
FROM (VALUES double(-2.5),
             double(-1.5),
             double(-0.5),
             double(0.0),
             double(0.5),
             double(1.5),
             double(2.5)) t(x)
-- !query 51 schema
struct<x:double,int4_value:int>
-- !query 51 output
-0.5	0
-1.5	-1
-2.5	-2
0.0	0
0.5	0
1.5	1
2.5	2


-- !query 52
SELECT x, int(x) AS int4_value
FROM (VALUES cast(-2.5 as decimal(38, 18)),
             cast(-1.5 as decimal(38, 18)),
             cast(-0.5 as decimal(38, 18)),
             cast(-0.0 as decimal(38, 18)),
             cast(0.5 as decimal(38, 18)),
             cast(1.5 as decimal(38, 18)),
             cast(2.5 as decimal(38, 18))) t(x)
-- !query 52 schema
struct<x:decimal(38,18),int4_value:int>
-- !query 52 output
-0.5	0
-1.5	-1
-2.5	-2
0	0
0.5	0
1.5	1
2.5	2


-- !query 53
set spark.sql.arithmetic.checkOverflow=true
-- !query 53 schema
struct<key:string,value:string>
-- !query 53 output
spark.sql.arithmetic.checkOverflow	true


-- !query 54
SELECT '' AS five, * FROM INT4_TBL
-- !query 54 schema
struct<five:string,f1:int>
-- !query 54 output
-123456
	-2147483647
	0
	123456
	2147483647


-- !query 55
SELECT '' AS four, i.* FROM INT4_TBL i WHERE i.f1 <> smallint('0')
-- !query 55 schema
struct<four:string,f1:int>
-- !query 55 output
-123456
	-2147483647
	123456
	2147483647


-- !query 56
SELECT '' AS four, i.* FROM INT4_TBL i WHERE i.f1 <> int('0')
-- !query 56 schema
struct<four:string,f1:int>
-- !query 56 output
-123456
	-2147483647
	123456
	2147483647


-- !query 57
SELECT '' AS one, i.* FROM INT4_TBL i WHERE i.f1 = smallint('0')
-- !query 57 schema
struct<one:string,f1:int>
-- !query 57 output
0


-- !query 58
SELECT '' AS one, i.* FROM INT4_TBL i WHERE i.f1 = int('0')
-- !query 58 schema
struct<one:string,f1:int>
-- !query 58 output
0


-- !query 59
SELECT '' AS two, i.* FROM INT4_TBL i WHERE i.f1 < smallint('0')
-- !query 59 schema
struct<two:string,f1:int>
-- !query 59 output
-123456
	-2147483647


-- !query 60
SELECT '' AS two, i.* FROM INT4_TBL i WHERE i.f1 < int('0')
-- !query 60 schema
struct<two:string,f1:int>
-- !query 60 output
-123456
	-2147483647


-- !query 61
SELECT '' AS three, i.* FROM INT4_TBL i WHERE i.f1 <= smallint('0')
-- !query 61 schema
struct<three:string,f1:int>
-- !query 61 output
-123456
	-2147483647
	0


-- !query 62
SELECT '' AS three, i.* FROM INT4_TBL i WHERE i.f1 <= int('0')
-- !query 62 schema
struct<three:string,f1:int>
-- !query 62 output
-123456
	-2147483647
	0


-- !query 63
SELECT '' AS two, i.* FROM INT4_TBL i WHERE i.f1 > smallint('0')
-- !query 63 schema
struct<two:string,f1:int>
-- !query 63 output
123456
	2147483647


-- !query 64
SELECT '' AS two, i.* FROM INT4_TBL i WHERE i.f1 > int('0')
-- !query 64 schema
struct<two:string,f1:int>
-- !query 64 output
123456
	2147483647


-- !query 65
SELECT '' AS three, i.* FROM INT4_TBL i WHERE i.f1 >= smallint('0')
-- !query 65 schema
struct<three:string,f1:int>
-- !query 65 output
0
	123456
	2147483647


-- !query 66
SELECT '' AS three, i.* FROM INT4_TBL i WHERE i.f1 >= int('0')
-- !query 66 schema
struct<three:string,f1:int>
-- !query 66 output
0
	123456
	2147483647


-- !query 67
SELECT '' AS one, i.* FROM INT4_TBL i WHERE (i.f1 % smallint('2')) = smallint('1')
-- !query 67 schema
struct<one:string,f1:int>
-- !query 67 output
2147483647


-- !query 68
SELECT '' AS three, i.* FROM INT4_TBL i WHERE (i.f1 % int('2')) = smallint('0')
-- !query 68 schema
struct<three:string,f1:int>
-- !query 68 output
-123456
	0
	123456


-- !query 69
SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT4_TBL i
-- !query 69 schema
struct<>
-- !query 69 output
org.apache.spark.SparkException
Job aborted due to stage failure: Task 0 in stage 2069.0 failed 1 times, most recent failure: Lost task 0.0 in stage 2069.0 (TID 91890, localhost, executor driver): java.lang.ArithmeticException: 2147483647 * 2 caused overflow.
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.project_doConsume_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:701)
	at org.apache.spark.sql.execution.SparkPlan.$anonfun$getByteArrayRdd$1(SparkPlan.scala:292)
	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2(RDD.scala:852)
	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2$adapted(RDD.scala:852)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:327)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:291)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
	at org.apache.spark.scheduler.Task.run(Task.scala:126)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:426)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1350)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:429)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Driver stacktrace:


-- !query 70
SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT4_TBL i
WHERE abs(f1) < 1073741824
-- !query 70 schema
struct<five:string,f1:int,x:int>
-- !query 70 output
-123456	-246912
	0	0
	123456	246912


-- !query 71
SELECT '' AS five, i.f1, i.f1 * int('2') AS x FROM INT4_TBL i
-- !query 71 schema
struct<>
-- !query 71 output
org.apache.spark.SparkException
Job aborted due to stage failure: Task 0 in stage 2071.0 failed 1 times, most recent failure: Lost task 0.0 in stage 2071.0 (TID 91894, localhost, executor driver): java.lang.ArithmeticException: 2147483647 * 2 caused overflow.
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.project_doConsume_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:701)
	at org.apache.spark.sql.execution.SparkPlan.$anonfun$getByteArrayRdd$1(SparkPlan.scala:292)
	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2(RDD.scala:852)
	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2$adapted(RDD.scala:852)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:327)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:291)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
	at org.apache.spark.scheduler.Task.run(Task.scala:126)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:426)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1350)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:429)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Driver stacktrace:


-- !query 72
SELECT '' AS five, i.f1, i.f1 * int('2') AS x FROM INT4_TBL i
WHERE abs(f1) < 1073741824
-- !query 72 schema
struct<five:string,f1:int,x:int>
-- !query 72 output
-123456	-246912
	0	0
	123456	246912


-- !query 73
SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT4_TBL i
-- !query 73 schema
struct<>
-- !query 73 output
org.apache.spark.SparkException
Job aborted due to stage failure: Task 0 in stage 2073.0 failed 1 times, most recent failure: Lost task 0.0 in stage 2073.0 (TID 91898, localhost, executor driver): java.lang.ArithmeticException: 2147483647 + 2 caused overflow.
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.project_doConsume_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:701)
	at org.apache.spark.sql.execution.SparkPlan.$anonfun$getByteArrayRdd$1(SparkPlan.scala:292)
	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2(RDD.scala:852)
	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2$adapted(RDD.scala:852)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:327)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:291)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
	at org.apache.spark.scheduler.Task.run(Task.scala:126)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:426)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1350)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:429)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Driver stacktrace:


-- !query 74
SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT4_TBL i
WHERE f1 < 2147483646
-- !query 74 schema
struct<five:string,f1:int,x:int>
-- !query 74 output
-123456	-123454
	-2147483647	-2147483645
	0	2
	123456	123458


-- !query 75
SELECT '' AS five, i.f1, i.f1 + int('2') AS x FROM INT4_TBL i
-- !query 75 schema
struct<>
-- !query 75 output
org.apache.spark.SparkException
Job aborted due to stage failure: Task 0 in stage 2075.0 failed 1 times, most recent failure: Lost task 0.0 in stage 2075.0 (TID 91902, localhost, executor driver): java.lang.ArithmeticException: 2147483647 + 2 caused overflow.
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.project_doConsume_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:701)
	at org.apache.spark.sql.execution.SparkPlan.$anonfun$getByteArrayRdd$1(SparkPlan.scala:292)
	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2(RDD.scala:852)
	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2$adapted(RDD.scala:852)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:327)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:291)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
	at org.apache.spark.scheduler.Task.run(Task.scala:126)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:426)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1350)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:429)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Driver stacktrace:


-- !query 76
SELECT '' AS five, i.f1, i.f1 + int('2') AS x FROM INT4_TBL i
WHERE f1 < 2147483646
-- !query 76 schema
struct<five:string,f1:int,x:int>
-- !query 76 output
-123456	-123454
	-2147483647	-2147483645
	0	2
	123456	123458


-- !query 77
SELECT '' AS five, i.f1, i.f1 - smallint('2') AS x FROM INT4_TBL i
-- !query 77 schema
struct<>
-- !query 77 output
org.apache.spark.SparkException
Job aborted due to stage failure: Task 1 in stage 2077.0 failed 1 times, most recent failure: Lost task 1.0 in stage 2077.0 (TID 91907, localhost, executor driver): java.lang.ArithmeticException: -2147483647 - 2 caused overflow.
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.project_doConsume_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:701)
	at org.apache.spark.sql.execution.SparkPlan.$anonfun$getByteArrayRdd$1(SparkPlan.scala:292)
	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2(RDD.scala:852)
	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2$adapted(RDD.scala:852)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:327)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:291)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
	at org.apache.spark.scheduler.Task.run(Task.scala:126)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:426)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1350)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:429)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Driver stacktrace:


-- !query 78
SELECT '' AS five, i.f1, i.f1 - smallint('2') AS x FROM INT4_TBL i
WHERE f1 > -2147483647
-- !query 78 schema
struct<five:string,f1:int,x:int>
-- !query 78 output
-123456	-123458
	0	-2
	123456	123454
	2147483647	2147483645


-- !query 79
SELECT '' AS five, i.f1, i.f1 - int('2') AS x FROM INT4_TBL i
-- !query 79 schema
struct<>
-- !query 79 output
org.apache.spark.SparkException
Job aborted due to stage failure: Task 1 in stage 2079.0 failed 1 times, most recent failure: Lost task 1.0 in stage 2079.0 (TID 91911, localhost, executor driver): java.lang.ArithmeticException: -2147483647 - 2 caused overflow.
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.project_doConsume_0$(Unknown Source)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:701)
	at org.apache.spark.sql.execution.SparkPlan.$anonfun$getByteArrayRdd$1(SparkPlan.scala:292)
	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2(RDD.scala:852)
	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2$adapted(RDD.scala:852)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:327)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:291)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
	at org.apache.spark.scheduler.Task.run(Task.scala:126)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:426)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1350)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:429)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Driver stacktrace:


-- !query 80
SELECT '' AS five, i.f1, i.f1 - int('2') AS x FROM INT4_TBL i
WHERE f1 > -2147483647
-- !query 80 schema
struct<five:string,f1:int,x:int>
-- !query 80 output
-123456	-123458
	0	-2
	123456	123454
	2147483647	2147483645


-- !query 81
SELECT '' AS five, i.f1, i.f1 / smallint('2') AS x FROM INT4_TBL i
-- !query 81 schema
struct<five:string,f1:int,x:double>
-- !query 81 output
-123456	-61728.0
	-2147483647	-1.0737418235E9
	0	0.0
	123456	61728.0
	2147483647	1.0737418235E9


-- !query 82
SELECT '' AS five, i.f1, i.f1 / int('2') AS x FROM INT4_TBL i
-- !query 82 schema
struct<five:string,f1:int,x:double>
-- !query 82 output
-123456	-61728.0
	-2147483647	-1.0737418235E9
	0	0.0
	123456	61728.0
	2147483647	1.0737418235E9


-- !query 83
SELECT -2+3 AS one
-- !query 83 schema
struct<one:int>
-- !query 83 output
1


-- !query 84
SELECT 4-2 AS two
-- !query 84 schema
struct<two:int>
-- !query 84 output
2


-- !query 85
SELECT 2- -1 AS three
-- !query 85 schema
struct<three:int>
-- !query 85 output
3


-- !query 86
SELECT 2 - -2 AS four
-- !query 86 schema
struct<four:int>
-- !query 86 output
4


-- !query 87
SELECT smallint('2') * smallint('2') = smallint('16') / smallint('4') AS true
-- !query 87 schema
struct<true:boolean>
-- !query 87 output
true


-- !query 88
SELECT int('2') * smallint('2') = smallint('16') / int('4') AS true
-- !query 88 schema
struct<true:boolean>
-- !query 88 output
true


-- !query 89
SELECT smallint('2') * int('2') = int('16') / smallint('4') AS true
-- !query 89 schema
struct<true:boolean>
-- !query 89 output
true


-- !query 90
SELECT int('1000') < int('999') AS false
-- !query 90 schema
struct<false:boolean>
-- !query 90 output
false


-- !query 91
SELECT 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 AS ten
-- !query 91 schema
struct<ten:int>
-- !query 91 output
10


-- !query 92
SELECT 2 + 2 / 2 AS three
-- !query 92 schema
struct<three:double>
-- !query 92 output
3.0


-- !query 93
SELECT (2 + 2) / 2 AS two
-- !query 93 schema
struct<two:double>
-- !query 93 output
2.0


-- !query 94
SELECT string(shiftleft(int(-1), 31))
-- !query 94 schema
struct<CAST(shiftleft(CAST(-1 AS INT), 31) AS STRING):string>
-- !query 94 output
-2147483648


-- !query 95
SELECT string(int(shiftleft(int(-1), 31))+1)
-- !query 95 schema
struct<CAST((CAST(shiftleft(CAST(-1 AS INT), 31) AS INT) + 1) AS STRING):string>
-- !query 95 output
-2147483647


-- !query 96
SELECT int(-2147483648) % int(-1)
-- !query 96 schema
struct<(CAST(-2147483648 AS INT) % CAST(-1 AS INT)):int>
-- !query 96 output
0


-- !query 97
SELECT int(-2147483648) % smallint(-1)
-- !query 97 schema
struct<(CAST(-2147483648 AS INT) % CAST(CAST(-1 AS SMALLINT) AS INT)):int>
-- !query 97 output
0


-- !query 98
SELECT x, int(x) AS int4_value
FROM (VALUES double(-2.5),
             double(-1.5),
             double(-0.5),
             double(0.0),
             double(0.5),
             double(1.5),
             double(2.5)) t(x)
-- !query 98 schema
struct<x:double,int4_value:int>
-- !query 98 output
-0.5	0
-1.5	-1
-2.5	-2
0.0	0
0.5	0
1.5	1
2.5	2


-- !query 99
SELECT x, int(x) AS int4_value
FROM (VALUES cast(-2.5 as decimal(38, 18)),
             cast(-1.5 as decimal(38, 18)),
             cast(-0.5 as decimal(38, 18)),
             cast(-0.0 as decimal(38, 18)),
             cast(0.5 as decimal(38, 18)),
             cast(1.5 as decimal(38, 18)),
             cast(2.5 as decimal(38, 18))) t(x)
-- !query 99 schema
struct<x:decimal(38,18),int4_value:int>
-- !query 99 output
-0.5	0
-1.5	-1
-2.5	-2
0	0
0.5	0
1.5	1
2.5	2


-- !query 100
DROP TABLE INT4_TBL
-- !query 100 schema
struct<>
-- !query 100 output

