-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 66


-- !query 0
SELECT string('this is a text string') = string('this is a text string') AS true
-- !query 0 schema
struct<true:boolean>
-- !query 0 output
true


-- !query 1
SELECT string('this is a text string') = string('this is a text strin') AS false
-- !query 1 schema
struct<false:boolean>
-- !query 1 output
false


-- !query 2
CREATE TABLE TEXT_TBL (f1 string) USING parquet
-- !query 2 schema
struct<>
-- !query 2 output



-- !query 3
INSERT INTO TEXT_TBL VALUES ('doh!')
-- !query 3 schema
struct<>
-- !query 3 output



-- !query 4
INSERT INTO TEXT_TBL VALUES ('hi de ho neighbor')
-- !query 4 schema
struct<>
-- !query 4 output



-- !query 5
SELECT '' AS two, * FROM TEXT_TBL
-- !query 5 schema
struct<two:string,f1:string>
-- !query 5 output
doh!
	hi de ho neighbor


-- !query 6
select length(42)
-- !query 6 schema
struct<length(CAST(42 AS STRING)):int>
-- !query 6 output
2


-- !query 7
select string('four: ') || 2+2
-- !query 7 schema
struct<(CAST(concat(CAST(four:  AS STRING), CAST(2 AS STRING)) AS DOUBLE) + CAST(2 AS DOUBLE)):double>
-- !query 7 output
NULL


-- !query 8
select string('four: ') || 2+2
-- !query 8 schema
struct<(CAST(concat(CAST(four:  AS STRING), CAST(2 AS STRING)) AS DOUBLE) + CAST(2 AS DOUBLE)):double>
-- !query 8 output
NULL


-- !query 9
select 3 || 4.0
-- !query 9 schema
struct<concat(CAST(3 AS STRING), CAST(4.0 AS STRING)):string>
-- !query 9 output
34.0


-- !query 10
/*
 * various string functions
 */
select concat('one')
-- !query 10 schema
struct<concat(one):string>
-- !query 10 output
one


-- !query 11
select concat(1,2,3,'hello',true, false, to_date('20100309','yyyyMMdd'))
-- !query 11 schema
struct<concat(CAST(1 AS STRING), CAST(2 AS STRING), CAST(3 AS STRING), hello, CAST(true AS STRING), CAST(false AS STRING), CAST(to_date('20100309', 'yyyyMMdd') AS STRING)):string>
-- !query 11 output
123hellotruefalse2010-03-09


-- !query 12
select concat_ws('#','one')
-- !query 12 schema
struct<concat_ws(#, one):string>
-- !query 12 output
one


-- !query 13
select concat_ws('#',1,2,3,'hello',true, false, to_date('20100309','yyyyMMdd'))
-- !query 13 schema
struct<concat_ws(#, CAST(1 AS STRING), CAST(2 AS STRING), CAST(3 AS STRING), hello, CAST(true AS STRING), CAST(false AS STRING), CAST(to_date('20100309', 'yyyyMMdd') AS STRING)):string>
-- !query 13 output
1#x#x#hello#true#false#x-03-09


-- !query 14
select concat_ws(',',10,20,null,30)
-- !query 14 schema
struct<concat_ws(,, CAST(10 AS STRING), CAST(20 AS STRING), NULL, CAST(30 AS STRING)):string>
-- !query 14 output
10,20,30


-- !query 15
select concat_ws('',10,20,null,30)
-- !query 15 schema
struct<concat_ws(, CAST(10 AS STRING), CAST(20 AS STRING), NULL, CAST(30 AS STRING)):string>
-- !query 15 output
102030


-- !query 16
select concat_ws(NULL,10,20,null,30) is null
-- !query 16 schema
struct<(concat_ws(CAST(NULL AS STRING), CAST(10 AS STRING), CAST(20 AS STRING), NULL, CAST(30 AS STRING)) IS NULL):boolean>
-- !query 16 output
true


-- !query 17
select reverse('abcde')
-- !query 17 schema
struct<reverse(abcde):string>
-- !query 17 output
edcba


-- !query 18
select i, left('ahoj', i), right('ahoj', i) from range(-5, 5) t(i) order by i
-- !query 18 schema
struct<i:bigint,left('ahoj', t.`i`):string,right('ahoj', t.`i`):string>
-- !query 18 output
-5		
-4		
-3		
-2		
-1		
0		
1	a	j
2	ah	oj
3	aho	hoj
4	ahoj	ahoj


-- !query 19
select quote_literal('')
-- !query 19 schema
struct<>
-- !query 19 output
org.apache.spark.sql.AnalysisException
Undefined function: 'quote_literal'. This function is neither a registered temporary function nor a permanent function registered in the database 'default'.; line 1 pos 7


-- !query 20
select quote_literal('abc''')
-- !query 20 schema
struct<>
-- !query 20 output
org.apache.spark.sql.AnalysisException
Undefined function: 'quote_literal'. This function is neither a registered temporary function nor a permanent function registered in the database 'default'.; line 1 pos 7


-- !query 21
select quote_literal(e'\\')
-- !query 21 schema
struct<>
-- !query 21 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'E' are currently not supported.(line 1, pos 21)

== SQL ==
select quote_literal(e'\\')
---------------------^^^


-- !query 22
select concat(variadic array[1,2,3])
-- !query 22 schema
struct<>
-- !query 22 output
org.apache.spark.sql.catalyst.parser.ParseException

mismatched input 'array' expecting {')', ','}(line 1, pos 23)

== SQL ==
select concat(variadic array[1,2,3])
-----------------------^^^


-- !query 23
select concat_ws(',', variadic array[1,2,3])
-- !query 23 schema
struct<>
-- !query 23 output
org.apache.spark.sql.catalyst.parser.ParseException

extraneous input 'array' expecting {')', ','}(line 1, pos 31)

== SQL ==
select concat_ws(',', variadic array[1,2,3])
-------------------------------^^^


-- !query 24
select concat_ws(',', variadic NULL::int[])
-- !query 24 schema
struct<>
-- !query 24 output
org.apache.spark.sql.catalyst.parser.ParseException

extraneous input 'NULL' expecting {')', ','}(line 1, pos 31)

== SQL ==
select concat_ws(',', variadic NULL::int[])
-------------------------------^^^


-- !query 25
select concat(variadic NULL::int[]) is NULL
-- !query 25 schema
struct<>
-- !query 25 output
org.apache.spark.sql.catalyst.parser.ParseException

mismatched input 'NULL' expecting {')', ','}(line 1, pos 23)

== SQL ==
select concat(variadic NULL::int[]) is NULL
-----------------------^^^


-- !query 26
select concat(variadic '{}'::int[]) = ''
-- !query 26 schema
struct<>
-- !query 26 output
org.apache.spark.sql.catalyst.parser.ParseException

mismatched input ':' expecting {')', ','}(line 1, pos 27)

== SQL ==
select concat(variadic '{}'::int[]) = ''
---------------------------^^^


-- !query 27
select concat_ws(',', variadic 10)
-- !query 27 schema
struct<>
-- !query 27 output
org.apache.spark.sql.catalyst.parser.ParseException

extraneous input '10' expecting {')', ','}(line 1, pos 31)

== SQL ==
select concat_ws(',', variadic 10)
-------------------------------^^^


-- !query 28
/*
 * format
 */
select format_string(NULL)
-- !query 28 schema
struct<format_string(CAST(NULL AS STRING)):string>
-- !query 28 output
NULL


-- !query 29
select format_string('Hello')
-- !query 29 schema
struct<format_string(Hello):string>
-- !query 29 output
Hello


-- !query 30
select format_string('Hello %s', 'World')
-- !query 30 schema
struct<format_string(Hello %s, World):string>
-- !query 30 output
Hello World


-- !query 31
select format_string('Hello %%')
-- !query 31 schema
struct<format_string(Hello %%):string>
-- !query 31 output
Hello %


-- !query 32
select format_string('Hello %%%%')
-- !query 32 schema
struct<format_string(Hello %%%%):string>
-- !query 32 output
Hello %%


-- !query 33
select format_string('Hello %s %s', 'World')
-- !query 33 schema
struct<>
-- !query 33 output
java.util.MissingFormatArgumentException
Format specifier '%s'


-- !query 34
select format_string('Hello %s')
-- !query 34 schema
struct<>
-- !query 34 output
java.util.MissingFormatArgumentException
Format specifier '%s'


-- !query 35
select format_string('Hello %x', 20)
-- !query 35 schema
struct<format_string(Hello %x, 20):string>
-- !query 35 output
Hello 14


-- !query 36
select format_string('INSERT INTO %I VALUES(%L,%L)', 'mytab', 10, 'Hello')
-- !query 36 schema
struct<>
-- !query 36 output
java.util.UnknownFormatConversionException
Conversion = 'I'


-- !query 37
select format_string('%s%s%s','Hello', NULL,'World')
-- !query 37 schema
struct<format_string(%s%s%s, Hello, NULL, World):string>
-- !query 37 output
HellonullWorld


-- !query 38
select format_string('INSERT INTO %I VALUES(%L,%L)', 'mytab', 10, NULL)
-- !query 38 schema
struct<>
-- !query 38 output
java.util.UnknownFormatConversionException
Conversion = 'I'


-- !query 39
select format_string('INSERT INTO %I VALUES(%L,%L)', 'mytab', NULL, 'Hello')
-- !query 39 schema
struct<>
-- !query 39 output
java.util.UnknownFormatConversionException
Conversion = 'I'


-- !query 40
select format_string('INSERT INTO %I VALUES(%L,%L)', NULL, 10, 'Hello')
-- !query 40 schema
struct<>
-- !query 40 output
java.util.UnknownFormatConversionException
Conversion = 'I'


-- !query 41
select format_string('%1$s %3$s', 1, 2, 3)
-- !query 41 schema
struct<format_string(%1$s %3$s, 1, 2, 3):string>
-- !query 41 output
1 3


-- !query 42
select format_string('%1$s %12$s', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
-- !query 42 schema
struct<format_string(%1$s %12$s, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12):string>
-- !query 42 output
1 12


-- !query 43
select format_string('%1$s %4$s', 1, 2, 3)
-- !query 43 schema
struct<>
-- !query 43 output
java.util.MissingFormatArgumentException
Format specifier '%4$s'


-- !query 44
select format_string('%1$s %13$s', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
-- !query 44 schema
struct<>
-- !query 44 output
java.util.MissingFormatArgumentException
Format specifier '%13$s'


-- !query 45
select format_string('%0$s', 'Hello')
-- !query 45 schema
struct<format_string(%0$s, Hello):string>
-- !query 45 output
Hello


-- !query 46
select format_string('%*0$s', 'Hello')
-- !query 46 schema
struct<>
-- !query 46 output
java.util.UnknownFormatConversionException
Conversion = '*'


-- !query 47
select format_string('%1$', 1)
-- !query 47 schema
struct<>
-- !query 47 output
java.util.UnknownFormatConversionException
Conversion = '1'


-- !query 48
select format_string('%1$1', 1)
-- !query 48 schema
struct<>
-- !query 48 output
java.util.UnknownFormatConversionException
Conversion = '1'


-- !query 49
select format_string('Hello %s %1$s %s', 'World', 'Hello again')
-- !query 49 schema
struct<format_string(Hello %s %1$s %s, World, Hello again):string>
-- !query 49 output
Hello World World Hello again


-- !query 50
select format_string('Hello %s %s, %2$s %2$s', 'World', 'Hello again')
-- !query 50 schema
struct<format_string(Hello %s %s, %2$s %2$s, World, Hello again):string>
-- !query 50 output
Hello World Hello again, Hello again Hello again


-- !query 51
select format('%s, %s', variadic array['Hello','World'])
-- !query 51 schema
struct<>
-- !query 51 output
org.apache.spark.sql.catalyst.parser.ParseException

extraneous input 'array' expecting {')', ','}(line 1, pos 33)

== SQL ==
select format('%s, %s', variadic array['Hello','World'])
---------------------------------^^^


-- !query 52
select format('%s, %s', variadic array[1, 2])
-- !query 52 schema
struct<>
-- !query 52 output
org.apache.spark.sql.catalyst.parser.ParseException

extraneous input 'array' expecting {')', ','}(line 1, pos 33)

== SQL ==
select format('%s, %s', variadic array[1, 2])
---------------------------------^^^


-- !query 53
select format('%s, %s', variadic array[true, false])
-- !query 53 schema
struct<>
-- !query 53 output
org.apache.spark.sql.catalyst.parser.ParseException

extraneous input 'array' expecting {')', ','}(line 1, pos 33)

== SQL ==
select format('%s, %s', variadic array[true, false])
---------------------------------^^^


-- !query 54
select format('%s, %s', variadic array[true, false]::text[])
-- !query 54 schema
struct<>
-- !query 54 output
org.apache.spark.sql.catalyst.parser.ParseException

extraneous input 'array' expecting {')', ','}(line 1, pos 33)

== SQL ==
select format('%s, %s', variadic array[true, false]::text[])
---------------------------------^^^


-- !query 55
select format('%2$s, %1$s', variadic array['first', 'second'])
-- !query 55 schema
struct<>
-- !query 55 output
org.apache.spark.sql.catalyst.parser.ParseException

extraneous input 'array' expecting {')', ','}(line 1, pos 37)

== SQL ==
select format('%2$s, %1$s', variadic array['first', 'second'])
-------------------------------------^^^


-- !query 56
select format('%2$s, %1$s', variadic array[1, 2])
-- !query 56 schema
struct<>
-- !query 56 output
org.apache.spark.sql.catalyst.parser.ParseException

extraneous input 'array' expecting {')', ','}(line 1, pos 37)

== SQL ==
select format('%2$s, %1$s', variadic array[1, 2])
-------------------------------------^^^


-- !query 57
select format('Hello', variadic NULL::int[])
-- !query 57 schema
struct<>
-- !query 57 output
org.apache.spark.sql.catalyst.parser.ParseException

extraneous input 'NULL' expecting {')', ','}(line 1, pos 32)

== SQL ==
select format('Hello', variadic NULL::int[])
--------------------------------^^^


-- !query 58
select format(string_agg('%s',','), variadic array_agg(i))
from generate_series(1,200) g(i)
-- !query 58 schema
struct<>
-- !query 58 output
org.apache.spark.sql.catalyst.parser.ParseException

extraneous input 'array_agg' expecting {')', ','}(line 1, pos 45)

== SQL ==
select format(string_agg('%s',','), variadic array_agg(i))
---------------------------------------------^^^
from generate_series(1,200) g(i)


-- !query 59
select format_string('>>%10s<<', 'Hello')
-- !query 59 schema
struct<format_string(>>%10s<<, Hello):string>
-- !query 59 output
>>     Hello<<


-- !query 60
select format_string('>>%10s<<', NULL)
-- !query 60 schema
struct<format_string(>>%10s<<, NULL):string>
-- !query 60 output
>>      null<<


-- !query 61
select format_string('>>%10s<<', '')
-- !query 61 schema
struct<format_string(>>%10s<<, ):string>
-- !query 61 output
>>          <<


-- !query 62
select format_string('>>%-10s<<', '')
-- !query 62 schema
struct<format_string(>>%-10s<<, ):string>
-- !query 62 output
>>          <<


-- !query 63
select format_string('>>%-10s<<', 'Hello')
-- !query 63 schema
struct<format_string(>>%-10s<<, Hello):string>
-- !query 63 output
>>Hello     <<


-- !query 64
select format_string('>>%-10s<<', NULL)
-- !query 64 schema
struct<format_string(>>%-10s<<, NULL):string>
-- !query 64 output
>>null      <<


-- !query 65
select format_string('>>%1$10s<<', 'Hello')
-- !query 65 schema
struct<format_string(>>%1$10s<<, Hello):string>
-- !query 65 output
>>     Hello<<
