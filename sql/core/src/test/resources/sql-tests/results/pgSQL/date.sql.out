-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 94


-- !query 0
CREATE TABLE DATE_TBL (f1 date) USING parquet
-- !query 0 schema
struct<>
-- !query 0 output



-- !query 1
INSERT INTO DATE_TBL VALUES ('1957-04-09')
-- !query 1 schema
struct<>
-- !query 1 output



-- !query 2
INSERT INTO DATE_TBL VALUES ('1957-06-13')
-- !query 2 schema
struct<>
-- !query 2 output



-- !query 3
INSERT INTO DATE_TBL VALUES ('1996-02-28')
-- !query 3 schema
struct<>
-- !query 3 output



-- !query 4
INSERT INTO DATE_TBL VALUES ('1996-02-29')
-- !query 4 schema
struct<>
-- !query 4 output



-- !query 5
INSERT INTO DATE_TBL VALUES ('1996-03-01')
-- !query 5 schema
struct<>
-- !query 5 output



-- !query 6
INSERT INTO DATE_TBL VALUES ('1996-03-02')
-- !query 6 schema
struct<>
-- !query 6 output



-- !query 7
INSERT INTO DATE_TBL VALUES ('1997-02-28')
-- !query 7 schema
struct<>
-- !query 7 output



-- !query 8
INSERT INTO DATE_TBL VALUES ('1997-03-01')
-- !query 8 schema
struct<>
-- !query 8 output



-- !query 9
INSERT INTO DATE_TBL VALUES ('1997-03-02')
-- !query 9 schema
struct<>
-- !query 9 output



-- !query 10
INSERT INTO DATE_TBL VALUES ('2000-04-01')
-- !query 10 schema
struct<>
-- !query 10 output



-- !query 11
INSERT INTO DATE_TBL VALUES ('2000-04-02')
-- !query 11 schema
struct<>
-- !query 11 output



-- !query 12
INSERT INTO DATE_TBL VALUES ('2000-04-03')
-- !query 12 schema
struct<>
-- !query 12 output



-- !query 13
INSERT INTO DATE_TBL VALUES ('2038-04-08')
-- !query 13 schema
struct<>
-- !query 13 output



-- !query 14
INSERT INTO DATE_TBL VALUES ('2039-04-09')
-- !query 14 schema
struct<>
-- !query 14 output



-- !query 15
INSERT INTO DATE_TBL VALUES ('2040-04-10')
-- !query 15 schema
struct<>
-- !query 15 output



-- !query 16
SELECT f1 AS `Fifteen` FROM DATE_TBL
-- !query 16 schema
struct<Fifteen:date>
-- !query 16 output
1957-04-09
1957-06-13
1996-02-28
1996-02-29
1996-03-01
1996-03-02
1997-02-28
1997-03-01
1997-03-02
2000-04-01
2000-04-02
2000-04-03
2038-04-08
2039-04-09
2040-04-10


-- !query 17
SELECT f1 AS `Nine` FROM DATE_TBL WHERE f1 < '2000-01-01'
-- !query 17 schema
struct<Nine:date>
-- !query 17 output
1957-04-09
1957-06-13
1996-02-28
1996-02-29
1996-03-01
1996-03-02
1997-02-28
1997-03-01
1997-03-02


-- !query 18
SELECT f1 AS `Three` FROM DATE_TBL
  WHERE f1 BETWEEN '2000-01-01' AND '2001-01-01'
-- !query 18 schema
struct<Three:date>
-- !query 18 output
2000-04-01
2000-04-02
2000-04-03


-- !query 19
SELECT date '1999-01-08'
-- !query 19 schema
struct<DATE '1999-01-08':date>
-- !query 19 output
1999-01-08


-- !query 20
SELECT date '1999-01-18'
-- !query 20 schema
struct<DATE '1999-01-18':date>
-- !query 20 output
1999-01-18


-- !query 21
SELECT date '1999 Jan 08'
-- !query 21 schema
struct<DATE '1999-01-01':date>
-- !query 21 output
1999-01-01


-- !query 22
SELECT date '1999 08 Jan'
-- !query 22 schema
struct<DATE '1999-01-01':date>
-- !query 22 output
1999-01-01


-- !query 23
SELECT date '1999-01-08'
-- !query 23 schema
struct<DATE '1999-01-08':date>
-- !query 23 output
1999-01-08


-- !query 24
SELECT date '1999-08-01'
-- !query 24 schema
struct<DATE '1999-08-01':date>
-- !query 24 output
1999-08-01


-- !query 25
SELECT date '1999 01 08'
-- !query 25 schema
struct<DATE '1999-01-01':date>
-- !query 25 output
1999-01-01


-- !query 26
SELECT date '1999 08 01'
-- !query 26 schema
struct<DATE '1999-01-01':date>
-- !query 26 output
1999-01-01


-- !query 27
SELECT date '1999-01-08'
-- !query 27 schema
struct<DATE '1999-01-08':date>
-- !query 27 output
1999-01-08


-- !query 28
SELECT date '1999 Jan 08'
-- !query 28 schema
struct<DATE '1999-01-01':date>
-- !query 28 output
1999-01-01


-- !query 29
SELECT date '1999 08 Jan'
-- !query 29 schema
struct<DATE '1999-01-01':date>
-- !query 29 output
1999-01-01


-- !query 30
SELECT date '1999-01-08'
-- !query 30 schema
struct<DATE '1999-01-08':date>
-- !query 30 output
1999-01-08


-- !query 31
SELECT date '1999-08-01'
-- !query 31 schema
struct<DATE '1999-08-01':date>
-- !query 31 output
1999-08-01


-- !query 32
SELECT date '1999 01 08'
-- !query 32 schema
struct<DATE '1999-01-01':date>
-- !query 32 output
1999-01-01


-- !query 33
SELECT date '1999 08 01'
-- !query 33 schema
struct<DATE '1999-01-01':date>
-- !query 33 output
1999-01-01


-- !query 34
SELECT date '1999-01-08'
-- !query 34 schema
struct<DATE '1999-01-08':date>
-- !query 34 output
1999-01-08


-- !query 35
SELECT date '1999-01-18'
-- !query 35 schema
struct<DATE '1999-01-18':date>
-- !query 35 output
1999-01-18


-- !query 36
SELECT date '1999 Jan 08'
-- !query 36 schema
struct<DATE '1999-01-01':date>
-- !query 36 output
1999-01-01


-- !query 37
SELECT date '1999 08 Jan'
-- !query 37 schema
struct<DATE '1999-01-01':date>
-- !query 37 output
1999-01-01


-- !query 38
SELECT date '1999-01-08'
-- !query 38 schema
struct<DATE '1999-01-08':date>
-- !query 38 output
1999-01-08


-- !query 39
SELECT date '1999-08-01'
-- !query 39 schema
struct<DATE '1999-08-01':date>
-- !query 39 output
1999-08-01


-- !query 40
SELECT date '1999 01 08'
-- !query 40 schema
struct<DATE '1999-01-01':date>
-- !query 40 output
1999-01-01


-- !query 41
SELECT date '1999 08 01'
-- !query 41 schema
struct<DATE '1999-01-01':date>
-- !query 41 output
1999-01-01


-- !query 42
SELECT date '4714-11-24 BC'
-- !query 42 schema
struct<DATE '4714-11-24':date>
-- !query 42 output
4714-11-24


-- !query 43
SELECT date '4714-11-23 BC'
-- !query 43 schema
struct<DATE '4714-11-23':date>
-- !query 43 output
4714-11-23


-- !query 44
-- out of range
SELECT date '5874897-12-31'
-- !query 44 schema
struct<>
-- !query 44 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the DATE value: 5874897-12-31(line 2, pos 7)

== SQL ==
-- out of range
SELECT date '5874897-12-31'
-------^^^


-- !query 45
SELECT date '5874898-01-01'
-- !query 45 schema
struct<>
-- !query 45 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the DATE value: 5874898-01-01(line 1, pos 7)

== SQL ==
SELECT date '5874898-01-01'
-------^^^


-- !query 46
-- out of range











select 'infinity'::date, '-infinity'::date
-- !query 46 schema
struct<>
-- !query 46 output
org.apache.spark.sql.catalyst.parser.ParseException

mismatched input ':' expecting {<EOF>, '(', ',', '.', '[', 'ADD', 'AFTER', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'ANTI', 'ANY', 'ARCHIVE', 'ARRAY', 'AS', 'ASC', 'AT', 'AUTHORIZATION', 'BETWEEN', 'BOTH', 'BUCKET', 'BUCKETS', 'BY', 'CACHE', 'CASCADE', 'CASE', 'CAST', 'CHANGE', 'CHECK', 'CLEAR', 'CLUSTER', 'CLUSTERED', 'CODEGEN', 'COLLATE', 'COLLECTION', 'COLUMN', 'COLUMNS', 'COMMENT', 'COMMIT', 'COMPACT', 'COMPACTIONS', 'COMPUTE', 'CONCATENATE', 'CONSTRAINT', 'COST', 'CREATE', 'CROSS', 'CUBE', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'DATA', 'DATABASE', DATABASES, 'DAY', 'DAYS', 'DBPROPERTIES', 'DEFINED', 'DELETE', 'DELIMITED', 'DESC', 'DESCRIBE', 'DFS', 'DIRECTORIES', 'DIRECTORY', 'DISTINCT', 'DISTRIBUTE', 'DROP', 'ELSE', 'END', 'ESCAPED', 'EXCEPT', 'EXCHANGE', 'EXISTS', 'EXPLAIN', 'EXPORT', 'EXTENDED', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FETCH', 'FIELDS', 'FILEFORMAT', 'FIRST', 'FOLLOWING', 'FOR', 'FOREIGN', 'FORMAT', 'FORMATTED', 'FROM', 'FULL', 'FUNCTION', 'FUNCTIONS', 'GLOBAL', 'GRANT', 'GROUP', 'GROUPING', 'HAVING', 'HOUR', 'HOURS', 'IF', 'IGNORE', 'IMPORT', 'IN', 'INDEX', 'INDEXES', 'INNER', 'INPATH', 'INPUTFORMAT', 'INSERT', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'ITEMS', 'JOIN', 'KEYS', 'LAST', 'LATERAL', 'LAZY', 'LEADING', 'LEFT', 'LIKE', 'LIMIT', 'LINES', 'LIST', 'LOAD', 'LOCAL', 'LOCATION', 'LOCK', 'LOCKS', 'LOGICAL', 'MACRO', 'MAP', 'MICROSECOND', 'MICROSECONDS', 'MILLISECOND', 'MILLISECONDS', 'MINUTE', 'MINUTES', 'MONTH', 'MONTHS', 'MSCK', 'NATURAL', 'NO', NOT, 'NULL', 'NULLS', 'OF', 'ON', 'ONLY', 'OPTION', 'OPTIONS', 'OR', 'ORDER', 'OUT', 'OUTER', 'OUTPUTFORMAT', 'OVER', 'OVERLAPS', 'OVERWRITE', 'PARTITION', 'PARTITIONED', 'PARTITIONS', 'PERCENT', 'PIVOT', 'POSITION', 'PRECEDING', 'PRIMARY', 'PRINCIPALS', 'PURGE', 'QUERY', 'RANGE', 'RECORDREADER', 'RECORDWRITER', 'RECOVER', 'REDUCE', 'REFERENCES', 'REFRESH', 'RENAME', 'REPAIR', 'REPLACE', 'RESET', 'RESTRICT', 'REVOKE', 'RIGHT', RLIKE, 'ROLE', 'ROLES', 'ROLLBACK', 'ROLLUP', 'ROW', 'ROWS', 'SCHEMA', 'SECOND', 'SECONDS', 'SELECT', 'SEMI', 'SEPARATED', 'SERDE', 'SERDEPROPERTIES', 'SESSION_USER', 'SET', 'MINUS', 'SETS', 'SHOW', 'SKEWED', 'SOME', 'SORT', 'SORTED', 'START', 'STATISTICS', 'STORED', 'STRATIFY', 'STRUCT', 'SUBSTR', 'SUBSTRING', 'TABLE', 'TABLES', 'TABLESAMPLE', 'TBLPROPERTIES', TEMPORARY, 'TERMINATED', 'THEN', 'TO', 'TOUCH', 'TRAILING', 'TRANSACTION', 'TRANSACTIONS', 'TRANSFORM', 'TRUE', 'TRUNCATE', 'TYPE', 'UNARCHIVE', 'UNBOUNDED', 'UNCACHE', 'UNION', 'UNIQUE', 'UNLOCK', 'UNSET', 'USE', 'USER', 'USING', 'VALUES', 'VIEW', 'WEEK', 'WEEKS', 'WHEN', 'WHERE', 'WINDOW', 'WITH', 'YEAR', 'YEARS', EQ, '<=>', '<>', '!=', '<', LTE, '>', GTE, '+', '-', '*', '/', '%', 'DIV', '&', '|', '||', '^', STRING, IDENTIFIER, BACKQUOTED_IDENTIFIER}(line 13, pos 17)

== SQL ==
-- out of range











select 'infinity'::date, '-infinity'::date
-----------------^^^


-- !query 47
select 'infinity'::date > 'today'::date as t
-- !query 47 schema
struct<>
-- !query 47 output
org.apache.spark.sql.catalyst.parser.ParseException

mismatched input ':' expecting {<EOF>, '(', ',', '.', '[', 'ADD', 'AFTER', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'ANTI', 'ANY', 'ARCHIVE', 'ARRAY', 'AS', 'ASC', 'AT', 'AUTHORIZATION', 'BETWEEN', 'BOTH', 'BUCKET', 'BUCKETS', 'BY', 'CACHE', 'CASCADE', 'CASE', 'CAST', 'CHANGE', 'CHECK', 'CLEAR', 'CLUSTER', 'CLUSTERED', 'CODEGEN', 'COLLATE', 'COLLECTION', 'COLUMN', 'COLUMNS', 'COMMENT', 'COMMIT', 'COMPACT', 'COMPACTIONS', 'COMPUTE', 'CONCATENATE', 'CONSTRAINT', 'COST', 'CREATE', 'CROSS', 'CUBE', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'DATA', 'DATABASE', DATABASES, 'DAY', 'DAYS', 'DBPROPERTIES', 'DEFINED', 'DELETE', 'DELIMITED', 'DESC', 'DESCRIBE', 'DFS', 'DIRECTORIES', 'DIRECTORY', 'DISTINCT', 'DISTRIBUTE', 'DROP', 'ELSE', 'END', 'ESCAPED', 'EXCEPT', 'EXCHANGE', 'EXISTS', 'EXPLAIN', 'EXPORT', 'EXTENDED', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FETCH', 'FIELDS', 'FILEFORMAT', 'FIRST', 'FOLLOWING', 'FOR', 'FOREIGN', 'FORMAT', 'FORMATTED', 'FROM', 'FULL', 'FUNCTION', 'FUNCTIONS', 'GLOBAL', 'GRANT', 'GROUP', 'GROUPING', 'HAVING', 'HOUR', 'HOURS', 'IF', 'IGNORE', 'IMPORT', 'IN', 'INDEX', 'INDEXES', 'INNER', 'INPATH', 'INPUTFORMAT', 'INSERT', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'ITEMS', 'JOIN', 'KEYS', 'LAST', 'LATERAL', 'LAZY', 'LEADING', 'LEFT', 'LIKE', 'LIMIT', 'LINES', 'LIST', 'LOAD', 'LOCAL', 'LOCATION', 'LOCK', 'LOCKS', 'LOGICAL', 'MACRO', 'MAP', 'MICROSECOND', 'MICROSECONDS', 'MILLISECOND', 'MILLISECONDS', 'MINUTE', 'MINUTES', 'MONTH', 'MONTHS', 'MSCK', 'NATURAL', 'NO', NOT, 'NULL', 'NULLS', 'OF', 'ON', 'ONLY', 'OPTION', 'OPTIONS', 'OR', 'ORDER', 'OUT', 'OUTER', 'OUTPUTFORMAT', 'OVER', 'OVERLAPS', 'OVERWRITE', 'PARTITION', 'PARTITIONED', 'PARTITIONS', 'PERCENT', 'PIVOT', 'POSITION', 'PRECEDING', 'PRIMARY', 'PRINCIPALS', 'PURGE', 'QUERY', 'RANGE', 'RECORDREADER', 'RECORDWRITER', 'RECOVER', 'REDUCE', 'REFERENCES', 'REFRESH', 'RENAME', 'REPAIR', 'REPLACE', 'RESET', 'RESTRICT', 'REVOKE', 'RIGHT', RLIKE, 'ROLE', 'ROLES', 'ROLLBACK', 'ROLLUP', 'ROW', 'ROWS', 'SCHEMA', 'SECOND', 'SECONDS', 'SELECT', 'SEMI', 'SEPARATED', 'SERDE', 'SERDEPROPERTIES', 'SESSION_USER', 'SET', 'MINUS', 'SETS', 'SHOW', 'SKEWED', 'SOME', 'SORT', 'SORTED', 'START', 'STATISTICS', 'STORED', 'STRATIFY', 'STRUCT', 'SUBSTR', 'SUBSTRING', 'TABLE', 'TABLES', 'TABLESAMPLE', 'TBLPROPERTIES', TEMPORARY, 'TERMINATED', 'THEN', 'TO', 'TOUCH', 'TRAILING', 'TRANSACTION', 'TRANSACTIONS', 'TRANSFORM', 'TRUE', 'TRUNCATE', 'TYPE', 'UNARCHIVE', 'UNBOUNDED', 'UNCACHE', 'UNION', 'UNIQUE', 'UNLOCK', 'UNSET', 'USE', 'USER', 'USING', 'VALUES', 'VIEW', 'WEEK', 'WEEKS', 'WHEN', 'WHERE', 'WINDOW', 'WITH', 'YEAR', 'YEARS', EQ, '<=>', '<>', '!=', '<', LTE, '>', GTE, '+', '-', '*', '/', '%', 'DIV', '&', '|', '||', '^', STRING, IDENTIFIER, BACKQUOTED_IDENTIFIER}(line 1, pos 17)

== SQL ==
select 'infinity'::date > 'today'::date as t
-----------------^^^


-- !query 48
select '-infinity'::date < 'today'::date as t
-- !query 48 schema
struct<>
-- !query 48 output
org.apache.spark.sql.catalyst.parser.ParseException

mismatched input ':' expecting {<EOF>, '(', ',', '.', '[', 'ADD', 'AFTER', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'ANTI', 'ANY', 'ARCHIVE', 'ARRAY', 'AS', 'ASC', 'AT', 'AUTHORIZATION', 'BETWEEN', 'BOTH', 'BUCKET', 'BUCKETS', 'BY', 'CACHE', 'CASCADE', 'CASE', 'CAST', 'CHANGE', 'CHECK', 'CLEAR', 'CLUSTER', 'CLUSTERED', 'CODEGEN', 'COLLATE', 'COLLECTION', 'COLUMN', 'COLUMNS', 'COMMENT', 'COMMIT', 'COMPACT', 'COMPACTIONS', 'COMPUTE', 'CONCATENATE', 'CONSTRAINT', 'COST', 'CREATE', 'CROSS', 'CUBE', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'DATA', 'DATABASE', DATABASES, 'DAY', 'DAYS', 'DBPROPERTIES', 'DEFINED', 'DELETE', 'DELIMITED', 'DESC', 'DESCRIBE', 'DFS', 'DIRECTORIES', 'DIRECTORY', 'DISTINCT', 'DISTRIBUTE', 'DROP', 'ELSE', 'END', 'ESCAPED', 'EXCEPT', 'EXCHANGE', 'EXISTS', 'EXPLAIN', 'EXPORT', 'EXTENDED', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FETCH', 'FIELDS', 'FILEFORMAT', 'FIRST', 'FOLLOWING', 'FOR', 'FOREIGN', 'FORMAT', 'FORMATTED', 'FROM', 'FULL', 'FUNCTION', 'FUNCTIONS', 'GLOBAL', 'GRANT', 'GROUP', 'GROUPING', 'HAVING', 'HOUR', 'HOURS', 'IF', 'IGNORE', 'IMPORT', 'IN', 'INDEX', 'INDEXES', 'INNER', 'INPATH', 'INPUTFORMAT', 'INSERT', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'ITEMS', 'JOIN', 'KEYS', 'LAST', 'LATERAL', 'LAZY', 'LEADING', 'LEFT', 'LIKE', 'LIMIT', 'LINES', 'LIST', 'LOAD', 'LOCAL', 'LOCATION', 'LOCK', 'LOCKS', 'LOGICAL', 'MACRO', 'MAP', 'MICROSECOND', 'MICROSECONDS', 'MILLISECOND', 'MILLISECONDS', 'MINUTE', 'MINUTES', 'MONTH', 'MONTHS', 'MSCK', 'NATURAL', 'NO', NOT, 'NULL', 'NULLS', 'OF', 'ON', 'ONLY', 'OPTION', 'OPTIONS', 'OR', 'ORDER', 'OUT', 'OUTER', 'OUTPUTFORMAT', 'OVER', 'OVERLAPS', 'OVERWRITE', 'PARTITION', 'PARTITIONED', 'PARTITIONS', 'PERCENT', 'PIVOT', 'POSITION', 'PRECEDING', 'PRIMARY', 'PRINCIPALS', 'PURGE', 'QUERY', 'RANGE', 'RECORDREADER', 'RECORDWRITER', 'RECOVER', 'REDUCE', 'REFERENCES', 'REFRESH', 'RENAME', 'REPAIR', 'REPLACE', 'RESET', 'RESTRICT', 'REVOKE', 'RIGHT', RLIKE, 'ROLE', 'ROLES', 'ROLLBACK', 'ROLLUP', 'ROW', 'ROWS', 'SCHEMA', 'SECOND', 'SECONDS', 'SELECT', 'SEMI', 'SEPARATED', 'SERDE', 'SERDEPROPERTIES', 'SESSION_USER', 'SET', 'MINUS', 'SETS', 'SHOW', 'SKEWED', 'SOME', 'SORT', 'SORTED', 'START', 'STATISTICS', 'STORED', 'STRATIFY', 'STRUCT', 'SUBSTR', 'SUBSTRING', 'TABLE', 'TABLES', 'TABLESAMPLE', 'TBLPROPERTIES', TEMPORARY, 'TERMINATED', 'THEN', 'TO', 'TOUCH', 'TRAILING', 'TRANSACTION', 'TRANSACTIONS', 'TRANSFORM', 'TRUE', 'TRUNCATE', 'TYPE', 'UNARCHIVE', 'UNBOUNDED', 'UNCACHE', 'UNION', 'UNIQUE', 'UNLOCK', 'UNSET', 'USE', 'USER', 'USING', 'VALUES', 'VIEW', 'WEEK', 'WEEKS', 'WHEN', 'WHERE', 'WINDOW', 'WITH', 'YEAR', 'YEARS', EQ, '<=>', '<>', '!=', '<', LTE, '>', GTE, '+', '-', '*', '/', '%', 'DIV', '&', '|', '||', '^', STRING, IDENTIFIER, BACKQUOTED_IDENTIFIER}(line 1, pos 18)

== SQL ==
select '-infinity'::date < 'today'::date as t
------------------^^^


-- !query 49
select isfinite('infinity'::date), isfinite('-infinity'::date), isfinite('today'::date)
-- !query 49 schema
struct<>
-- !query 49 output
org.apache.spark.sql.catalyst.parser.ParseException

mismatched input ':' expecting {')', ','}(line 1, pos 26)

== SQL ==
select isfinite('infinity'::date), isfinite('-infinity'::date), isfinite('today'::date)
--------------------------^^^


-- !query 50
SELECT EXTRACT(HOUR FROM DATE 'infinity')
-- !query 50 schema
struct<>
-- !query 50 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the DATE value: infinity(line 1, pos 25)

== SQL ==
SELECT EXTRACT(HOUR FROM DATE 'infinity')
-------------------------^^^


-- !query 51
-- NULL
SELECT EXTRACT(HOUR FROM DATE '-infinity')
-- !query 51 schema
struct<>
-- !query 51 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the DATE value: -infinity(line 2, pos 25)

== SQL ==
-- NULL
SELECT EXTRACT(HOUR FROM DATE '-infinity')
-------------------------^^^


-- !query 52
-- NULL
SELECT EXTRACT(HOUR FROM TIMESTAMP   'infinity')
-- !query 52 schema
struct<>
-- !query 52 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the TIMESTAMP value: infinity(line 2, pos 25)

== SQL ==
-- NULL
SELECT EXTRACT(HOUR FROM TIMESTAMP   'infinity')
-------------------------^^^


-- !query 53
-- NULL
SELECT EXTRACT(HOUR FROM TIMESTAMP   '-infinity')
-- !query 53 schema
struct<>
-- !query 53 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the TIMESTAMP value: -infinity(line 2, pos 25)

== SQL ==
-- NULL
SELECT EXTRACT(HOUR FROM TIMESTAMP   '-infinity')
-------------------------^^^


-- !query 54
-- NULL
SELECT EXTRACT(HOUR FROM TIMESTAMPTZ 'infinity')
-- !query 54 schema
struct<>
-- !query 54 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'TIMESTAMPTZ' are currently not supported.(line 2, pos 25)

== SQL ==
-- NULL
SELECT EXTRACT(HOUR FROM TIMESTAMPTZ 'infinity')
-------------------------^^^


-- !query 55
-- NULL
SELECT EXTRACT(HOUR FROM TIMESTAMPTZ '-infinity')
-- !query 55 schema
struct<>
-- !query 55 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'TIMESTAMPTZ' are currently not supported.(line 2, pos 25)

== SQL ==
-- NULL
SELECT EXTRACT(HOUR FROM TIMESTAMPTZ '-infinity')
-------------------------^^^


-- !query 56
-- NULL
SELECT EXTRACT(MICROSECONDS  FROM DATE 'infinity')
-- !query 56 schema
struct<>
-- !query 56 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'MICROSECONDS' are currently not supported.(line 2, pos 7)

== SQL ==
-- NULL
SELECT EXTRACT(MICROSECONDS  FROM DATE 'infinity')
-------^^^


-- !query 57
-- NULL
SELECT EXTRACT(MILLISECONDS  FROM DATE 'infinity')
-- !query 57 schema
struct<>
-- !query 57 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'MILLISECONDS' are currently not supported.(line 2, pos 7)

== SQL ==
-- NULL
SELECT EXTRACT(MILLISECONDS  FROM DATE 'infinity')
-------^^^


-- !query 58
-- NULL
SELECT EXTRACT(SECOND        FROM DATE 'infinity')
-- !query 58 schema
struct<>
-- !query 58 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the DATE value: infinity(line 2, pos 34)

== SQL ==
-- NULL
SELECT EXTRACT(SECOND        FROM DATE 'infinity')
----------------------------------^^^


-- !query 59
-- NULL
SELECT EXTRACT(MINUTE        FROM DATE 'infinity')
-- !query 59 schema
struct<>
-- !query 59 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the DATE value: infinity(line 2, pos 34)

== SQL ==
-- NULL
SELECT EXTRACT(MINUTE        FROM DATE 'infinity')
----------------------------------^^^


-- !query 60
-- NULL
SELECT EXTRACT(HOUR          FROM DATE 'infinity')
-- !query 60 schema
struct<>
-- !query 60 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the DATE value: infinity(line 2, pos 34)

== SQL ==
-- NULL
SELECT EXTRACT(HOUR          FROM DATE 'infinity')
----------------------------------^^^


-- !query 61
-- NULL
SELECT EXTRACT(DAY           FROM DATE 'infinity')
-- !query 61 schema
struct<>
-- !query 61 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the DATE value: infinity(line 2, pos 34)

== SQL ==
-- NULL
SELECT EXTRACT(DAY           FROM DATE 'infinity')
----------------------------------^^^


-- !query 62
-- NULL
SELECT EXTRACT(MONTH         FROM DATE 'infinity')
-- !query 62 schema
struct<>
-- !query 62 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the DATE value: infinity(line 2, pos 34)

== SQL ==
-- NULL
SELECT EXTRACT(MONTH         FROM DATE 'infinity')
----------------------------------^^^


-- !query 63
-- NULL
SELECT EXTRACT(QUARTER       FROM DATE 'infinity')
-- !query 63 schema
struct<>
-- !query 63 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the DATE value: infinity(line 2, pos 34)

== SQL ==
-- NULL
SELECT EXTRACT(QUARTER       FROM DATE 'infinity')
----------------------------------^^^


-- !query 64
-- NULL
SELECT EXTRACT(WEEK          FROM DATE 'infinity')
-- !query 64 schema
struct<>
-- !query 64 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the DATE value: infinity(line 2, pos 34)

== SQL ==
-- NULL
SELECT EXTRACT(WEEK          FROM DATE 'infinity')
----------------------------------^^^


-- !query 65
-- NULL
SELECT EXTRACT(DOW           FROM DATE 'infinity')
-- !query 65 schema
struct<>
-- !query 65 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'DOW' are currently not supported.(line 2, pos 7)

== SQL ==
-- NULL
SELECT EXTRACT(DOW           FROM DATE 'infinity')
-------^^^


-- !query 66
-- NULL
SELECT EXTRACT(ISODOW        FROM DATE 'infinity')
-- !query 66 schema
struct<>
-- !query 66 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'ISODOW' are currently not supported.(line 2, pos 7)

== SQL ==
-- NULL
SELECT EXTRACT(ISODOW        FROM DATE 'infinity')
-------^^^


-- !query 67
-- NULL
SELECT EXTRACT(DOY           FROM DATE 'infinity')
-- !query 67 schema
struct<>
-- !query 67 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'DOY' are currently not supported.(line 2, pos 7)

== SQL ==
-- NULL
SELECT EXTRACT(DOY           FROM DATE 'infinity')
-------^^^


-- !query 68
-- NULL
SELECT EXTRACT(TIMEZONE      FROM DATE 'infinity')
-- !query 68 schema
struct<>
-- !query 68 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'TIMEZONE' are currently not supported.(line 2, pos 7)

== SQL ==
-- NULL
SELECT EXTRACT(TIMEZONE      FROM DATE 'infinity')
-------^^^


-- !query 69
-- NULL
SELECT EXTRACT(TIMEZONE_M    FROM DATE 'infinity')
-- !query 69 schema
struct<>
-- !query 69 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'TIMEZONE_M' are currently not supported.(line 2, pos 7)

== SQL ==
-- NULL
SELECT EXTRACT(TIMEZONE_M    FROM DATE 'infinity')
-------^^^


-- !query 70
-- NULL
SELECT EXTRACT(TIMEZONE_H    FROM DATE 'infinity')
-- !query 70 schema
struct<>
-- !query 70 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'TIMEZONE_H' are currently not supported.(line 2, pos 7)

== SQL ==
-- NULL
SELECT EXTRACT(TIMEZONE_H    FROM DATE 'infinity')
-------^^^


-- !query 71
-- NULL
SELECT EXTRACT(EPOCH FROM DATE 'infinity')
-- !query 71 schema
struct<>
-- !query 71 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'EPOCH' are currently not supported.(line 2, pos 7)

== SQL ==
-- NULL
SELECT EXTRACT(EPOCH FROM DATE 'infinity')
-------^^^


-- !query 72
--  Infinity
SELECT EXTRACT(EPOCH FROM DATE '-infinity')
-- !query 72 schema
struct<>
-- !query 72 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'EPOCH' are currently not supported.(line 2, pos 7)

== SQL ==
--  Infinity
SELECT EXTRACT(EPOCH FROM DATE '-infinity')
-------^^^


-- !query 73
-- -Infinity
SELECT EXTRACT(EPOCH FROM TIMESTAMP   'infinity')
-- !query 73 schema
struct<>
-- !query 73 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'EPOCH' are currently not supported.(line 2, pos 7)

== SQL ==
-- -Infinity
SELECT EXTRACT(EPOCH FROM TIMESTAMP   'infinity')
-------^^^


-- !query 74
--  Infinity
SELECT EXTRACT(EPOCH FROM TIMESTAMP   '-infinity')
-- !query 74 schema
struct<>
-- !query 74 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'EPOCH' are currently not supported.(line 2, pos 7)

== SQL ==
--  Infinity
SELECT EXTRACT(EPOCH FROM TIMESTAMP   '-infinity')
-------^^^


-- !query 75
-- -Infinity
SELECT EXTRACT(EPOCH FROM TIMESTAMPTZ 'infinity')
-- !query 75 schema
struct<>
-- !query 75 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'EPOCH' are currently not supported.(line 2, pos 7)

== SQL ==
-- -Infinity
SELECT EXTRACT(EPOCH FROM TIMESTAMPTZ 'infinity')
-------^^^


-- !query 76
--  Infinity
SELECT EXTRACT(EPOCH FROM TIMESTAMPTZ '-infinity')
-- !query 76 schema
struct<>
-- !query 76 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'EPOCH' are currently not supported.(line 2, pos 7)

== SQL ==
--  Infinity
SELECT EXTRACT(EPOCH FROM TIMESTAMPTZ '-infinity')
-------^^^


-- !query 77
-- -Infinity
SELECT EXTRACT(YEAR       FROM DATE 'infinity')
-- !query 77 schema
struct<>
-- !query 77 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the DATE value: infinity(line 2, pos 31)

== SQL ==
-- -Infinity
SELECT EXTRACT(YEAR       FROM DATE 'infinity')
-------------------------------^^^


-- !query 78
--  Infinity
SELECT EXTRACT(DECADE     FROM DATE 'infinity')
-- !query 78 schema
struct<>
-- !query 78 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'DECADE' are currently not supported.(line 2, pos 7)

== SQL ==
--  Infinity
SELECT EXTRACT(DECADE     FROM DATE 'infinity')
-------^^^


-- !query 79
--  Infinity
SELECT EXTRACT(CENTURY    FROM DATE 'infinity')
-- !query 79 schema
struct<>
-- !query 79 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'CENTURY' are currently not supported.(line 2, pos 7)

== SQL ==
--  Infinity
SELECT EXTRACT(CENTURY    FROM DATE 'infinity')
-------^^^


-- !query 80
--  Infinity
SELECT EXTRACT(MILLENNIUM FROM DATE 'infinity')
-- !query 80 schema
struct<>
-- !query 80 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'MILLENNIUM' are currently not supported.(line 2, pos 7)

== SQL ==
--  Infinity
SELECT EXTRACT(MILLENNIUM FROM DATE 'infinity')
-------^^^


-- !query 81
--  Infinity
SELECT EXTRACT(JULIAN     FROM DATE 'infinity')
-- !query 81 schema
struct<>
-- !query 81 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'JULIAN' are currently not supported.(line 2, pos 7)

== SQL ==
--  Infinity
SELECT EXTRACT(JULIAN     FROM DATE 'infinity')
-------^^^


-- !query 82
--  Infinity
SELECT EXTRACT(ISOYEAR    FROM DATE 'infinity')
-- !query 82 schema
struct<>
-- !query 82 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'ISOYEAR' are currently not supported.(line 2, pos 7)

== SQL ==
--  Infinity
SELECT EXTRACT(ISOYEAR    FROM DATE 'infinity')
-------^^^


-- !query 83
--  Infinity
SELECT EXTRACT(EPOCH      FROM DATE 'infinity')
-- !query 83 schema
struct<>
-- !query 83 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'EPOCH' are currently not supported.(line 2, pos 7)

== SQL ==
--  Infinity
SELECT EXTRACT(EPOCH      FROM DATE 'infinity')
-------^^^


-- !query 84
--  Infinity
SELECT EXTRACT(MICROSEC  FROM DATE 'infinity')
-- !query 84 schema
struct<>
-- !query 84 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'MICROSEC' are currently not supported.(line 2, pos 7)

== SQL ==
--  Infinity
SELECT EXTRACT(MICROSEC  FROM DATE 'infinity')
-------^^^


-- !query 85
-- ERROR:  timestamp units "microsec" not recognized
SELECT EXTRACT(UNDEFINED FROM DATE 'infinity')
-- !query 85 schema
struct<>
-- !query 85 output
org.apache.spark.sql.catalyst.parser.ParseException

Literals of type 'UNDEFINED' are currently not supported.(line 2, pos 7)

== SQL ==
-- ERROR:  timestamp units "microsec" not recognized
SELECT EXTRACT(UNDEFINED FROM DATE 'infinity')
-------^^^


-- !query 86
-- ERROR:  timestamp units "undefined" not supported

select make_date(2013, 7, 15)
-- !query 86 schema
struct<>
-- !query 86 output
org.apache.spark.sql.AnalysisException
Undefined function: 'make_date'. This function is neither a registered temporary function nor a permanent function registered in the database 'default'.; line 3 pos 7


-- !query 87
select make_date(-44, 3, 15)
-- !query 87 schema
struct<>
-- !query 87 output
org.apache.spark.sql.AnalysisException
Undefined function: 'make_date'. This function is neither a registered temporary function nor a permanent function registered in the database 'default'.; line 1 pos 7


-- !query 88
select make_time(8, 20, 0.0)
-- !query 88 schema
struct<>
-- !query 88 output
org.apache.spark.sql.AnalysisException
Undefined function: 'make_time'. This function is neither a registered temporary function nor a permanent function registered in the database 'default'.; line 1 pos 7


-- !query 89
select make_date(2013, 2, 30)
-- !query 89 schema
struct<>
-- !query 89 output
org.apache.spark.sql.AnalysisException
Undefined function: 'make_date'. This function is neither a registered temporary function nor a permanent function registered in the database 'default'.; line 1 pos 7


-- !query 90
select make_date(2013, 13, 1)
-- !query 90 schema
struct<>
-- !query 90 output
org.apache.spark.sql.AnalysisException
Undefined function: 'make_date'. This function is neither a registered temporary function nor a permanent function registered in the database 'default'.; line 1 pos 7


-- !query 91
select make_date(2013, 11, -1)
-- !query 91 schema
struct<>
-- !query 91 output
org.apache.spark.sql.AnalysisException
Undefined function: 'make_date'. This function is neither a registered temporary function nor a permanent function registered in the database 'default'.; line 1 pos 7


-- !query 92
select make_time(10, 55, 100.1)
-- !query 92 schema
struct<>
-- !query 92 output
org.apache.spark.sql.AnalysisException
Undefined function: 'make_time'. This function is neither a registered temporary function nor a permanent function registered in the database 'default'.; line 1 pos 7


-- !query 93
select make_time(24, 0, 2.1)
-- !query 93 schema
struct<>
-- !query 93 output
org.apache.spark.sql.AnalysisException
Undefined function: 'make_time'. This function is neither a registered temporary function nor a permanent function registered in the database 'default'.; line 1 pos 7
