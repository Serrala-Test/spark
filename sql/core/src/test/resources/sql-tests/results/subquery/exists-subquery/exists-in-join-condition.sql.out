-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TEMP VIEW x(x1, x2) AS VALUES
    (0, 1),
    (1, 1),
    (1, 2),
    (3, 4),
    (5, 6),
    (9, 10)
-- !query schema
struct<>
-- !query output



-- !query
CREATE TEMP VIEW y(y1, y2) AS VALUES
    (0, 2),
    (1, 4),
    (1, 5),
    (2, 6),
    (3, 8),
    (4, 11)
-- !query schema
struct<>
-- !query output



-- !query
CREATE TEMP VIEW z(z1, z2) AS VALUES
    (0, 2),
    (1, 4),
    (3, 3),
    (3, 6),
    (8, 11)
-- !query schema
struct<>
-- !query output



-- !query
select * from x inner join y on x1 = y1 and exists (select * from z where z2 = x2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
1	2	1	4
1	2	1	5
3	4	3	8


-- !query
select * from x inner join y on x1 = y1 and not exists (select * from z where z2 = x2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	0	2
1	1	1	4
1	1	1	5


-- !query
select * from x inner join y on x1 = y1 and exists (select * from z where z2 = y2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	0	2
1	1	1	4
1	2	1	4


-- !query
select * from x inner join y on x1 = y1 and not exists (select * from z where z2 = y2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
1	1	1	5
1	2	1	5
3	4	3	8


-- !query
select * from x left join y on x1 = y1 and exists (select * from z where z2 = x2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	NULL	NULL
1	1	NULL	NULL
1	2	1	4
1	2	1	5
3	4	3	8
5	6	NULL	NULL
9	10	NULL	NULL


-- !query
select * from x left join y on x1 = y1 and not exists (select * from z where z2 = x2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	0	2
1	1	1	4
1	1	1	5
1	2	NULL	NULL
3	4	NULL	NULL
5	6	NULL	NULL
9	10	NULL	NULL


-- !query
select * from x left join y on x1 = y1 and exists (select * from z where z2 = y2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	0	2
1	1	1	4
1	2	1	4
3	4	NULL	NULL
5	6	NULL	NULL
9	10	NULL	NULL


-- !query
select * from x left join y on x1 = y1 and not exists (select * from z where z2 = y2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	NULL	NULL
1	1	1	5
1	2	1	5
3	4	3	8
5	6	NULL	NULL
9	10	NULL	NULL


-- !query
select * from x right join y on x1 = y1 and exists (select * from z where z2 = x2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
NULL	NULL	0	2
NULL	NULL	2	6
NULL	NULL	4	11
1	2	1	4
1	2	1	5
3	4	3	8


-- !query
select * from x right join y on x1 = y1 and not exists (select * from z where z2 = x2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
NULL	NULL	2	6
NULL	NULL	3	8
NULL	NULL	4	11
0	1	0	2
1	1	1	4
1	1	1	5


-- !query
select * from x right join y on x1 = y1 and exists (select * from z where z2 = y2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
NULL	NULL	1	5
NULL	NULL	2	6
NULL	NULL	3	8
NULL	NULL	4	11
0	1	0	2
1	1	1	4
1	2	1	4


-- !query
select * from x right join y on x1 = y1 and not exists (select * from z where z2 = y2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
NULL	NULL	0	2
NULL	NULL	1	4
NULL	NULL	2	6
NULL	NULL	4	11
1	1	1	5
1	2	1	5
3	4	3	8


-- !query
select * from x right join y on x1 = y1 and exists (select * from z where z2 = x2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
NULL	NULL	0	2
NULL	NULL	2	6
NULL	NULL	4	11
1	2	1	4
1	2	1	5
3	4	3	8


-- !query
select * from x right join y on x1 = y1 and not exists (select * from z where z2 = x2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
NULL	NULL	2	6
NULL	NULL	3	8
NULL	NULL	4	11
0	1	0	2
1	1	1	4
1	1	1	5


-- !query
select * from x right join y on x1 = y1 and exists (select * from z where z2 = y2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
NULL	NULL	1	5
NULL	NULL	2	6
NULL	NULL	3	8
NULL	NULL	4	11
0	1	0	2
1	1	1	4
1	2	1	4


-- !query
select * from x right join y on x1 = y1 and not exists (select * from z where z2 = y2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
NULL	NULL	0	2
NULL	NULL	1	4
NULL	NULL	2	6
NULL	NULL	4	11
1	1	1	5
1	2	1	5
3	4	3	8


-- !query
select * from x left semi join y on x1 = y1 and exists (select * from z where z2 = x2) order by x1, x2, y1, y2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`y1`",
    "proposal" : "`x1`, `x2`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 105,
    "stopIndex" : 106,
    "fragment" : "y1"
  } ]
}


-- !query
select * from x left semi join y on x1 = y1 and not exists (select * from z where z2 = x2) order by x1, x2, y1, y2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`y1`",
    "proposal" : "`x1`, `x2`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 109,
    "stopIndex" : 110,
    "fragment" : "y1"
  } ]
}


-- !query
select * from x left semi join y on x1 = y1 and exists (select * from z where z2 = y2) order by x1, x2, y1, y2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`y1`",
    "proposal" : "`x1`, `x2`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 105,
    "stopIndex" : 106,
    "fragment" : "y1"
  } ]
}


-- !query
select * from x left semi join y on x1 = y1 and not exists (select * from z where z2 = y2) order by x1, x2, y1, y2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`y1`",
    "proposal" : "`x1`, `x2`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 109,
    "stopIndex" : 110,
    "fragment" : "y1"
  } ]
}


-- !query
select * from x left anti join y on x1 = y1 and exists (select * from z where z2 = x2) order by x1, x2, y1, y2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`y1`",
    "proposal" : "`x1`, `x2`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 105,
    "stopIndex" : 106,
    "fragment" : "y1"
  } ]
}


-- !query
select * from x left anti join y on x1 = y1 and not exists (select * from z where z2 = x2) order by x1, x2, y1, y2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`y1`",
    "proposal" : "`x1`, `x2`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 109,
    "stopIndex" : 110,
    "fragment" : "y1"
  } ]
}


-- !query
select * from x left anti join y on x1 = y1 and exists (select * from z where z2 = y2) order by x1, x2, y1, y2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`y1`",
    "proposal" : "`x1`, `x2`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 105,
    "stopIndex" : 106,
    "fragment" : "y1"
  } ]
}


-- !query
select * from x left anti join y on x1 = y1 and not exists (select * from z where z2 = y2) order by x1, x2, y1, y2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`y1`",
    "proposal" : "`x1`, `x2`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 109,
    "stopIndex" : 110,
    "fragment" : "y1"
  } ]
}


-- !query
select * from x full outer join y on x1 = y1 and exists (select * from z where z2 = x2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
NULL	NULL	0	2
NULL	NULL	2	6
NULL	NULL	4	11
0	1	NULL	NULL
1	1	NULL	NULL
1	2	1	4
1	2	1	5
3	4	3	8
5	6	NULL	NULL
9	10	NULL	NULL


-- !query
select * from x full outer join y on x1 = y1 and not exists (select * from z where z2 = x2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
NULL	NULL	2	6
NULL	NULL	3	8
NULL	NULL	4	11
0	1	0	2
1	1	1	4
1	1	1	5
1	2	NULL	NULL
3	4	NULL	NULL
5	6	NULL	NULL
9	10	NULL	NULL


-- !query
select * from x full outer join y on x1 = y1 and exists (select * from z where z2 = y2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
NULL	NULL	1	5
NULL	NULL	2	6
NULL	NULL	3	8
NULL	NULL	4	11
0	1	0	2
1	1	1	4
1	2	1	4
3	4	NULL	NULL
5	6	NULL	NULL
9	10	NULL	NULL


-- !query
select * from x full outer join y on x1 = y1 and not exists (select * from z where z2 = y2) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
NULL	NULL	0	2
NULL	NULL	1	4
NULL	NULL	2	6
NULL	NULL	4	11
0	1	NULL	NULL
1	1	1	5
1	2	1	5
3	4	3	8
5	6	NULL	NULL
9	10	NULL	NULL


-- !query
select * from x inner join y on x1 = y1 or exists (select * from z where z1 = x1) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	0	2
0	1	1	4
0	1	1	5
0	1	2	6
0	1	3	8
0	1	4	11
1	1	0	2
1	1	1	4
1	1	1	5
1	1	2	6
1	1	3	8
1	1	4	11
1	2	0	2
1	2	1	4
1	2	1	5
1	2	2	6
1	2	3	8
1	2	4	11
3	4	0	2
3	4	1	4
3	4	1	5
3	4	2	6
3	4	3	8
3	4	4	11


-- !query
select * from x inner join y on x1 = y1 or not exists (select * from z where z1 = x1) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	0	2
1	1	1	4
1	1	1	5
1	2	1	4
1	2	1	5
3	4	3	8
5	6	0	2
5	6	1	4
5	6	1	5
5	6	2	6
5	6	3	8
5	6	4	11
9	10	0	2
9	10	1	4
9	10	1	5
9	10	2	6
9	10	3	8
9	10	4	11


-- !query
select * from x left join y on x1 = y1 or exists (select * from z where z1 = x1) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	0	2
0	1	1	4
0	1	1	5
0	1	2	6
0	1	3	8
0	1	4	11
1	1	0	2
1	1	1	4
1	1	1	5
1	1	2	6
1	1	3	8
1	1	4	11
1	2	0	2
1	2	1	4
1	2	1	5
1	2	2	6
1	2	3	8
1	2	4	11
3	4	0	2
3	4	1	4
3	4	1	5
3	4	2	6
3	4	3	8
3	4	4	11
5	6	NULL	NULL
9	10	NULL	NULL


-- !query
select * from x left join y on x1 = y1 or not exists (select * from z where z1 = x1) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	0	2
1	1	1	4
1	1	1	5
1	2	1	4
1	2	1	5
3	4	3	8
5	6	0	2
5	6	1	4
5	6	1	5
5	6	2	6
5	6	3	8
5	6	4	11
9	10	0	2
9	10	1	4
9	10	1	5
9	10	2	6
9	10	3	8
9	10	4	11


-- !query
select * from x inner join y on x1 = y1 or exists (select * from z where z1 = y1) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	0	2
0	1	1	4
0	1	1	5
0	1	3	8
1	1	0	2
1	1	1	4
1	1	1	5
1	1	3	8
1	2	0	2
1	2	1	4
1	2	1	5
1	2	3	8
3	4	0	2
3	4	1	4
3	4	1	5
3	4	3	8
5	6	0	2
5	6	1	4
5	6	1	5
5	6	3	8
9	10	0	2
9	10	1	4
9	10	1	5
9	10	3	8


-- !query
select * from x inner join y on x1 = y1 or not exists (select * from z where z1 = y1) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	0	2
0	1	2	6
0	1	4	11
1	1	1	4
1	1	1	5
1	1	2	6
1	1	4	11
1	2	1	4
1	2	1	5
1	2	2	6
1	2	4	11
3	4	2	6
3	4	3	8
3	4	4	11
5	6	2	6
5	6	4	11
9	10	2	6
9	10	4	11


-- !query
select * from x left join y on x1 = y1 or exists (select * from z where z1 = y1) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	0	2
0	1	1	4
0	1	1	5
0	1	3	8
1	1	0	2
1	1	1	4
1	1	1	5
1	1	3	8
1	2	0	2
1	2	1	4
1	2	1	5
1	2	3	8
3	4	0	2
3	4	1	4
3	4	1	5
3	4	3	8
5	6	0	2
5	6	1	4
5	6	1	5
5	6	3	8
9	10	0	2
9	10	1	4
9	10	1	5
9	10	3	8


-- !query
select * from x left join y on x1 = y1 or not exists (select * from z where z1 = y1) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	0	2
0	1	2	6
0	1	4	11
1	1	1	4
1	1	1	5
1	1	2	6
1	1	4	11
1	2	1	4
1	2	1	5
1	2	2	6
1	2	4	11
3	4	2	6
3	4	3	8
3	4	4	11
5	6	2	6
5	6	4	11
9	10	2	6
9	10	4	11


-- !query
select * from x inner join y on x1 = y1 and exists (select * from z where z1 = x1) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	0	2
1	1	1	4
1	1	1	5
1	2	1	4
1	2	1	5
3	4	3	8


-- !query
select * from x inner join y on x1 = y1 and not exists (select * from z where z1 = x1) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output



-- !query
select * from x left join y on x1 = y1 and exists (select * from z where z1 = x1) order by x1, x2, y1, y2
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkRuntimeException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_2172",
  "messageParameters" : {
    "batchName" : "Infer Filters",
    "plan" : " Sort [x1#x ASC NULLS FIRST, x2#x ASC NULLS FIRST, y1#x ASC NULLS FIRST, y2#x ASC NULLS FIRST], true   Sort [x1#x ASC NULLS FIRST, x2#x ASC NULLS FIRST, y1#x ASC NULLS FIRST, y2#x ASC NULLS FIRST], true\n +- Join LeftOuter, (exists#x [x1#x && (z1#x = x1#x)] AND (x1#x = y1#x))                         +- Join LeftOuter, (exists#x [x1#x && (z1#x = x1#x)] AND (x1#x = y1#x))\n    :  +- Project [col1#x AS z1#x, col2#x AS z2#x]                                                        :  +- Project [col1#x AS z1#x, col2#x AS z2#x]\n    :     +- LocalRelation [col1#x, col2#x]                                                                     :     +- LocalRelation [col1#x, col2#x]\n    :- Project [col1#x AS x1#x, col2#x AS x2#x]                                                           :- Project [col1#x AS x1#x, col2#x AS x2#x]\n    :  +- LocalRelation [col1#x, col2#x]                                                                        :  +- LocalRelation [col1#x, col2#x]\n    +- Filter exists#x [y1#x && (z1#x = y1#x)]                                                            +- Filter exists#x [y1#x && (z1#x = y1#x)]\n       :  +- Project [col1#x AS z1#x, col2#x AS z2#x]                                                        :  +- Project [col1#x AS z1#x, col2#x AS z2#x]\n       :     +- LocalRelation [col1#x, col2#x]                                                                     :     +- LocalRelation [col1#x, col2#x]\n!      +- Project [col1#x AS y1#x, col2#x AS y2#x]                                                           +- Filter exists#x [y1#x && (z1#x = y1#x)]\n!         +- LocalRelation [col1#x, col2#x]                                                                           :  +- Project [col1#x AS z1#x, col2#x AS z2#x]\n!                                                                                                                           :     +- LocalRelation [col1#x, col2#x]\n!                                                                                                                           +- Project [col1#x AS y1#x, col2#x AS y2#x]\n!                                                                                                                              +- LocalRelation [col1#x, col2#x]"
  }
}


-- !query
select * from x left join y on x1 = y1 and not exists (select * from z where z1 = x1) order by x1, x2, y1, y2
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkRuntimeException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_2172",
  "messageParameters" : {
    "batchName" : "Infer Filters",
    "plan" : " Sort [x1#x ASC NULLS FIRST, x2#x ASC NULLS FIRST, y1#x ASC NULLS FIRST, y2#x ASC NULLS FIRST], true   Sort [x1#x ASC NULLS FIRST, x2#x ASC NULLS FIRST, y1#x ASC NULLS FIRST, y2#x ASC NULLS FIRST], true\n +- Join LeftOuter, (NOT exists#x [x1#x && (z1#x = x1#x)] AND (x1#x = y1#x))                     +- Join LeftOuter, (NOT exists#x [x1#x && (z1#x = x1#x)] AND (x1#x = y1#x))\n    :  +- Project [col1#x AS z1#x, col2#x AS z2#x]                                                        :  +- Project [col1#x AS z1#x, col2#x AS z2#x]\n    :     +- LocalRelation [col1#x, col2#x]                                                                     :     +- LocalRelation [col1#x, col2#x]\n    :- Project [col1#x AS x1#x, col2#x AS x2#x]                                                           :- Project [col1#x AS x1#x, col2#x AS x2#x]\n    :  +- LocalRelation [col1#x, col2#x]                                                                        :  +- LocalRelation [col1#x, col2#x]\n    +- Filter NOT exists#x [y1#x && (z1#x = y1#x)]                                                        +- Filter NOT exists#x [y1#x && (z1#x = y1#x)]\n       :  +- Project [col1#x AS z1#x, col2#x AS z2#x]                                                        :  +- Project [col1#x AS z1#x, col2#x AS z2#x]\n       :     +- LocalRelation [col1#x, col2#x]                                                                     :     +- LocalRelation [col1#x, col2#x]\n!      +- Project [col1#x AS y1#x, col2#x AS y2#x]                                                           +- Filter NOT exists#x [y1#x && (z1#x = y1#x)]\n!         +- LocalRelation [col1#x, col2#x]                                                                           :  +- Project [col1#x AS z1#x, col2#x AS z2#x]\n!                                                                                                                           :     +- LocalRelation [col1#x, col2#x]\n!                                                                                                                           +- Project [col1#x AS y1#x, col2#x AS y2#x]\n!                                                                                                                              +- LocalRelation [col1#x, col2#x]"
  }
}


-- !query
select * from x inner join y on x1 = y1 and exists (select * from z where z1 = y1) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	0	2
1	1	1	4
1	1	1	5
1	2	1	4
1	2	1	5
3	4	3	8


-- !query
select * from x inner join y on x1 = y1 and not exists (select * from z where z1 = y1) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output



-- !query
select * from x left join y on x1 = y1 and exists (select * from z where z1 = y1) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	0	2
1	1	1	4
1	1	1	5
1	2	1	4
1	2	1	5
3	4	3	8
5	6	NULL	NULL
9	10	NULL	NULL


-- !query
select * from x left join y on x1 = y1 and not exists (select * from z where z1 = y1) order by x1, x2, y1, y2
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
0	1	NULL	NULL
1	1	NULL	NULL
1	2	NULL	NULL
3	4	NULL	NULL
5	6	NULL	NULL
9	10	NULL	NULL
