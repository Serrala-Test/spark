-- Automatically generated by SQLQueryTestSuite
-- !query
select bit_count(null)
-- !query schema
struct<bit_count(NULL, 1):int>
-- !query output
NULL


-- !query
select bit_count(null, 1)
-- !query schema
struct<bit_count(NULL, 1):int>
-- !query output
NULL


-- !query
select bit_count(true)
-- !query schema
struct<bit_count(true, 1):int>
-- !query output
1


-- !query
select bit_count(true, 0)
-- !query schema
struct<bit_count(true, 0):int>
-- !query output
0


-- !query
select bit_count(false)
-- !query schema
struct<bit_count(false, 1):int>
-- !query output
0


-- !query
select bit_count(false, 1)
-- !query schema
struct<bit_count(false, 1):int>
-- !query output
0


-- !query
select bit_count(cast(1 as tinyint))
-- !query schema
struct<bit_count(CAST(1 AS TINYINT), 1):int>
-- !query output
1


-- !query
select bit_count(cast(1 as tinyint), 0)
-- !query schema
struct<bit_count(CAST(1 AS TINYINT), 0):int>
-- !query output
7


-- !query
select bit_count(cast(2 as tinyint))
-- !query schema
struct<bit_count(CAST(2 AS TINYINT), 1):int>
-- !query output
1


-- !query
select bit_count(cast(2 as tinyint), 0)
-- !query schema
struct<bit_count(CAST(2 AS TINYINT), 0):int>
-- !query output
7


-- !query
select bit_count(cast(3 as tinyint))
-- !query schema
struct<bit_count(CAST(3 AS TINYINT), 1):int>
-- !query output
2


-- !query
select bit_count(cast(3 as tinyint), 1)
-- !query schema
struct<bit_count(CAST(3 AS TINYINT), 1):int>
-- !query output
2


-- !query
select bit_count(cast(3 as tinyint), 0)
-- !query schema
struct<bit_count(CAST(3 AS TINYINT), 0):int>
-- !query output
6


-- !query
select bit_count(1S)
-- !query schema
struct<bit_count(1, 1):int>
-- !query output
1


-- !query
select bit_count(1S, 0)
-- !query schema
struct<bit_count(1, 0):int>
-- !query output
15


-- !query
select bit_count(1S, 1)
-- !query schema
struct<bit_count(1, 1):int>
-- !query output
1


-- !query
select bit_count(2S)
-- !query schema
struct<bit_count(2, 1):int>
-- !query output
1


-- !query
select bit_count(2S, 0)
-- !query schema
struct<bit_count(2, 0):int>
-- !query output
15


-- !query
select bit_count(3S)
-- !query schema
struct<bit_count(3, 1):int>
-- !query output
2


-- !query
select bit_count(3S, 1)
-- !query schema
struct<bit_count(3, 1):int>
-- !query output
2


-- !query
select bit_count(3S, 0)
-- !query schema
struct<bit_count(3, 0):int>
-- !query output
14


-- !query
select bit_count(1)
-- !query schema
struct<bit_count(1, 1):int>
-- !query output
1


-- !query
select bit_count(1, 0)
-- !query schema
struct<bit_count(1, 0):int>
-- !query output
31


-- !query
select bit_count(2)
-- !query schema
struct<bit_count(2, 1):int>
-- !query output
1


-- !query
select bit_count(2, 1)
-- !query schema
struct<bit_count(2, 1):int>
-- !query output
1


-- !query
select bit_count(3)
-- !query schema
struct<bit_count(3, 1):int>
-- !query output
2


-- !query
select bit_count(3, 0)
-- !query schema
struct<bit_count(3, 0):int>
-- !query output
30


-- !query
select bit_count(1L)
-- !query schema
struct<bit_count(1, 1):int>
-- !query output
1


-- !query
select bit_count(1L, 0)
-- !query schema
struct<bit_count(1, 0):int>
-- !query output
63


-- !query
select countset(2L, 1)
-- !query schema
struct<bit_count(2, 1):int>
-- !query output
1


-- !query
select bit_count(2L)
-- !query schema
struct<bit_count(2, 1):int>
-- !query output
1


-- !query
select countset(3L)
-- !query schema
struct<bit_count(3, 1):int>
-- !query output
2


-- !query
select bit_count(-1L)
-- !query schema
struct<bit_count(-1, 1):int>
-- !query output
64


-- !query
select bit_count(-1L, 0)
-- !query schema
struct<bit_count(-1, 0):int>
-- !query output
0


-- !query
select countset(-1L, 1)
-- !query schema
struct<bit_count(-1, 1):int>
-- !query output
64


-- !query
select bit_count(9223372036854775807L)
-- !query schema
struct<bit_count(9223372036854775807, 1):int>
-- !query output
63


-- !query
select bit_count(9223372036854775807L, 0)
-- !query schema
struct<bit_count(9223372036854775807, 0):int>
-- !query output
1


-- !query
select bit_count(9223372036854775807L, 1)
-- !query schema
struct<bit_count(9223372036854775807, 1):int>
-- !query output
63


-- !query
select bit_count(-9223372036854775808L)
-- !query schema
struct<bit_count(-9223372036854775808, 1):int>
-- !query output
1


-- !query
select bit_count(-9223372036854775808L, 0)
-- !query schema
struct<bit_count(-9223372036854775808, 0):int>
-- !query output
63


-- !query
select bit_count("bit count")
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "messageParameters" : {
    "inputSql" : "\"bit count\"",
    "inputType" : "\"STRING\"",
    "paramIndex" : "1",
    "requiredType" : "(\"INTEGRAL\" or \"BOOLEAN\")",
    "sqlExpr" : "\"bit_count(bit count, 1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 29,
    "fragment" : "bit_count(\"bit count\")"
  } ]
}


-- !query
select bit_count(123, 5)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.INVALID_BIT_VALUE",
  "messageParameters" : {
    "sqlExpr" : "\"bit_count(123, 5)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 24,
    "fragment" : "bit_count(123, 5)"
  } ]
}


-- !query
select bit_count(123, -1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.INVALID_BIT_VALUE",
  "messageParameters" : {
    "sqlExpr" : "\"bit_count(123, -1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 25,
    "fragment" : "bit_count(123, -1)"
  } ]
}


-- !query
select bit_count("bit count", 0)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "messageParameters" : {
    "inputSql" : "\"bit count\"",
    "inputType" : "\"STRING\"",
    "paramIndex" : "1",
    "requiredType" : "(\"INTEGRAL\" or \"BOOLEAN\")",
    "sqlExpr" : "\"bit_count(bit count, 0)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 32,
    "fragment" : "bit_count(\"bit count\", 0)"
  } ]
}


-- !query
select bit_count('a')
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "messageParameters" : {
    "inputSql" : "\"a\"",
    "inputType" : "\"STRING\"",
    "paramIndex" : "1",
    "requiredType" : "(\"INTEGRAL\" or \"BOOLEAN\")",
    "sqlExpr" : "\"bit_count(a, 1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 21,
    "fragment" : "bit_count('a')"
  } ]
}


-- !query
select bit_count('a', 0)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "messageParameters" : {
    "inputSql" : "\"a\"",
    "inputType" : "\"STRING\"",
    "paramIndex" : "1",
    "requiredType" : "(\"INTEGRAL\" or \"BOOLEAN\")",
    "sqlExpr" : "\"bit_count(a, 0)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 24,
    "fragment" : "bit_count('a', 0)"
  } ]
}


-- !query
select countset(c1, c2), countset(c1, c3) from values (1234, 1, 0) as t(c1, c2, c3)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.NON_FOLDABLE_INPUT",
  "messageParameters" : {
    "inputExpr" : "\"c2\"",
    "inputName" : "bitExpr",
    "inputType" : "\"INT\"",
    "sqlExpr" : "\"bit_count(c1, c2)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 23,
    "fragment" : "countset(c1, c2)"
  } ]
}


-- !query
select countset(c1, c2) from values (1234, -1) as t(c1, c2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.NON_FOLDABLE_INPUT",
  "messageParameters" : {
    "inputExpr" : "\"c2\"",
    "inputName" : "bitExpr",
    "inputType" : "\"INT\"",
    "sqlExpr" : "\"bit_count(c1, c2)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 23,
    "fragment" : "countset(c1, c2)"
  } ]
}


-- !query
select countset(c1, c2) from values (1234, 10) as t(c1, c2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.NON_FOLDABLE_INPUT",
  "messageParameters" : {
    "inputExpr" : "\"c2\"",
    "inputName" : "bitExpr",
    "inputType" : "\"INT\"",
    "sqlExpr" : "\"bit_count(c1, c2)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 23,
    "fragment" : "countset(c1, c2)"
  } ]
}


-- !query
CREATE OR REPLACE TEMPORARY VIEW bitwise_test AS SELECT * FROM VALUES
  (1, 1, 1, 1L),
  (2, 3, 4, null),
  (7, 7, 7, 3L) AS bitwise_test(b1, b2, b3, b4)
-- !query schema
struct<>
-- !query output



-- !query
SELECT BIT_XOR(b3) AS n1 FROM bitwise_test where 1 = 0
-- !query schema
struct<n1:int>
-- !query output
NULL


-- !query
SELECT BIT_XOR(b4) AS n1 FROM bitwise_test where b4 is null
-- !query schema
struct<n1:bigint>
-- !query output
NULL


-- !query
SELECT
 BIT_XOR(cast(b1 as tinyint))  AS a4,
 BIT_XOR(cast(b2 as smallint))  AS b5,
 BIT_XOR(b3)  AS c2,
 BIT_XOR(b4)  AS d2,
 BIT_XOR(distinct b4) AS e2
FROM bitwise_test
-- !query schema
struct<a4:tinyint,b5:smallint,c2:int,d2:bigint,e2:bigint>
-- !query output
4	5	2	2	2


-- !query
SELECT bit_xor(b3) FROM bitwise_test GROUP BY b1 & 1
-- !query schema
struct<bit_xor(b3):int>
-- !query output
4
6


-- !query
SELECT b1, bit_xor(b2) FROM bitwise_test GROUP BY b1 HAVING bit_and(b2) < 7
-- !query schema
struct<b1:int,bit_xor(b2):int>
-- !query output
1	1
2	3


-- !query
SELECT b1, b2, bit_xor(b2) OVER (PARTITION BY b1 ORDER BY b2) FROM bitwise_test
-- !query schema
struct<b1:int,b2:int,bit_xor(b2) OVER (PARTITION BY b1 ORDER BY b2 ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>
-- !query output
1	1	1
2	3	3
7	7	7


-- !query
select getbit(11L, 3), getbit(11L, 2), getbit(11L, 1), getbit(11L, 0)
-- !query schema
struct<getbit(11, 3):tinyint,getbit(11, 2):tinyint,getbit(11, 1):tinyint,getbit(11, 0):tinyint>
-- !query output
1	0	1	1


-- !query
select getbit(11L, 2 + 1), getbit(11L, 3 - 1), getbit(10L + 1, 1 * 1), getbit(cast(11L / 1 AS long), 1 - 1)
-- !query schema
struct<getbit(11, (2 + 1)):tinyint,getbit(11, (3 - 1)):tinyint,getbit((10 + 1), (1 * 1)):tinyint,getbit(CAST((11 / 1) AS BIGINT), (1 - 1)):tinyint>
-- !query output
1	0	1	1


-- !query
select getbit(11L, 63)
-- !query schema
struct<getbit(11, 63):tinyint>
-- !query output
0


-- !query
select getbit(11L, -1)
-- !query schema
struct<>
-- !query output
java.lang.IllegalArgumentException
Invalid bit position: -1 is less than zero


-- !query
select getbit(11L, 64)
-- !query schema
struct<>
-- !query output
java.lang.IllegalArgumentException
Invalid bit position: 64 exceeds the bit upper limit
