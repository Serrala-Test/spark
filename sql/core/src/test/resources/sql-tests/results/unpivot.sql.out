-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view courseEarnings as select * from values
  ("dotNET", 15000, 48000, 22500),
  ("Java", 20000, 30000, NULL)
  as courseEarnings(course, `2012`, `2013`, `2014`)
-- !query schema
struct<>
-- !query output



-- !query
SELECT * FROM courseEarnings
UNPIVOT (
  earningsYear FOR year IN (`2012`, `2013`, `2014`)
)
-- !query schema
struct<course:string,2012:int,2013:int,2014:int,year:string,earningsYear:int>
-- !query output
Java	20000	30000	NULL	2012	20000
Java	20000	30000	NULL	2013	30000
Java	20000	30000	NULL	2014	NULL
dotNET	15000	48000	22500	2012	15000
dotNET	15000	48000	22500	2013	48000
dotNET	15000	48000	22500	2014	22500


-- !query
SELECT * FROM courseEarnings
UNPIVOT INCLUDE NULLS (
  earningsYear FOR year IN (`2012`, `2013`, `2014`)
)
-- !query schema
struct<course:string,2012:int,2013:int,2014:int,year:string,earningsYear:int>
-- !query output
Java	20000	30000	NULL	2012	20000
Java	20000	30000	NULL	2013	30000
Java	20000	30000	NULL	2014	NULL
dotNET	15000	48000	22500	2012	15000
dotNET	15000	48000	22500	2013	48000
dotNET	15000	48000	22500	2014	22500


-- !query
SELECT * FROM courseEarnings
UNPIVOT EXCLUDE NULLS (
  earningsYear FOR year IN (`2012`, `2013`, `2014`)
)
-- !query schema
struct<course:string,2012:int,2013:int,2014:int,year:string,earningsYear:int>
-- !query output
Java	20000	30000	NULL	2012	20000
Java	20000	30000	NULL	2013	30000
Java	20000	30000	NULL	2014	NULL
dotNET	15000	48000	22500	2012	15000
dotNET	15000	48000	22500	2013	48000
dotNET	15000	48000	22500	2014	22500


-- !query
create temporary view courseEarningsAndSales as select * from values
  ("dotNET", 15000, 2, 48000, 1, 22500, 1),
  ("Java", 20000, 1, 30000, 2, NULL, NULL)
  as courseEarningsAndSales(course, earnings2012, sales2012, earnings2013, sales2013, earnings2014, sales2014)
-- !query schema
struct<>
-- !query output



-- !query
SELECT * FROM courseEarningsAndSales
UNPIVOT (
  values FOR year IN ((earnings2012, sales2012) as `2012`, (earnings2013, sales2013) as `2013`, (earnings2014, sales2014) as `2014`)
)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
[UNPIVOT_VALUE_DATA_TYPE_MISMATCH] Unpivot value columns must share a least common type, some types do not: ["STRUCT<earnings2012: INT, sales2012: INT>" (`2012`), "STRUCT<earnings2013: INT, sales2013: INT>" (`2013`), "STRUCT<earnings2014: INT, sales2014: INT>" (`2014`)]


-- !query
SELECT * FROM courseEarningsAndSales
UNPIVOT (
  values FOR year IN ((earnings2012 as earnings, sales2012 as sales) as `2012`, (earnings2013 as earnings, sales2013 as sales) as `2013`, (earnings2014 as earnings, sales2014 as sales) as `2014`)
)
-- !query schema
struct<course:string,earnings2012:int,sales2012:int,earnings2013:int,sales2013:int,earnings2014:int,sales2014:int,year:string,values:struct<earnings:int,sales:int>>
-- !query output
Java	20000	1	30000	2	NULL	NULL	2012	{"earnings":20000,"sales":1}
Java	20000	1	30000	2	NULL	NULL	2013	{"earnings":30000,"sales":2}
Java	20000	1	30000	2	NULL	NULL	2014	{"earnings":0,"sales":0}
dotNET	15000	2	48000	1	22500	1	2012	{"earnings":15000,"sales":2}
dotNET	15000	2	48000	1	22500	1	2013	{"earnings":48000,"sales":1}
dotNET	15000	2	48000	1	22500	1	2014	{"earnings":22500,"sales":1}


-- !query
SELECT * FROM courseEarningsAndSales
UNPIVOT (
  (earnings, sales) FOR year IN ((earnings2012, sales2012) as `2012`, (earnings2013, sales2013) as `2013`, (earnings2014, sales2014) as `2014`)
)
-- !query schema
struct<course:string,earnings2012:int,sales2012:int,earnings2013:int,sales2013:int,earnings2014:int,sales2014:int,year:string,value:struct<earnings:int,sales:int>,year:string,earnings:int,sales:int>
-- !query output
Java	20000	1	30000	2	NULL	NULL	2012	{"earnings":20000,"sales":1}	2012	20000	1
Java	20000	1	30000	2	NULL	NULL	2013	{"earnings":30000,"sales":2}	2013	30000	2
Java	20000	1	30000	2	NULL	NULL	2014	{"earnings":0,"sales":0}	2014	0	0
dotNET	15000	2	48000	1	22500	1	2012	{"earnings":15000,"sales":2}	2012	15000	2
dotNET	15000	2	48000	1	22500	1	2013	{"earnings":48000,"sales":1}	2013	48000	1
dotNET	15000	2	48000	1	22500	1	2014	{"earnings":22500,"sales":1}	2014	22500	1


-- !query
SELECT * FROM courseEarningsAndSales
UNPIVOT (
  (earnings, sales) FOR year IN ((earnings2012, sales2012), (earnings2013, sales2013), (earnings2014, sales2014))
)
-- !query schema
struct<course:string,earnings2012:int,sales2012:int,earnings2013:int,sales2013:int,earnings2014:int,sales2014:int,year:string,value:struct<earnings:int,sales:int>,year:string,earnings:int,sales:int>
-- !query output
Java	20000	1	30000	2	NULL	NULL	struct(earnings2012 AS earnings, sales2012 AS sales)	{"earnings":20000,"sales":1}	struct(earnings2012 AS earnings, sales2012 AS sales)	20000	1
Java	20000	1	30000	2	NULL	NULL	struct(earnings2013 AS earnings, sales2013 AS sales)	{"earnings":30000,"sales":2}	struct(earnings2013 AS earnings, sales2013 AS sales)	30000	2
Java	20000	1	30000	2	NULL	NULL	struct(earnings2014 AS earnings, sales2014 AS sales)	{"earnings":0,"sales":0}	struct(earnings2014 AS earnings, sales2014 AS sales)	0	0
dotNET	15000	2	48000	1	22500	1	struct(earnings2012 AS earnings, sales2012 AS sales)	{"earnings":15000,"sales":2}	struct(earnings2012 AS earnings, sales2012 AS sales)	15000	2
dotNET	15000	2	48000	1	22500	1	struct(earnings2013 AS earnings, sales2013 AS sales)	{"earnings":48000,"sales":1}	struct(earnings2013 AS earnings, sales2013 AS sales)	48000	1
dotNET	15000	2	48000	1	22500	1	struct(earnings2014 AS earnings, sales2014 AS sales)	{"earnings":22500,"sales":1}	struct(earnings2014 AS earnings, sales2014 AS sales)	22500	1
