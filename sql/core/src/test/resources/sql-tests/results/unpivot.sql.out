-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view courseEarnings as select * from values
  ("dotNET", 15000, 48000, 22500),
  ("Java", 20000, 30000, NULL)
  as courseEarnings(course, `2012`, `2013`, `2014`)
-- !query schema
struct<>
-- !query output



-- !query
SELECT * FROM courseEarnings
UNPIVOT (
  earningsYear FOR year IN (`2012`, `2013`, `2014`)
)
-- !query schema
struct<course:string,year:string,earningsYear:int>
-- !query output
Java	2012	20000
Java	2013	30000
Java	2014	NULL
dotNET	2012	15000
dotNET	2013	48000
dotNET	2014	22500


-- !query
SELECT * FROM courseEarnings
UNPIVOT INCLUDE NULLS (
  earningsYear FOR year IN (`2012`, `2013`, `2014`)
)
-- !query schema
struct<course:string,year:string,earningsYear:int>
-- !query output
Java	2012	20000
Java	2013	30000
Java	2014	NULL
dotNET	2012	15000
dotNET	2013	48000
dotNET	2014	22500


-- !query
SELECT * FROM courseEarnings
UNPIVOT EXCLUDE NULLS (
  earningsYear FOR year IN (`2012`, `2013`, `2014`)
)
-- !query schema
struct<course:string,year:string,earningsYear:int>
-- !query output
Java	2012	20000
Java	2013	30000
dotNET	2012	15000
dotNET	2013	48000
dotNET	2014	22500


-- !query
SELECT * FROM courseEarnings
UNPIVOT (
  earningsYear FOR year IN (`2012` as `twenty-twelve`, `2013` as `twenty-thirteen`, `2014` as `twenty-fourteen`)
)
-- !query schema
struct<course:string,year:string,earningsYear:int>
-- !query output
Java	twenty-fourteen	NULL
Java	twenty-thirteen	30000
Java	twenty-twelve	20000
dotNET	twenty-fourteen	22500
dotNET	twenty-thirteen	48000
dotNET	twenty-twelve	15000


-- !query
SELECT up.* FROM courseEarnings
UNPIVOT (
  earningsYear FOR year IN (`2012`, `2013`, `2014`)
) AS up
-- !query schema
struct<course:string,year:string,earningsYear:int>
-- !query output
Java	2012	20000
Java	2013	30000
Java	2014	NULL
dotNET	2012	15000
dotNET	2013	48000
dotNET	2014	22500


-- !query
SELECT up.* FROM courseEarnings
UNPIVOT (
  earningsYear FOR year IN (`2012`, `2013`, `2014`)
)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'up.*' given input columns 'course, 2012, 2013, 2014'; line 1 pos 7


-- !query
create temporary view courseEarningsAndSales as select * from values
  ("dotNET", 15000, 2, 48000, 1, 22500, 1),
  ("Java", 20000, 1, 30000, 2, NULL, NULL)
  as courseEarningsAndSales(course, earnings2012, sales2012, earnings2013, sales2013, earnings2014, sales2014)
-- !query schema
struct<>
-- !query output



-- !query
SELECT * FROM courseEarningsAndSales
UNPIVOT (
  values FOR year IN ((earnings2012, sales2012) as `2012`, (earnings2013, sales2013) as `2013`, (earnings2014, sales2014) as `2014`)
)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNPIVOT_VALUE_DATA_TYPE_MISMATCH",
  "sqlState" : "42000",
  "messageParameters" : {
    "types" : "\"STRUCT<earnings2012: INT, sales2012: INT>\" (`2012`), \"STRUCT<earnings2013: INT, sales2013: INT>\" (`2013`), \"STRUCT<earnings2014: INT, sales2014: INT>\" (`2014`)"
  }
}


-- !query
SELECT * FROM courseEarningsAndSales
UNPIVOT (
  values FOR year IN ((earnings2012 as earnings, sales2012 as sales) as `2012`, (earnings2013 as earnings, sales2013 as sales) as `2013`, (earnings2014 as earnings, sales2014 as sales) as `2014`)
)
-- !query schema
struct<course:string,year:string,values:struct<earnings:int,sales:int>>
-- !query output
Java	2012	{"earnings":20000,"sales":1}
Java	2013	{"earnings":30000,"sales":2}
Java	2014	{"earnings":0,"sales":0}
dotNET	2012	{"earnings":15000,"sales":2}
dotNET	2013	{"earnings":48000,"sales":1}
dotNET	2014	{"earnings":22500,"sales":1}


-- !query
SELECT * FROM courseEarningsAndSales
UNPIVOT (
  values FOR year IN ()
)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42000",
  "messageParameters" : {
    "error" : "')'",
    "hint" : ""
  }
}


-- !query
SELECT * FROM courseEarningsAndSales
UNPIVOT (
  (earnings, sales) FOR year IN ((earnings2012, sales2012) as `2012`, (earnings2013, sales2013) as `2013`, (earnings2014, sales2014) as `2014`)
)
-- !query schema
struct<course:string,year:string,earnings:int,sales:int>
-- !query output
Java	2012	20000	1
Java	2013	30000	2
Java	2014	NULL	NULL
dotNET	2012	15000	2
dotNET	2013	48000	1
dotNET	2014	22500	1


-- !query
SELECT * FROM courseEarningsAndSales
UNPIVOT EXCLUDE NULLS (
  (earnings, sales) FOR year IN ((earnings2012, sales2012) as `2012`, (earnings2013, sales2013) as `2013`, (earnings2014, sales2014) as `2014`)
)
-- !query schema
struct<course:string,year:string,earnings:int,sales:int>
-- !query output
Java	2012	20000	1
Java	2013	30000	2
dotNET	2012	15000	2
dotNET	2013	48000	1
dotNET	2014	22500	1


-- !query
SELECT * FROM courseEarningsAndSales
UNPIVOT (
  (earnings, sales) FOR year IN ((earnings2012, sales2012), (earnings2013, sales2013), (earnings2014, sales2014))
)
-- !query schema
struct<course:string,year:string,earnings:int,sales:int>
-- !query output
Java	(`earnings2012`,`sales2012`)	20000	1
Java	(`earnings2013`,`sales2013`)	30000	2
Java	(`earnings2014`,`sales2014`)	NULL	NULL
dotNET	(`earnings2012`,`sales2012`)	15000	2
dotNET	(`earnings2013`,`sales2013`)	48000	1
dotNET	(`earnings2014`,`sales2014`)	22500	1


-- !query
SELECT * FROM courseEarningsAndSales
UNPIVOT (
  () FOR year IN ((earnings2012, sales2012), (earnings2013, sales2013), (earnings2014, sales2014))
)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42000",
  "messageParameters" : {
    "error" : "')'",
    "hint" : ": extra input ')'"
  }
}


-- !query
SELECT * FROM courseEarningsAndSales
UNPIVOT (
  (earnings, sales) FOR year IN ()
)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42000",
  "messageParameters" : {
    "error" : "')'",
    "hint" : ""
  }
}


-- !query
SELECT * FROM courseEarningsAndSales
UNPIVOT (
  (earnings, sales, extra) FOR year IN ((earnings2012, sales2012), (earnings2013, sales2013), (earnings2014, sales2014))
)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNPIVOT_VALUE_SIZE_MISMATCH",
  "sqlState" : "42000",
  "messageParameters" : {
    "names" : "3",
    "sizes" : "2, 2, 2"
  }
}


-- !query
SELECT * FROM courseEarningsAndSales
UNPIVOT (
  (earnings, sales) FOR year IN ((earnings2012), (earnings2013, sales2013), (earnings2014, sales2014, sales2014))
)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNPIVOT_VALUE_SIZE_MISMATCH",
  "sqlState" : "42000",
  "messageParameters" : {
    "names" : "2",
    "sizes" : "1, 2, 3"
  }
}
