-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 8


-- !query
SELECT try_element_at(array(1, 2, 3), 0)
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkArrayIndexOutOfBoundsException
[INVALID_ARRAY_INDEX_IN_ELEMENT_AT] The index 0 is out of bounds. The array has 3 elements. Use `try_element_at` to tolerate accessing element at invalid index and return NULL instead. If necessary set "spark.sql.ansi.enabled" to "false" to bypass this error.


-- !query
SELECT try_element_at(array(1, 2, 3), 1)
-- !query schema
struct<try_element_at(array(1, 2, 3), 1):int>
-- !query output
1


-- !query
SELECT try_element_at(array(1, 2, 3), 3)
-- !query schema
struct<try_element_at(array(1, 2, 3), 3):int>
-- !query output
3


-- !query
SELECT try_element_at(array(1, 2, 3), 4)
-- !query schema
struct<try_element_at(array(1, 2, 3), 4):int>
-- !query output
NULL


-- !query
SELECT try_element_at(array(1, 2, 3), -1)
-- !query schema
struct<try_element_at(array(1, 2, 3), -1):int>
-- !query output
3


-- !query
SELECT try_element_at(array(1, 2, 3), -4)
-- !query schema
struct<try_element_at(array(1, 2, 3), -4):int>
-- !query output
NULL


-- !query
SELECT try_element_at(map('a','b'), 'a')
-- !query schema
struct<try_element_at(map(a, b), a):string>
-- !query output
b


-- !query
SELECT try_element_at(map('a','b'), 'abc')
-- !query schema
struct<try_element_at(map(a, b), abc):string>
-- !query output
NULL
