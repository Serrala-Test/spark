-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 47


-- !query
CREATE TEMPORARY VIEW struct_level_1 AS VALUES
  (CAST(STRUCT(1, NULL, 3) AS struct<a:int,b:int,c:int>))
  AS T(a)
-- !query schema
struct<>
-- !query output



-- !query
CREATE TEMPORARY VIEW null_struct_level_1 AS VALUES
  (CAST(NULL AS struct<a:int,b:int,c:int>))
  AS T(a)
-- !query schema
struct<>
-- !query output



-- !query
CREATE TEMPORARY VIEW struct_level_2 AS VALUES
  (CAST(STRUCT(STRUCT(1, NULL, 3)) AS struct<a:struct<a:int,b:int,c:int>>))
  AS T(a)
-- !query schema
struct<>
-- !query output



-- !query
CREATE TEMPORARY VIEW struct_level_3 AS VALUES
  (CAST(STRUCT(STRUCT(STRUCT(1, NULL, 3))) AS struct<a:struct<a:struct<a:int,b:int,c:int>>>))
  AS T(a)
-- !query schema
struct<>
-- !query output



-- !query
CREATE TEMPORARY VIEW mixed_case_struct_level_1 AS VALUES
  (CAST(STRUCT(1, 1) AS struct<a:int,B:int>))
  AS T(a)
-- !query schema
struct<>
-- !query output



-- !query
CREATE TEMPORARY VIEW mixed_case_struct_level_2 AS VALUES
  (CAST(STRUCT(STRUCT(1, 1), STRUCT(1, 1)) AS struct<a:struct<a:int,b:int>,B:struct<a:int,b:int>>))
  AS T(a)
-- !query schema
struct<>
-- !query output



-- !query
CREATE TEMPORARY VIEW struct_with_dots_in_name_level_2 AS VALUES
  (CAST(STRUCT(STRUCT(1, NULL, 3)) AS struct<`a.b`:struct<`c.d`:int,`e.f`:int,`g.h`:int>>))
  AS T(a)
-- !query schema
struct<>
-- !query output



-- !query
SELECT WITH_FIELD() AS a FROM struct_level_1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'with_field()' due to data type mismatch: with_field expects 3 arguments.; line 1 pos 7


-- !query
SELECT WITH_FIELD(a) AS a FROM struct_level_1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'with_field(struct_level_1.`a`)' due to data type mismatch: with_field expects 3 arguments.; line 1 pos 7


-- !query
SELECT WITH_FIELD(a, 'd') AS a FROM struct_level_1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'with_field(struct_level_1.`a`, 'd')' due to data type mismatch: with_field expects 3 arguments.; line 1 pos 7


-- !query
SELECT WITH_FIELD(1, 'd', 4) AS a FROM struct_level_1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'with_field(1, 'd', 4)' due to data type mismatch: Only struct is allowed to appear at first position, got: integer.; line 1 pos 7


-- !query
SELECT WITH_FIELD(a, NULL, 2) AS a FROM struct_level_1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'with_field(struct_level_1.`a`, NULL, 2)' due to data type mismatch: Only foldable string expressions are allowed to appear at second position.; line 1 pos 7


-- !query
SELECT WITH_FIELD(a, 1, 2) AS a FROM struct_level_1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'with_field(struct_level_1.`a`, 1, 2)' due to data type mismatch: Only foldable string expressions are allowed to appear at second position.; line 1 pos 7


-- !query
SELECT WITH_FIELD(a, 'x.b', 2) AS a FROM struct_level_2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'with_field(struct_level_2.`a`, 'x.b', 2)' due to data type mismatch: Intermediate struct field `x` does not exist.; line 1 pos 7


-- !query
SELECT WITH_FIELD(a, 'a.x.b', 2) AS a FROM struct_level_3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'with_field(struct_level_3.`a`, 'a.x.b', 2)' due to data type mismatch: Intermediate struct field `a.x` does not exist.; line 1 pos 7


-- !query
SELECT WITH_FIELD(a, 'b.a', 2) AS a FROM struct_level_1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'with_field(struct_level_1.`a`, 'b.a', 2)' due to data type mismatch: Intermediate fields must be a struct. `b` is integer.; line 1 pos 7


-- !query
SELECT WITH_FIELD(a, 'd', 4) AS a FROM struct_level_1
-- !query schema
struct<a:struct<a:int,b:int,c:int,d:int>>
-- !query output
{"a":1,"b":null,"c":3,"d":4}


-- !query
SELECT WITH_FIELD(a, 'd', 4) a FROM null_struct_level_1
-- !query schema
struct<a:struct<a:int,b:int,c:int,d:int>>
-- !query output
{"a":null,"b":null,"c":null,"d":4}


-- !query
SELECT WITH_FIELD(a, 'd', NULL) AS a FROM struct_level_1
-- !query schema
struct<a:struct<a:int,b:int,c:int,d:null>>
-- !query output
{"a":1,"b":null,"c":3,"d":null}


-- !query
SELECT WITH_FIELD(WITH_FIELD(a, 'd', 4), 'e', 5) AS a FROM struct_level_1
-- !query schema
struct<a:struct<a:int,b:int,c:int,d:int,e:int>>
-- !query output
{"a":1,"b":null,"c":3,"d":4,"e":5}


-- !query
SELECT WITH_FIELD(a, 'a', WITH_FIELD(a.a, 'd', 4)) AS a FROM struct_level_2
-- !query schema
struct<a:struct<a:struct<a:int,b:int,c:int,d:int>>>
-- !query output
{"a":{"a":1,"b":null,"c":3,"d":4}}


-- !query
SELECT WITH_FIELD(a, 'a.d', 4) AS a FROM struct_level_2
-- !query schema
struct<a:struct<a:struct<a:int,b:int,c:int,d:int>>>
-- !query output
{"a":{"a":1,"b":null,"c":3,"d":4}}


-- !query
SELECT WITH_FIELD(a, 'a.a.d', 4) AS a FROM struct_level_3
-- !query schema
struct<a:struct<a:struct<a:struct<a:int,b:int,c:int,d:int>>>>
-- !query output
{"a":{"a":{"a":1,"b":null,"c":3,"d":4}}}


-- !query
SELECT WITH_FIELD(a, 'b', 2) AS a FROM struct_level_1
-- !query schema
struct<a:struct<a:int,b:int,c:int>>
-- !query output
{"a":1,"b":2,"c":3}


-- !query
SELECT WITH_FIELD(a, 'b', 2) AS a FROM null_struct_level_1
-- !query schema
struct<a:struct<a:int,b:int,c:int>>
-- !query output
{"a":null,"b":2,"c":null}


-- !query
SELECT WITH_FIELD(a, 'c', NULL) AS a FROM struct_level_1
-- !query schema
struct<a:struct<a:int,b:int,c:null>>
-- !query output
{"a":1,"b":null,"c":null}


-- !query
SELECT WITH_FIELD(WITH_FIELD(a, 'a', 10), 'b', 20) AS a FROM struct_level_1
-- !query schema
struct<a:struct<a:int,b:int,c:int>>
-- !query output
{"a":10,"b":20,"c":3}


-- !query
SELECT WITH_FIELD(a, 'a', WITH_FIELD(a.a, 'b', 2)) AS a FROM struct_level_2
-- !query schema
struct<a:struct<a:struct<a:int,b:int,c:int>>>
-- !query output
{"a":{"a":1,"b":2,"c":3}}


-- !query
SELECT WITH_FIELD(a, 'a.b', 2) AS a FROM struct_level_2
-- !query schema
struct<a:struct<a:struct<a:int,b:int,c:int>>>
-- !query output
{"a":{"a":1,"b":2,"c":3}}


-- !query
SELECT WITH_FIELD(a, 'a.a.b', 2) AS a FROM struct_level_3
-- !query schema
struct<a:struct<a:struct<a:struct<a:int,b:int,c:int>>>>
-- !query output
{"a":{"a":{"a":1,"b":2,"c":3}}}


-- !query
SELECT WITH_FIELD(a, 'b', 100) AS a FROM (VALUES (NAMED_STRUCT('a', 1, 'b', 2, 'b', 3)) AS nested_struct(a))
-- !query schema
struct<a:struct<a:int,b:int,b:int>>
-- !query output
{"a":1,"b":100,"b":100}


-- !query
SELECT WITH_FIELD(WITH_FIELD(a, 'b', 2), 'b', 20) AS a FROM struct_level_1
-- !query schema
struct<a:struct<a:int,b:int,c:int>>
-- !query output
{"a":1,"b":20,"c":3}


-- !query
SELECT WITH_FIELD(WITH_FIELD(a, 'd', 4), 'd', 5) AS a FROM struct_level_1
-- !query schema
struct<a:struct<a:int,b:int,c:int,d:int>>
-- !query output
{"a":1,"b":null,"c":3,"d":5}


-- !query
SELECT WITH_FIELD(a, '`a.b`.`e.f`', 2) AS a FROM struct_with_dots_in_name_level_2
-- !query schema
struct<a:struct<a.b:struct<c.d:int,e.f:int,g.h:int>>>
-- !query output
{"a.b":{"c.d":1,"e.f":2,"g.h":3}}


-- !query
SELECT WITH_FIELD(a, 'a.b.e.f', 2) AS a FROM struct_with_dots_in_name_level_2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'with_field(struct_with_dots_in_name_level_2.`a`, 'a.b.e.f', 2)' due to data type mismatch: Intermediate struct field `a` does not exist.; line 1 pos 7


-- !query
set spark.sql.caseSensitive=false
-- !query schema
struct<key:string,value:string>
-- !query output
spark.sql.caseSensitive	false


-- !query
SELECT WITH_FIELD(a, 'A', 2) AS a FROM mixed_case_struct_level_1
-- !query schema
struct<a:struct<A:int,B:int>>
-- !query output
{"A":2,"B":1}


-- !query
SELECT WITH_FIELD(a, 'b', 2) AS a FROM mixed_case_struct_level_1
-- !query schema
struct<a:struct<a:int,b:int>>
-- !query output
{"a":1,"b":2}


-- !query
set spark.sql.caseSensitive=true
-- !query schema
struct<key:string,value:string>
-- !query output
spark.sql.caseSensitive	true


-- !query
SELECT WITH_FIELD(a, 'A', 2) AS a FROM mixed_case_struct_level_1
-- !query schema
struct<a:struct<a:int,B:int,A:int>>
-- !query output
{"a":1,"B":1,"A":2}


-- !query
SELECT WITH_FIELD(a, 'b', 2) AS a FROM mixed_case_struct_level_1
-- !query schema
struct<a:struct<a:int,B:int,b:int>>
-- !query output
{"a":1,"B":1,"b":2}


-- !query
set spark.sql.caseSensitive=false
-- !query schema
struct<key:string,value:string>
-- !query output
spark.sql.caseSensitive	false


-- !query
SELECT WITH_FIELD(a, 'A.a', 2) AS a FROM mixed_case_struct_level_2
-- !query schema
struct<a:struct<A:struct<a:int,b:int>,B:struct<a:int,b:int>>>
-- !query output
{"A":{"a":2,"b":1},"B":{"a":1,"b":1}}


-- !query
SELECT WITH_FIELD(a, 'b.a', 2) AS a FROM mixed_case_struct_level_2
-- !query schema
struct<a:struct<a:struct<a:int,b:int>,b:struct<a:int,b:int>>>
-- !query output
{"a":{"a":1,"b":1},"b":{"a":2,"b":1}}


-- !query
set spark.sql.caseSensitive=true
-- !query schema
struct<key:string,value:string>
-- !query output
spark.sql.caseSensitive	true


-- !query
SELECT WITH_FIELD(a, 'A.a', 2) AS a FROM mixed_case_struct_level_2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'with_field(mixed_case_struct_level_2.`a`, 'A.a', 2)' due to data type mismatch: Intermediate struct field `A` does not exist.; line 1 pos 7


-- !query
SELECT WITH_FIELD(a, 'b.a', 2) AS a FROM mixed_case_struct_level_2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'with_field(mixed_case_struct_level_2.`a`, 'b.a', 2)' due to data type mismatch: Intermediate struct field `b` does not exist.; line 1 pos 7
