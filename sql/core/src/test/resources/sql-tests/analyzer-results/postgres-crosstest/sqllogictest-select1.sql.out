-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE VIEW t1(a, b, c, d, e) AS VALUES
    (103,102,100,101,104),
    (107,106,108,109,105),
    (110,114,112,111,113),
    (116,119,117,115,118),
    (123,122,124,120,121),
    (127,128,129,126,125),
    (132,134,131,133,130),
    (138,136,139,135,137),
    (144,141,140,142,143),
    (145,149,146,148,147),
    (151,150,153,154,152),
    (155,157,159,156,158),
    (161,160,163,164,162),
    (167,169,168,165,166),
    (171,170,172,173,174),
    (177,176,179,178,175),
    (181,180,182,183,184),
    (187,188,186,189,185),
    (190,194,193,192,191),
    (199,197,198,196,195),
    (200,202,203,201,204),
    (208,209,205,206,207),
    (214,210,213,212,211),
    (218,215,216,217,219),
    (223,221,222,220,224),
    (226,227,228,229,225),
    (234,231,232,230,233),
    (237,236,239,235,238),
    (242,244,240,243,241),
    (246,248,247,249,245)
-- !query analysis
CreateViewCommand `spark_catalog`.`default`.`t1`, [(a,None), (b,None), (c,None), (d,None), (e,None)], VALUES
    (103,102,100,101,104),
    (107,106,108,109,105),
    (110,114,112,111,113),
    (116,119,117,115,118),
    (123,122,124,120,121),
    (127,128,129,126,125),
    (132,134,131,133,130),
    (138,136,139,135,137),
    (144,141,140,142,143),
    (145,149,146,148,147),
    (151,150,153,154,152),
    (155,157,159,156,158),
    (161,160,163,164,162),
    (167,169,168,165,166),
    (171,170,172,173,174),
    (177,176,179,178,175),
    (181,180,182,183,184),
    (187,188,186,189,185),
    (190,194,193,192,191),
    (199,197,198,196,195),
    (200,202,203,201,204),
    (208,209,205,206,207),
    (214,210,213,212,211),
    (218,215,216,217,219),
    (223,221,222,220,224),
    (226,227,228,229,225),
    (234,231,232,230,233),
    (237,236,239,235,238),
    (242,244,240,243,241),
    (246,248,247,249,245), false, false, PersistedView, true
   +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]


-- !query
SELECT CASE WHEN c > (SELECT avg(c) FROM t1) THEN a * 2 ELSE b * 10 END
  FROM t1
 ORDER BY 1
-- !query analysis
Sort [CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END#x ASC NULLS FIRST], true
+- Project [CASE WHEN (cast(c#x as double) > scalar-subquery#x []) THEN (a#x * 2) ELSE (b#x * 10) END AS CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END#x]
   :  +- Aggregate [avg(c#x) AS avg(c)#x]
   :     +- SubqueryAlias spark_catalog.default.t1
   :        +- View (`spark_catalog`.`default`.`t1`, [a#x,b#x,c#x,d#x,e#x])
   :           +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x, cast(col3#x as int) AS c#x, cast(col4#x as int) AS d#x, cast(col5#x as int) AS e#x]
   :              +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]
   +- SubqueryAlias spark_catalog.default.t1
      +- View (`spark_catalog`.`default`.`t1`, [a#x,b#x,c#x,d#x,e#x])
         +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x, cast(col3#x as int) AS c#x, cast(col4#x as int) AS d#x, cast(col5#x as int) AS e#x]
            +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]


-- !query
SELECT a + b * 2 + c * 3 + d * 4 + e * 5,
       CAST((a + b + c + d + e) / 5 AS INT)
  FROM t1
 ORDER BY 1,2
-- !query analysis
Sort [((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5))#x ASC NULLS FIRST, CAST((((((a + b) + c) + d) + e) / 5) AS INT)#x ASC NULLS FIRST], true
+- Project [((((a#x + (b#x * 2)) + (c#x * 3)) + (d#x * 4)) + (e#x * 5)) AS ((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5))#x, cast((cast(((((a#x + b#x) + c#x) + d#x) + e#x) as double) / cast(5 as double)) as int) AS CAST((((((a + b) + c) + d) + e) / 5) AS INT)#x]
   +- SubqueryAlias spark_catalog.default.t1
      +- View (`spark_catalog`.`default`.`t1`, [a#x,b#x,c#x,d#x,e#x])
         +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x, cast(col3#x as int) AS c#x, cast(col4#x as int) AS d#x, cast(col5#x as int) AS e#x]
            +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]


-- !query
SELECT a + b * 2 + c * 3 + d * 4 + e * 5,
       CASE WHEN a < b - 3 THEN 111 WHEN a <= b THEN 222
        WHEN a < b + 3 THEN 333 ELSE 444 END,
       abs(b - c),
       CAST((a + b + c + d + e) / 5 AS INT),
       a + b * 2 + c * 3
  FROM t1
 WHERE (e > c OR e < d)
   AND d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b < t1.b)
 ORDER BY 4,2,1,3,5
-- !query analysis
Sort [CAST((((((a + b) + c) + d) + e) / 5) AS INT)#x ASC NULLS FIRST, CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END#x ASC NULLS FIRST, ((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5))#x ASC NULLS FIRST, abs((b - c))#x ASC NULLS FIRST, ((a + (b * 2)) + (c * 3))#x ASC NULLS FIRST], true
+- Project [((((a#x + (b#x * 2)) + (c#x * 3)) + (d#x * 4)) + (e#x * 5)) AS ((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5))#x, CASE WHEN (a#x < (b#x - 3)) THEN 111 WHEN (a#x <= b#x) THEN 222 WHEN (a#x < (b#x + 3)) THEN 333 ELSE 444 END AS CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END#x, abs((b#x - c#x)) AS abs((b - c))#x, cast((cast(((((a#x + b#x) + c#x) + d#x) + e#x) as double) / cast(5 as double)) as int) AS CAST((((((a + b) + c) + d) + e) / 5) AS INT)#x, ((a#x + (b#x * 2)) + (c#x * 3)) AS ((a + (b * 2)) + (c * 3))#x]
   +- Filter ((((e#x > c#x) OR (e#x < d#x)) AND (d#x > e#x)) AND exists#x [b#x])
      :  +- Project [1 AS 1#x]
      :     +- Filter (b#x < outer(b#x))
      :        +- SubqueryAlias x
      :           +- SubqueryAlias spark_catalog.default.t1
      :              +- View (`spark_catalog`.`default`.`t1`, [a#x,b#x,c#x,d#x,e#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x, cast(col3#x as int) AS c#x, cast(col4#x as int) AS d#x, cast(col5#x as int) AS e#x]
      :                    +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]
      +- SubqueryAlias spark_catalog.default.t1
         +- View (`spark_catalog`.`default`.`t1`, [a#x,b#x,c#x,d#x,e#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x, cast(col3#x as int) AS c#x, cast(col4#x as int) AS d#x, cast(col5#x as int) AS e#x]
               +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]


-- !query
SELECT c,
       d-e,
       CASE a + 1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a + b * 2 + c * 3 + d * 4,
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR c BETWEEN b - 2 AND d + 2
    OR (e > c OR e < d)
 ORDER BY 1,5,3,2,4
-- !query analysis
Sort [c#x ASC NULLS FIRST, e#x ASC NULLS FIRST, CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END#x ASC NULLS FIRST, (d - e)#x ASC NULLS FIRST, (((a + (b * 2)) + (c * 3)) + (d * 4))#x ASC NULLS FIRST], true
+- Project [c#x, (d#x - e#x) AS (d - e)#x, CASE WHEN ((a#x + 1) = b#x) THEN 111 WHEN ((a#x + 1) = c#x) THEN 222 WHEN ((a#x + 1) = d#x) THEN 333 WHEN ((a#x + 1) = e#x) THEN 444 ELSE 555 END AS CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END#x, (((a#x + (b#x * 2)) + (c#x * 3)) + (d#x * 4)) AS (((a + (b * 2)) + (c * 3)) + (d * 4))#x, e#x]
   +- Filter ((NOT ((d#x >= 110) AND (d#x <= 150)) OR ((c#x >= (b#x - 2)) AND (c#x <= (d#x + 2)))) OR ((e#x > c#x) OR (e#x < d#x)))
      +- SubqueryAlias spark_catalog.default.t1
         +- View (`spark_catalog`.`default`.`t1`, [a#x,b#x,c#x,d#x,e#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x, cast(col3#x as int) AS c#x, cast(col4#x as int) AS d#x, cast(col5#x as int) AS e#x]
               +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]


-- !query
SELECT a + b * 2 + c * 3 + d * 4,
       CAST((a + b + c + d + e) / 5 AS INT),
       abs(a),
       e,
       CASE a + 1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d
  FROM t1
 WHERE b > c
   AND c > d
 ORDER BY 3,4,5,1,2,6
-- !query analysis
Sort [abs(a)#x ASC NULLS FIRST, e#x ASC NULLS FIRST, CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END#x ASC NULLS FIRST, (((a + (b * 2)) + (c * 3)) + (d * 4))#x ASC NULLS FIRST, CAST((((((a + b) + c) + d) + e) / 5) AS INT)#x ASC NULLS FIRST, d#x ASC NULLS FIRST], true
+- Project [(((a#x + (b#x * 2)) + (c#x * 3)) + (d#x * 4)) AS (((a + (b * 2)) + (c * 3)) + (d * 4))#x, cast((cast(((((a#x + b#x) + c#x) + d#x) + e#x) as double) / cast(5 as double)) as int) AS CAST((((((a + b) + c) + d) + e) / 5) AS INT)#x, abs(a#x) AS abs(a)#x, e#x, CASE WHEN ((a#x + 1) = b#x) THEN 111 WHEN ((a#x + 1) = c#x) THEN 222 WHEN ((a#x + 1) = d#x) THEN 333 WHEN ((a#x + 1) = e#x) THEN 444 ELSE 555 END AS CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END#x, d#x]
   +- Filter ((b#x > c#x) AND (c#x > d#x))
      +- SubqueryAlias spark_catalog.default.t1
         +- View (`spark_catalog`.`default`.`t1`, [a#x,b#x,c#x,d#x,e#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x, cast(col3#x as int) AS c#x, cast(col4#x as int) AS d#x, cast(col5#x as int) AS e#x]
               +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]


-- !query
SELECT a + b * 2 + c * 3 + d * 4,
       CASE a + 1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c > t1.c AND x.d < t1.d),
       c
  FROM t1
 WHERE (c <= d - 2 OR c >= d + 2)
 ORDER BY 4,2,1,3
-- !query analysis
Sort [c#x ASC NULLS FIRST, CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END#x ASC NULLS FIRST, (((a + (b * 2)) + (c * 3)) + (d * 4))#x ASC NULLS FIRST, scalarsubquery(c, d)#xL ASC NULLS FIRST], true
+- Project [(((a#x + (b#x * 2)) + (c#x * 3)) + (d#x * 4)) AS (((a + (b * 2)) + (c * 3)) + (d * 4))#x, CASE WHEN ((a#x + 1) = b#x) THEN 111 WHEN ((a#x + 1) = c#x) THEN 222 WHEN ((a#x + 1) = d#x) THEN 333 WHEN ((a#x + 1) = e#x) THEN 444 ELSE 555 END AS CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END#x, scalar-subquery#x [c#x && d#x] AS scalarsubquery(c, d)#xL, c#x]
   :  +- Aggregate [count(1) AS count(1)#xL]
   :     +- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   :        +- SubqueryAlias x
   :           +- SubqueryAlias spark_catalog.default.t1
   :              +- View (`spark_catalog`.`default`.`t1`, [a#x,b#x,c#x,d#x,e#x])
   :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x, cast(col3#x as int) AS c#x, cast(col4#x as int) AS d#x, cast(col5#x as int) AS e#x]
   :                    +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]
   +- Filter ((c#x <= (d#x - 2)) OR (c#x >= (d#x + 2)))
      +- SubqueryAlias spark_catalog.default.t1
         +- View (`spark_catalog`.`default`.`t1`, [a#x,b#x,c#x,d#x,e#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x, cast(col3#x as int) AS c#x, cast(col4#x as int) AS d#x, cast(col5#x as int) AS e#x]
               +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]


-- !query
DROP VIEW IF EXISTS t1
-- !query analysis
DropTableCommand `spark_catalog`.`default`.`t1`, true, true, false
