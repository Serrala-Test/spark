-- Automatically generated by SQLQueryTestSuite
-- !query
SELECT try_reflect("java.util.UUID", "fromString", "a5cf6c42-0c85-418f-af6c-3e4e5b1328f2")
-- !query analysis
Project [try_reflect(java.util.UUID, fromString, a5cf6c42-0c85-418f-af6c-3e4e5b1328f2) AS try_reflect(java.util.UUID, fromString, a5cf6c42-0c85-418f-af6c-3e4e5b1328f2)#x]
+- OneRowRelation


-- !query
SELECT try_reflect("java.lang.String", "valueOf", 1)
-- !query analysis
Project [try_reflect(java.lang.String, valueOf, 1) AS try_reflect(java.lang.String, valueOf, 1)#x]
+- OneRowRelation


-- !query
SELECT try_reflect("java.lang.Math", "max", 2, 3)
-- !query analysis
Project [try_reflect(java.lang.Math, max, 2, 3) AS try_reflect(java.lang.Math, max, 2, 3)#x]
+- OneRowRelation


-- !query
SELECT try_reflect("java.lang.Math", "min", 2, 3)
-- !query analysis
Project [try_reflect(java.lang.Math, min, 2, 3) AS try_reflect(java.lang.Math, min, 2, 3)#x]
+- OneRowRelation


-- !query
SELECT try_reflect("java.lang.Integer", "valueOf", "10", 16)
-- !query analysis
Project [try_reflect(java.lang.Integer, valueOf, 10, 16) AS try_reflect(java.lang.Integer, valueOf, 10, 16)#x]
+- OneRowRelation


-- !query
SELECT try_reflect("java.util.UUID", "fromString", "b")
-- !query analysis
Project [try_reflect(java.util.UUID, fromString, b) AS try_reflect(java.util.UUID, fromString, b)#x]
+- OneRowRelation


-- !query
SELECT try_reflect("java.net.URLDecoder", "decode", "%")
-- !query analysis
Project [try_reflect(java.net.URLDecoder, decode, %) AS try_reflect(java.net.URLDecoder, decode, %)#x]
+- OneRowRelation


-- !query
SELECT try_reflect("java.lang.Math", "max", "test", 3)
-- !query analysis
Project [try_reflect(java.lang.Math, max, test, 3) AS try_reflect(java.lang.Math, max, test, 3)#x]
+- OneRowRelation


-- !query
SELECT try_reflect("java.lang.Math", "min", 2, "str")
-- !query analysis
Project [try_reflect(java.lang.Math, min, 2, str) AS try_reflect(java.lang.Math, min, 2, str)#x]
+- OneRowRelation


-- !query
SELECT try_reflect("java.lang.Math", "round", "tt")
-- !query analysis
Project [try_reflect(java.lang.Math, round, tt) AS try_reflect(java.lang.Math, round, tt)#x]
+- OneRowRelation


-- !query
SELECT try_reflect("java.lang.String", "isEmpty")
-- !query analysis
Project [try_reflect(java.lang.String, isEmpty) AS try_reflect(java.lang.String, isEmpty)#x]
+- OneRowRelation


-- !query
SELECT try_reflect("java.lang.Math", "exp", 1.0)
-- !query analysis
Project [try_reflect(java.lang.Math, exp, 1.0) AS try_reflect(java.lang.Math, exp, 1.0)#x]
+- OneRowRelation


-- !query
SELECT try_reflect("java.lang.Math", "floor", "test")
-- !query analysis
Project [try_reflect(java.lang.Math, floor, test) AS try_reflect(java.lang.Math, floor, test)#x]
+- OneRowRelation


-- !query
SELECT try_reflect("java.lang.Math", "round", 2.5)
-- !query analysis
Project [try_reflect(java.lang.Math, round, 2.5) AS try_reflect(java.lang.Math, round, 2.5)#x]
+- OneRowRelation


-- !query
SELECT try_reflect("java.lang.Math", "exp", 1.0)
-- !query analysis
Project [try_reflect(java.lang.Math, exp, 1.0) AS try_reflect(java.lang.Math, exp, 1.0)#x]
+- OneRowRelation


-- !query
SELECT try_reflect("java.lang.Math", "floor", 1.9)
-- !query analysis
Project [try_reflect(java.lang.Math, floor, 1.9) AS try_reflect(java.lang.Math, floor, 1.9)#x]
+- OneRowRelation
