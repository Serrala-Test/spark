-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TEMPORARY VIEW inner_table(a, b) AS VALUES
    (1, 1),
    (2, 2),
    (3, 3),
    (4, 4),
    (5, 5),
    (8, 8),
    (9, 9)
-- !query analysis
CreateViewCommand `inner_table`, [(a,None), (b,None)], VALUES
    (1, 1),
    (2, 2),
    (3, 3),
    (4, 4),
    (5, 5),
    (8, 8),
    (9, 9), false, false, LocalTempView, true
   +- LocalRelation [col1#x, col2#x]


-- !query
CREATE TEMPORARY VIEW outer_table(a, b) AS VALUES
    (1, 1),
    (2, 1),
    (3, 3),
    (6, 6),
    (7, 7),
    (9, 9)
-- !query analysis
CreateViewCommand `outer_table`, [(a,None), (b,None)], VALUES
    (1, 1),
    (2, 1),
    (3, 3),
    (6, 6),
    (7, 7),
    (9, 9), false, false, LocalTempView, true
   +- LocalRelation [col1#x, col2#x]


-- !query
CREATE TEMPORARY VIEW no_match_table(a, b) AS VALUES
    (1000, 1000)
-- !query analysis
CreateViewCommand `no_match_table`, [(a,None), (b,None)], VALUES
    (1000, 1000), false, false, LocalTempView, true
   +- LocalRelation [col1#x, col2#x]


-- !query
CREATE TEMPORARY VIEW join_table(a, b) AS VALUES
    (1, 1),
    (2, 1),
    (3, 3),
    (7, 8),
    (5, 6)
-- !query analysis
CreateViewCommand `join_table`, [(a,None), (b,None)], VALUES
    (1, 1),
    (2, 1),
    (3, 3),
    (7, 8),
    (5, 6), false, false, LocalTempView, true
   +- LocalRelation [col1#x, col2#x]


-- !query
CREATE TEMPORARY VIEW null_table(a, b) AS SELECT CAST(null AS int), CAST(null as int)
-- !query analysis
CreateViewCommand `null_table`, [(a,None), (b,None)], SELECT CAST(null AS int), CAST(null as int), false, false, LocalTempView, true
   +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      +- OneRowRelation


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Except false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT null_table.a FROM null_table LEFT OUTER JOIN join_table ON null_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join LeftOuter, (a#x = a#x)
      :                    :- SubqueryAlias null_table
      :                    :  +- View (`null_table`, [a#x, b#x])
      :                    :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                    :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                    :           +- OneRowRelation
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias inner_table
      :           +- View (`inner_table`, [a#x, b#x])
      :              +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(null_table.a) AS aggFunctionAlias FROM null_table RIGHT OUTER JOIN join_table ON null_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias null_table
      :           :  +- View (`null_table`, [a#x, b#x])
      :           :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :           :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :           :           +- OneRowRelation
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias null_table
      :              :     +- View (`null_table`, [a#x, b#x])
      :              :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :              :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :              :              +- OneRowRelation
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias inner_table
      :           +- View (`inner_table`, [a#x, b#x])
      :              +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT no_match_table.a FROM no_match_table RIGHT OUTER JOIN join_table ON no_match_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join RightOuter, (a#x = a#x)
      :                 :- SubqueryAlias no_match_table
      :                 :  +- View (`no_match_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(null_table.a) AS aggFunctionAlias FROM null_table RIGHT OUTER JOIN join_table ON null_table.a = join_table.a GROUP BY null_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- Join RightOuter, (a#x = a#x)
      :              :- SubqueryAlias null_table
      :              :  +- View (`null_table`, [a#x, b#x])
      :              :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :              :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :              :           +- OneRowRelation
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias inner_table
      :                    +- View (`inner_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias no_match_table
      :                 :     +- View (`no_match_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Distinct
      :                       +- Union false, false
      :                          :- Project [a#x, b#x]
      :                          :  +- SubqueryAlias no_match_table
      :                          :     +- View (`no_match_table`, [a#x, b#x])
      :                          :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          :           +- LocalRelation [col1#x, col2#x]
      :                          +- Project [a#x, b#x]
      :                             +- SubqueryAlias join_table
      :                                +- View (`join_table`, [a#x, b#x])
      :                                   +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                      +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Distinct
      :                    +- Union false, false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias no_match_table
      :                       :     +- View (`no_match_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Except false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Except false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias no_match_table
      :              :     +- View (`no_match_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT null_table.a FROM null_table ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias null_table
      :                 +- View (`null_table`, [a#x, b#x])
      :                    +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                       +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                          +- OneRowRelation
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join Inner, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(null_table.a) AS aggFunctionAlias FROM null_table INNER JOIN join_table ON null_table.a = join_table.a GROUP BY null_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias null_table
      :           :  +- View (`null_table`, [a#x, b#x])
      :           :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :           :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :           :           +- OneRowRelation
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Distinct
      :                 +- Union false, false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias no_match_table
      :                    :     +- View (`no_match_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias inner_table
      :                    +- View (`inner_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(no_match_table.a) AS aggFunctionAlias FROM no_match_table LEFT OUTER JOIN join_table ON no_match_table.a = join_table.a GROUP BY no_match_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias no_match_table
      :           :  +- View (`no_match_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Intersect false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(no_match_table.a) AS aggFunctionAlias FROM no_match_table GROUP BY no_match_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias no_match_table
      :           +- View (`no_match_table`, [a#x, b#x])
      :              +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Intersect false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(no_match_table.a) AS aggFunctionAlias FROM no_match_table LEFT OUTER JOIN join_table ON no_match_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias no_match_table
      :           :  +- View (`no_match_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT null_table.a, null_table.b FROM null_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Intersect false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias null_table
      :                    :     +- View (`null_table`, [a#x, b#x])
      :                    :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                    :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                    :              +- OneRowRelation
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias null_table
      :              :     +- View (`null_table`, [a#x, b#x])
      :              :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :              :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :              :              +- OneRowRelation
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias inner_table
      :              +- View (`inner_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT no_match_table.a FROM no_match_table INNER JOIN join_table ON no_match_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join Inner, (a#x = a#x)
      :                    :- SubqueryAlias no_match_table
      :                    :  +- View (`no_match_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT no_match_table.a FROM no_match_table LEFT OUTER JOIN join_table ON no_match_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join LeftOuter, (a#x = a#x)
      :                    :- SubqueryAlias no_match_table
      :                    :  +- View (`no_match_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT no_match_table.a FROM no_match_table LEFT OUTER JOIN join_table ON no_match_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join LeftOuter, (a#x = a#x)
      :                 :- SubqueryAlias no_match_table
      :                 :  +- View (`no_match_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias inner_table
      :                    +- View (`inner_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(null_table.a) AS aggFunctionAlias FROM null_table GROUP BY null_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias null_table
      :              +- View (`null_table`, [a#x, b#x])
      :                 +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                    +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                       +- OneRowRelation
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT inner_table.a FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join RightOuter, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT inner_table.a FROM inner_table ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias inner_table
      :                 +- View (`inner_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias null_table
      :              :     +- View (`null_table`, [a#x, b#x])
      :              :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :              :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :              :              +- OneRowRelation
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT inner_table.a FROM inner_table ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias inner_table
      :                 +- View (`inner_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(null_table.a) AS aggFunctionAlias FROM null_table RIGHT OUTER JOIN join_table ON null_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias null_table
      :           :  +- View (`null_table`, [a#x, b#x])
      :           :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :           :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :           :           +- OneRowRelation
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT null_table.a FROM null_table RIGHT OUTER JOIN join_table ON null_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join RightOuter, (a#x = a#x)
      :                 :- SubqueryAlias null_table
      :                 :  +- View (`null_table`, [a#x, b#x])
      :                 :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                 :           +- OneRowRelation
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Distinct
      :                 +- Union false, false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(no_match_table.a) AS aggFunctionAlias FROM no_match_table GROUP BY no_match_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias no_match_table
      :           +- View (`no_match_table`, [a#x, b#x])
      :              +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Intersect false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias inner_table
      :                    +- View (`inner_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias no_match_table
      :              :     +- View (`no_match_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Except false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias null_table
      :                 :     +- View (`null_table`, [a#x, b#x])
      :                 :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                 :              +- OneRowRelation
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT no_match_table.a FROM no_match_table INNER JOIN join_table ON no_match_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join Inner, (a#x = a#x)
      :                 :- SubqueryAlias no_match_table
      :                 :  +- View (`no_match_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias inner_table
      :           +- View (`inner_table`, [a#x, b#x])
      :              +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Intersect false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Intersect false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT inner_table.a FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join RightOuter, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(no_match_table.a) AS aggFunctionAlias FROM no_match_table GROUP BY no_match_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias no_match_table
      :              +- View (`no_match_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(no_match_table.a) AS aggFunctionAlias FROM no_match_table RIGHT OUTER JOIN join_table ON no_match_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias no_match_table
      :           :  +- View (`no_match_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT inner_table.a FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join LeftOuter, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(null_table.a) AS aggFunctionAlias FROM null_table LEFT OUTER JOIN join_table ON null_table.a = join_table.a GROUP BY null_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias null_table
      :           :  +- View (`null_table`, [a#x, b#x])
      :           :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :           :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :           :           +- OneRowRelation
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- Join Inner, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(no_match_table.a) AS aggFunctionAlias FROM no_match_table LEFT OUTER JOIN join_table ON no_match_table.a = join_table.a GROUP BY no_match_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- Join LeftOuter, (a#x = a#x)
      :              :- SubqueryAlias no_match_table
      :              :  +- View (`no_match_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias inner_table
      :                    +- View (`inner_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Distinct
      :                 +- Union false, false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias null_table
      :                    :     +- View (`null_table`, [a#x, b#x])
      :                    :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                    :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                    :              +- OneRowRelation
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias no_match_table
      :              :     +- View (`no_match_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Intersect false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Except false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias null_table
      :                 :     +- View (`null_table`, [a#x, b#x])
      :                 :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                 :              +- OneRowRelation
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias inner_table
      :           +- View (`inner_table`, [a#x, b#x])
      :              +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT inner_table.a FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join LeftOuter, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- Join RightOuter, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT inner_table.a FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join Inner, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT null_table.a, null_table.b FROM null_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Except false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias null_table
      :                       :     +- View (`null_table`, [a#x, b#x])
      :                       :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                       :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                       :              +- OneRowRelation
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias no_match_table
      :              :     +- View (`no_match_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Except false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias inner_table
      :           +- View (`inner_table`, [a#x, b#x])
      :              +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(no_match_table.a) AS aggFunctionAlias FROM no_match_table LEFT OUTER JOIN join_table ON no_match_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias no_match_table
      :           :  +- View (`no_match_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT no_match_table.a FROM no_match_table ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias no_match_table
      :                    +- View (`no_match_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join RightOuter, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT null_table.a, null_table.b FROM null_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Except false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias null_table
      :                    :     +- View (`null_table`, [a#x, b#x])
      :                    :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                    :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                    :              +- OneRowRelation
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT null_table.a, null_table.b FROM null_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Distinct
      :                       +- Union false, false
      :                          :- Project [a#x, b#x]
      :                          :  +- SubqueryAlias null_table
      :                          :     +- View (`null_table`, [a#x, b#x])
      :                          :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                          :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                          :              +- OneRowRelation
      :                          +- Project [a#x, b#x]
      :                             +- SubqueryAlias join_table
      :                                +- View (`join_table`, [a#x, b#x])
      :                                   +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                      +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias no_match_table
      :                 :     +- View (`no_match_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT inner_table.a FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join LeftOuter, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(no_match_table.a) AS aggFunctionAlias FROM no_match_table) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias no_match_table
      :           +- View (`no_match_table`, [a#x, b#x])
      :              +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(no_match_table.a) AS aggFunctionAlias FROM no_match_table INNER JOIN join_table ON no_match_table.a = join_table.a GROUP BY no_match_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias no_match_table
      :           :  +- View (`no_match_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias inner_table
      :           +- View (`inner_table`, [a#x, b#x])
      :              +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT null_table.a FROM null_table INNER JOIN join_table ON null_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join Inner, (a#x = a#x)
      :                 :- SubqueryAlias null_table
      :                 :  +- View (`null_table`, [a#x, b#x])
      :                 :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                 :           +- OneRowRelation
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Except false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Distinct
      :                    +- Union false, false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- Join Inner, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(no_match_table.a) AS aggFunctionAlias FROM no_match_table RIGHT OUTER JOIN join_table ON no_match_table.a = join_table.a GROUP BY no_match_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias no_match_table
      :           :  +- View (`no_match_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Except false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join RightOuter, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- Join RightOuter, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT no_match_table.a FROM no_match_table ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias no_match_table
      :                 +- View (`no_match_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Intersect false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(null_table.a) AS aggFunctionAlias FROM null_table LEFT OUTER JOIN join_table ON null_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias null_table
      :           :  +- View (`null_table`, [a#x, b#x])
      :           :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :           :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :           :           +- OneRowRelation
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(null_table.a) AS aggFunctionAlias FROM null_table) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias null_table
      :           +- View (`null_table`, [a#x, b#x])
      :              +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                    +- OneRowRelation
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT null_table.a, null_table.b FROM null_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Distinct
      :                       +- Union false, false
      :                          :- Project [a#x, b#x]
      :                          :  +- SubqueryAlias null_table
      :                          :     +- View (`null_table`, [a#x, b#x])
      :                          :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                          :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                          :              +- OneRowRelation
      :                          +- Project [a#x, b#x]
      :                             +- SubqueryAlias join_table
      :                                +- View (`join_table`, [a#x, b#x])
      :                                   +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                      +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias inner_table
      :           +- View (`inner_table`, [a#x, b#x])
      :              +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Intersect false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias inner_table
      :                    +- View (`inner_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Intersect false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT no_match_table.a FROM no_match_table ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias no_match_table
      :                 +- View (`no_match_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT inner_table.a FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join RightOuter, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT inner_table.a FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join Inner, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(null_table.a) AS aggFunctionAlias FROM null_table RIGHT OUTER JOIN join_table ON null_table.a = join_table.a GROUP BY null_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias null_table
      :           :  +- View (`null_table`, [a#x, b#x])
      :           :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :           :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :           :           +- OneRowRelation
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Except false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Distinct
      :                 +- Union false, false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- Join LeftOuter, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- Join RightOuter, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT inner_table.a FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join RightOuter, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Distinct
      :                 +- Union false, false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(no_match_table.a) AS aggFunctionAlias FROM no_match_table INNER JOIN join_table ON no_match_table.a = join_table.a GROUP BY no_match_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- Join Inner, (a#x = a#x)
      :              :- SubqueryAlias no_match_table
      :              :  +- View (`no_match_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Intersect false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT inner_table.a FROM inner_table ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias inner_table
      :                 +- View (`inner_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Distinct
      :                 +- Union false, false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias no_match_table
      :                    :     +- View (`no_match_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(no_match_table.a) AS aggFunctionAlias FROM no_match_table LEFT OUTER JOIN join_table ON no_match_table.a = join_table.a GROUP BY no_match_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- Join LeftOuter, (a#x = a#x)
      :              :- SubqueryAlias no_match_table
      :              :  +- View (`no_match_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- Join LeftOuter, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Intersect false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias no_match_table
      :                       :     +- View (`no_match_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT null_table.a, null_table.b FROM null_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Except false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias null_table
      :                       :     +- View (`null_table`, [a#x, b#x])
      :                       :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                       :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                       :              +- OneRowRelation
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Distinct
      :                 +- Union false, false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(null_table.a) AS aggFunctionAlias FROM null_table) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias null_table
      :           +- View (`null_table`, [a#x, b#x])
      :              +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                    +- OneRowRelation
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT null_table.a FROM null_table ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias null_table
      :                    +- View (`null_table`, [a#x, b#x])
      :                       +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                          +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                             +- OneRowRelation
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT null_table.a FROM null_table INNER JOIN join_table ON null_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join Inner, (a#x = a#x)
      :                 :- SubqueryAlias null_table
      :                 :  +- View (`null_table`, [a#x, b#x])
      :                 :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                 :           +- OneRowRelation
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias null_table
      :              :     +- View (`null_table`, [a#x, b#x])
      :              :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :              :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :              :              +- OneRowRelation
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Except false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias no_match_table
      :                    :     +- View (`no_match_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(null_table.a) AS aggFunctionAlias FROM null_table RIGHT OUTER JOIN join_table ON null_table.a = join_table.a GROUP BY null_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- Join RightOuter, (a#x = a#x)
      :              :- SubqueryAlias null_table
      :              :  +- View (`null_table`, [a#x, b#x])
      :              :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :              :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :              :           +- OneRowRelation
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Intersect false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias no_match_table
      :                 :     +- View (`no_match_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(null_table.a) AS aggFunctionAlias FROM null_table GROUP BY null_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias null_table
      :              +- View (`null_table`, [a#x, b#x])
      :                 +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                    +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                       +- OneRowRelation
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias no_match_table
      :              :     +- View (`no_match_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT inner_table.a FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join LeftOuter, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT inner_table.a FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join RightOuter, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias null_table
      :                 :     +- View (`null_table`, [a#x, b#x])
      :                 :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                 :              +- OneRowRelation
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias inner_table
      :              +- View (`inner_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Distinct
      :                    +- Union false, false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- Join LeftOuter, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Intersect false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias inner_table
      :              +- View (`inner_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT inner_table.a FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join Inner, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias inner_table
      :           +- View (`inner_table`, [a#x, b#x])
      :              +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Except false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT inner_table.a FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join LeftOuter, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Distinct
      :                    +- Union false, false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT null_table.a FROM null_table LEFT OUTER JOIN join_table ON null_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join LeftOuter, (a#x = a#x)
      :                 :- SubqueryAlias null_table
      :                 :  +- View (`null_table`, [a#x, b#x])
      :                 :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                 :           +- OneRowRelation
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(no_match_table.a) AS aggFunctionAlias FROM no_match_table INNER JOIN join_table ON no_match_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias no_match_table
      :           :  +- View (`no_match_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(no_match_table.a) AS aggFunctionAlias FROM no_match_table RIGHT OUTER JOIN join_table ON no_match_table.a = join_table.a GROUP BY no_match_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- Join RightOuter, (a#x = a#x)
      :              :- SubqueryAlias no_match_table
      :              :  +- View (`no_match_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT inner_table.a FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join LeftOuter, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Intersect false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- Join RightOuter, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias inner_table
      :           +- View (`inner_table`, [a#x, b#x])
      :              +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Intersect false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Intersect false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias null_table
      :                 :     +- View (`null_table`, [a#x, b#x])
      :                 :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                 :              +- OneRowRelation
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias no_match_table
      :              :     +- View (`no_match_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias no_match_table
      :                 :     +- View (`no_match_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- Join RightOuter, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(no_match_table.a) AS aggFunctionAlias FROM no_match_table GROUP BY no_match_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias no_match_table
      :              +- View (`no_match_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Except false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias no_match_table
      :                       :     +- View (`no_match_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(null_table.a) AS aggFunctionAlias FROM null_table GROUP BY null_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias null_table
      :           +- View (`null_table`, [a#x, b#x])
      :              +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                    +- OneRowRelation
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT null_table.a FROM null_table RIGHT OUTER JOIN join_table ON null_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join RightOuter, (a#x = a#x)
      :                    :- SubqueryAlias null_table
      :                    :  +- View (`null_table`, [a#x, b#x])
      :                    :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                    :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                    :           +- OneRowRelation
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join Inner, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Except false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Except false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(null_table.a) AS aggFunctionAlias FROM null_table GROUP BY null_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias null_table
      :           +- View (`null_table`, [a#x, b#x])
      :              +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                    +- OneRowRelation
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT null_table.a, null_table.b FROM null_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Distinct
      :                    +- Union false, false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias null_table
      :                       :     +- View (`null_table`, [a#x, b#x])
      :                       :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                       :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                       :              +- OneRowRelation
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT no_match_table.a FROM no_match_table LEFT OUTER JOIN join_table ON no_match_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join LeftOuter, (a#x = a#x)
      :                    :- SubqueryAlias no_match_table
      :                    :  +- View (`no_match_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT null_table.a FROM null_table LEFT OUTER JOIN join_table ON null_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join LeftOuter, (a#x = a#x)
      :                    :- SubqueryAlias null_table
      :                    :  +- View (`null_table`, [a#x, b#x])
      :                    :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                    :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                    :           +- OneRowRelation
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT null_table.a, null_table.b FROM null_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Intersect false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias null_table
      :                       :     +- View (`null_table`, [a#x, b#x])
      :                       :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                       :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                       :              +- OneRowRelation
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join LeftOuter, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT null_table.a FROM null_table RIGHT OUTER JOIN join_table ON null_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join RightOuter, (a#x = a#x)
      :                    :- SubqueryAlias null_table
      :                    :  +- View (`null_table`, [a#x, b#x])
      :                    :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                    :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                    :           +- OneRowRelation
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Distinct
      :                    +- Union false, false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Except false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT inner_table.a FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join Inner, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT null_table.a, null_table.b FROM null_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Intersect false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias null_table
      :                       :     +- View (`null_table`, [a#x, b#x])
      :                       :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                       :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                       :              +- OneRowRelation
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(no_match_table.a) AS aggFunctionAlias FROM no_match_table INNER JOIN join_table ON no_match_table.a = join_table.a GROUP BY no_match_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- Join Inner, (a#x = a#x)
      :              :- SubqueryAlias no_match_table
      :              :  +- View (`no_match_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(null_table.a) AS aggFunctionAlias FROM null_table RIGHT OUTER JOIN join_table ON null_table.a = join_table.a GROUP BY null_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias null_table
      :           :  +- View (`null_table`, [a#x, b#x])
      :           :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :           :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :           :           +- OneRowRelation
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Distinct
      :                    +- Union false, false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias null_table
      :                 :     +- View (`null_table`, [a#x, b#x])
      :                 :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                 :              +- OneRowRelation
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Distinct
      :                    +- Union false, false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(null_table.a) AS aggFunctionAlias FROM null_table INNER JOIN join_table ON null_table.a = join_table.a GROUP BY null_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- Join Inner, (a#x = a#x)
      :              :- SubqueryAlias null_table
      :              :  +- View (`null_table`, [a#x, b#x])
      :              :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :              :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :              :           +- OneRowRelation
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT null_table.a FROM null_table ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias null_table
      :                 +- View (`null_table`, [a#x, b#x])
      :                    +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                       +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                          +- OneRowRelation
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- Join Inner, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Intersect false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT null_table.a FROM null_table RIGHT OUTER JOIN join_table ON null_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join RightOuter, (a#x = a#x)
      :                 :- SubqueryAlias null_table
      :                 :  +- View (`null_table`, [a#x, b#x])
      :                 :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                 :           +- OneRowRelation
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(null_table.a) AS aggFunctionAlias FROM null_table INNER JOIN join_table ON null_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias null_table
      :           :  +- View (`null_table`, [a#x, b#x])
      :           :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :           :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :           :           +- OneRowRelation
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT inner_table.a FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join Inner, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Distinct
      :                       +- Union false, false
      :                          :- Project [a#x, b#x]
      :                          :  +- SubqueryAlias no_match_table
      :                          :     +- View (`no_match_table`, [a#x, b#x])
      :                          :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          :           +- LocalRelation [col1#x, col2#x]
      :                          +- Project [a#x, b#x]
      :                             +- SubqueryAlias join_table
      :                                +- View (`join_table`, [a#x, b#x])
      :                                   +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                      +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(null_table.a) AS aggFunctionAlias FROM null_table LEFT OUTER JOIN join_table ON null_table.a = join_table.a GROUP BY null_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- Join LeftOuter, (a#x = a#x)
      :              :- SubqueryAlias null_table
      :              :  +- View (`null_table`, [a#x, b#x])
      :              :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :              :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :              :           +- OneRowRelation
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias null_table
      :              :     +- View (`null_table`, [a#x, b#x])
      :              :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :              :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :              :              +- OneRowRelation
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- Join LeftOuter, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Except false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(no_match_table.a) AS aggFunctionAlias FROM no_match_table INNER JOIN join_table ON no_match_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias no_match_table
      :           :  +- View (`no_match_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias inner_table
      :           +- View (`inner_table`, [a#x, b#x])
      :              +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Except false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT null_table.a FROM null_table INNER JOIN join_table ON null_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join Inner, (a#x = a#x)
      :                    :- SubqueryAlias null_table
      :                    :  +- View (`null_table`, [a#x, b#x])
      :                    :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                    :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                    :           +- OneRowRelation
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- Join Inner, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(null_table.a) AS aggFunctionAlias FROM null_table LEFT OUTER JOIN join_table ON null_table.a = join_table.a GROUP BY null_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias null_table
      :           :  +- View (`null_table`, [a#x, b#x])
      :           :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :           :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :           :           +- OneRowRelation
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Except false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias no_match_table
      :                       :     +- View (`no_match_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join Inner, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Distinct
      :                 +- Union false, false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias null_table
      :                    :     +- View (`null_table`, [a#x, b#x])
      :                    :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                    :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                    :              +- OneRowRelation
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Except false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Distinct
      :                       +- Union false, false
      :                          :- Project [a#x, b#x]
      :                          :  +- SubqueryAlias inner_table
      :                          :     +- View (`inner_table`, [a#x, b#x])
      :                          :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          :           +- LocalRelation [col1#x, col2#x]
      :                          +- Project [a#x, b#x]
      :                             +- SubqueryAlias join_table
      :                                +- View (`join_table`, [a#x, b#x])
      :                                   +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                      +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(null_table.a) AS aggFunctionAlias FROM null_table INNER JOIN join_table ON null_table.a = join_table.a GROUP BY null_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- Join Inner, (a#x = a#x)
      :              :- SubqueryAlias null_table
      :              :  +- View (`null_table`, [a#x, b#x])
      :              :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :              :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :              :           +- OneRowRelation
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join LeftOuter, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(no_match_table.a) AS aggFunctionAlias FROM no_match_table LEFT OUTER JOIN join_table ON no_match_table.a = join_table.a GROUP BY no_match_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias no_match_table
      :           :  +- View (`no_match_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias no_match_table
      :                 :     +- View (`no_match_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(null_table.a) AS aggFunctionAlias FROM null_table LEFT OUTER JOIN join_table ON null_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias null_table
      :           :  +- View (`null_table`, [a#x, b#x])
      :           :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :           :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :           :           +- OneRowRelation
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(no_match_table.a) AS aggFunctionAlias FROM no_match_table RIGHT OUTER JOIN join_table ON no_match_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias no_match_table
      :           :  +- View (`no_match_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Distinct
      :                       +- Union false, false
      :                          :- Project [a#x, b#x]
      :                          :  +- SubqueryAlias inner_table
      :                          :     +- View (`inner_table`, [a#x, b#x])
      :                          :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          :           +- LocalRelation [col1#x, col2#x]
      :                          +- Project [a#x, b#x]
      :                             +- SubqueryAlias join_table
      :                                +- View (`join_table`, [a#x, b#x])
      :                                   +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                      +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Distinct
      :                       +- Union false, false
      :                          :- Project [a#x, b#x]
      :                          :  +- SubqueryAlias inner_table
      :                          :     +- View (`inner_table`, [a#x, b#x])
      :                          :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          :           +- LocalRelation [col1#x, col2#x]
      :                          +- Project [a#x, b#x]
      :                             +- SubqueryAlias join_table
      :                                +- View (`join_table`, [a#x, b#x])
      :                                   +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                      +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Except false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias no_match_table
      :                    :     +- View (`no_match_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT no_match_table.a FROM no_match_table RIGHT OUTER JOIN join_table ON no_match_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join RightOuter, (a#x = a#x)
      :                    :- SubqueryAlias no_match_table
      :                    :  +- View (`no_match_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join Inner, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Intersect false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias no_match_table
      :                    :     +- View (`no_match_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join LeftOuter, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(null_table.a) AS aggFunctionAlias FROM null_table INNER JOIN join_table ON null_table.a = join_table.a GROUP BY null_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias null_table
      :           :  +- View (`null_table`, [a#x, b#x])
      :           :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :           :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :           :           +- OneRowRelation
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(no_match_table.a) AS aggFunctionAlias FROM no_match_table RIGHT OUTER JOIN join_table ON no_match_table.a = join_table.a GROUP BY no_match_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias no_match_table
      :           :  +- View (`no_match_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias inner_table
      :              +- View (`inner_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(null_table.a) AS aggFunctionAlias FROM null_table INNER JOIN join_table ON null_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias null_table
      :           :  +- View (`null_table`, [a#x, b#x])
      :           :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :           :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :           :           +- OneRowRelation
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias inner_table
      :              +- View (`inner_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(null_table.a) AS aggFunctionAlias FROM null_table LEFT OUTER JOIN join_table ON null_table.a = join_table.a GROUP BY null_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- Join LeftOuter, (a#x = a#x)
      :              :- SubqueryAlias null_table
      :              :  +- View (`null_table`, [a#x, b#x])
      :              :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :              :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :              :           +- OneRowRelation
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT inner_table.a FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join RightOuter, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT no_match_table.a FROM no_match_table LEFT OUTER JOIN join_table ON no_match_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join LeftOuter, (a#x = a#x)
      :                 :- SubqueryAlias no_match_table
      :                 :  +- View (`no_match_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias null_table
      :              :     +- View (`null_table`, [a#x, b#x])
      :              :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :              :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :              :              +- OneRowRelation
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Intersect false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join LeftOuter, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias null_table
      :              :     +- View (`null_table`, [a#x, b#x])
      :              :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :              :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :              :              +- OneRowRelation
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Intersect false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias null_table
      :                 :     +- View (`null_table`, [a#x, b#x])
      :                 :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                 :              +- OneRowRelation
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- Join Inner, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Intersect false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias no_match_table
      :                    :     +- View (`no_match_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Distinct
      :                    +- Union false, false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias no_match_table
      :                       :     +- View (`no_match_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Distinct
      :                       +- Union false, false
      :                          :- Project [a#x, b#x]
      :                          :  +- SubqueryAlias inner_table
      :                          :     +- View (`inner_table`, [a#x, b#x])
      :                          :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          :           +- LocalRelation [col1#x, col2#x]
      :                          +- Project [a#x, b#x]
      :                             +- SubqueryAlias join_table
      :                                +- View (`join_table`, [a#x, b#x])
      :                                   +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                      +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Except false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias no_match_table
      :                 :     +- View (`no_match_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias no_match_table
      :              :     +- View (`no_match_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Distinct
      :                 +- Union false, false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT no_match_table.a FROM no_match_table RIGHT OUTER JOIN join_table ON no_match_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join RightOuter, (a#x = a#x)
      :                    :- SubqueryAlias no_match_table
      :                    :  +- View (`no_match_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join LeftOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Intersect false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias null_table
      :                 :     +- View (`null_table`, [a#x, b#x])
      :                 :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                 :              +- OneRowRelation
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Distinct
      :                 +- Union false, false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias null_table
      :                 :     +- View (`null_table`, [a#x, b#x])
      :                 :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                 :              +- OneRowRelation
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join RightOuter, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT null_table.a, null_table.b FROM null_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Except false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias null_table
      :                    :     +- View (`null_table`, [a#x, b#x])
      :                    :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                    :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                    :              +- OneRowRelation
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Intersect false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT no_match_table.a FROM no_match_table INNER JOIN join_table ON no_match_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join Inner, (a#x = a#x)
      :                    :- SubqueryAlias no_match_table
      :                    :  +- View (`no_match_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT null_table.a FROM null_table ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias null_table
      :                    +- View (`null_table`, [a#x, b#x])
      :                       +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                          +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                             +- OneRowRelation
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Except false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias no_match_table
      :                 :     +- View (`no_match_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT no_match_table.a FROM no_match_table INNER JOIN join_table ON no_match_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join Inner, (a#x = a#x)
      :                 :- SubqueryAlias no_match_table
      :                 :  +- View (`no_match_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(no_match_table.a) AS aggFunctionAlias FROM no_match_table RIGHT OUTER JOIN join_table ON no_match_table.a = join_table.a GROUP BY no_match_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- Join RightOuter, (a#x = a#x)
      :              :- SubqueryAlias no_match_table
      :              :  +- View (`no_match_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- Join LeftOuter, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join RightOuter, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Intersect false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias inner_table
      :                       :     +- View (`inner_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT null_table.a, null_table.b FROM null_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Intersect false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias null_table
      :                    :     +- View (`null_table`, [a#x, b#x])
      :                    :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                    :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                    :              +- OneRowRelation
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT null_table.a, null_table.b FROM null_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Distinct
      :                    +- Union false, false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias null_table
      :                       :     +- View (`null_table`, [a#x, b#x])
      :                       :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                       :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                       :              +- OneRowRelation
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias inner_table
      :           +- View (`inner_table`, [a#x, b#x])
      :              +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join RightOuter, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Except false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT null_table.a, null_table.b FROM null_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias null_table
      :              :     +- View (`null_table`, [a#x, b#x])
      :              :        +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :              :           +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :              :              +- OneRowRelation
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Intersect false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias no_match_table
      :              :     +- View (`no_match_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT no_match_table.a FROM no_match_table RIGHT OUTER JOIN join_table ON no_match_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join RightOuter, (a#x = a#x)
      :                 :- SubqueryAlias no_match_table
      :                 :  +- View (`no_match_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Intersect false
      :                       :- Project [a#x, b#x]
      :                       :  +- SubqueryAlias no_match_table
      :                       :     +- View (`no_match_table`, [a#x, b#x])
      :                       :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       :           +- LocalRelation [col1#x, col2#x]
      :                       +- Project [a#x, b#x]
      :                          +- SubqueryAlias join_table
      :                             +- View (`join_table`, [a#x, b#x])
      :                                +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                   +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT inner_table.a FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join Inner, (a#x = a#x)
      :                 :- SubqueryAlias inner_table
      :                 :  +- View (`inner_table`, [a#x, b#x])
      :                 :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :        +- LocalRelation [col1#x, col2#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [sum(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Except false
      :              :- Project [a#x, b#x]
      :              :  +- SubqueryAlias inner_table
      :              :     +- View (`inner_table`, [a#x, b#x])
      :              :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :           +- LocalRelation [col1#x, col2#x]
      :              +- Project [a#x, b#x]
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT no_match_table.a FROM no_match_table ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias no_match_table
      :                    +- View (`no_match_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join LeftOuter, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Distinct
      :                       +- Union false, false
      :                          :- Project [a#x, b#x]
      :                          :  +- SubqueryAlias inner_table
      :                          :     +- View (`inner_table`, [a#x, b#x])
      :                          :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          :           +- LocalRelation [col1#x, col2#x]
      :                          +- Project [a#x, b#x]
      :                             +- SubqueryAlias join_table
      :                                +- View (`join_table`, [a#x, b#x])
      :                                   +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                      +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias inner_table
      :           +- View (`inner_table`, [a#x, b#x])
      :              +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join LeftOuter, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT inner_table.a FROM inner_table ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias inner_table
      :                 +- View (`inner_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- Join RightOuter, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT COUNT(no_match_table.a) AS aggFunctionAlias FROM no_match_table) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias no_match_table
      :           +- View (`no_match_table`, [a#x, b#x])
      :              +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT inner_table.a FROM inner_table ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias inner_table
      :                 +- View (`inner_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join Inner, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- Join Inner, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT COUNT(inner_table.a) AS aggFunctionAlias FROM inner_table GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias inner_table
      :              +- View (`inner_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT no_match_table.a, no_match_table.b FROM no_match_table INTERSECT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Intersect false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias no_match_table
      :                 :     +- View (`no_match_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Except false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- SubqueryAlias innerSubqueryAlias
      :                    +- Distinct
      :                       +- Union false, false
      :                          :- Project [a#x, b#x]
      :                          :  +- SubqueryAlias inner_table
      :                          :     +- View (`inner_table`, [a#x, b#x])
      :                          :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          :           +- LocalRelation [col1#x, col2#x]
      :                          +- Project [a#x, b#x]
      :                             +- SubqueryAlias join_table
      :                                +- View (`join_table`, [a#x, b#x])
      :                                   +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                      +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT inner_table.a FROM inner_table ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias inner_table
      :                 +- View (`inner_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join RightOuter, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT no_match_table.a, no_match_table.b FROM no_match_table WHERE NOT no_match_table.b IN (SELECT DISTINCT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table LEFT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- Join LeftOuter, (a#x = a#x)
      :              :- SubqueryAlias inner_table
      :              :  +- View (`inner_table`, [a#x, b#x])
      :              :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :              :        +- LocalRelation [col1#x, col2#x]
      :              +- SubqueryAlias join_table
      :                 +- View (`join_table`, [a#x, b#x])
      :                    +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                       +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias no_match_table
         +- View (`no_match_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT inner_table.a FROM inner_table INNER JOIN join_table ON inner_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join Inner, (a#x = a#x)
      :                    :- SubqueryAlias inner_table
      :                    :  +- View (`inner_table`, [a#x, b#x])
      :                    :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :        +- LocalRelation [col1#x, col2#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT SUM(inner_table.a) AS aggFunctionAlias FROM inner_table RIGHT OUTER JOIN join_table ON inner_table.a = join_table.a GROUP BY inner_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join RightOuter, (a#x = a#x)
      :           :- SubqueryAlias inner_table
      :           :  +- View (`inner_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT DISTINCT SUM(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias GROUP BY innerSubqueryAlias.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Distinct
      :        +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :           +- SubqueryAlias innerSubqueryAlias
      :              +- Except false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT DISTINCT null_table.a FROM null_table INNER JOIN join_table ON null_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Distinct
      :              +- Project [a#x]
      :                 +- Join Inner, (a#x = a#x)
      :                    :- SubqueryAlias null_table
      :                    :  +- View (`null_table`, [a#x, b#x])
      :                    :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                    :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                    :           +- OneRowRelation
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT null_table.a FROM null_table LEFT OUTER JOIN join_table ON null_table.a = join_table.a ORDER BY a DESC NULLS FIRST LIMIT 1) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 1
      :     +- LocalLimit 1
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- Join LeftOuter, (a#x = a#x)
      :                 :- SubqueryAlias null_table
      :                 :  +- View (`null_table`, [a#x, b#x])
      :                 :     +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
      :                 :        +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
      :                 :           +- OneRowRelation
      :                 +- SubqueryAlias join_table
      :                    +- View (`join_table`, [a#x, b#x])
      :                       +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                          +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT innerSubqueryAlias.a FROM (SELECT inner_table.a, inner_table.b FROM inner_table EXCEPT SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias ORDER BY a DESC NULLS FIRST LIMIT 10) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT b#x IN (list#x [])
      :  +- GlobalLimit 10
      :     +- LocalLimit 10
      :        +- Sort [a#x DESC NULLS FIRST], true
      :           +- Project [a#x]
      :              +- SubqueryAlias innerSubqueryAlias
      :                 +- Except false
      :                    :- Project [a#x, b#x]
      :                    :  +- SubqueryAlias inner_table
      :                    :     +- View (`inner_table`, [a#x, b#x])
      :                    :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    :           +- LocalRelation [col1#x, col2#x]
      :                    +- Project [a#x, b#x]
      :                       +- SubqueryAlias join_table
      :                          +- View (`join_table`, [a#x, b#x])
      :                             +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                                +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation


-- !query
SELECT outer_table.a, outer_table.b FROM outer_table WHERE NOT outer_table.b IN (SELECT SUM(no_match_table.a) AS aggFunctionAlias FROM no_match_table INNER JOIN join_table ON no_match_table.a = join_table.a GROUP BY no_match_table.b) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [b#x], [sum(a#x) AS aggFunctionAlias#xL]
      :        +- Join Inner, (a#x = a#x)
      :           :- SubqueryAlias no_match_table
      :           :  +- View (`no_match_table`, [a#x, b#x])
      :           :     +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :           :        +- LocalRelation [col1#x, col2#x]
      :           +- SubqueryAlias join_table
      :              +- View (`join_table`, [a#x, b#x])
      :                 +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                    +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias outer_table
         +- View (`outer_table`, [a#x, b#x])
            +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
               +- LocalRelation [col1#x, col2#x]


-- !query
SELECT null_table.a, null_table.b FROM null_table WHERE NOT null_table.b IN (SELECT COUNT(innerSubqueryAlias.a) AS aggFunctionAlias FROM (SELECT inner_table.a, inner_table.b FROM inner_table UNION SELECT join_table.a, join_table.b FROM join_table) AS innerSubqueryAlias) ORDER BY a DESC NULLS FIRST, b DESC NULLS FIRST
-- !query analysis
Sort [a#x DESC NULLS FIRST, b#x DESC NULLS FIRST], true
+- Project [a#x, b#x]
   +- Filter NOT cast(b#x as bigint) IN (list#x [])
      :  +- Project [aggFunctionAlias#xL]
      :     +- Aggregate [count(a#x) AS aggFunctionAlias#xL]
      :        +- SubqueryAlias innerSubqueryAlias
      :           +- Distinct
      :              +- Union false, false
      :                 :- Project [a#x, b#x]
      :                 :  +- SubqueryAlias inner_table
      :                 :     +- View (`inner_table`, [a#x, b#x])
      :                 :        +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                 :           +- LocalRelation [col1#x, col2#x]
      :                 +- Project [a#x, b#x]
      :                    +- SubqueryAlias join_table
      :                       +- View (`join_table`, [a#x, b#x])
      :                          +- Project [cast(col1#x as int) AS a#x, cast(col2#x as int) AS b#x]
      :                             +- LocalRelation [col1#x, col2#x]
      +- SubqueryAlias null_table
         +- View (`null_table`, [a#x, b#x])
            +- Project [cast(CAST(NULL AS INT)#x as int) AS a#x, cast(CAST(NULL AS INT)#x as int) AS b#x]
               +- Project [cast(null as int) AS CAST(NULL AS INT)#x, cast(null as int) AS CAST(NULL AS INT)#x]
                  +- OneRowRelation
