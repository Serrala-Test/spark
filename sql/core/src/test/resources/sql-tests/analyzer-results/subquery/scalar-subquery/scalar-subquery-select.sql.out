-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view t1 as select * from values
  ('val1a', 6S, 8, 10L, float(15.0), 20D, 20E2, timestamp '2014-04-04 00:00:00.000', date '2014-04-04'),
  ('val1b', 8S, 16, 19L, float(17.0), 25D, 26E2, timestamp '2014-05-04 01:01:00.000', date '2014-05-04'),
  ('val1a', 16S, 12, 21L, float(15.0), 20D, 20E2, timestamp '2014-06-04 01:02:00.001', date '2014-06-04'),
  ('val1a', 16S, 12, 10L, float(15.0), 20D, 20E2, timestamp '2014-07-04 01:01:00.000', date '2014-07-04'),
  ('val1c', 8S, 16, 19L, float(17.0), 25D, 26E2, timestamp '2014-05-04 01:02:00.001', date '2014-05-05'),
  ('val1d', null, 16, 22L, float(17.0), 25D, 26E2, timestamp '2014-06-04 01:01:00.000', null),
  ('val1d', null, 16, 19L, float(17.0), 25D, 26E2, timestamp '2014-07-04 01:02:00.001', null),
  ('val1e', 10S, null, 25L, float(17.0), 25D, 26E2, timestamp '2014-08-04 01:01:00.000', date '2014-08-04'),
  ('val1e', 10S, null, 19L, float(17.0), 25D, 26E2, timestamp '2014-09-04 01:02:00.001', date '2014-09-04'),
  ('val1d', 10S, null, 12L, float(17.0), 25D, 26E2, timestamp '2015-05-04 01:01:00.000', date '2015-05-04'),
  ('val1a', 6S, 8, 10L, float(15.0), 20D, 20E2, timestamp '2014-04-04 01:02:00.001', date '2014-04-04'),
  ('val1e', 10S, null, 19L, float(17.0), 25D, 26E2, timestamp '2014-05-04 01:01:00.000', date '2014-05-04')
  as t1(t1a, t1b, t1c, t1d, t1e, t1f, t1g, t1h, t1i)
-- !query analysis
CreateViewCommand `t1`, select * from values
  ('val1a', 6S, 8, 10L, float(15.0), 20D, 20E2, timestamp '2014-04-04 00:00:00.000', date '2014-04-04'),
  ('val1b', 8S, 16, 19L, float(17.0), 25D, 26E2, timestamp '2014-05-04 01:01:00.000', date '2014-05-04'),
  ('val1a', 16S, 12, 21L, float(15.0), 20D, 20E2, timestamp '2014-06-04 01:02:00.001', date '2014-06-04'),
  ('val1a', 16S, 12, 10L, float(15.0), 20D, 20E2, timestamp '2014-07-04 01:01:00.000', date '2014-07-04'),
  ('val1c', 8S, 16, 19L, float(17.0), 25D, 26E2, timestamp '2014-05-04 01:02:00.001', date '2014-05-05'),
  ('val1d', null, 16, 22L, float(17.0), 25D, 26E2, timestamp '2014-06-04 01:01:00.000', null),
  ('val1d', null, 16, 19L, float(17.0), 25D, 26E2, timestamp '2014-07-04 01:02:00.001', null),
  ('val1e', 10S, null, 25L, float(17.0), 25D, 26E2, timestamp '2014-08-04 01:01:00.000', date '2014-08-04'),
  ('val1e', 10S, null, 19L, float(17.0), 25D, 26E2, timestamp '2014-09-04 01:02:00.001', date '2014-09-04'),
  ('val1d', 10S, null, 12L, float(17.0), 25D, 26E2, timestamp '2015-05-04 01:01:00.000', date '2015-05-04'),
  ('val1a', 6S, 8, 10L, float(15.0), 20D, 20E2, timestamp '2014-04-04 01:02:00.001', date '2014-04-04'),
  ('val1e', 10S, null, 19L, float(17.0), 25D, 26E2, timestamp '2014-05-04 01:01:00.000', date '2014-05-04')
  as t1(t1a, t1b, t1c, t1d, t1e, t1f, t1g, t1h, t1i), false, false, LocalTempView, true
   +- Project [t1a#x, t1b#x, t1c#x, t1d#xL, t1e#x, t1f#x, t1g#x, t1h#x, t1i#x]
      +- SubqueryAlias t1
         +- LocalRelation [t1a#x, t1b#x, t1c#x, t1d#xL, t1e#x, t1f#x, t1g#x, t1h#x, t1i#x]


-- !query
create temporary view t2 as select * from values
  ('val2a', 6S, 12, 14L, float(15), 20D, 20E2, timestamp '2014-04-04 01:01:00.000', date '2014-04-04'),
  ('val1b', 10S, 12, 19L, float(17), 25D, 26E2, timestamp '2014-05-04 01:01:00.000', date '2014-05-04'),
  ('val1b', 8S, 16, 119L, float(17), 25D, 26E2, timestamp '2015-05-04 01:01:00.000', date '2015-05-04'),
  ('val1c', 12S, 16, 219L, float(17), 25D, 26E2, timestamp '2016-05-04 01:01:00.000', date '2016-05-04'),
  ('val1b', null, 16, 319L, float(17), 25D, 26E2, timestamp '2017-05-04 01:01:00.000', null),
  ('val2e', 8S, null, 419L, float(17), 25D, 26E2, timestamp '2014-06-04 01:01:00.000', date '2014-06-04'),
  ('val1f', 19S, null, 519L, float(17), 25D, 26E2, timestamp '2014-05-04 01:01:00.000', date '2014-05-04'),
  ('val1b', 10S, 12, 19L, float(17), 25D, 26E2, timestamp '2014-06-04 01:01:00.000', date '2014-06-04'),
  ('val1b', 8S, 16, 19L, float(17), 25D, 26E2, timestamp '2014-07-04 01:01:00.000', date '2014-07-04'),
  ('val1c', 12S, 16, 19L, float(17), 25D, 26E2, timestamp '2014-08-04 01:01:00.000', date '2014-08-05'),
  ('val1e', 8S, null, 19L, float(17), 25D, 26E2, timestamp '2014-09-04 01:01:00.000', date '2014-09-04'),
  ('val1f', 19S, null, 19L, float(17), 25D, 26E2, timestamp '2014-10-04 01:01:00.000', date '2014-10-04'),
  ('val1b', null, 16, 19L, float(17), 25D, 26E2, timestamp '2014-05-04 01:01:00.000', null)
  as t2(t2a, t2b, t2c, t2d, t2e, t2f, t2g, t2h, t2i)
-- !query analysis
CreateViewCommand `t2`, select * from values
  ('val2a', 6S, 12, 14L, float(15), 20D, 20E2, timestamp '2014-04-04 01:01:00.000', date '2014-04-04'),
  ('val1b', 10S, 12, 19L, float(17), 25D, 26E2, timestamp '2014-05-04 01:01:00.000', date '2014-05-04'),
  ('val1b', 8S, 16, 119L, float(17), 25D, 26E2, timestamp '2015-05-04 01:01:00.000', date '2015-05-04'),
  ('val1c', 12S, 16, 219L, float(17), 25D, 26E2, timestamp '2016-05-04 01:01:00.000', date '2016-05-04'),
  ('val1b', null, 16, 319L, float(17), 25D, 26E2, timestamp '2017-05-04 01:01:00.000', null),
  ('val2e', 8S, null, 419L, float(17), 25D, 26E2, timestamp '2014-06-04 01:01:00.000', date '2014-06-04'),
  ('val1f', 19S, null, 519L, float(17), 25D, 26E2, timestamp '2014-05-04 01:01:00.000', date '2014-05-04'),
  ('val1b', 10S, 12, 19L, float(17), 25D, 26E2, timestamp '2014-06-04 01:01:00.000', date '2014-06-04'),
  ('val1b', 8S, 16, 19L, float(17), 25D, 26E2, timestamp '2014-07-04 01:01:00.000', date '2014-07-04'),
  ('val1c', 12S, 16, 19L, float(17), 25D, 26E2, timestamp '2014-08-04 01:01:00.000', date '2014-08-05'),
  ('val1e', 8S, null, 19L, float(17), 25D, 26E2, timestamp '2014-09-04 01:01:00.000', date '2014-09-04'),
  ('val1f', 19S, null, 19L, float(17), 25D, 26E2, timestamp '2014-10-04 01:01:00.000', date '2014-10-04'),
  ('val1b', null, 16, 19L, float(17), 25D, 26E2, timestamp '2014-05-04 01:01:00.000', null)
  as t2(t2a, t2b, t2c, t2d, t2e, t2f, t2g, t2h, t2i), false, false, LocalTempView, true
   +- Project [t2a#x, t2b#x, t2c#x, t2d#xL, t2e#x, t2f#x, t2g#x, t2h#x, t2i#x]
      +- SubqueryAlias t2
         +- LocalRelation [t2a#x, t2b#x, t2c#x, t2d#xL, t2e#x, t2f#x, t2g#x, t2h#x, t2i#x]


-- !query
create temporary view t3 as select * from values
  ('val3a', 6S, 12, 110L, float(15), 20D, 20E2, timestamp '2014-04-04 01:02:00.000', date '2014-04-04'),
  ('val3a', 6S, 12, 10L, float(15), 20D, 20E2, timestamp '2014-05-04 01:02:00.000', date '2014-05-04'),
  ('val1b', 10S, 12, 219L, float(17), 25D, 26E2, timestamp '2014-05-04 01:02:00.000', date '2014-05-04'),
  ('val1b', 10S, 12, 19L, float(17), 25D, 26E2, timestamp '2014-05-04 01:02:00.000', date '2014-05-04'),
  ('val1b', 8S, 16, 319L, float(17), 25D, 26E2, timestamp '2014-06-04 01:02:00.000', date '2014-06-04'),
  ('val1b', 8S, 16, 19L, float(17), 25D, 26E2, timestamp '2014-07-04 01:02:00.000', date '2014-07-04'),
  ('val3c', 17S, 16, 519L, float(17), 25D, 26E2, timestamp '2014-08-04 01:02:00.000', date '2014-08-04'),
  ('val3c', 17S, 16, 19L, float(17), 25D, 26E2, timestamp '2014-09-04 01:02:00.000', date '2014-09-05'),
  ('val1b', null, 16, 419L, float(17), 25D, 26E2, timestamp '2014-10-04 01:02:00.000', null),
  ('val1b', null, 16, 19L, float(17), 25D, 26E2, timestamp '2014-11-04 01:02:00.000', null),
  ('val3b', 8S, null, 719L, float(17), 25D, 26E2, timestamp '2014-05-04 01:02:00.000', date '2014-05-04'),
  ('val3b', 8S, null, 19L, float(17), 25D, 26E2, timestamp '2015-05-04 01:02:00.000', date '2015-05-04')
  as t3(t3a, t3b, t3c, t3d, t3e, t3f, t3g, t3h, t3i)
-- !query analysis
CreateViewCommand `t3`, select * from values
  ('val3a', 6S, 12, 110L, float(15), 20D, 20E2, timestamp '2014-04-04 01:02:00.000', date '2014-04-04'),
  ('val3a', 6S, 12, 10L, float(15), 20D, 20E2, timestamp '2014-05-04 01:02:00.000', date '2014-05-04'),
  ('val1b', 10S, 12, 219L, float(17), 25D, 26E2, timestamp '2014-05-04 01:02:00.000', date '2014-05-04'),
  ('val1b', 10S, 12, 19L, float(17), 25D, 26E2, timestamp '2014-05-04 01:02:00.000', date '2014-05-04'),
  ('val1b', 8S, 16, 319L, float(17), 25D, 26E2, timestamp '2014-06-04 01:02:00.000', date '2014-06-04'),
  ('val1b', 8S, 16, 19L, float(17), 25D, 26E2, timestamp '2014-07-04 01:02:00.000', date '2014-07-04'),
  ('val3c', 17S, 16, 519L, float(17), 25D, 26E2, timestamp '2014-08-04 01:02:00.000', date '2014-08-04'),
  ('val3c', 17S, 16, 19L, float(17), 25D, 26E2, timestamp '2014-09-04 01:02:00.000', date '2014-09-05'),
  ('val1b', null, 16, 419L, float(17), 25D, 26E2, timestamp '2014-10-04 01:02:00.000', null),
  ('val1b', null, 16, 19L, float(17), 25D, 26E2, timestamp '2014-11-04 01:02:00.000', null),
  ('val3b', 8S, null, 719L, float(17), 25D, 26E2, timestamp '2014-05-04 01:02:00.000', date '2014-05-04'),
  ('val3b', 8S, null, 19L, float(17), 25D, 26E2, timestamp '2015-05-04 01:02:00.000', date '2015-05-04')
  as t3(t3a, t3b, t3c, t3d, t3e, t3f, t3g, t3h, t3i), false, false, LocalTempView, true
   +- Project [t3a#x, t3b#x, t3c#x, t3d#xL, t3e#x, t3f#x, t3g#x, t3h#x, t3i#x]
      +- SubqueryAlias t3
         +- LocalRelation [t3a#x, t3b#x, t3c#x, t3d#xL, t3e#x, t3f#x, t3g#x, t3h#x, t3i#x]


-- !query
SELECT (SELECT min(t3d) FROM t3) min_t3d,
       (SELECT max(t2h) FROM t2) max_t2h
FROM   t1
WHERE  t1a = 'val1c'
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT   t1a, count(*)
FROM     t1
WHERE    t1c IN (SELECT   (SELECT min(t3c) FROM t3)
                 FROM     t2
                 GROUP BY t2g
                 HAVING   count(*) > 1)
GROUP BY t1a
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT (SELECT min(t3d) FROM t3) min_t3d,
       null
FROM   t1
WHERE  t1a = 'val1c'
UNION
SELECT null,
       (SELECT max(t2h) FROM t2) max_t2h
FROM   t1
WHERE  t1a = 'val1c'
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT (SELECT min(t3c) FROM t3) min_t3d
FROM   t1
WHERE  t1a = 'val1a'
INTERSECT
SELECT (SELECT min(t2c) FROM t2) min_t2d
FROM   t1
WHERE  t1a = 'val1d'
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT q1.t1a, q2.t2a, q1.min_t3d, q2.avg_t3d
FROM   (SELECT t1a, (SELECT min(t3d) FROM t3) min_t3d
        FROM   t1
        WHERE  t1a IN ('val1e', 'val1c')) q1
       FULL OUTER JOIN
       (SELECT t2a, (SELECT avg(t3d) FROM t3) avg_t3d
        FROM   t2
        WHERE  t2a IN ('val1c', 'val2a')) q2
ON     q1.t1a = q2.t2a
AND    q1.min_t3d < q2.avg_t3d
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT (SELECT min(t3d) FROM t3 WHERE t3.t3a = t1.t1a) min_t3d,
       (SELECT max(t2h) FROM t2 WHERE t2.t2a = t1.t1a) max_t2h
FROM   t1
WHERE  t1a = 'val1b'
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT (SELECT min(t3d) FROM t3 WHERE t3a = t1a) min_t3d
FROM   t1
WHERE  t1a = 'val1b'
MINUS
SELECT (SELECT min(t3d) FROM t3) abs_min_t3d
FROM   t1
WHERE  t1a = 'val1b'
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT t1a, t1b
FROM   t1
WHERE  NOT EXISTS (SELECT (SELECT max(t2b)
                           FROM   t2 LEFT JOIN t1
                           ON     t2a = t1a
                           WHERE  t2c = t3c) dummy
                   FROM   t3
                   WHERE  t3b < (SELECT max(t2b)
                                 FROM   t2 LEFT JOIN t1
                                 ON     t2a = t1a
                                 WHERE  t2c = t3c)
                   AND    t3a = t1a)
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT t1a,
    (SELECT count(t2d) FROM t2 WHERE t2a = t1a) count_t2,
    (SELECT count_if(t2d > 0) FROM t2 WHERE t2a = t1a) count_if_t2,
    (SELECT approx_count_distinct(t2d) FROM t2 WHERE t2a = t1a) approx_count_distinct_t2,
    (SELECT collect_list(t2d) FROM t2 WHERE t2a = t1a) collect_list_t2,
    (SELECT sort_array(collect_set(t2d)) FROM t2 WHERE t2a = t1a) collect_set_t2,
    (SELECT hex(count_min_sketch(t2d, 0.5d, 0.5d, 1)) FROM t2 WHERE t2a = t1a) collect_set_t2
FROM t1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT t1c, (SELECT t1c) FROM t1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to dataType on unresolved object


-- !query
SELECT t1c, (SELECT t1c WHERE t1c = 8) FROM t1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to dataType on unresolved object


-- !query
SELECT t1c, t1d, (SELECT c + d FROM (SELECT t1c AS c, t1d AS d)) FROM t1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT t1c, (SELECT SUM(c) FROM (SELECT t1c AS c)) FROM t1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT t1a, (SELECT SUM(t2b) FROM t2 JOIN (SELECT t1a AS a) ON t2a = a) FROM t1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
CREATE OR REPLACE TEMPORARY VIEW t1 AS VALUES (0, 1), (1, 2) t1(c1, c2)
-- !query analysis
CreateViewCommand `t1`, VALUES (0, 1), (1, 2) t1(c1, c2), false, true, LocalTempView, true
   +- SubqueryAlias t1
      +- LocalRelation [c1#x, c2#x]


-- !query
CREATE OR REPLACE TEMPORARY VIEW t2 AS VALUES (0, 2), (0, 3) t2(c1, c2)
-- !query analysis
CreateViewCommand `t2`, VALUES (0, 2), (0, 3) t2(c1, c2), false, true, LocalTempView, true
   +- SubqueryAlias t2
      +- LocalRelation [c1#x, c2#x]


-- !query
SELECT c1, (WITH t AS (SELECT 1 AS a) SELECT a + c1 FROM t) FROM t1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT c1, (WITH t AS (SELECT * FROM t2 WHERE c1 = t1.c1) SELECT SUM(c2) FROM t) FROM t1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT c1, (
    WITH t3 AS (SELECT c1 + 1 AS c1, c2 + 1 AS c2 FROM t2),
    t4 AS (SELECT * FROM t3 WHERE t1.c1 = c1)
    SELECT SUM(c2) FROM t4
) FROM t1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT c1, (
    WITH t AS (SELECT * FROM t2)
    SELECT SUM(c2) FROM (SELECT c1, c2 FROM t UNION SELECT c2, c1 FROM t) r(c1, c2)
    WHERE c1 = t1.c1
) FROM t1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
WITH v AS (SELECT * FROM t2)
SELECT * FROM t1 WHERE c1 > (
    WITH t AS (SELECT * FROM t2)
    SELECT COUNT(*) FROM v WHERE c1 = t1.c1 AND c1 > (SELECT SUM(c2) FROM t WHERE c1 = v.c1)
)
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
WITH t AS (SELECT 1 AS a)
SELECT c1, (SELECT a FROM t WHERE a = c1) FROM t1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to dataType on unresolved object


-- !query
WITH
v1 AS (SELECT c1, c2, rand(0) c3 FROM t1),
v2 AS (SELECT c1, c2, rand(0) c4 FROM v1 WHERE c3 IN (SELECT c3 FROM v1))
SELECT c1, (
    WITH v3 AS (SELECT c1, c2, rand(0) c5 FROM t2)
    SELECT COUNT(*) FROM (
        SELECT * FROM v2 WHERE c1 > 0
        UNION SELECT * FROM v2 WHERE c2 > 0
        UNION SELECT * FROM v3 WHERE c2 > 0
    ) WHERE c1 = v1.c1
) FROM v1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT (SELECT a FROM (SELECT 1 AS a UNION ALL SELECT 2 AS a) t) AS b
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to dataType on unresolved object


-- !query
CREATE OR REPLACE TEMP VIEW t1(c1, c2) AS (VALUES (0, 1), (1, 2))
-- !query analysis
CreateViewCommand `t1`, [(c1,None), (c2,None)], (VALUES (0, 1), (1, 2)), false, true, LocalTempView, true
   +- LocalRelation [col1#x, col2#x]


-- !query
CREATE OR REPLACE TEMP VIEW t2(c1, c2) AS (VALUES (0, 2), (0, 3))
-- !query analysis
CreateViewCommand `t2`, [(c1,None), (c2,None)], (VALUES (0, 2), (0, 3)), false, true, LocalTempView, true
   +- LocalRelation [col1#x, col2#x]


-- !query
CREATE OR REPLACE TEMP VIEW students(id, name, major, year) AS (VALUES
    (0, 'A', 'CS', 2022),
    (1, 'B', 'CS', 2022),
    (2, 'C', 'Math', 2022))
-- !query analysis
CreateViewCommand `students`, [(id,None), (name,None), (major,None), (year,None)], (VALUES
    (0, 'A', 'CS', 2022),
    (1, 'B', 'CS', 2022),
    (2, 'C', 'Math', 2022)), false, true, LocalTempView, true
   +- LocalRelation [col1#x, col2#x, col3#x, col4#x]


-- !query
CREATE OR REPLACE TEMP VIEW exams(sid, course, curriculum, grade, date) AS (VALUES
    (0, 'C1', 'CS', 4, 2020),
    (0, 'C2', 'CS', 3, 2021),
    (1, 'C1', 'CS', 2, 2020),
    (1, 'C2', 'CS', 1, 2021))
-- !query analysis
CreateViewCommand `exams`, [(sid,None), (course,None), (curriculum,None), (grade,None), (date,None)], (VALUES
    (0, 'C1', 'CS', 4, 2020),
    (0, 'C2', 'CS', 3, 2021),
    (1, 'C1', 'CS', 2, 2020),
    (1, 'C2', 'CS', 1, 2021)), false, true, LocalTempView, true
   +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]


-- !query
SELECT students.name, exams.course
FROM students, exams
WHERE students.id = exams.sid
  AND (students.major = 'CS' OR students.major = 'Games Eng')
  AND exams.grade >= (
        SELECT avg(exams.grade) + 1
        FROM exams
        WHERE students.id = exams.sid
           OR (exams.curriculum = students.major AND students.year > exams.date))
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT (SELECT min(c2) FROM t2 WHERE t1.c1 > t2.c1) FROM t1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT (SELECT min(c2) FROM t2 WHERE t1.c1 >= t2.c1 AND t1.c2 < t2.c2) FROM t1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT (SELECT count(*) FROM t2 WHERE t1.c1 > t2.c1) FROM t1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT c, (
    SELECT count(*)
    FROM (VALUES ('ab'), ('abc'), ('bc')) t2(c)
    WHERE t1.c = substring(t2.c, 1, 1)
) FROM (VALUES ('a'), ('b')) t1(c)
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT c, (
    SELECT count(*)
    FROM (VALUES (0, 6), (1, 5), (2, 4), (3, 3)) t1(a, b)
    WHERE a + b = c
) FROM (VALUES (6)) t2(c)
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
SELECT *, (SELECT count(1) is null FROM t2 WHERE t1.c1 = t2.c1) FROM t1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
select (select f from (select false as f, max(c2) from t1 where t1.c1 = t1.c1)) from t2
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to dataType on unresolved object


-- !query
set spark.sql.optimizer.optimizeOneRowRelationSubquery.alwaysInline=false
-- !query analysis
SetCommand (spark.sql.optimizer.optimizeOneRowRelationSubquery.alwaysInline,Some(false))


-- !query
WITH T AS (SELECT 1 AS a)
SELECT (SELECT sum(1) FROM T WHERE a = col OR upper(col)= 'Y')
FROM (SELECT null as col) as foo
-- !query analysis
org.apache.spark.sql.catalyst.analysis.UnresolvedException
Invalid call to toAttribute on unresolved object


-- !query
set spark.sql.optimizer.optimizeOneRowRelationSubquery.alwaysInline=true
-- !query analysis
SetCommand (spark.sql.optimizer.optimizeOneRowRelationSubquery.alwaysInline,Some(true))


-- !query
select * from (
 select t1.id c1, (
  select t2.id c from range (1, 2) t2
  where t1.id = t2.id  ) c2
 from range (1, 3) t1 ) t
where t.c2 is not null
-- !query analysis
Project [c1#xL, c2#xL]
+- Filter isnotnull(c2#xL)
   +- SubqueryAlias t
      +- Project [id#xL AS c1#xL, scalar-subquery#x [id#xL] AS c2#xL]
         :  +- Project [id#xL AS c#xL]
         :     +- Filter (outer(id#xL) = id#xL)
         :        +- SubqueryAlias t2
         :           +- Range (1, 2, step=1, splits=None)
         +- SubqueryAlias t1
            +- Range (1, 3, step=1, splits=None)


-- !query
SELECT c1, c2, (SELECT count(*) cnt FROM t1 t2 WHERE t1.c1 = t2.c1 HAVING cnt = 0) FROM t1
-- !query analysis
Project [c1#x, c2#x, scalar-subquery#x [c1#x] AS scalarsubquery(c1)#xL]
:  +- Filter (cnt#xL = cast(0 as bigint))
:     +- Aggregate [count(1) AS cnt#xL]
:        +- Filter (outer(c1#x) = c1#x)
:           +- SubqueryAlias t2
:              +- SubqueryAlias t1
:                 +- View (`t1`, [c1#x,c2#x])
:                    +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
:                       +- LocalRelation [col1#x, col2#x]
+- SubqueryAlias t1
   +- View (`t1`, [c1#x,c2#x])
      +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
         +- LocalRelation [col1#x, col2#x]
