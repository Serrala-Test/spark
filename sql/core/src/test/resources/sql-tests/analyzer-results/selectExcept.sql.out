-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TEMPORARY VIEW tbl_view AS SELECT * FROM VALUES
  (10, "name1"),
  (20, "name2"),
  (30, "name3"),
  (40, "name4"),
  (50, "name5"),
  (70, "name7")
AS tbl_view(id, name)
-- !query analysis
CreateViewCommand `tbl_view`, SELECT * FROM VALUES
  (10, "name1"),
  (20, "name2"),
  (30, "name3"),
  (40, "name4"),
  (50, "name5"),
  (70, "name7")
AS tbl_view(id, name), false, false, LocalTempView, true
   +- Project [id#x, name#x]
      +- SubqueryAlias tbl_view
         +- LocalRelation [id#x, name#x]


-- !query
CREATE TABLE ids (id INT) USING CSV
-- !query analysis
org.apache.spark.sql.catalyst.analysis.TableAlreadyExistsException
{
  "errorClass" : "TABLE_OR_VIEW_ALREADY_EXISTS",
  "sqlState" : "42P07",
  "messageParameters" : {
    "relationName" : "`spark_catalog`.`default`.`ids`"
  }
}


-- !query
SELECT * FROM tbl_view
-- !query analysis
Project [id#x, name#x]
+- SubqueryAlias tbl_view
   +- View (`tbl_view`, [id#x,name#x])
      +- Project [cast(id#x as int) AS id#x, cast(name#x as string) AS name#x]
         +- Project [id#x, name#x]
            +- SubqueryAlias tbl_view
               +- LocalRelation [id#x, name#x]


-- !query
SELECT * EXCEPT (id) FROM tbl_view
-- !query analysis
Project [name#x]
+- SubqueryAlias tbl_view
   +- View (`tbl_view`, [id#x,name#x])
      +- Project [cast(id#x as int) AS id#x, cast(name#x as string) AS name#x]
         +- Project [id#x, name#x]
            +- SubqueryAlias tbl_view
               +- LocalRelation [id#x, name#x]


-- !query
SELECT * EXCEPT (name) FROM tbl_view
-- !query analysis
Project [id#x]
+- SubqueryAlias tbl_view
   +- View (`tbl_view`, [id#x,name#x])
      +- Project [cast(id#x as int) AS id#x, cast(name#x as string) AS name#x]
         +- Project [id#x, name#x]
            +- SubqueryAlias tbl_view
               +- LocalRelation [id#x, name#x]


-- !query
SELECT * EXCEPT (id, name) FROM tbl_view
-- !query analysis
Project
+- SubqueryAlias tbl_view
   +- View (`tbl_view`, [id#x,name#x])
      +- Project [cast(id#x as int) AS id#x, cast(name#x as string) AS name#x]
         +- Project [id#x, name#x]
            +- SubqueryAlias tbl_view
               +- LocalRelation [id#x, name#x]


-- !query
CREATE TABLE namesTbl USING CSV AS SELECT * EXCEPT (id) FROM tbl_view
-- !query analysis
org.apache.spark.sql.catalyst.analysis.TableAlreadyExistsException
{
  "errorClass" : "TABLE_OR_VIEW_ALREADY_EXISTS",
  "sqlState" : "42P07",
  "messageParameters" : {
    "relationName" : "`spark_catalog`.`default`.`namesTbl`"
  }
}


-- !query
SELECT * FROM namesTbl
-- !query analysis
Project [name#x]
+- SubqueryAlias spark_catalog.default.namestbl
   +- Relation spark_catalog.default.namestbl[name#x] csv


-- !query
SELECT * EXCEPT (`a-b-c`) FROM (SELECT 1 a_b_c, 2 `a-b-c`)
-- !query analysis
Project [a_b_c#x]
+- SubqueryAlias __auto_generated_subquery_name
   +- Project [1 AS a_b_c#x, 2 AS a-b-c#x]
      +- OneRowRelation


-- !query
SELECT tbl_view.* EXCEPT (name) FROM tbl_view
-- !query analysis
Project [id#x]
+- SubqueryAlias tbl_view
   +- View (`tbl_view`, [id#x,name#x])
      +- Project [cast(id#x as int) AS id#x, cast(name#x as string) AS name#x]
         +- Project [id#x, name#x]
            +- SubqueryAlias tbl_view
               +- LocalRelation [id#x, name#x]


-- !query
INSERT INTO ids
SELECT * EXCEPT (name) FROM tbl_view
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/ids, false, CSV, [path=file:[not included in comparison]/{warehouse_dir}/ids], Append, `spark_catalog`.`default`.`ids`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/ids), [id]
+- Project [id#x]
   +- SubqueryAlias tbl_view
      +- View (`tbl_view`, [id#x,name#x])
         +- Project [cast(id#x as int) AS id#x, cast(name#x as string) AS name#x]
            +- Project [id#x, name#x]
               +- SubqueryAlias tbl_view
                  +- LocalRelation [id#x, name#x]


-- !query
SELECT * FROM ids
-- !query analysis
Project [id#x]
+- SubqueryAlias spark_catalog.default.ids
   +- Relation spark_catalog.default.ids[id#x] csv


-- !query
SELECT * EXCEPT (ids.id) FROM ids
-- !query analysis
Project
+- SubqueryAlias spark_catalog.default.ids
   +- Relation spark_catalog.default.ids[id#x] csv


-- !query
SELECT * FROM (SELECT * EXCEPT (name) FROM tbl_view)
-- !query analysis
Project [id#x]
+- SubqueryAlias __auto_generated_subquery_name
   +- Project [id#x]
      +- SubqueryAlias tbl_view
         +- View (`tbl_view`, [id#x,name#x])
            +- Project [cast(id#x as int) AS id#x, cast(name#x as string) AS name#x]
               +- Project [id#x, name#x]
                  +- SubqueryAlias tbl_view
                     +- LocalRelation [id#x, name#x]


-- !query
SELECT * EXCEPT name FROM tbl_view
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'name'",
    "hint" : ""
  }
}


-- !query
SELECT * EXCEPT() name FROM tbl_view
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "')'",
    "hint" : ""
  }
}


-- !query
SELECT * EXCEPT(invalid_column) FROM tbl_view
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`invalid_column`",
    "proposal" : "`id`, `name`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 31,
    "fragment" : "* EXCEPT(invalid_column)"
  } ]
}


-- !query
SELECT * EXCEPT(id, invalid_column) FROM tbl_view
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`invalid_column`",
    "proposal" : "`id`, `name`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 35,
    "fragment" : "* EXCEPT(id, invalid_column)"
  } ]
}


-- !query
SELECT * EXCEPT(id, id) FROM tbl_view
-- !query analysis
org.apache.spark.SparkException
{
  "errorClass" : "INTERNAL_ERROR",
  "sqlState" : "XX000",
  "messageParameters" : {
    "message" : "Cannot find main error class 'EXCEPT_OVERLAPPING_COLUMNS'"
  }
}
