-- Automatically generated by SQLQueryTestSuite
-- !query
SET spark.sql.ansi.enabled = true
-- !query analysis
SetCommand (spark.sql.ansi.enabled,Some(true))


-- !query
DECLARE title STRING
-- !query analysis
CreateVariableCommand system.session.title, STRING, null, false


-- !query
SET VARIABLE title = '-- Basic sanity --'
-- !query analysis
SetVariable [session.title(title, null, false)]
+- SubqueryAlias T
   +- Project [title#x AS session.title#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [-- Basic sanity -- AS title#x]
               +- OneRowRelation


-- !query
DECLARE var1 INT = 5
-- !query analysis
CreateVariableCommand system.session.var1, INT, 5, false


-- !query
SELECT var1
-- !query analysis
Project [session.var1(var1, 5, true) AS var1#x]
+- OneRowRelation


-- !query
SET VARIABLE var1 = 6
-- !query analysis
SetVariable [session.var1(var1, 5, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [6 AS var1#x]
               +- OneRowRelation


-- !query
SELECT var1
-- !query analysis
Project [session.var1(var1, 6, true) AS var1#x]
+- OneRowRelation


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
DropVariableCommand system.session.var1, false


-- !query
SET VARIABLE title = 'Create Variable - Success Cases'
-- !query analysis
SetVariable [session.title(title, -- Basic sanity --, false)]
+- SubqueryAlias T
   +- Project [title#x AS session.title#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [Create Variable - Success Cases AS title#x]
               +- OneRowRelation


-- !query
DECLARE VARIABLE var1 INT
-- !query analysis
CreateVariableCommand system.session.var1, INT, null, false


-- !query
SELECT 'Expect: INT, NULL', typeof(var1), var1
-- !query analysis
Project [Expect: INT, NULL AS Expect: INT, NULL#x, typeof(session.var1(var1, null, true)) AS typeof(var1 AS var1)#x, session.var1(var1, null, true) AS var1#x]
+- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1 DOUBLE
-- !query analysis
CreateVariableCommand system.session.var1, DOUBLE, null, true


-- !query
SELECT 'Expect: DOUBLE, NULL', typeof(var1), var1
-- !query analysis
Project [Expect: DOUBLE, NULL AS Expect: DOUBLE, NULL#x, typeof(session.var1(var1, null, true)) AS typeof(var1 AS var1)#x, session.var1(var1, null, true) AS var1#x]
+- OneRowRelation


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
DropVariableCommand system.session.var1, false


-- !query
DECLARE OR REPLACE VARIABLE var1 TIMESTAMP
-- !query analysis
CreateVariableCommand system.session.var1, TIMESTAMP, null, true


-- !query
SELECT 'Expect: TIMESTAMP, NULL', typeof(var1), var1
-- !query analysis
Project [Expect: TIMESTAMP, NULL AS Expect: TIMESTAMP, NULL#x, typeof(session.var1(var1, null, true)) AS typeof(var1 AS var1)#x, session.var1(var1, null, true) AS var1#x]
+- OneRowRelation


-- !query
SET VARIABLE title = 'Create Variable - Failure Cases'
-- !query analysis
SetVariable [session.title(title, Create Variable - Success Cases, false)]
+- SubqueryAlias T
   +- Project [title#x AS session.title#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [Create Variable - Failure Cases AS title#x]
               +- OneRowRelation


-- !query
DECLARE VARIABLE IF NOT EXISTS var1 INT
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'EXISTS'",
    "hint" : ""
  }
}


-- !query
DROP TEMPORARY VARIABLE IF EXISTS var1
-- !query analysis
DropVariableCommand system.session.var1, true


-- !query
SET VARIABLE title = 'Drop Variable'
-- !query analysis
SetVariable [session.title(title, Create Variable - Failure Cases, false)]
+- SubqueryAlias T
   +- Project [title#x AS session.title#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [Drop Variable AS title#x]
               +- OneRowRelation


-- !query
DECLARE VARIABLE var1 INT
-- !query analysis
CreateVariableCommand system.session.var1, INT, null, false


-- !query
SELECT var1
-- !query analysis
Project [session.var1(var1, null, true) AS var1#x]
+- OneRowRelation


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
DropVariableCommand system.session.var1, false


-- !query
SELECT var1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`var1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 11,
    "fragment" : "var1"
  } ]
}


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.NoSuchVariableException
{
  "errorClass" : "VARIABLE_NOT_FOUND",
  "sqlState" : "42883",
  "messageParameters" : {
    "variableName" : "`system`.`session`.`var1`"
  }
}


-- !query
DROP TEMPORARY VARIABLE IF EXISTS var1
-- !query analysis
DropVariableCommand system.session.var1, true


-- !query
DECLARE VARIABLE var1 INT
-- !query analysis
CreateVariableCommand system.session.var1, INT, null, false


-- !query
DROP VARIABLE var1
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'VARIABLE'",
    "hint" : ""
  }
}


-- !query
DROP VARIABLE system.session.var1
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'VARIABLE'",
    "hint" : ""
  }
}


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
DropVariableCommand system.session.var1, false


-- !query
SET VARIABLE title = 'Test qualifiers - success'
-- !query analysis
SetVariable [session.title(title, Drop Variable, false)]
+- SubqueryAlias T
   +- Project [title#x AS session.title#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [Test qualifiers - success AS title#x]
               +- OneRowRelation


-- !query
DECLARE VARIABLE var1 INT DEFAULT 1
-- !query analysis
CreateVariableCommand system.session.var1, INT, 1, false


-- !query
SELECT 1 as Expected, var1 as Unqualified, session.var1 AS SchemaQualified, system.session.var1 AS fullyQualified
-- !query analysis
Project [1 AS Expected#x, session.var1(var1, 1, true) AS Unqualified#x, session.session(session, 1, true) AS SchemaQualified#x, session.system(system, 1, true) AS fullyQualified#x]
+- OneRowRelation


-- !query
SET VARIABLE var1 = 2
-- !query analysis
SetVariable [session.var1(var1, 1, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [2 AS var1#x]
               +- OneRowRelation


-- !query
SELECT 2 as Expected, var1 as Unqualified, session.var1 AS SchemaQualified, system.session.var1 AS fullyQualified
-- !query analysis
Project [2 AS Expected#x, session.var1(var1, 2, true) AS Unqualified#x, session.session(session, 2, true) AS SchemaQualified#x, session.system(system, 2, true) AS fullyQualified#x]
+- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE session.var1 INT DEFAULT 1
-- !query analysis
CreateVariableCommand system.session.var1, INT, 1, true


-- !query
SELECT 1 as Expected, var1 as Unqualified, session.var1 AS SchemaQualified, system.session.var1 AS fullyQualified
-- !query analysis
Project [1 AS Expected#x, session.var1(var1, 1, true) AS Unqualified#x, session.session(session, 1, true) AS SchemaQualified#x, session.system(system, 1, true) AS fullyQualified#x]
+- OneRowRelation


-- !query
SET VARIABLE session.var1 = 2
-- !query analysis
SetVariable [session.var1(var1, 1, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [2 AS var1#x]
               +- OneRowRelation


-- !query
SELECT 2 as Expected, var1 as Unqualified, session.var1 AS SchemaQualified, system.session.var1 AS fullyQualified
-- !query analysis
Project [2 AS Expected#x, session.var1(var1, 2, true) AS Unqualified#x, session.session(session, 2, true) AS SchemaQualified#x, session.system(system, 2, true) AS fullyQualified#x]
+- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE system.session.var1 INT DEFAULT 1
-- !query analysis
CreateVariableCommand system.session.var1, INT, 1, true


-- !query
SELECT 1 as Expected, var1 as Unqualified, session.var1 AS SchemaQualified, system.session.var1 AS fullyQualified
-- !query analysis
Project [1 AS Expected#x, session.var1(var1, 1, true) AS Unqualified#x, session.session(session, 1, true) AS SchemaQualified#x, session.system(system, 1, true) AS fullyQualified#x]
+- OneRowRelation


-- !query
SET VARIABLE system.session.var1 = 2
-- !query analysis
SetVariable [session.var1(var1, 1, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [2 AS var1#x]
               +- OneRowRelation


-- !query
SELECT 2 as Expected, var1 as Unqualified, session.var1 AS SchemaQualified, system.session.var1 AS fullyQualified
-- !query analysis
Project [2 AS Expected#x, session.var1(var1, 2, true) AS Unqualified#x, session.session(session, 2, true) AS SchemaQualified#x, session.system(system, 2, true) AS fullyQualified#x]
+- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE sySteM.sEssIon.vAr1 INT DEFAULT 1
-- !query analysis
CreateVariableCommand system.session.var1, INT, 1, true


-- !query
SELECT 1 as Expected, var1 as Unqualified, sessIon.Var1 AS SchemaQualified, System.sessiOn.var1 AS fullyQualified
-- !query analysis
Project [1 AS Expected#x, session.var1(var1, 1, true) AS Unqualified#x, session.sessIon(sessIon, 1, true) AS SchemaQualified#x, session.System(System, 1, true) AS fullyQualified#x]
+- OneRowRelation


-- !query
SET VARIABLE sYstem.sesSiOn.vaR1 = 2
-- !query analysis
SetVariable [session.var1(var1, 1, false)]
+- SubqueryAlias T
   +- Project [vaR1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [2 AS vaR1#x]
               +- OneRowRelation


-- !query
SELECT 2 as Expected, VAR1 as Unqualified, SESSION.VAR1 AS SchemaQualified, SYSTEM.SESSION.VAR1 AS fullyQualified
-- !query analysis
Project [2 AS Expected#x, session.VAR1(VAR1, 2, true) AS Unqualified#x, session.SESSION(SESSION, 2, true) AS SchemaQualified#x, session.SYSTEM(SYSTEM, 2, true) AS fullyQualified#x]
+- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1
-- !query analysis
CreateVariableCommand system.session.var1, null, true


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
DropVariableCommand system.session.var1, false


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.NoSuchVariableException
{
  "errorClass" : "VARIABLE_NOT_FOUND",
  "sqlState" : "42883",
  "messageParameters" : {
    "variableName" : "`system`.`session`.`var1`"
  }
}


-- !query
DECLARE OR REPLACE VARIABLE var1
-- !query analysis
CreateVariableCommand system.session.var1, null, true


-- !query
DROP TEMPORARY VARIABLE session.var1
-- !query analysis
DropVariableCommand system.session.var1, false


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.NoSuchVariableException
{
  "errorClass" : "VARIABLE_NOT_FOUND",
  "sqlState" : "42883",
  "messageParameters" : {
    "variableName" : "`system`.`session`.`var1`"
  }
}


-- !query
DECLARE OR REPLACE VARIABLE var1
-- !query analysis
CreateVariableCommand system.session.var1, null, true


-- !query
DROP TEMPORARY VARIABLE system.session.var1
-- !query analysis
DropVariableCommand system.session.var1, false


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.NoSuchVariableException
{
  "errorClass" : "VARIABLE_NOT_FOUND",
  "sqlState" : "42883",
  "messageParameters" : {
    "variableName" : "`system`.`session`.`var1`"
  }
}


-- !query
DECLARE OR REPLACE VARIABLE var1
-- !query analysis
CreateVariableCommand system.session.var1, null, true


-- !query
DROP TEMPORARY VARIABLE sysTem.sesSion.vAr1
-- !query analysis
DropVariableCommand system.session.var1, false


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
org.apache.spark.sql.catalyst.analysis.NoSuchVariableException
{
  "errorClass" : "VARIABLE_NOT_FOUND",
  "sqlState" : "42883",
  "messageParameters" : {
    "variableName" : "`system`.`session`.`var1`"
  }
}


-- !query
SET VARIABLE title = 'Test qualifiers - fail'
-- !query analysis
SetVariable [session.title(title, Test qualifiers - success, false)]
+- SubqueryAlias T
   +- Project [title#x AS session.title#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [Test qualifiers - fail AS title#x]
               +- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE builtin.var1 INT
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "INVALID_SQL_SYNTAX.UNSUPPORTED_VARIABLE_NAME",
  "sqlState" : "42000",
  "messageParameters" : {
    "varName" : "`builtin`.`var1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 44,
    "fragment" : "DECLARE OR REPLACE VARIABLE builtin.var1 INT"
  } ]
}


-- !query
DECLARE OR REPLACE VARIABLE system.sesion.var1 INT
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "INVALID_SQL_SYNTAX.UNSUPPORTED_VARIABLE_NAME",
  "sqlState" : "42000",
  "messageParameters" : {
    "varName" : "`system`.`sesion`.`var1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 50,
    "fragment" : "DECLARE OR REPLACE VARIABLE system.sesion.var1 INT"
  } ]
}


-- !query
DECLARE OR REPLACE VARIABLE sys.session.var1 INT
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "INVALID_SQL_SYNTAX.UNSUPPORTED_VARIABLE_NAME",
  "sqlState" : "42000",
  "messageParameters" : {
    "varName" : "`sys`.`session`.`var1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 48,
    "fragment" : "DECLARE OR REPLACE VARIABLE sys.session.var1 INT"
  } ]
}


-- !query
DECLARE OR REPLACE VARIABLE var1 INT
-- !query analysis
CreateVariableCommand system.session.var1, INT, null, true


-- !query
SELECT var
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`var`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 10,
    "fragment" : "var"
  } ]
}


-- !query
SELECT ses.var1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`ses`.`var1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 15,
    "fragment" : "ses.var1"
  } ]
}


-- !query
SELECT b.sesson.var1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`b`.`sesson`.`var1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 20,
    "fragment" : "b.sesson.var1"
  } ]
}


-- !query
SELECT builtn.session.var1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`builtn`.`session`.`var1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 26,
    "fragment" : "builtn.session.var1"
  } ]
}


-- !query
SET VARIABLE ses.var1 = 1
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNRESOLVED_VARIABLE",
  "sqlState" : "42883",
  "messageParameters" : {
    "searchPath" : "[`SYSTEM`.`SESSION`]",
    "variableName" : "`var1`"
  }
}


-- !query
SET VARIABLE builtn.session.var1 = 1
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNRESOLVED_VARIABLE",
  "sqlState" : "42883",
  "messageParameters" : {
    "searchPath" : "[`SYSTEM`.`SESSION`]",
    "variableName" : "`var1`"
  }
}


-- !query
SET VARIABLE title = 'Test DEFAULT on create - success'
-- !query analysis
SetVariable [session.title(title, Test qualifiers - fail, false)]
+- SubqueryAlias T
   +- Project [title#x AS session.title#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [Test DEFAULT on create - success AS title#x]
               +- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 1
-- !query analysis
CreateVariableCommand system.session.var1, INT, 1, true


-- !query
SELECT 1 AS Expected, var1 AS result
-- !query analysis
Project [1 AS Expected#x, session.var1(var1, 1, true) AS result#x]
+- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1 DOUBLE DEFAULT 1 + RAND(5)
-- !query analysis
CreateVariableCommand system.session.var1, DOUBLE, 1 + RAND(5), true


-- !query
SELECT true AS Expected, var1 >= 1 AS result
-- !query analysis
Project [true AS Expected#x, (session.var1(var1, 1.023906964275029, true) >= cast(1 as double)) AS result#x]
+- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1 DEFAULT 'Hello'
-- !query analysis
CreateVariableCommand system.session.var1, 'Hello', true


-- !query
SELECT 'STRING, Hello' AS Expected, typeof(var1) AS type, var1 AS result
-- !query analysis
Project [STRING, Hello AS Expected#x, typeof(session.var1(var1, Hello, true)) AS type#x, session.var1(var1, Hello, true) AS result#x]
+- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1 DEFAULT NULL
-- !query analysis
CreateVariableCommand system.session.var1, NULL, true


-- !query
SELECT 'VOID, NULL' AS Expected, typeof(var1) AS type, var1 AS result
-- !query analysis
Project [VOID, NULL AS Expected#x, typeof(session.var1(var1, null, true)) AS type#x, session.var1(var1, null, true) AS result#x]
+- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE INT DEFAULT 5.0
-- !query analysis
CreateVariableCommand system.session.int, 5.0, true


-- !query
SELECT 'INT, 5' AS Expected, typeof(var1) AS type, var1 AS result
-- !query analysis
Project [INT, 5 AS Expected#x, typeof(session.var1(var1, null, true)) AS type#x, session.var1(var1, null, true) AS result#x]
+- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1 MAP<string, double> DEFAULT MAP('Hello', 5.1, 'World', -7.1E10)
-- !query analysis
CreateVariableCommand system.session.var1, MAP<string, double>, MAP('Hello', 5.1, 'World', -7.1E10), true


-- !query
SELECT 'MAP<string, double>, [Hello -> 5.1, World -> -7E10]' AS Expected, typeof(var1) AS type, var1 AS result
-- !query analysis
Project [MAP<string, double>, [Hello -> 5.1, World -> -7E10] AS Expected#x, typeof(session.var1(var1, map(keys: [Hello,World], values: [5.1,-7.1E10]), true)) AS type#x, session.var1(var1, map(keys: [Hello,World], values: [5.1,-7.1E10]), true) AS result#x]
+- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT NULL
-- !query analysis
CreateVariableCommand system.session.var1, INT, NULL, true


-- !query
SELECT 'NULL' AS Expected, var1 AS result
-- !query analysis
Project [NULL AS Expected#x, session.var1(var1, null, true) AS result#x]
+- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT CURRENT_USER
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`CURRENT_USER`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 12,
    "fragment" : "CURRENT_USER"
  } ]
}


-- !query
SELECT 'true' AS Expected, length(var1) > 0 AS result
-- !query analysis
Project [true AS Expected#x, (length(cast(session.var1(var1, null, true) as string)) > 0) AS result#x]
+- OneRowRelation


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
DropVariableCommand system.session.var1, false


-- !query
SET VARIABLE title = 'Test DEFAULT on create - failures'
-- !query analysis
SetVariable [session.title(title, Test DEFAULT on create - success, false)]
+- SubqueryAlias T
   +- Project [title#x AS session.title#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [Test DEFAULT on create - failures AS title#x]
               +- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT (SELECT c1 FROM VALUES(1) AS T(c1))
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_DEFAULT_VALUE.SUBQUERY_EXPRESSION",
  "messageParameters" : {
    "colName" : "``",
    "defaultValue" : "(SELECT c1 FROM VALUES(1) AS T(c1))",
    "statement" : "CREATE VARIABLE"
  }
}


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 'hello'
-- !query analysis
org.apache.spark.SparkNumberFormatException
{
  "errorClass" : "CAST_INVALID_INPUT",
  "sqlState" : "22018",
  "messageParameters" : {
    "ansiConfig" : "\"spark.sql.ansi.enabled\"",
    "expression" : "'hello'",
    "sourceType" : "\"STRING\"",
    "targetType" : "\"INT\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 52,
    "fragment" : "DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 'hello'"
  } ]
}


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 1 / 0
-- !query analysis
org.apache.spark.SparkArithmeticException
{
  "errorClass" : "DIVIDE_BY_ZERO",
  "sqlState" : "22012",
  "messageParameters" : {
    "config" : "\"spark.sql.ansi.enabled\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 5,
    "fragment" : "1 / 0"
  } ]
}


-- !query
DECLARE OR REPLACE VARIABLE var1 SMALLINT DEFAULT 100000
-- !query analysis
org.apache.spark.SparkArithmeticException
{
  "errorClass" : "CAST_OVERFLOW",
  "sqlState" : "22003",
  "messageParameters" : {
    "ansiConfig" : "\"spark.sql.ansi.enabled\"",
    "sourceType" : "\"INT\"",
    "targetType" : "\"SMALLINT\"",
    "value" : "100000"
  }
}


-- !query
SET VARIABLE title = 'SET VARIABLE - single target'
-- !query analysis
SetVariable [session.title(title, Test DEFAULT on create - failures, false)]
+- SubqueryAlias T
   +- Project [title#x AS session.title#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [SET VARIABLE - single target AS title#x]
               +- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 5
-- !query analysis
CreateVariableCommand system.session.var1, INT, 5, true


-- !query
SET VARIABLE var1 = 7
-- !query analysis
SetVariable [session.var1(var1, 5, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [7 AS var1#x]
               +- OneRowRelation


-- !query
SELECT var1
-- !query analysis
Project [session.var1(var1, 7, true) AS var1#x]
+- OneRowRelation


-- !query
SET VAR var1 = 8
-- !query analysis
SetVariable [session.var1(var1, 7, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [8 AS var1#x]
               +- OneRowRelation


-- !query
SELECT var1
-- !query analysis
Project [session.var1(var1, 8, true) AS var1#x]
+- OneRowRelation


-- !query
SET VARIABLE var1 = (SELECT c1 FROM VALUES(1) AS T(c1))
-- !query analysis
SetVariable [session.var1(var1, 8, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [scalar-subquery#x [] AS var1#x]
               :  +- Project [c1#x]
               :     +- SubqueryAlias T
               :        +- LocalRelation [c1#x]
               +- OneRowRelation


-- !query
SELECT var1
-- !query analysis
Project [session.var1(var1, 1, true) AS var1#x]
+- OneRowRelation


-- !query
SET VARIABLE var1 = (SELECT c1 FROM VALUES(1) AS T(c1) WHERE 1=0)
-- !query analysis
SetVariable [session.var1(var1, 1, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [scalar-subquery#x [] AS var1#x]
               :  +- Project [c1#x]
               :     +- Filter (1 = 0)
               :        +- SubqueryAlias T
               :           +- LocalRelation [c1#x]
               +- OneRowRelation


-- !query
SELECT var1 AS `null`
-- !query analysis
Project [session.var1(var1, null, true) AS null#x]
+- OneRowRelation


-- !query
SET VARIABLE var1 = (SELECT c1 FROM VALUES(1.0) AS T(c1))
-- !query analysis
SetVariable [session.var1(var1, null, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [cast(var1#x as int) AS var1#x]
               +- Project [scalar-subquery#x [] AS var1#x]
                  :  +- Project [c1#x]
                  :     +- SubqueryAlias T
                  :        +- LocalRelation [c1#x]
                  +- OneRowRelation


-- !query
SELECT var1
-- !query analysis
Project [session.var1(var1, 1, true) AS var1#x]
+- OneRowRelation


-- !query
SET VARIABLE var1 = (SELECT c1 FROM VALUES(1.0E10) AS T(c1))
-- !query analysis
org.apache.spark.SparkArithmeticException
{
  "errorClass" : "CAST_OVERFLOW_IN_TABLE_INSERT",
  "sqlState" : "22003",
  "messageParameters" : {
    "columnName" : "`var1`",
    "sourceType" : "\"DOUBLE\"",
    "targetType" : "\"INT\""
  }
}


-- !query
SELECT var1
-- !query analysis
Project [session.var1(var1, 1, true) AS var1#x]
+- OneRowRelation


-- !query
SET VARIABLE var1 = (SELECT c1 FROM VALUES(1), (2) AS T(c1))
-- !query analysis
org.apache.spark.SparkException
{
  "errorClass" : "SCALAR_SUBQUERY_TOO_MANY_ROWS",
  "sqlState" : "21000",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 21,
    "stopIndex" : 60,
    "fragment" : "(SELECT c1 FROM VALUES(1), (2) AS T(c1))"
  } ]
}


-- !query
SET VARIABLE var1 = (SELECT c1, c1 FROM VALUES(1), (2) AS T(c1))
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INVALID_SUBQUERY_EXPRESSION.SCALAR_SUBQUERY_RETURN_MORE_THAN_ONE_OUTPUT_COLUMN",
  "sqlState" : "42823",
  "messageParameters" : {
    "number" : "2"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 21,
    "stopIndex" : 64,
    "fragment" : "(SELECT c1, c1 FROM VALUES(1), (2) AS T(c1))"
  } ]
}


-- !query
SET VARIABLE var1 = (SELECT c1 FROM VALUES('hello') AS T(c1))
-- !query analysis
org.apache.spark.SparkNumberFormatException
{
  "errorClass" : "CAST_INVALID_INPUT",
  "sqlState" : "22018",
  "messageParameters" : {
    "ansiConfig" : "\"spark.sql.ansi.enabled\"",
    "expression" : "'hello'",
    "sourceType" : "\"STRING\"",
    "targetType" : "\"INT\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 61,
    "fragment" : "SET VARIABLE var1 = (SELECT c1 FROM VALUES('hello') AS T(c1))"
  } ]
}


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 5
-- !query analysis
CreateVariableCommand system.session.var1, INT, 5, true


-- !query
SET VARIABLE var1 = var1 + 1
-- !query analysis
SetVariable [session.var1(var1, 5, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [(session.var1(var1, 5, true) + 1) AS var1#x]
               +- OneRowRelation


-- !query
SELECT var1
-- !query analysis
Project [session.var1(var1, 6, true) AS var1#x]
+- OneRowRelation


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
DropVariableCommand system.session.var1, false


-- !query
SET VARIABLE title = 'SET VARIABLE - comma separated target'
-- !query analysis
SetVariable [session.title(title, SET VARIABLE - single target, false)]
+- SubqueryAlias T
   +- Project [title#x AS session.title#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [SET VARIABLE - comma separated target AS title#x]
               +- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 5
-- !query analysis
CreateVariableCommand system.session.var1, INT, 5, true


-- !query
DECLARE OR REPLACE VARIABLE var2 STRING DEFAULT 'hello'
-- !query analysis
CreateVariableCommand system.session.var2, STRING, 'hello', true


-- !query
DECLARE OR REPLACE VARIABLE var3 DOUBLE DEFAULT 2
-- !query analysis
CreateVariableCommand system.session.var3, DOUBLE, 2, true


-- !query
SET VARIABLE var1 = 6, var2 = 'world', var3 = pi()
-- !query analysis
SetVariable [session.var1(var1, 5, false), session.var2(var2, hello, false), session.var3(var3, 2.0, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x, var2#x AS session.var2#x, var3#x AS session.var3#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [6 AS var1#x, world AS var2#x, PI() AS var3#x]
               +- OneRowRelation


-- !query
SELECT var1 AS `6`, var2 AS `world` , var3 as `3.14...`
-- !query analysis
Project [session.var1(var1, 6, true) AS 6#x, session.var2(var2, world, true) AS world#x, session.var3(var3, 3.141592653589793, true) AS 3.14...#x]
+- OneRowRelation


-- !query
SET VAR var1 = 7, var2 = 'universe', var3 = -1
-- !query analysis
SetVariable [session.var1(var1, 6, false), session.var2(var2, world, false), session.var3(var3, 3.141592653589793, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x, var2#x AS session.var2#x, var3#x AS session.var3#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [var1#x, var2#x, cast(var3#x as double) AS var3#x]
               +- Project [7 AS var1#x, universe AS var2#x, -1 AS var3#x]
                  +- OneRowRelation


-- !query
SELECT var1 AS `7`, var2 AS `universe` , var3 as `-1`
-- !query analysis
Project [session.var1(var1, 7, true) AS 7#x, session.var2(var2, universe, true) AS universe#x, session.var3(var3, -1.0, true) AS -1#x]
+- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 5
-- !query analysis
CreateVariableCommand system.session.var1, INT, 5, true


-- !query
DECLARE OR REPLACE VARIABLE var2 STRING DEFAULT 'hello'
-- !query analysis
CreateVariableCommand system.session.var2, STRING, 'hello', true


-- !query
DECLARE OR REPLACE VARIABLE var3 DOUBLE DEFAULT 2
-- !query analysis
CreateVariableCommand system.session.var3, DOUBLE, 2, true


-- !query
SET VARIABLE var1 = var3, var2 = ascii(var1), var3 = var1
-- !query analysis
SetVariable [session.var1(var1, 5, false), session.var2(var2, hello, false), session.var3(var3, 2.0, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x, var2#x AS session.var2#x, var3#x AS session.var3#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [cast(var3#x as int) AS var1#x, cast(var2#x as string) AS var2#x, cast(var1#x as double) AS var3#x]
               +- Project [session.var3(var3, 2.0, true) AS var3#x, ascii(cast(session.var1(var1, 5, true) as string)) AS var2#x, session.var1(var1, 5, true) AS var1#x]
                  +- OneRowRelation


-- !query
SELECT var1 AS `2`, var2 AS `104`, var3 AS `5`
-- !query analysis
Project [session.var1(var1, 2, true) AS 2#x, session.var2(var2, 53, true) AS 104#x, session.var3(var3, 5.0, true) AS 5#x]
+- OneRowRelation


-- !query
SET VARIABLE var1 = var3, var2 = INTERVAL'5' HOUR, var3 = var1
-- !query analysis
SetVariable [session.var1(var1, 2, false), session.var2(var2, 53, false), session.var3(var3, 5.0, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x, var2#x AS session.var2#x, var3#x AS session.var3#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [cast(var3#x as int) AS var1#x, cast(var2#x as string) AS var2#x, cast(var1#x as double) AS var3#x]
               +- Project [session.var3(var3, 5.0, true) AS var3#x, INTERVAL '05' HOUR AS var2#x, session.var1(var1, 2, true) AS var1#x]
                  +- OneRowRelation


-- !query
SET VARIABLE var1 = 1, var2 = 0, vAr1 = 1
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DUPLICATE_ASSIGNMENTS",
  "sqlState" : "42701",
  "messageParameters" : {
    "nameList" : "`session`.`var1`"
  }
}


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
DropVariableCommand system.session.var1, false


-- !query
DROP TEMPORARY VARIABLE var2
-- !query analysis
DropVariableCommand system.session.var2, false


-- !query
DROP TEMPORARY VARIABLE var3
-- !query analysis
DropVariableCommand system.session.var3, false


-- !query
SET VARIABLE title = 'SET VARIABLE - row assignment'
-- !query analysis
SetVariable [session.title(title, SET VARIABLE - comma separated target, false)]
+- SubqueryAlias T
   +- Project [title#x AS session.title#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [SET VARIABLE - row assignment AS title#x]
               +- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 5
-- !query analysis
CreateVariableCommand system.session.var1, INT, 5, true


-- !query
DECLARE OR REPLACE VARIABLE var2 STRING DEFAULT 'hello'
-- !query analysis
CreateVariableCommand system.session.var2, STRING, 'hello', true


-- !query
DECLARE OR REPLACE VARIABLE var3 DOUBLE DEFAULT 2
-- !query analysis
CreateVariableCommand system.session.var3, DOUBLE, 2, true


-- !query
SET VARIABLE (var1) = (SELECT c1 FROM VALUES(1) AS T(c1))
-- !query analysis
SetVariable [session.var1(var1, 5, false)]
+- SubqueryAlias T
   +- Project [c1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [c1#x]
               +- SubqueryAlias T
                  +- LocalRelation [c1#x]


-- !query
SELECT var1
-- !query analysis
Project [session.var1(var1, 1, true) AS var1#x]
+- OneRowRelation


-- !query
SET VAR (var1) = (SELECT c1 FROM VALUES(2) AS T(c1))
-- !query analysis
SetVariable [session.var1(var1, 1, false)]
+- SubqueryAlias T
   +- Project [c1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [c1#x]
               +- SubqueryAlias T
                  +- LocalRelation [c1#x]


-- !query
SELECT var1
-- !query analysis
Project [session.var1(var1, 2, true) AS var1#x]
+- OneRowRelation


-- !query
SET VARIABLE (var1, var2) = (SELECT c1, c2 FROM VALUES(10, 11) AS T(c1, c2))
-- !query analysis
SetVariable [session.var1(var1, 2, false), session.var2(var2, hello, false)]
+- SubqueryAlias T
   +- Project [c1#x AS session.var1#x, var2#x AS session.var2#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [c1#x, cast(c2#x as string) AS var2#x]
               +- Project [c1#x, c2#x]
                  +- SubqueryAlias T
                     +- LocalRelation [c1#x, c2#x]


-- !query
SELECT var1 AS `10`, var2 AS `11`
-- !query analysis
Project [session.var1(var1, 10, true) AS 10#x, session.var2(var2, 11, true) AS 11#x]
+- OneRowRelation


-- !query
SET VARIABLE (var1, var2, var3) = (SELECT c1, c2, c3 FROM VALUES(100, 110, 120) AS T(c1, c2, c3))
-- !query analysis
SetVariable [session.var1(var1, 10, false), session.var2(var2, 11, false), session.var3(var3, 2.0, false)]
+- SubqueryAlias T
   +- Project [c1#x AS session.var1#x, var2#x AS session.var2#x, var3#x AS session.var3#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [c1#x, cast(c2#x as string) AS var2#x, cast(c3#x as double) AS var3#x]
               +- Project [c1#x, c2#x, c3#x]
                  +- SubqueryAlias T
                     +- LocalRelation [c1#x, c2#x, c3#x]


-- !query
SELECT var1 AS `100`, var2 AS `110`, var3 AS `120`
-- !query analysis
Project [session.var1(var1, 100, true) AS 100#x, session.var2(var2, 110, true) AS 110#x, session.var3(var3, 120.0, true) AS 120#x]
+- OneRowRelation


-- !query
SET VARIABLE (var1, var2, var3) = (SELECT c1, c2, c3 FROM VALUES(100, 110, 120) AS T(c1, c2, c3) WHERE 1 = 0)
-- !query analysis
SetVariable [session.var1(var1, 100, false), session.var2(var2, 110, false), session.var3(var3, 120.0, false)]
+- SubqueryAlias T
   +- Project [c1#x AS session.var1#x, var2#x AS session.var2#x, var3#x AS session.var3#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [c1#x, cast(c2#x as string) AS var2#x, cast(c3#x as double) AS var3#x]
               +- Project [c1#x, c2#x, c3#x]
                  +- Filter (1 = 0)
                     +- SubqueryAlias T
                        +- LocalRelation [c1#x, c2#x, c3#x]


-- !query
SELECT var1 AS `NULL`, var2 AS `NULL`, var3 AS `NULL`
-- !query analysis
Project [session.var1(var1, null, true) AS NULL#x, session.var2(var2, null, true) AS NULL#x, session.var3(var3, null, true) AS NULL#x]
+- OneRowRelation


-- !query
SET VARIABLE () = (SELECT 1)
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "INVALID_SET_SYNTAX",
  "sqlState" : "42000",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 28,
    "fragment" : "SET VARIABLE () = (SELECT 1)"
  } ]
}


-- !query
SET VARIABLE (var1, var2, var3) = (SELECT c1, c2, c3 FROM VALUES(100, 110, 120), (-100, -110, -120) AS T(c1, c2, c3))
-- !query analysis
org.apache.spark.SparkException
{
  "errorClass" : "ROW_SUBQUERY_TOO_MANY_ROWS",
  "sqlState" : "21000"
}


-- !query
SET VARIABLE (var1, var2, var3) = (SELECT c1, c2 FROM VALUES(100, 110, 120) AS T(c1, c2, c3))
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "ASSIGNMENT_ARITY_MISMATCH",
  "sqlState" : "42802",
  "messageParameters" : {
    "numExpr" : "2",
    "numTarget" : "3"
  }
}


-- !query
SET VARIABLE (var1, var2, var3) = (SELECT c1, c2, c3, c1 FROM VALUES(100, 110, 120) AS T(c1, c2, c3))
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "ASSIGNMENT_ARITY_MISMATCH",
  "sqlState" : "42802",
  "messageParameters" : {
    "numExpr" : "4",
    "numTarget" : "3"
  }
}


-- !query
SET VARIABLE (var1, var2, var1) = (SELECT c1, c2, c3, c1 FROM VALUES(100, 110, 120) AS T(c1, c2, c3))
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DUPLICATE_ASSIGNMENTS",
  "sqlState" : "42701",
  "messageParameters" : {
    "nameList" : "`session`.`var1`"
  }
}


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
DropVariableCommand system.session.var1, false


-- !query
DROP TEMPORARY VARIABLE var2
-- !query analysis
DropVariableCommand system.session.var2, false


-- !query
DROP TEMPORARY VARIABLE var3
-- !query analysis
DropVariableCommand system.session.var3, false


-- !query
SET VARIABLE title = 'DEFAULT expression usage'
-- !query analysis
SetVariable [session.title(title, SET VARIABLE - row assignment, false)]
+- SubqueryAlias T
   +- Project [title#x AS session.title#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [DEFAULT expression usage AS title#x]
               +- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1 STRING DEFAULT 'default1'
-- !query analysis
CreateVariableCommand system.session.var1, STRING, 'default1', true


-- !query
DECLARE OR REPLACE VARIABLE var2 STRING DEFAULT 'default2'
-- !query analysis
CreateVariableCommand system.session.var2, STRING, 'default2', true


-- !query
DECLARE OR REPLACE VARIABLE var3 STRING DEFAULT 'default3'
-- !query analysis
CreateVariableCommand system.session.var3, STRING, 'default3', true


-- !query
SET VARIABLE var1 = 'hello'
-- !query analysis
SetVariable [session.var1(var1, default1, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [hello AS var1#x]
               +- OneRowRelation


-- !query
SET VARIABLE var1 = DEFAULT
-- !query analysis
SetVariable [session.var1(var1, hello, false)]
+- SubqueryAlias T
   +- Project [DEFAULT#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [default1 AS DEFAULT#x]
               +- OneRowRelation


-- !query
SELECT var1 AS `default`
-- !query analysis
Project [session.var1(var1, default1, true) AS default#x]
+- OneRowRelation


-- !query
SET VARIABLE var1 = 'hello1'
-- !query analysis
SetVariable [session.var1(var1, default1, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [hello1 AS var1#x]
               +- OneRowRelation


-- !query
SET VARIABLE var1 = 'hello2'
-- !query analysis
SetVariable [session.var1(var1, hello1, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [hello2 AS var1#x]
               +- OneRowRelation


-- !query
SET VARIABLE var1 = 'hello3'
-- !query analysis
SetVariable [session.var1(var1, hello2, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [hello3 AS var1#x]
               +- OneRowRelation


-- !query
SET VARIABLE var1 = DEFAULT, var2 = DEFAULT, var3 = DEFAULT
-- !query analysis
SetVariable [session.var1(var1, hello3, false), session.var2(var2, default2, false), session.var3(var3, default3, false)]
+- SubqueryAlias T
   +- Project [DEFAULT#x AS session.var1#x, DEFAULT#x AS session.var2#x, DEFAULT#x AS session.var3#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [default1 AS DEFAULT#x, default2 AS DEFAULT#x, default3 AS DEFAULT#x]
               +- OneRowRelation


-- !query
SELECT var1 AS `default1`, var2 AS `default2`, var3 AS `default3`
-- !query analysis
Project [session.var1(var1, default1, true) AS default1#x, session.var2(var2, default2, true) AS default2#x, session.var3(var3, default3, true) AS default3#x]
+- OneRowRelation


-- !query
SET VARIABLE var1 = 'hello'
-- !query analysis
SetVariable [session.var1(var1, default1, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [hello AS var1#x]
               +- OneRowRelation


-- !query
SET VARIABLE (var1) = (SELECT DEFAULT FROM VALUES(1) AS T(c1))
-- !query analysis
SetVariable [session.var1(var1, hello, false)]
+- SubqueryAlias T
   +- Project [DEFAULT#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [default1 AS DEFAULT#x]
               +- SubqueryAlias T
                  +- LocalRelation [c1#x]


-- !query
SELECT var1 AS `default`
-- !query analysis
Project [session.var1(var1, default1, true) AS default#x]
+- OneRowRelation


-- !query
SET VARIABLE var1 = 'hello'
-- !query analysis
SetVariable [session.var1(var1, default1, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [hello AS var1#x]
               +- OneRowRelation


-- !query
SET VARIABLE (var1) = (SELECT DEFAULT FROM VALUES('world') AS T(default))
-- !query analysis
SetVariable [session.var1(var1, hello, false)]
+- SubqueryAlias T
   +- Project [DEFAULT#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [DEFAULT#x]
               +- SubqueryAlias T
                  +- LocalRelation [default#x]


-- !query
SELECT var1 AS `world`
-- !query analysis
Project [session.var1(var1, world, true) AS world#x]
+- OneRowRelation


-- !query
SET VARIABLE var1 = 'hello'
-- !query analysis
SetVariable [session.var1(var1, world, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [hello AS var1#x]
               +- OneRowRelation


-- !query
SET VARIABLE (var1) = (SELECT DEFAULT FROM VALUES(1) AS T(c1) LIMIT 1)
-- !query analysis
SetVariable [session.var1(var1, hello, false)]
+- SubqueryAlias T
   +- Project [DEFAULT#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- GlobalLimit 1
               +- LocalLimit 1
                  +- Project [default1 AS DEFAULT#x]
                     +- SubqueryAlias T
                        +- LocalRelation [c1#x]


-- !query
SELECT var1 AS `default`
-- !query analysis
Project [session.var1(var1, default1, true) AS default#x]
+- OneRowRelation


-- !query
SET VARIABLE var1 = 'hello'
-- !query analysis
SetVariable [session.var1(var1, default1, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [hello AS var1#x]
               +- OneRowRelation


-- !query
SET VARIABLE (var1) = (SELECT DEFAULT FROM VALUES(1),(2),(3) AS T(c1) LIMIT 1 OFFSET 1)
-- !query analysis
SetVariable [session.var1(var1, hello, false)]
+- SubqueryAlias T
   +- Project [DEFAULT#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- GlobalLimit 1
               +- LocalLimit 1
                  +- Offset 1
                     +- Project [default1 AS DEFAULT#x]
                        +- SubqueryAlias T
                           +- LocalRelation [c1#x]


-- !query
SELECT var1 AS `default`
-- !query analysis
Project [session.var1(var1, default1, true) AS default#x]
+- OneRowRelation


-- !query
SET VARIABLE var1 = 'hello'
-- !query analysis
SetVariable [session.var1(var1, default1, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [hello AS var1#x]
               +- OneRowRelation


-- !query
SET VARIABLE (var1) = (SELECT DEFAULT FROM VALUES(1),(2),(3) AS T(c1) OFFSET 1)
-- !query analysis
org.apache.spark.SparkException
{
  "errorClass" : "ROW_SUBQUERY_TOO_MANY_ROWS",
  "sqlState" : "21000"
}


-- !query
SELECT var1 AS `default`
-- !query analysis
Project [session.var1(var1, hello, true) AS default#x]
+- OneRowRelation


-- !query
SET VARIABLE var1 = 'hello'
-- !query analysis
SetVariable [session.var1(var1, hello, false)]
+- SubqueryAlias T
   +- Project [var1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [hello AS var1#x]
               +- OneRowRelation


-- !query
SET VARIABLE (var1) = (WITH v1(c1) AS (VALUES(1) AS T(c1)) SELECT DEFAULT FROM VALUES(1),(2),(3) AS T(c1))
-- !query analysis
org.apache.spark.SparkException
{
  "errorClass" : "ROW_SUBQUERY_TOO_MANY_ROWS",
  "sqlState" : "21000"
}


-- !query
SELECT var1 AS `default`
-- !query analysis
Project [session.var1(var1, hello, true) AS default#x]
+- OneRowRelation


-- !query
SET VARIABLE var1 = 'Hello' || DEFAULT
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DEFAULT_PLACEMENT_INVALID",
  "sqlState" : "42608"
}


-- !query
SET VARIABLE (var1) = (VALUES(DEFAULT))
-- !query analysis
SetVariable [session.var1(var1, hello, false)]
+- SubqueryAlias T
   +- Project [col1#x AS session.var1#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- LocalRelation [col1#x]


-- !query
SET VARIABLE (var1) = (WITH v1(c1) AS (VALUES(1) AS T(c1)) SELECT DEFAULT + 1 FROM VALUES(1),(2),(3) AS T(c1))
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DEFAULT_PLACEMENT_INVALID",
  "sqlState" : "42608"
}


-- !query
SET VARIABLE var1 = session.default
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`session`.`default`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 21,
    "stopIndex" : 35,
    "fragment" : "session.default"
  } ]
}


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
DropVariableCommand system.session.var1, false


-- !query
DROP TEMPORARY VARIABLE var2
-- !query analysis
DropVariableCommand system.session.var2, false


-- !query
DROP TEMPORARY VARIABLE var3
-- !query analysis
DropVariableCommand system.session.var3, false


-- !query
SET VARIABLE title = 'SET command'
-- !query analysis
SetVariable [session.title(title, DEFAULT expression usage, false)]
+- SubqueryAlias T
   +- Project [title#x AS session.title#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [SET command AS title#x]
               +- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 1
-- !query analysis
CreateVariableCommand system.session.var1, INT, 1, true


-- !query
SET x.var1 = 5
-- !query analysis
SetCommand (x.var1,Some(5))


-- !query
SET x = 5
-- !query analysis
SetCommand (x,Some(5))


-- !query
SET system.x.var = 5
-- !query analysis
SetCommand (system.x.var,Some(5))


-- !query
SET x.session.var1 = 5
-- !query analysis
SetCommand (x.session.var1,Some(5))


-- !query
SET var1 = 5
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.SET_VARIABLE_USING_SET",
  "sqlState" : "0A000",
  "messageParameters" : {
    "variableName" : "`var1`"
  }
}


-- !query
SET session.var1 = 5
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.SET_VARIABLE_USING_SET",
  "sqlState" : "0A000",
  "messageParameters" : {
    "variableName" : "`var1`"
  }
}


-- !query
SET system.session.var1 = 5
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.SET_VARIABLE_USING_SET",
  "sqlState" : "0A000",
  "messageParameters" : {
    "variableName" : "`var1`"
  }
}


-- !query
SET vAr1 = 5
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.SET_VARIABLE_USING_SET",
  "sqlState" : "0A000",
  "messageParameters" : {
    "variableName" : "`var1`"
  }
}


-- !query
SET seSSion.var1 = 5
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.SET_VARIABLE_USING_SET",
  "sqlState" : "0A000",
  "messageParameters" : {
    "variableName" : "`var1`"
  }
}


-- !query
SET sYStem.session.var1 = 5
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.SET_VARIABLE_USING_SET",
  "sqlState" : "0A000",
  "messageParameters" : {
    "variableName" : "`var1`"
  }
}


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
DropVariableCommand system.session.var1, false


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 1
-- !query analysis
CreateVariableCommand system.session.var1, INT, 1, true


-- !query
SELECT var1 AS `2` FROM VALUES(2) AS T(var1)
-- !query analysis
Project [var1#x AS 2#x]
+- SubqueryAlias T
   +- LocalRelation [var1#x]


-- !query
SELECT c1 AS `2` FROM VALUES(2) AS T(var1), LATERAL(SELECT var1) AS TT(c1)
-- !query analysis
Project [c1#x AS 2#x]
+- LateralJoin lateral-subquery#x [], Inner
   :  +- SubqueryAlias TT
   :     +- Project [var1#x AS c1#x]
   :        +- Project [session.var1(var1, 1, true) AS var1#x]
   :           +- OneRowRelation
   +- SubqueryAlias T
      +- LocalRelation [var1#x]


-- !query
SELECT session.var1 AS `1` FROM VALUES(2) AS T(var1)
-- !query analysis
Project [session.session(session, 1, true) AS 1#x]
+- SubqueryAlias T
   +- LocalRelation [var1#x]


-- !query
SELECT c1 AS `1` FROM VALUES(2) AS T(var1), LATERAL(SELECT session.var1) AS TT(c1)
-- !query analysis
Project [c1#x AS 1#x]
+- LateralJoin lateral-subquery#x [], Inner
   :  +- SubqueryAlias TT
   :     +- Project [var1#x AS c1#x]
   :        +- Project [session.session(session, 1, true) AS var1#x]
   :           +- OneRowRelation
   +- SubqueryAlias T
      +- LocalRelation [var1#x]


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
DropVariableCommand system.session.var1, false


-- !query
SET VARIABLE title = 'variable references -- visibility'
-- !query analysis
SetVariable [session.title(title, SET command, false)]
+- SubqueryAlias T
   +- Project [title#x AS session.title#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [variable references -- visibility AS title#x]
               +- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 1
-- !query analysis
CreateVariableCommand system.session.var1, INT, 1, true


-- !query
VALUES (var1)
-- !query analysis
LocalRelation [col1#x]


-- !query
SELECT var1
-- !query analysis
Project [session.var1(var1, 1, true) AS var1#x]
+- OneRowRelation


-- !query
SELECT sum(var1) FROM VALUES(1)
-- !query analysis
Aggregate [sum(session.var1(var1, 1, true)) AS sum(var1 AS var1)#xL]
+- LocalRelation [col1#x]


-- !query
SELECT var1 + SUM(0) FROM VALUES(1)
-- !query analysis
Aggregate [(cast(session.var1(var1, 1, true) as bigint) + sum(0)) AS (var1 AS var1 + sum(0))#xL]
+- LocalRelation [col1#x]


-- !query
SELECT substr('12345', var1, 1)
-- !query analysis
Project [substr(12345, session.var1(var1, 1, true), 1) AS substr(12345, var1 AS var1, 1)#x]
+- OneRowRelation


-- !query
SELECT 1 FROM VALUES(1, 2) AS T(c1, c2) GROUP BY c1 + var1
-- !query analysis
Aggregate [(c1#x + session.var1(var1, 1, true))], [1 AS 1#x]
+- SubqueryAlias T
   +- LocalRelation [c1#x, c2#x]


-- !query
SELECT c1, sum(c2) FROM VALUES(1, 2) AS T(c1, c2) GROUP BY c1 HAVING sum(c1) != var1
-- !query analysis
Project [c1#x, sum(c2)#xL]
+- Filter NOT (sum(c1#x)#xL = cast(session.var1(var1, 1, true) as bigint))
   +- Aggregate [c1#x], [c1#x, sum(c2#x) AS sum(c2)#xL, sum(c1#x) AS sum(c1#x)#xL]
      +- SubqueryAlias T
         +- LocalRelation [c1#x, c2#x]


-- !query
SELECT 1 FROM VALUES(1) AS T(c1) WHERE c1 IN (var1)
-- !query analysis
Project [1 AS 1#x]
+- Filter c1#x IN (session.var1(var1, 1, true))
   +- SubqueryAlias T
      +- LocalRelation [c1#x]


-- !query
SELECT sum(c1) FILTER (c1 != var1) FROM VALUES(1, 2), (2, 3) AS T(c1, c2)
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'('",
    "hint" : ""
  }
}


-- !query
SELECT array(1, 2, 4)[var1]
-- !query analysis
Project [array(1, 2, 4)[session.var1(var1, 1, true)] AS array(1, 2, 4)[var1 AS var1]#x]
+- OneRowRelation


-- !query
SELECT 1 FROM VALUES(1) AS T(c1) WHERE c1 = var1
-- !query analysis
Project [1 AS 1#x]
+- Filter (c1#x = session.var1(var1, 1, true))
   +- SubqueryAlias T
      +- LocalRelation [c1#x]


-- !query
WITH v1 AS (SELECT var1 AS c1) SELECT c1 AS `1` FROM v1
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias v1
:     +- Project [session.var1(var1, 1, true) AS c1#x]
:        +- OneRowRelation
+- Project [c1#x AS 1#x]
   +- SubqueryAlias v1
      +- CTERelationRef xxxx, true, [c1#x]


-- !query
CREATE OR REPLACE TEMPORARY VIEW v AS SELECT var1 AS c1
-- !query analysis
CreateViewCommand `v`, SELECT var1 AS c1, false, true, LocalTempView, true, [var1]
   +- Project [session.var1(var1, 1, true) AS c1#x]
      +- OneRowRelation


-- !query
SELECT * FROM v
-- !query analysis
Project [c1#x]
+- SubqueryAlias v
   +- View (`v`, [c1#x])
      +- Project [cast(c1#x as int) AS c1#x]
         +- Project [session.var1(var1, 1, true) AS c1#x]
            +- OneRowRelation


-- !query
DROP VIEW v
-- !query analysis
DropTempViewCommand v


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
DropVariableCommand system.session.var1, false


-- !query
SET VARIABLE title = 'variable references -- prohibited'
-- !query analysis
SetVariable [session.title(title, variable references -- visibility, false)]
+- SubqueryAlias T
   +- Project [title#x AS session.title#x]
      +- GlobalLimit 2
         +- LocalLimit 2
            +- Project [variable references -- prohibited AS title#x]
               +- OneRowRelation


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 1
-- !query analysis
CreateVariableCommand system.session.var1, INT, 1, true


-- !query
CREATE OR REPLACE VIEW v AS SELECT var1 AS c1
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_TEMP_OBJ_REFERENCE",
  "messageParameters" : {
    "obj" : "VIEW",
    "objName" : "`spark_catalog`.`default`.`v`",
    "tempObj" : "VARIABLE",
    "tempObjName" : "`var1`"
  }
}


-- !query
DROP VIEW IF EXISTS V
-- !query analysis
DropTableCommand `spark_catalog`.`default`.`V`, true, true, false


-- !query
DROP TEMPORARY VARIABLE var1
-- !query analysis
DropVariableCommand system.session.var1, false
