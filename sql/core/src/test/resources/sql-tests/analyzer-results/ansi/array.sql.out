-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view data as select * from values
  ("one", array(11, 12, 13), array(array(111, 112, 113), array(121, 122, 123))),
  ("two", array(21, 22, 23), array(array(211, 212, 213), array(221, 222, 223)))
  as data(a, b, c)
-- !query analysis
CreateViewCommand `data`, select * from values
  ("one", array(11, 12, 13), array(array(111, 112, 113), array(121, 122, 123))),
  ("two", array(21, 22, 23), array(array(211, 212, 213), array(221, 222, 223)))
  as data(a, b, c), false, false, LocalTempView, true
   +- Project [a#0, b#1, c#2]
      +- SubqueryAlias data
         +- LocalRelation [a#0, b#1, c#2]


-- !query
select * from data
-- !query analysis
Project [a#3, b#4, c#5]
+- SubqueryAlias data
   +- View (`data`, [a#3,b#4,c#5])
      +- Project [cast(a#6 as string) AS a#3, cast(b#7 as array<int>) AS b#4, cast(c#8 as array<array<int>>) AS c#5]
         +- Project [a#6, b#7, c#8]
            +- SubqueryAlias data
               +- LocalRelation [a#6, b#7, c#8]


-- !query
select a, b[0], b[0] + b[1] from data
-- !query analysis
Project [a#12, b#13[0] AS b[0]#18, (b#13[0] + b#13[1]) AS (b[0] + b[1])#19]
+- SubqueryAlias data
   +- View (`data`, [a#12,b#13,c#14])
      +- Project [cast(a#15 as string) AS a#12, cast(b#16 as array<int>) AS b#13, cast(c#17 as array<array<int>>) AS c#14]
         +- Project [a#15, b#16, c#17]
            +- SubqueryAlias data
               +- LocalRelation [a#15, b#16, c#17]


-- !query
select a, c[0][0] + c[0][0 + 1] from data
-- !query analysis
Project [a#23, (c#25[0][0] + c#25[0][(0 + 1)]) AS (c[0][0] + c[0][(0 + 1)])#29]
+- SubqueryAlias data
   +- View (`data`, [a#23,b#24,c#25])
      +- Project [cast(a#26 as string) AS a#23, cast(b#27 as array<int>) AS b#24, cast(c#28 as array<array<int>>) AS c#25]
         +- Project [a#26, b#27, c#28]
            +- SubqueryAlias data
               +- LocalRelation [a#26, b#27, c#28]


-- !query
create temporary view primitive_arrays as select * from values (
  array(true),
  array(2Y, 1Y),
  array(2S, 1S),
  array(2, 1),
  array(2L, 1L),
  array(9223372036854775809, 9223372036854775808),
  array(2.0D, 1.0D),
  array(float(2.0), float(1.0)),
  array(date '2016-03-14', date '2016-03-13'),
  array(timestamp '2016-11-15 20:54:00.000',  timestamp '2016-11-12 20:54:00.000')
) as primitive_arrays(
  boolean_array,
  tinyint_array,
  smallint_array,
  int_array,
  bigint_array,
  decimal_array,
  double_array,
  float_array,
  date_array,
  timestamp_array
)
-- !query analysis
CreateViewCommand `primitive_arrays`, select * from values (
  array(true),
  array(2Y, 1Y),
  array(2S, 1S),
  array(2, 1),
  array(2L, 1L),
  array(9223372036854775809, 9223372036854775808),
  array(2.0D, 1.0D),
  array(float(2.0), float(1.0)),
  array(date '2016-03-14', date '2016-03-13'),
  array(timestamp '2016-11-15 20:54:00.000',  timestamp '2016-11-12 20:54:00.000')
) as primitive_arrays(
  boolean_array,
  tinyint_array,
  smallint_array,
  int_array,
  bigint_array,
  decimal_array,
  double_array,
  float_array,
  date_array,
  timestamp_array
), false, false, LocalTempView, true
   +- Project [boolean_array#32, tinyint_array#33, smallint_array#34, int_array#35, bigint_array#36, decimal_array#37, double_array#38, float_array#39, date_array#40, timestamp_array#41]
      +- SubqueryAlias primitive_arrays
         +- LocalRelation [boolean_array#32, tinyint_array#33, smallint_array#34, int_array#35, bigint_array#36, decimal_array#37, double_array#38, float_array#39, date_array#40, timestamp_array#41]


-- !query
select * from primitive_arrays
-- !query analysis
Project [boolean_array#42, tinyint_array#43, smallint_array#44, int_array#45, bigint_array#46, decimal_array#47, double_array#48, float_array#49, date_array#50, timestamp_array#51]
+- SubqueryAlias primitive_arrays
   +- View (`primitive_arrays`, [boolean_array#42,tinyint_array#43,smallint_array#44,int_array#45,bigint_array#46,decimal_array#47,double_array#48,float_array#49,date_array#50,timestamp_array#51])
      +- Project [cast(boolean_array#52 as array<boolean>) AS boolean_array#42, cast(tinyint_array#53 as array<tinyint>) AS tinyint_array#43, cast(smallint_array#54 as array<smallint>) AS smallint_array#44, cast(int_array#55 as array<int>) AS int_array#45, cast(bigint_array#56 as array<bigint>) AS bigint_array#46, cast(decimal_array#57 as array<decimal(19,0)>) AS decimal_array#47, cast(double_array#58 as array<double>) AS double_array#48, cast(float_array#59 as array<float>) AS float_array#49, cast(date_array#60 as array<date>) AS date_array#50, cast(timestamp_array#61 as array<timestamp>) AS timestamp_array#51]
         +- Project [boolean_array#52, tinyint_array#53, smallint_array#54, int_array#55, bigint_array#56, decimal_array#57, double_array#58, float_array#59, date_array#60, timestamp_array#61]
            +- SubqueryAlias primitive_arrays
               +- LocalRelation [boolean_array#52, tinyint_array#53, smallint_array#54, int_array#55, bigint_array#56, decimal_array#57, double_array#58, float_array#59, date_array#60, timestamp_array#61]


-- !query
select
  array_contains(boolean_array, true), array_contains(boolean_array, false),
  array_contains(tinyint_array, 2Y), array_contains(tinyint_array, 0Y),
  array_contains(smallint_array, 2S), array_contains(smallint_array, 0S),
  array_contains(int_array, 2), array_contains(int_array, 0),
  array_contains(bigint_array, 2L), array_contains(bigint_array, 0L),
  array_contains(decimal_array, 9223372036854775809), array_contains(decimal_array, 1),
  array_contains(double_array, 2.0D), array_contains(double_array, 0.0D),
  array_contains(float_array, float(2.0)), array_contains(float_array, float(0.0)),
  array_contains(date_array, date '2016-03-14'), array_contains(date_array, date '2016-01-01'),
  array_contains(timestamp_array, timestamp '2016-11-15 20:54:00.000'), array_contains(timestamp_array, timestamp '2016-01-01 20:54:00.000')
from primitive_arrays
-- !query analysis
Project [array_contains(boolean_array#72, true) AS array_contains(boolean_array, true)#92, array_contains(boolean_array#72, false) AS array_contains(boolean_array, false)#93, array_contains(tinyint_array#73, 2) AS array_contains(tinyint_array, 2)#94, array_contains(tinyint_array#73, 0) AS array_contains(tinyint_array, 0)#95, array_contains(smallint_array#74, 2) AS array_contains(smallint_array, 2)#96, array_contains(smallint_array#74, 0) AS array_contains(smallint_array, 0)#97, array_contains(int_array#75, 2) AS array_contains(int_array, 2)#98, array_contains(int_array#75, 0) AS array_contains(int_array, 0)#99, array_contains(bigint_array#76, 2) AS array_contains(bigint_array, 2)#100, array_contains(bigint_array#76, 0) AS array_contains(bigint_array, 0)#101, array_contains(decimal_array#77, 9223372036854775809) AS array_contains(decimal_array, 9223372036854775809)#102, array_contains(decimal_array#77, cast(1 as decimal(19,0))) AS array_contains(decimal_array, 1)#109, array_contains(double_array#78, 2.0) AS array_contains(double_array, 2.0)#103, array_contains(double_array#78, 0.0) AS array_contains(double_array, 0.0)#104, array_contains(float_array#79, cast(2.0 as float)) AS array_contains(float_array, 2.0)#110, array_contains(float_array#79, cast(0.0 as float)) AS array_contains(float_array, 0.0)#111, array_contains(date_array#80, 2016-03-14) AS array_contains(date_array, DATE '2016-03-14')#105, array_contains(date_array#80, 2016-01-01) AS array_contains(date_array, DATE '2016-01-01')#106, array_contains(timestamp_array#81, 2016-11-15 20:54:00) AS array_contains(timestamp_array, TIMESTAMP '2016-11-15 20:54:00')#107, array_contains(timestamp_array#81, 2016-01-01 20:54:00) AS array_contains(timestamp_array, TIMESTAMP '2016-01-01 20:54:00')#108]
+- SubqueryAlias primitive_arrays
   +- View (`primitive_arrays`, [boolean_array#72,tinyint_array#73,smallint_array#74,int_array#75,bigint_array#76,decimal_array#77,double_array#78,float_array#79,date_array#80,timestamp_array#81])
      +- Project [cast(boolean_array#82 as array<boolean>) AS boolean_array#72, cast(tinyint_array#83 as array<tinyint>) AS tinyint_array#73, cast(smallint_array#84 as array<smallint>) AS smallint_array#74, cast(int_array#85 as array<int>) AS int_array#75, cast(bigint_array#86 as array<bigint>) AS bigint_array#76, cast(decimal_array#87 as array<decimal(19,0)>) AS decimal_array#77, cast(double_array#88 as array<double>) AS double_array#78, cast(float_array#89 as array<float>) AS float_array#79, cast(date_array#90 as array<date>) AS date_array#80, cast(timestamp_array#91 as array<timestamp>) AS timestamp_array#81]
         +- Project [boolean_array#82, tinyint_array#83, smallint_array#84, int_array#85, bigint_array#86, decimal_array#87, double_array#88, float_array#89, date_array#90, timestamp_array#91]
            +- SubqueryAlias primitive_arrays
               +- LocalRelation [boolean_array#82, tinyint_array#83, smallint_array#84, int_array#85, bigint_array#86, decimal_array#87, double_array#88, float_array#89, date_array#90, timestamp_array#91]


-- !query
select array_contains(b, 11), array_contains(c, array(111, 112, 113)) from data
-- !query analysis
Project [array_contains(b#133, 11) AS array_contains(b, 11)#138, array_contains(c#134, array(111, 112, 113)) AS array_contains(c, array(111, 112, 113))#139]
+- SubqueryAlias data
   +- View (`data`, [a#132,b#133,c#134])
      +- Project [cast(a#135 as string) AS a#132, cast(b#136 as array<int>) AS b#133, cast(c#137 as array<array<int>>) AS c#134]
         +- Project [a#135, b#136, c#137]
            +- SubqueryAlias data
               +- LocalRelation [a#135, b#136, c#137]


-- !query
select
  sort_array(boolean_array),
  sort_array(tinyint_array),
  sort_array(smallint_array),
  sort_array(int_array),
  sort_array(bigint_array),
  sort_array(decimal_array),
  sort_array(double_array),
  sort_array(float_array),
  sort_array(date_array),
  sort_array(timestamp_array)
from primitive_arrays
-- !query analysis
Project [sort_array(boolean_array#142, true) AS sort_array(boolean_array, true)#162, sort_array(tinyint_array#143, true) AS sort_array(tinyint_array, true)#163, sort_array(smallint_array#144, true) AS sort_array(smallint_array, true)#164, sort_array(int_array#145, true) AS sort_array(int_array, true)#165, sort_array(bigint_array#146, true) AS sort_array(bigint_array, true)#166, sort_array(decimal_array#147, true) AS sort_array(decimal_array, true)#167, sort_array(double_array#148, true) AS sort_array(double_array, true)#168, sort_array(float_array#149, true) AS sort_array(float_array, true)#169, sort_array(date_array#150, true) AS sort_array(date_array, true)#170, sort_array(timestamp_array#151, true) AS sort_array(timestamp_array, true)#171]
+- SubqueryAlias primitive_arrays
   +- View (`primitive_arrays`, [boolean_array#142,tinyint_array#143,smallint_array#144,int_array#145,bigint_array#146,decimal_array#147,double_array#148,float_array#149,date_array#150,timestamp_array#151])
      +- Project [cast(boolean_array#152 as array<boolean>) AS boolean_array#142, cast(tinyint_array#153 as array<tinyint>) AS tinyint_array#143, cast(smallint_array#154 as array<smallint>) AS smallint_array#144, cast(int_array#155 as array<int>) AS int_array#145, cast(bigint_array#156 as array<bigint>) AS bigint_array#146, cast(decimal_array#157 as array<decimal(19,0)>) AS decimal_array#147, cast(double_array#158 as array<double>) AS double_array#148, cast(float_array#159 as array<float>) AS float_array#149, cast(date_array#160 as array<date>) AS date_array#150, cast(timestamp_array#161 as array<timestamp>) AS timestamp_array#151]
         +- Project [boolean_array#152, tinyint_array#153, smallint_array#154, int_array#155, bigint_array#156, decimal_array#157, double_array#158, float_array#159, date_array#160, timestamp_array#161]
            +- SubqueryAlias primitive_arrays
               +- LocalRelation [boolean_array#152, tinyint_array#153, smallint_array#154, int_array#155, bigint_array#156, decimal_array#157, double_array#158, float_array#159, date_array#160, timestamp_array#161]


-- !query
select sort_array(array('b', 'd'), '1')
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"1\"",
    "inputType" : "\"STRING\"",
    "paramIndex" : "2",
    "requiredType" : "\"BOOLEAN\"",
    "sqlExpr" : "\"sort_array(array(b, d), 1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 39,
    "fragment" : "sort_array(array('b', 'd'), '1')"
  } ]
}


-- !query
select sort_array(array('b', 'd'), cast(NULL as boolean))
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"CAST(NULL AS BOOLEAN)\"",
    "inputType" : "\"BOOLEAN\"",
    "paramIndex" : "2",
    "requiredType" : "\"BOOLEAN\"",
    "sqlExpr" : "\"sort_array(array(b, d), CAST(NULL AS BOOLEAN))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 57,
    "fragment" : "sort_array(array('b', 'd'), cast(NULL as boolean))"
  } ]
}


-- !query
select
  size(boolean_array),
  size(tinyint_array),
  size(smallint_array),
  size(int_array),
  size(bigint_array),
  size(decimal_array),
  size(double_array),
  size(float_array),
  size(date_array),
  size(timestamp_array)
from primitive_arrays
-- !query analysis
Project [size(boolean_array#182, true) AS size(boolean_array)#202, size(tinyint_array#183, true) AS size(tinyint_array)#203, size(smallint_array#184, true) AS size(smallint_array)#204, size(int_array#185, true) AS size(int_array)#205, size(bigint_array#186, true) AS size(bigint_array)#206, size(decimal_array#187, true) AS size(decimal_array)#207, size(double_array#188, true) AS size(double_array)#208, size(float_array#189, true) AS size(float_array)#209, size(date_array#190, true) AS size(date_array)#210, size(timestamp_array#191, true) AS size(timestamp_array)#211]
+- SubqueryAlias primitive_arrays
   +- View (`primitive_arrays`, [boolean_array#182,tinyint_array#183,smallint_array#184,int_array#185,bigint_array#186,decimal_array#187,double_array#188,float_array#189,date_array#190,timestamp_array#191])
      +- Project [cast(boolean_array#192 as array<boolean>) AS boolean_array#182, cast(tinyint_array#193 as array<tinyint>) AS tinyint_array#183, cast(smallint_array#194 as array<smallint>) AS smallint_array#184, cast(int_array#195 as array<int>) AS int_array#185, cast(bigint_array#196 as array<bigint>) AS bigint_array#186, cast(decimal_array#197 as array<decimal(19,0)>) AS decimal_array#187, cast(double_array#198 as array<double>) AS double_array#188, cast(float_array#199 as array<float>) AS float_array#189, cast(date_array#200 as array<date>) AS date_array#190, cast(timestamp_array#201 as array<timestamp>) AS timestamp_array#191]
         +- Project [boolean_array#192, tinyint_array#193, smallint_array#194, int_array#195, bigint_array#196, decimal_array#197, double_array#198, float_array#199, date_array#200, timestamp_array#201]
            +- SubqueryAlias primitive_arrays
               +- LocalRelation [boolean_array#192, tinyint_array#193, smallint_array#194, int_array#195, bigint_array#196, decimal_array#197, double_array#198, float_array#199, date_array#200, timestamp_array#201]


-- !query
select element_at(array(1, 2, 3), 5)
-- !query analysis
Project [element_at(array(1, 2, 3), 5, None, false) AS element_at(array(1, 2, 3), 5)#222]
+- OneRowRelation


-- !query
select element_at(array(1, 2, 3), -5)
-- !query analysis
Project [element_at(array(1, 2, 3), -5, None, false) AS element_at(array(1, 2, 3), -5)#224]
+- OneRowRelation


-- !query
select element_at(array(1, 2, 3), 0)
-- !query analysis
Project [element_at(array(1, 2, 3), 0, None, false) AS element_at(array(1, 2, 3), 0)#226]
+- OneRowRelation


-- !query
select elt(4, '123', '456')
-- !query analysis
Project [elt(4, 123, 456, false) AS elt(4, 123, 456)#228]
+- OneRowRelation


-- !query
select elt(0, '123', '456')
-- !query analysis
Project [elt(0, 123, 456, false) AS elt(0, 123, 456)#230]
+- OneRowRelation


-- !query
select elt(-1, '123', '456')
-- !query analysis
Project [elt(-1, 123, 456, false) AS elt(-1, 123, 456)#232]
+- OneRowRelation


-- !query
select elt(null, '123', '456')
-- !query analysis
Project [elt(cast(null as int), 123, 456, false) AS elt(NULL, 123, 456)#234]
+- OneRowRelation


-- !query
select elt(null, '123', null)
-- !query analysis
Project [elt(cast(null as int), 123, cast(null as string), false) AS elt(NULL, 123, NULL)#236]
+- OneRowRelation


-- !query
select elt(1, '123', null)
-- !query analysis
Project [elt(1, 123, cast(null as string), false) AS elt(1, 123, NULL)#238]
+- OneRowRelation


-- !query
select elt(2, '123', null)
-- !query analysis
Project [elt(2, 123, cast(null as string), false) AS elt(2, 123, NULL)#240]
+- OneRowRelation


-- !query
select array(1, 2, 3)[5]
-- !query analysis
Project [array(1, 2, 3)[5] AS array(1, 2, 3)[5]#242]
+- OneRowRelation


-- !query
select array(1, 2, 3)[-1]
-- !query analysis
Project [array(1, 2, 3)[-1] AS array(1, 2, 3)[-1]#244]
+- OneRowRelation


-- !query
select array_size(array())
-- !query analysis
Project [array_size(array()) AS array_size(array())#246]
+- OneRowRelation


-- !query
select array_size(array(true))
-- !query analysis
Project [array_size(array(true)) AS array_size(array(true))#248]
+- OneRowRelation


-- !query
select array_size(array(2, 1))
-- !query analysis
Project [array_size(array(2, 1)) AS array_size(array(2, 1))#250]
+- OneRowRelation


-- !query
select array_size(NULL)
-- !query analysis
Project [array_size(cast(null as array<void>)) AS array_size(NULL)#252]
+- OneRowRelation


-- !query
select array_size(map('a', 1, 'b', 2))
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"map(a, 1, b, 2)\"",
    "inputType" : "\"MAP<STRING, INT>\"",
    "paramIndex" : "1",
    "requiredType" : "\"ARRAY\"",
    "sqlExpr" : "\"array_size(map(a, 1, b, 2))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 38,
    "fragment" : "array_size(map('a', 1, 'b', 2))"
  } ]
}


-- !query
select size(arrays_zip(array(1, 2, 3), array(4), array(7, 8, 9, 10)))
-- !query analysis
Project [size(arrays_zip(array(1, 2, 3), array(4), array(7, 8, 9, 10), 0, 1, 2), true) AS size(arrays_zip(array(1, 2, 3), array(4), array(7, 8, 9, 10)))#254]
+- OneRowRelation


-- !query
select size(arrays_zip(array(), array(1, 2, 3), array(4), array(7, 8, 9, 10)))
-- !query analysis
Project [size(arrays_zip(array(), array(1, 2, 3), array(4), array(7, 8, 9, 10), 0, 1, 2, 3), true) AS size(arrays_zip(array(), array(1, 2, 3), array(4), array(7, 8, 9, 10)))#256]
+- OneRowRelation


-- !query
select size(arrays_zip(array(1, 2, 3), array(4), null, array(7, 8, 9, 10)))
-- !query analysis
Project [size(arrays_zip(array(1, 2, 3), array(4), null, array(7, 8, 9, 10), 0, 1, 2, 3), true) AS size(arrays_zip(array(1, 2, 3), array(4), NULL, array(7, 8, 9, 10)))#258]
+- OneRowRelation


-- !query
select isnotnull(arrays_zip(array(), array(4), array(7, 8, 9, 10)))
-- !query analysis
Project [isnotnull(arrays_zip(array(), array(4), array(7, 8, 9, 10), 0, 1, 2)) AS (arrays_zip(array(), array(4), array(7, 8, 9, 10)) IS NOT NULL)#260]
+- OneRowRelation


-- !query
select isnotnull(arrays_zip(array(1, 2, 3), array(4), array(7, 8, 9, 10)))
-- !query analysis
Project [isnotnull(arrays_zip(array(1, 2, 3), array(4), array(7, 8, 9, 10), 0, 1, 2)) AS (arrays_zip(array(1, 2, 3), array(4), array(7, 8, 9, 10)) IS NOT NULL)#262]
+- OneRowRelation


-- !query
select isnotnull(arrays_zip(array(1, 2, 3), NULL, array(4), array(7, 8, 9, 10)))
-- !query analysis
Project [isnotnull(arrays_zip(array(1, 2, 3), null, array(4), array(7, 8, 9, 10), 0, 1, 2, 3)) AS (arrays_zip(array(1, 2, 3), NULL, array(4), array(7, 8, 9, 10)) IS NOT NULL)#264]
+- OneRowRelation


-- !query
select get(array(1, 2, 3), 0)
-- !query analysis
Project [get(array(1, 2, 3), 0) AS get(array(1, 2, 3), 0)#266]
+- OneRowRelation


-- !query
select get(array(1, 2, 3), 3)
-- !query analysis
Project [get(array(1, 2, 3), 3) AS get(array(1, 2, 3), 3)#268]
+- OneRowRelation


-- !query
select get(array(1, 2, 3), null)
-- !query analysis
Project [get(array(1, 2, 3), null) AS get(array(1, 2, 3), NULL)#270]
+- OneRowRelation


-- !query
select get(array(1, 2, 3), -1)
-- !query analysis
Project [get(array(1, 2, 3), -1) AS get(array(1, 2, 3), -1)#272]
+- OneRowRelation


-- !query
select array_insert(array(1, 2, 3), 3, 4)
-- !query analysis
Project [array_insert(array(1, 2, 3), 3, 4) AS array_insert(array(1, 2, 3), 3, 4)#274]
+- OneRowRelation


-- !query
select array_insert(array(2, 3, 4), 0, 1)
-- !query analysis
Project [array_insert(array(2, 3, 4), 0, 1) AS array_insert(array(2, 3, 4), 0, 1)#276]
+- OneRowRelation


-- !query
select array_insert(array(2, 3, 4), 1, 1)
-- !query analysis
Project [array_insert(array(2, 3, 4), 1, 1) AS array_insert(array(2, 3, 4), 1, 1)#278]
+- OneRowRelation


-- !query
select array_insert(array(1, 3, 4), -2, 2)
-- !query analysis
Project [array_insert(array(1, 3, 4), -2, 2) AS array_insert(array(1, 3, 4), -2, 2)#280]
+- OneRowRelation


-- !query
select array_insert(array(1, 2, 3), 3, "4")
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.ARRAY_FUNCTION_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "dataType" : "\"ARRAY\"",
    "functionName" : "`array_insert`",
    "leftType" : "\"ARRAY<INT>\"",
    "rightType" : "\"STRING\"",
    "sqlExpr" : "\"array_insert(array(1, 2, 3), 3, 4)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 43,
    "fragment" : "array_insert(array(1, 2, 3), 3, \"4\")"
  } ]
}


-- !query
select array_insert(cast(NULL as ARRAY<INT>), 1, 1)
-- !query analysis
Project [array_insert(cast(null as array<int>), 1, 1) AS array_insert(NULL, 1, 1)#282]
+- OneRowRelation


-- !query
select array_insert(array(1, 2, 3, NULL), cast(NULL as INT), 4)
-- !query analysis
Project [array_insert(array(1, 2, 3, cast(null as int)), cast(null as int), 4) AS array_insert(array(1, 2, 3, NULL), CAST(NULL AS INT), 4)#284]
+- OneRowRelation


-- !query
select array_insert(array(1, 2, 3, NULL), 4, cast(NULL as INT))
-- !query analysis
Project [array_insert(array(1, 2, 3, cast(null as int)), 4, cast(null as int)) AS array_insert(array(1, 2, 3, NULL), 4, CAST(NULL AS INT))#286]
+- OneRowRelation


-- !query
select array_insert(array(2, 3, NULL, 4), 5, 5)
-- !query analysis
Project [array_insert(array(2, 3, cast(null as int), 4), 5, 5) AS array_insert(array(2, 3, NULL, 4), 5, 5)#288]
+- OneRowRelation


-- !query
select array_insert(array(2, 3, NULL, 4), -5, 1)
-- !query analysis
Project [array_insert(array(2, 3, cast(null as int), 4), -5, 1) AS array_insert(array(2, 3, NULL, 4), -5, 1)#290]
+- OneRowRelation


-- !query
select array_compact(id) from values (1) as t(id)
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"id\"",
    "inputType" : "\"INT\"",
    "paramIndex" : "1",
    "requiredType" : "\"ARRAY\"",
    "sqlExpr" : "\"array_compact(id)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 24,
    "fragment" : "array_compact(id)"
  } ]
}


-- !query
select array_compact(array("1", null, "2", null))
-- !query analysis
Project [array_compact(array(1, cast(null as string), 2, cast(null as string))) AS array_compact(array(1, NULL, 2, NULL))#293]
+- OneRowRelation


-- !query
select array_compact(array("a", "b", "c"))
-- !query analysis
Project [array_compact(array(a, b, c)) AS array_compact(array(a, b, c))#297]
+- OneRowRelation


-- !query
select array_compact(array(1D, null, 2D, null))
-- !query analysis
Project [array_compact(array(1.0, cast(null as double), 2.0, cast(null as double))) AS array_compact(array(1.0, NULL, 2.0, NULL))#300]
+- OneRowRelation


-- !query
select array_compact(array(array(1, 2, 3, null), null, array(4, null, 6)))
-- !query analysis
Project [array_compact(array(array(1, 2, 3, cast(null as int)), cast(null as array<int>), array(4, cast(null as int), 6))) AS array_compact(array(array(1, 2, 3, NULL), NULL, array(4, NULL, 6)))#304]
+- OneRowRelation


-- !query
select array_compact(array(null))
-- !query analysis
Project [array_compact(array(null)) AS array_compact(array(NULL))#308]
+- OneRowRelation


-- !query
select array_append(array(1, 2, 3), 4)
-- !query analysis
Project [array_append(array(1, 2, 3), 4) AS array_append(array(1, 2, 3), 4)#311]
+- OneRowRelation


-- !query
select array_append(array('a', 'b', 'c'), 'd')
-- !query analysis
Project [array_append(array(a, b, c), d) AS array_append(array(a, b, c), d)#313]
+- OneRowRelation


-- !query
select array_append(array(1, 2, 3, NULL), NULL)
-- !query analysis
Project [array_append(array(1, 2, 3, cast(null as int)), cast(null as int)) AS array_append(array(1, 2, 3, NULL), NULL)#315]
+- OneRowRelation


-- !query
select array_append(array('a', 'b', 'c', NULL), NULL)
-- !query analysis
Project [array_append(array(a, b, c, cast(null as string)), cast(null as string)) AS array_append(array(a, b, c, NULL), NULL)#317]
+- OneRowRelation


-- !query
select array_append(CAST(null AS ARRAY<String>), 'a')
-- !query analysis
Project [array_append(cast(null as array<string>), a) AS array_append(NULL, a)#319]
+- OneRowRelation


-- !query
select array_append(CAST(null AS ARRAY<String>), CAST(null as String))
-- !query analysis
Project [array_append(cast(null as array<string>), cast(null as string)) AS array_append(NULL, CAST(NULL AS STRING))#321]
+- OneRowRelation


-- !query
select array_append(array(), 1)
-- !query analysis
Project [array_append(cast(array() as array<int>), 1) AS array_append(array(), 1)#323]
+- OneRowRelation


-- !query
select array_append(CAST(array() AS ARRAY<String>), CAST(NULL AS String))
-- !query analysis
Project [array_append(cast(array() as array<string>), cast(null as string)) AS array_append(array(), CAST(NULL AS STRING))#325]
+- OneRowRelation


-- !query
select array_append(array(CAST(NULL AS String)), CAST(NULL AS String))
-- !query analysis
Project [array_append(array(cast(null as string)), cast(null as string)) AS array_append(array(CAST(NULL AS STRING)), CAST(NULL AS STRING))#327]
+- OneRowRelation
