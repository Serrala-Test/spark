== Physical Plan ==
TakeOrderedAndProject (50)
+- Union (49)
   :- * HashAggregate (28)
   :  +- * HashAggregate (27)
   :     +- * HashAggregate (26)
   :        +- Exchange (25)
   :           +- * HashAggregate (24)
   :              +- * Project (23)
   :                 +- * BroadcastHashJoin Inner BuildRight (22)
   :                    :- * Project (17)
   :                    :  +- * BroadcastHashJoin Inner BuildRight (16)
   :                    :     :- * Project (10)
   :                    :     :  +- * BroadcastHashJoin Inner BuildRight (9)
   :                    :     :     :- * Filter (3)
   :                    :     :     :  +- * ColumnarToRow (2)
   :                    :     :     :     +- Scan parquet default.inventory (1)
   :                    :     :     +- BroadcastExchange (8)
   :                    :     :        +- * Project (7)
   :                    :     :           +- * Filter (6)
   :                    :     :              +- * ColumnarToRow (5)
   :                    :     :                 +- Scan parquet default.date_dim (4)
   :                    :     +- BroadcastExchange (15)
   :                    :        +- * Project (14)
   :                    :           +- * Filter (13)
   :                    :              +- * ColumnarToRow (12)
   :                    :                 +- Scan parquet default.item (11)
   :                    +- BroadcastExchange (21)
   :                       +- * Filter (20)
   :                          +- * ColumnarToRow (19)
   :                             +- Scan parquet default.warehouse (18)
   :- * HashAggregate (33)
   :  +- Exchange (32)
   :     +- * HashAggregate (31)
   :        +- * HashAggregate (30)
   :           +- ReusedExchange (29)
   :- * HashAggregate (38)
   :  +- Exchange (37)
   :     +- * HashAggregate (36)
   :        +- * HashAggregate (35)
   :           +- ReusedExchange (34)
   :- * HashAggregate (43)
   :  +- Exchange (42)
   :     +- * HashAggregate (41)
   :        +- * HashAggregate (40)
   :           +- ReusedExchange (39)
   +- * HashAggregate (48)
      +- Exchange (47)
         +- * HashAggregate (46)
            +- * HashAggregate (45)
               +- ReusedExchange (44)


(1) Scan parquet default.inventory
Output [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Batched: true
Location [not included in comparison]/{warehouse_dir}/inventory]
PushedFilters: [IsNotNull(inv_date_sk), IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)]
ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>

(2) ColumnarToRow [codegen id : 4]
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]

(3) Filter [codegen id : 4]
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Condition : ((isnotnull(inv_date_sk#1) AND isnotnull(inv_item_sk#2)) AND isnotnull(inv_warehouse_sk#3))

(4) Scan parquet default.date_dim
Output [2]: [d_date_sk#5, d_month_seq#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(5) ColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#5, d_month_seq#6]

(6) Filter [codegen id : 1]
Input [2]: [d_date_sk#5, d_month_seq#6]
Condition : (((isnotnull(d_month_seq#6) AND (d_month_seq#6 >= 1212)) AND (d_month_seq#6 <= 1223)) AND isnotnull(d_date_sk#5))

(7) Project [codegen id : 1]
Output [1]: [d_date_sk#5]
Input [2]: [d_date_sk#5, d_month_seq#6]

(8) BroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#7]

(9) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_date_sk#1]
Right keys [1]: [d_date_sk#5]
Join condition: None

(10) Project [codegen id : 4]
Output [3]: [inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Input [5]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4, d_date_sk#5]

(11) Scan parquet default.item
Output [5]: [i_item_sk#8, i_brand#9, i_class#10, i_category#11, i_product_name#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>

(12) ColumnarToRow [codegen id : 2]
Input [5]: [i_item_sk#8, i_brand#9, i_class#10, i_category#11, i_product_name#12]

(13) Filter [codegen id : 2]
Input [5]: [i_item_sk#8, i_brand#9, i_class#10, i_category#11, i_product_name#12]
Condition : isnotnull(i_item_sk#8)

(14) Project [codegen id : 2]
Output [5]: [i_item_sk#8, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, i_brand#9, 50, false, true) AS i_brand#13, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, i_class#10, 50, false, true) AS i_class#14, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, i_category#11, 50, false, true) AS i_category#15, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, i_product_name#12, 50, false, true) AS i_product_name#16]
Input [5]: [i_item_sk#8, i_brand#9, i_class#10, i_category#11, i_product_name#12]

(15) BroadcastExchange
Input [5]: [i_item_sk#8, i_brand#13, i_class#14, i_category#15, i_product_name#16]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#17]

(16) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_item_sk#2]
Right keys [1]: [i_item_sk#8]
Join condition: None

(17) Project [codegen id : 4]
Output [6]: [inv_warehouse_sk#3, inv_quantity_on_hand#4, i_brand#13, i_class#14, i_category#15, i_product_name#16]
Input [8]: [inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4, i_item_sk#8, i_brand#13, i_class#14, i_category#15, i_product_name#16]

(18) Scan parquet default.warehouse
Output [1]: [w_warehouse_sk#18]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int>

(19) ColumnarToRow [codegen id : 3]
Input [1]: [w_warehouse_sk#18]

(20) Filter [codegen id : 3]
Input [1]: [w_warehouse_sk#18]
Condition : isnotnull(w_warehouse_sk#18)

(21) BroadcastExchange
Input [1]: [w_warehouse_sk#18]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#19]

(22) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_warehouse_sk#3]
Right keys [1]: [w_warehouse_sk#18]
Join condition: None

(23) Project [codegen id : 4]
Output [5]: [inv_quantity_on_hand#4, i_brand#13, i_class#14, i_category#15, i_product_name#16]
Input [7]: [inv_warehouse_sk#3, inv_quantity_on_hand#4, i_brand#13, i_class#14, i_category#15, i_product_name#16, w_warehouse_sk#18]

(24) HashAggregate [codegen id : 4]
Input [5]: [inv_quantity_on_hand#4, i_brand#13, i_class#14, i_category#15, i_product_name#16]
Keys [4]: [i_product_name#16, i_brand#13, i_class#14, i_category#15]
Functions [1]: [partial_avg(cast(inv_quantity_on_hand#4 as bigint))]
Aggregate Attributes [2]: [sum#20, count#21]
Results [6]: [i_product_name#16, i_brand#13, i_class#14, i_category#15, sum#22, count#23]

(25) Exchange
Input [6]: [i_product_name#16, i_brand#13, i_class#14, i_category#15, sum#22, count#23]
Arguments: hashpartitioning(i_product_name#16, i_brand#13, i_class#14, i_category#15, 5), ENSURE_REQUIREMENTS, [id=#24]

(26) HashAggregate [codegen id : 5]
Input [6]: [i_product_name#16, i_brand#13, i_class#14, i_category#15, sum#22, count#23]
Keys [4]: [i_product_name#16, i_brand#13, i_class#14, i_category#15]
Functions [1]: [avg(cast(inv_quantity_on_hand#4 as bigint))]
Aggregate Attributes [1]: [avg(cast(inv_quantity_on_hand#4 as bigint))#25]
Results [5]: [i_product_name#16, i_brand#13, i_class#14, i_category#15, avg(cast(inv_quantity_on_hand#4 as bigint))#25 AS qoh#26]

(27) HashAggregate [codegen id : 5]
Input [5]: [i_product_name#16, i_brand#13, i_class#14, i_category#15, qoh#26]
Keys [4]: [i_product_name#16, i_brand#13, i_class#14, i_category#15]
Functions [1]: [partial_avg(qoh#26)]
Aggregate Attributes [2]: [sum#27, count#28]
Results [6]: [i_product_name#16, i_brand#13, i_class#14, i_category#15, sum#29, count#30]

(28) HashAggregate [codegen id : 5]
Input [6]: [i_product_name#16, i_brand#13, i_class#14, i_category#15, sum#29, count#30]
Keys [4]: [i_product_name#16, i_brand#13, i_class#14, i_category#15]
Functions [1]: [avg(qoh#26)]
Aggregate Attributes [1]: [avg(qoh#26)#31]
Results [5]: [i_product_name#16, i_brand#13, i_class#14, i_category#15, avg(qoh#26)#31 AS qoh#32]

(29) ReusedExchange [Reuses operator id: 25]
Output [6]: [i_product_name#33, i_brand#34, i_class#35, i_category#36, sum#37, count#38]

(30) HashAggregate [codegen id : 10]
Input [6]: [i_product_name#33, i_brand#34, i_class#35, i_category#36, sum#37, count#38]
Keys [4]: [i_product_name#33, i_brand#34, i_class#35, i_category#36]
Functions [1]: [avg(cast(inv_quantity_on_hand#4 as bigint))]
Aggregate Attributes [1]: [avg(cast(inv_quantity_on_hand#4 as bigint))#39]
Results [4]: [i_product_name#33, i_brand#34, i_class#35, avg(cast(inv_quantity_on_hand#4 as bigint))#39 AS qoh#26]

(31) HashAggregate [codegen id : 10]
Input [4]: [i_product_name#33, i_brand#34, i_class#35, qoh#26]
Keys [3]: [i_product_name#33, i_brand#34, i_class#35]
Functions [1]: [partial_avg(qoh#26)]
Aggregate Attributes [2]: [sum#40, count#41]
Results [5]: [i_product_name#33, i_brand#34, i_class#35, sum#42, count#43]

(32) Exchange
Input [5]: [i_product_name#33, i_brand#34, i_class#35, sum#42, count#43]
Arguments: hashpartitioning(i_product_name#33, i_brand#34, i_class#35, 5), ENSURE_REQUIREMENTS, [id=#44]

(33) HashAggregate [codegen id : 11]
Input [5]: [i_product_name#33, i_brand#34, i_class#35, sum#42, count#43]
Keys [3]: [i_product_name#33, i_brand#34, i_class#35]
Functions [1]: [avg(qoh#26)]
Aggregate Attributes [1]: [avg(qoh#26)#45]
Results [5]: [i_product_name#33 AS i_product_name#46, i_brand#34 AS i_brand#47, i_class#35 AS i_class#48, null AS i_category#49, avg(qoh#26)#45 AS qoh#50]

(34) ReusedExchange [Reuses operator id: 25]
Output [6]: [i_product_name#51, i_brand#52, i_class#53, i_category#54, sum#55, count#56]

(35) HashAggregate [codegen id : 16]
Input [6]: [i_product_name#51, i_brand#52, i_class#53, i_category#54, sum#55, count#56]
Keys [4]: [i_product_name#51, i_brand#52, i_class#53, i_category#54]
Functions [1]: [avg(cast(inv_quantity_on_hand#4 as bigint))]
Aggregate Attributes [1]: [avg(cast(inv_quantity_on_hand#4 as bigint))#57]
Results [3]: [i_product_name#51, i_brand#52, avg(cast(inv_quantity_on_hand#4 as bigint))#57 AS qoh#26]

(36) HashAggregate [codegen id : 16]
Input [3]: [i_product_name#51, i_brand#52, qoh#26]
Keys [2]: [i_product_name#51, i_brand#52]
Functions [1]: [partial_avg(qoh#26)]
Aggregate Attributes [2]: [sum#58, count#59]
Results [4]: [i_product_name#51, i_brand#52, sum#60, count#61]

(37) Exchange
Input [4]: [i_product_name#51, i_brand#52, sum#60, count#61]
Arguments: hashpartitioning(i_product_name#51, i_brand#52, 5), ENSURE_REQUIREMENTS, [id=#62]

(38) HashAggregate [codegen id : 17]
Input [4]: [i_product_name#51, i_brand#52, sum#60, count#61]
Keys [2]: [i_product_name#51, i_brand#52]
Functions [1]: [avg(qoh#26)]
Aggregate Attributes [1]: [avg(qoh#26)#63]
Results [5]: [i_product_name#51 AS i_product_name#64, i_brand#52 AS i_brand#65, null AS i_class#66, null AS i_category#67, avg(qoh#26)#63 AS qoh#68]

(39) ReusedExchange [Reuses operator id: 25]
Output [6]: [i_product_name#69, i_brand#70, i_class#71, i_category#72, sum#73, count#74]

(40) HashAggregate [codegen id : 22]
Input [6]: [i_product_name#69, i_brand#70, i_class#71, i_category#72, sum#73, count#74]
Keys [4]: [i_product_name#69, i_brand#70, i_class#71, i_category#72]
Functions [1]: [avg(cast(inv_quantity_on_hand#4 as bigint))]
Aggregate Attributes [1]: [avg(cast(inv_quantity_on_hand#4 as bigint))#75]
Results [2]: [i_product_name#69, avg(cast(inv_quantity_on_hand#4 as bigint))#75 AS qoh#26]

(41) HashAggregate [codegen id : 22]
Input [2]: [i_product_name#69, qoh#26]
Keys [1]: [i_product_name#69]
Functions [1]: [partial_avg(qoh#26)]
Aggregate Attributes [2]: [sum#76, count#77]
Results [3]: [i_product_name#69, sum#78, count#79]

(42) Exchange
Input [3]: [i_product_name#69, sum#78, count#79]
Arguments: hashpartitioning(i_product_name#69, 5), ENSURE_REQUIREMENTS, [id=#80]

(43) HashAggregate [codegen id : 23]
Input [3]: [i_product_name#69, sum#78, count#79]
Keys [1]: [i_product_name#69]
Functions [1]: [avg(qoh#26)]
Aggregate Attributes [1]: [avg(qoh#26)#81]
Results [5]: [i_product_name#69 AS i_product_name#82, null AS i_brand#83, null AS i_class#84, null AS i_category#85, avg(qoh#26)#81 AS qoh#86]

(44) ReusedExchange [Reuses operator id: 25]
Output [6]: [i_product_name#87, i_brand#88, i_class#89, i_category#90, sum#91, count#92]

(45) HashAggregate [codegen id : 28]
Input [6]: [i_product_name#87, i_brand#88, i_class#89, i_category#90, sum#91, count#92]
Keys [4]: [i_product_name#87, i_brand#88, i_class#89, i_category#90]
Functions [1]: [avg(cast(inv_quantity_on_hand#4 as bigint))]
Aggregate Attributes [1]: [avg(cast(inv_quantity_on_hand#4 as bigint))#93]
Results [1]: [avg(cast(inv_quantity_on_hand#4 as bigint))#93 AS qoh#26]

(46) HashAggregate [codegen id : 28]
Input [1]: [qoh#26]
Keys: []
Functions [1]: [partial_avg(qoh#26)]
Aggregate Attributes [2]: [sum#94, count#95]
Results [2]: [sum#96, count#97]

(47) Exchange
Input [2]: [sum#96, count#97]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [id=#98]

(48) HashAggregate [codegen id : 29]
Input [2]: [sum#96, count#97]
Keys: []
Functions [1]: [avg(qoh#26)]
Aggregate Attributes [1]: [avg(qoh#26)#99]
Results [5]: [null AS i_product_name#100, null AS i_brand#101, null AS i_class#102, null AS i_category#103, avg(qoh#26)#99 AS qoh#104]

(49) Union

(50) TakeOrderedAndProject
Input [5]: [i_product_name#16, i_brand#13, i_class#14, i_category#15, qoh#32]
Arguments: 100, [qoh#32 ASC NULLS FIRST, i_product_name#16 ASC NULLS FIRST, i_brand#13 ASC NULLS FIRST, i_class#14 ASC NULLS FIRST, i_category#15 ASC NULLS FIRST], [i_product_name#16, i_brand#13, i_class#14, i_category#15, qoh#32]

