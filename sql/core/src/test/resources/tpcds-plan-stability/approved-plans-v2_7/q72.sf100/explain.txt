== Physical Plan ==
TakeOrderedAndProject (81)
+- * HashAggregate (80)
   +- Exchange (79)
      +- * HashAggregate (78)
         +- * Project (77)
            +- SortMergeJoin LeftOuter (76)
               :- * Sort (70)
               :  +- Exchange (69)
               :     +- * Project (68)
               :        +- * BroadcastHashJoin LeftOuter BuildRight (67)
               :           :- * Project (62)
               :           :  +- * SortMergeJoin Inner (61)
               :           :     :- * Sort (42)
               :           :     :  +- Exchange (41)
               :           :     :     +- * Project (40)
               :           :     :        +- * BroadcastHashJoin Inner BuildRight (39)
               :           :     :           :- * Project (33)
               :           :     :           :  +- * SortMergeJoin Inner (32)
               :           :     :           :     :- * Sort (25)
               :           :     :           :     :  +- Exchange (24)
               :           :     :           :     :     +- * Project (23)
               :           :     :           :     :        +- * BroadcastHashJoin Inner BuildRight (22)
               :           :     :           :     :           :- * Project (17)
               :           :     :           :     :           :  +- * BroadcastHashJoin Inner BuildRight (16)
               :           :     :           :     :           :     :- * Project (10)
               :           :     :           :     :           :     :  +- * BroadcastHashJoin Inner BuildRight (9)
               :           :     :           :     :           :     :     :- * Filter (3)
               :           :     :           :     :           :     :     :  +- * ColumnarToRow (2)
               :           :     :           :     :           :     :     :     +- Scan parquet default.catalog_sales (1)
               :           :     :           :     :           :     :     +- BroadcastExchange (8)
               :           :     :           :     :           :     :        +- * Project (7)
               :           :     :           :     :           :     :           +- * Filter (6)
               :           :     :           :     :           :     :              +- * ColumnarToRow (5)
               :           :     :           :     :           :     :                 +- Scan parquet default.date_dim (4)
               :           :     :           :     :           :     +- BroadcastExchange (15)
               :           :     :           :     :           :        +- * Project (14)
               :           :     :           :     :           :           +- * Filter (13)
               :           :     :           :     :           :              +- * ColumnarToRow (12)
               :           :     :           :     :           :                 +- Scan parquet default.household_demographics (11)
               :           :     :           :     :           +- BroadcastExchange (21)
               :           :     :           :     :              +- * Filter (20)
               :           :     :           :     :                 +- * ColumnarToRow (19)
               :           :     :           :     :                    +- Scan parquet default.date_dim (18)
               :           :     :           :     +- * Sort (31)
               :           :     :           :        +- Exchange (30)
               :           :     :           :           +- * Project (29)
               :           :     :           :              +- * Filter (28)
               :           :     :           :                 +- * ColumnarToRow (27)
               :           :     :           :                    +- Scan parquet default.customer_demographics (26)
               :           :     :           +- BroadcastExchange (38)
               :           :     :              +- * Project (37)
               :           :     :                 +- * Filter (36)
               :           :     :                    +- * ColumnarToRow (35)
               :           :     :                       +- Scan parquet default.item (34)
               :           :     +- * Sort (60)
               :           :        +- Exchange (59)
               :           :           +- * Project (58)
               :           :              +- * BroadcastHashJoin Inner BuildRight (57)
               :           :                 :- * Project (51)
               :           :                 :  +- * BroadcastHashJoin Inner BuildRight (50)
               :           :                 :     :- * Filter (45)
               :           :                 :     :  +- * ColumnarToRow (44)
               :           :                 :     :     +- Scan parquet default.inventory (43)
               :           :                 :     +- BroadcastExchange (49)
               :           :                 :        +- * Filter (48)
               :           :                 :           +- * ColumnarToRow (47)
               :           :                 :              +- Scan parquet default.date_dim (46)
               :           :                 +- BroadcastExchange (56)
               :           :                    +- * Project (55)
               :           :                       +- * Filter (54)
               :           :                          +- * ColumnarToRow (53)
               :           :                             +- Scan parquet default.warehouse (52)
               :           +- BroadcastExchange (66)
               :              +- * Filter (65)
               :                 +- * ColumnarToRow (64)
               :                    +- Scan parquet default.promotion (63)
               +- * Sort (75)
                  +- Exchange (74)
                     +- * Filter (73)
                        +- * ColumnarToRow (72)
                           +- Scan parquet default.catalog_returns (71)


(1) Scan parquet default.catalog_sales
Output [8]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_sales]
PushedFilters: [IsNotNull(cs_quantity), IsNotNull(cs_item_sk), IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_hdemo_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_ship_date_sk)]
ReadSchema: struct<cs_sold_date_sk:int,cs_ship_date_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:int,cs_quantity:int>

(2) ColumnarToRow [codegen id : 4]
Input [8]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8]

(3) Filter [codegen id : 4]
Input [8]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8]
Condition : (((((isnotnull(cs_quantity#8) AND isnotnull(cs_item_sk#5)) AND isnotnull(cs_bill_cdemo_sk#3)) AND isnotnull(cs_bill_hdemo_sk#4)) AND isnotnull(cs_sold_date_sk#1)) AND isnotnull(cs_ship_date_sk#2))

(4) Scan parquet default.date_dim
Output [4]: [d_date_sk#9, d_date#10, d_week_seq#11, d_year#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk), IsNotNull(d_week_seq), IsNotNull(d_date)]
ReadSchema: struct<d_date_sk:int,d_date:date,d_week_seq:int,d_year:int>

(5) ColumnarToRow [codegen id : 1]
Input [4]: [d_date_sk#9, d_date#10, d_week_seq#11, d_year#12]

(6) Filter [codegen id : 1]
Input [4]: [d_date_sk#9, d_date#10, d_week_seq#11, d_year#12]
Condition : ((((isnotnull(d_year#12) AND (d_year#12 = 2001)) AND isnotnull(d_date_sk#9)) AND isnotnull(d_week_seq#11)) AND isnotnull(d_date#10))

(7) Project [codegen id : 1]
Output [3]: [d_date_sk#9, d_date#10, d_week_seq#11]
Input [4]: [d_date_sk#9, d_date#10, d_week_seq#11, d_year#12]

(8) BroadcastExchange
Input [3]: [d_date_sk#9, d_date#10, d_week_seq#11]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#13]

(9) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [cs_sold_date_sk#1]
Right keys [1]: [d_date_sk#9]
Join condition: None

(10) Project [codegen id : 4]
Output [9]: [cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8, d_date#10, d_week_seq#11]
Input [11]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8, d_date_sk#9, d_date#10, d_week_seq#11]

(11) Scan parquet default.household_demographics
Output [2]: [hd_demo_sk#14, hd_buy_potential#15]
Batched: true
Location [not included in comparison]/{warehouse_dir}/household_demographics]
PushedFilters: [IsNotNull(hd_demo_sk)]
ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>

(12) ColumnarToRow [codegen id : 2]
Input [2]: [hd_demo_sk#14, hd_buy_potential#15]

(13) Filter [codegen id : 2]
Input [2]: [hd_demo_sk#14, hd_buy_potential#15]
Condition : ((staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, hd_buy_potential#15, 15, false, true) = 1001-5000      ) AND isnotnull(hd_demo_sk#14))

(14) Project [codegen id : 2]
Output [1]: [hd_demo_sk#14]
Input [2]: [hd_demo_sk#14, hd_buy_potential#15]

(15) BroadcastExchange
Input [1]: [hd_demo_sk#14]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#16]

(16) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [cs_bill_hdemo_sk#4]
Right keys [1]: [hd_demo_sk#14]
Join condition: None

(17) Project [codegen id : 4]
Output [8]: [cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8, d_date#10, d_week_seq#11]
Input [10]: [cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8, d_date#10, d_week_seq#11, hd_demo_sk#14]

(18) Scan parquet default.date_dim
Output [2]: [d_date_sk#17, d_date#18]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(19) ColumnarToRow [codegen id : 3]
Input [2]: [d_date_sk#17, d_date#18]

(20) Filter [codegen id : 3]
Input [2]: [d_date_sk#17, d_date#18]
Condition : (isnotnull(d_date#18) AND isnotnull(d_date_sk#17))

(21) BroadcastExchange
Input [2]: [d_date_sk#17, d_date#18]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#19]

(22) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [cs_ship_date_sk#2]
Right keys [1]: [d_date_sk#17]
Join condition: (d_date#18 > d_date#10 + 5 days)

(23) Project [codegen id : 4]
Output [6]: [cs_bill_cdemo_sk#3, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8, d_week_seq#11]
Input [10]: [cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8, d_date#10, d_week_seq#11, d_date_sk#17, d_date#18]

(24) Exchange
Input [6]: [cs_bill_cdemo_sk#3, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8, d_week_seq#11]
Arguments: hashpartitioning(cs_bill_cdemo_sk#3, 5), ENSURE_REQUIREMENTS, [id=#20]

(25) Sort [codegen id : 5]
Input [6]: [cs_bill_cdemo_sk#3, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8, d_week_seq#11]
Arguments: [cs_bill_cdemo_sk#3 ASC NULLS FIRST], false, 0

(26) Scan parquet default.customer_demographics
Output [2]: [cd_demo_sk#21, cd_marital_status#22]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>

(27) ColumnarToRow [codegen id : 6]
Input [2]: [cd_demo_sk#21, cd_marital_status#22]

(28) Filter [codegen id : 6]
Input [2]: [cd_demo_sk#21, cd_marital_status#22]
Condition : ((staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, cd_marital_status#22, 1, false, true) = M) AND isnotnull(cd_demo_sk#21))

(29) Project [codegen id : 6]
Output [1]: [cd_demo_sk#21]
Input [2]: [cd_demo_sk#21, cd_marital_status#22]

(30) Exchange
Input [1]: [cd_demo_sk#21]
Arguments: hashpartitioning(cd_demo_sk#21, 5), ENSURE_REQUIREMENTS, [id=#23]

(31) Sort [codegen id : 7]
Input [1]: [cd_demo_sk#21]
Arguments: [cd_demo_sk#21 ASC NULLS FIRST], false, 0

(32) SortMergeJoin [codegen id : 9]
Left keys [1]: [cs_bill_cdemo_sk#3]
Right keys [1]: [cd_demo_sk#21]
Join condition: None

(33) Project [codegen id : 9]
Output [5]: [cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8, d_week_seq#11]
Input [7]: [cs_bill_cdemo_sk#3, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8, d_week_seq#11, cd_demo_sk#21]

(34) Scan parquet default.item
Output [2]: [i_item_sk#24, i_item_desc#25]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_desc:string>

(35) ColumnarToRow [codegen id : 8]
Input [2]: [i_item_sk#24, i_item_desc#25]

(36) Filter [codegen id : 8]
Input [2]: [i_item_sk#24, i_item_desc#25]
Condition : isnotnull(i_item_sk#24)

(37) Project [codegen id : 8]
Output [2]: [i_item_sk#24, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, lengthCheck, i_item_desc#25, 200, false, true) AS i_item_desc#26]
Input [2]: [i_item_sk#24, i_item_desc#25]

(38) BroadcastExchange
Input [2]: [i_item_sk#24, i_item_desc#26]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#27]

(39) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [cs_item_sk#5]
Right keys [1]: [i_item_sk#24]
Join condition: None

(40) Project [codegen id : 9]
Output [6]: [cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8, d_week_seq#11, i_item_desc#26]
Input [7]: [cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8, d_week_seq#11, i_item_sk#24, i_item_desc#26]

(41) Exchange
Input [6]: [cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8, d_week_seq#11, i_item_desc#26]
Arguments: hashpartitioning(cs_item_sk#5, d_week_seq#11, 5), ENSURE_REQUIREMENTS, [id=#28]

(42) Sort [codegen id : 10]
Input [6]: [cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8, d_week_seq#11, i_item_desc#26]
Arguments: [cs_item_sk#5 ASC NULLS FIRST, d_week_seq#11 ASC NULLS FIRST], false, 0

(43) Scan parquet default.inventory
Output [4]: [inv_date_sk#29, inv_item_sk#30, inv_warehouse_sk#31, inv_quantity_on_hand#32]
Batched: true
Location [not included in comparison]/{warehouse_dir}/inventory]
PushedFilters: [IsNotNull(inv_quantity_on_hand), IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk), IsNotNull(inv_date_sk)]
ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>

(44) ColumnarToRow [codegen id : 13]
Input [4]: [inv_date_sk#29, inv_item_sk#30, inv_warehouse_sk#31, inv_quantity_on_hand#32]

(45) Filter [codegen id : 13]
Input [4]: [inv_date_sk#29, inv_item_sk#30, inv_warehouse_sk#31, inv_quantity_on_hand#32]
Condition : (((isnotnull(inv_quantity_on_hand#32) AND isnotnull(inv_item_sk#30)) AND isnotnull(inv_warehouse_sk#31)) AND isnotnull(inv_date_sk#29))

(46) Scan parquet default.date_dim
Output [2]: [d_date_sk#33, d_week_seq#34]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_week_seq:int>

(47) ColumnarToRow [codegen id : 11]
Input [2]: [d_date_sk#33, d_week_seq#34]

(48) Filter [codegen id : 11]
Input [2]: [d_date_sk#33, d_week_seq#34]
Condition : (isnotnull(d_week_seq#34) AND isnotnull(d_date_sk#33))

(49) BroadcastExchange
Input [2]: [d_date_sk#33, d_week_seq#34]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#35]

(50) BroadcastHashJoin [codegen id : 13]
Left keys [1]: [inv_date_sk#29]
Right keys [1]: [d_date_sk#33]
Join condition: None

(51) Project [codegen id : 13]
Output [4]: [inv_item_sk#30, inv_warehouse_sk#31, inv_quantity_on_hand#32, d_week_seq#34]
Input [6]: [inv_date_sk#29, inv_item_sk#30, inv_warehouse_sk#31, inv_quantity_on_hand#32, d_date_sk#33, d_week_seq#34]

(52) Scan parquet default.warehouse
Output [2]: [w_warehouse_sk#36, w_warehouse_name#37]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>

(53) ColumnarToRow [codegen id : 12]
Input [2]: [w_warehouse_sk#36, w_warehouse_name#37]

(54) Filter [codegen id : 12]
Input [2]: [w_warehouse_sk#36, w_warehouse_name#37]
Condition : isnotnull(w_warehouse_sk#36)

(55) Project [codegen id : 12]
Output [2]: [w_warehouse_sk#36, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, lengthCheck, w_warehouse_name#37, 20, false, true) AS w_warehouse_name#38]
Input [2]: [w_warehouse_sk#36, w_warehouse_name#37]

(56) BroadcastExchange
Input [2]: [w_warehouse_sk#36, w_warehouse_name#38]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#39]

(57) BroadcastHashJoin [codegen id : 13]
Left keys [1]: [inv_warehouse_sk#31]
Right keys [1]: [w_warehouse_sk#36]
Join condition: None

(58) Project [codegen id : 13]
Output [4]: [inv_item_sk#30, inv_quantity_on_hand#32, d_week_seq#34, w_warehouse_name#38]
Input [6]: [inv_item_sk#30, inv_warehouse_sk#31, inv_quantity_on_hand#32, d_week_seq#34, w_warehouse_sk#36, w_warehouse_name#38]

(59) Exchange
Input [4]: [inv_item_sk#30, inv_quantity_on_hand#32, d_week_seq#34, w_warehouse_name#38]
Arguments: hashpartitioning(inv_item_sk#30, d_week_seq#34, 5), ENSURE_REQUIREMENTS, [id=#40]

(60) Sort [codegen id : 14]
Input [4]: [inv_item_sk#30, inv_quantity_on_hand#32, d_week_seq#34, w_warehouse_name#38]
Arguments: [inv_item_sk#30 ASC NULLS FIRST, d_week_seq#34 ASC NULLS FIRST], false, 0

(61) SortMergeJoin [codegen id : 16]
Left keys [2]: [cs_item_sk#5, d_week_seq#11]
Right keys [2]: [inv_item_sk#30, d_week_seq#34]
Join condition: (inv_quantity_on_hand#32 < cs_quantity#8)

(62) Project [codegen id : 16]
Output [6]: [cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, w_warehouse_name#38, i_item_desc#26, d_week_seq#11]
Input [10]: [cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8, d_week_seq#11, i_item_desc#26, inv_item_sk#30, inv_quantity_on_hand#32, d_week_seq#34, w_warehouse_name#38]

(63) Scan parquet default.promotion
Output [1]: [p_promo_sk#41]
Batched: true
Location [not included in comparison]/{warehouse_dir}/promotion]
PushedFilters: [IsNotNull(p_promo_sk)]
ReadSchema: struct<p_promo_sk:int>

(64) ColumnarToRow [codegen id : 15]
Input [1]: [p_promo_sk#41]

(65) Filter [codegen id : 15]
Input [1]: [p_promo_sk#41]
Condition : isnotnull(p_promo_sk#41)

(66) BroadcastExchange
Input [1]: [p_promo_sk#41]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#42]

(67) BroadcastHashJoin [codegen id : 16]
Left keys [1]: [cs_promo_sk#6]
Right keys [1]: [p_promo_sk#41]
Join condition: None

(68) Project [codegen id : 16]
Output [5]: [cs_item_sk#5, cs_order_number#7, w_warehouse_name#38, i_item_desc#26, d_week_seq#11]
Input [7]: [cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, w_warehouse_name#38, i_item_desc#26, d_week_seq#11, p_promo_sk#41]

(69) Exchange
Input [5]: [cs_item_sk#5, cs_order_number#7, w_warehouse_name#38, i_item_desc#26, d_week_seq#11]
Arguments: hashpartitioning(cs_item_sk#5, cs_order_number#7, 5), ENSURE_REQUIREMENTS, [id=#43]

(70) Sort [codegen id : 17]
Input [5]: [cs_item_sk#5, cs_order_number#7, w_warehouse_name#38, i_item_desc#26, d_week_seq#11]
Arguments: [cs_item_sk#5 ASC NULLS FIRST, cs_order_number#7 ASC NULLS FIRST], false, 0

(71) Scan parquet default.catalog_returns
Output [2]: [cr_item_sk#44, cr_order_number#45]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_returns]
PushedFilters: [IsNotNull(cr_item_sk), IsNotNull(cr_order_number)]
ReadSchema: struct<cr_item_sk:int,cr_order_number:int>

(72) ColumnarToRow [codegen id : 18]
Input [2]: [cr_item_sk#44, cr_order_number#45]

(73) Filter [codegen id : 18]
Input [2]: [cr_item_sk#44, cr_order_number#45]
Condition : (isnotnull(cr_item_sk#44) AND isnotnull(cr_order_number#45))

(74) Exchange
Input [2]: [cr_item_sk#44, cr_order_number#45]
Arguments: hashpartitioning(cr_item_sk#44, cr_order_number#45, 5), ENSURE_REQUIREMENTS, [id=#46]

(75) Sort [codegen id : 19]
Input [2]: [cr_item_sk#44, cr_order_number#45]
Arguments: [cr_item_sk#44 ASC NULLS FIRST, cr_order_number#45 ASC NULLS FIRST], false, 0

(76) SortMergeJoin
Left keys [2]: [cs_item_sk#5, cs_order_number#7]
Right keys [2]: [cr_item_sk#44, cr_order_number#45]
Join condition: None

(77) Project [codegen id : 20]
Output [3]: [w_warehouse_name#38, i_item_desc#26, d_week_seq#11]
Input [7]: [cs_item_sk#5, cs_order_number#7, w_warehouse_name#38, i_item_desc#26, d_week_seq#11, cr_item_sk#44, cr_order_number#45]

(78) HashAggregate [codegen id : 20]
Input [3]: [w_warehouse_name#38, i_item_desc#26, d_week_seq#11]
Keys [3]: [i_item_desc#26, w_warehouse_name#38, d_week_seq#11]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#47]
Results [4]: [i_item_desc#26, w_warehouse_name#38, d_week_seq#11, count#48]

(79) Exchange
Input [4]: [i_item_desc#26, w_warehouse_name#38, d_week_seq#11, count#48]
Arguments: hashpartitioning(i_item_desc#26, w_warehouse_name#38, d_week_seq#11, 5), ENSURE_REQUIREMENTS, [id=#49]

(80) HashAggregate [codegen id : 21]
Input [4]: [i_item_desc#26, w_warehouse_name#38, d_week_seq#11, count#48]
Keys [3]: [i_item_desc#26, w_warehouse_name#38, d_week_seq#11]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#50]
Results [6]: [i_item_desc#26, w_warehouse_name#38, d_week_seq#11, count(1)#50 AS no_promo#51, count(1)#50 AS promo#52, count(1)#50 AS total_cnt#53]

(81) TakeOrderedAndProject
Input [6]: [i_item_desc#26, w_warehouse_name#38, d_week_seq#11, no_promo#51, promo#52, total_cnt#53]
Arguments: 100, [total_cnt#53 DESC NULLS LAST, i_item_desc#26 ASC NULLS FIRST, w_warehouse_name#38 ASC NULLS FIRST, d_week_seq#11 ASC NULLS FIRST], [i_item_desc#26, w_warehouse_name#38, d_week_seq#11, no_promo#51, promo#52, total_cnt#53]

