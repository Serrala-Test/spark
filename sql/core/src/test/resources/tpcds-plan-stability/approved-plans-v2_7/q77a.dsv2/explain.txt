== Physical Plan ==
TakeOrderedAndProject (103)
+- * HashAggregate (102)
   +- Exchange (101)
      +- * HashAggregate (100)
         +- Union (99)
            :- * HashAggregate (88)
            :  +- Exchange (87)
            :     +- * HashAggregate (86)
            :        +- Union (85)
            :           :- * Project (34)
            :           :  +- * SortMergeJoin LeftOuter (33)
            :           :     :- * Sort (19)
            :           :     :  +- * HashAggregate (18)
            :           :     :     +- Exchange (17)
            :           :     :        +- * HashAggregate (16)
            :           :     :           +- * Project (15)
            :           :     :              +- * BroadcastHashJoin Inner BuildRight (14)
            :           :     :                 :- * Project (9)
            :           :     :                 :  +- * BroadcastHashJoin Inner BuildRight (8)
            :           :     :                 :     :- * Project (3)
            :           :     :                 :     :  +- * Filter (2)
            :           :     :                 :     :     +- BatchScan default.store_sales (1)
            :           :     :                 :     +- BroadcastExchange (7)
            :           :     :                 :        +- * Project (6)
            :           :     :                 :           +- * Filter (5)
            :           :     :                 :              +- BatchScan default.date_dim (4)
            :           :     :                 +- BroadcastExchange (13)
            :           :     :                    +- * Project (12)
            :           :     :                       +- * Filter (11)
            :           :     :                          +- BatchScan default.store (10)
            :           :     +- * Sort (32)
            :           :        +- * HashAggregate (31)
            :           :           +- Exchange (30)
            :           :              +- * HashAggregate (29)
            :           :                 +- * Project (28)
            :           :                    +- * BroadcastHashJoin Inner BuildRight (27)
            :           :                       :- * Project (25)
            :           :                       :  +- * BroadcastHashJoin Inner BuildRight (24)
            :           :                       :     :- * Project (22)
            :           :                       :     :  +- * Filter (21)
            :           :                       :     :     +- BatchScan default.store_returns (20)
            :           :                       :     +- ReusedExchange (23)
            :           :                       +- ReusedExchange (26)
            :           :- * Project (53)
            :           :  +- * BroadcastNestedLoopJoin Inner BuildRight (52)
            :           :     :- * HashAggregate (42)
            :           :     :  +- Exchange (41)
            :           :     :     +- * HashAggregate (40)
            :           :     :        +- * Project (39)
            :           :     :           +- * BroadcastHashJoin Inner BuildRight (38)
            :           :     :              :- * Project (36)
            :           :     :              :  +- BatchScan default.catalog_sales (35)
            :           :     :              +- ReusedExchange (37)
            :           :     +- BroadcastExchange (51)
            :           :        +- * HashAggregate (50)
            :           :           +- Exchange (49)
            :           :              +- * HashAggregate (48)
            :           :                 +- * Project (47)
            :           :                    +- * BroadcastHashJoin Inner BuildRight (46)
            :           :                       :- * Project (44)
            :           :                       :  +- BatchScan default.catalog_returns (43)
            :           :                       +- ReusedExchange (45)
            :           +- * Project (84)
            :              +- * SortMergeJoin LeftOuter (83)
            :                 :- * Sort (69)
            :                 :  +- * HashAggregate (68)
            :                 :     +- Exchange (67)
            :                 :        +- * HashAggregate (66)
            :                 :           +- * Project (65)
            :                 :              +- * BroadcastHashJoin Inner BuildRight (64)
            :                 :                 :- * Project (59)
            :                 :                 :  +- * BroadcastHashJoin Inner BuildRight (58)
            :                 :                 :     :- * Project (56)
            :                 :                 :     :  +- * Filter (55)
            :                 :                 :     :     +- BatchScan default.web_sales (54)
            :                 :                 :     +- ReusedExchange (57)
            :                 :                 +- BroadcastExchange (63)
            :                 :                    +- * Project (62)
            :                 :                       +- * Filter (61)
            :                 :                          +- BatchScan default.web_page (60)
            :                 +- * Sort (82)
            :                    +- * HashAggregate (81)
            :                       +- Exchange (80)
            :                          +- * HashAggregate (79)
            :                             +- * Project (78)
            :                                +- * BroadcastHashJoin Inner BuildRight (77)
            :                                   :- * Project (75)
            :                                   :  +- * BroadcastHashJoin Inner BuildRight (74)
            :                                   :     :- * Project (72)
            :                                   :     :  +- * Filter (71)
            :                                   :     :     +- BatchScan default.web_returns (70)
            :                                   :     +- ReusedExchange (73)
            :                                   +- ReusedExchange (76)
            :- * HashAggregate (93)
            :  +- Exchange (92)
            :     +- * HashAggregate (91)
            :        +- * HashAggregate (90)
            :           +- ReusedExchange (89)
            +- * HashAggregate (98)
               +- Exchange (97)
                  +- * HashAggregate (96)
                     +- * HashAggregate (95)
                        +- ReusedExchange (94)


(1) BatchScan default.store_sales
Output [4]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, ss_sold_date_sk#4]
DataFilters: [isnotnull(ss_store_sk#1)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/store_sales]
PartitionFilters: [isnotnull(ss_sold_date_sk#4)]
PushedFilters: [IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>

(2) Filter [codegen id : 3]
Input [4]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, ss_sold_date_sk#4]
Condition : isnotnull(ss_store_sk#1)

(3) Project [codegen id : 3]
Output [4]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, ss_sold_date_sk#4]
Input [4]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, ss_sold_date_sk#4]

(4) BatchScan default.date_dim
Output [2]: [d_date_sk#5, d_date#6]
DataFilters: [isnotnull(d_date#6), (d_date#6 >= 1998-08-04), (d_date#6 <= 1998-09-03), isnotnull(d_date_sk#5)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1998-08-04), LessThanOrEqual(d_date,1998-09-03), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(5) Filter [codegen id : 1]
Input [2]: [d_date_sk#5, d_date#6]
Condition : (((isnotnull(d_date#6) AND (d_date#6 >= 1998-08-04)) AND (d_date#6 <= 1998-09-03)) AND isnotnull(d_date_sk#5))

(6) Project [codegen id : 1]
Output [1]: [d_date_sk#5]
Input [2]: [d_date_sk#5, d_date#6]

(7) BroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(8) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_sold_date_sk#4]
Right keys [1]: [d_date_sk#5]
Join type: Inner
Join condition: None

(9) Project [codegen id : 3]
Output [3]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3]
Input [5]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, ss_sold_date_sk#4, d_date_sk#5]

(10) BatchScan default.store
Output [1]: [s_store_sk#7]
DataFilters: [isnotnull(s_store_sk#7)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int>

(11) Filter [codegen id : 2]
Input [1]: [s_store_sk#7]
Condition : isnotnull(s_store_sk#7)

(12) Project [codegen id : 2]
Output [1]: [s_store_sk#7]
Input [1]: [s_store_sk#7]

(13) BroadcastExchange
Input [1]: [s_store_sk#7]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(14) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_store_sk#1]
Right keys [1]: [s_store_sk#7]
Join type: Inner
Join condition: None

(15) Project [codegen id : 3]
Output [3]: [ss_ext_sales_price#2, ss_net_profit#3, s_store_sk#7]
Input [4]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, s_store_sk#7]

(16) HashAggregate [codegen id : 3]
Input [3]: [ss_ext_sales_price#2, ss_net_profit#3, s_store_sk#7]
Keys [1]: [s_store_sk#7]
Functions [2]: [partial_sum(UnscaledValue(ss_ext_sales_price#2)), partial_sum(UnscaledValue(ss_net_profit#3))]
Aggregate Attributes [2]: [sum#8, sum#9]
Results [3]: [s_store_sk#7, sum#10, sum#11]

(17) Exchange
Input [3]: [s_store_sk#7, sum#10, sum#11]
Arguments: hashpartitioning(s_store_sk#7, 5), ENSURE_REQUIREMENTS, [plan_id=3]

(18) HashAggregate [codegen id : 4]
Input [3]: [s_store_sk#7, sum#10, sum#11]
Keys [1]: [s_store_sk#7]
Functions [2]: [sum(UnscaledValue(ss_ext_sales_price#2)), sum(UnscaledValue(ss_net_profit#3))]
Aggregate Attributes [2]: [sum(UnscaledValue(ss_ext_sales_price#2))#12, sum(UnscaledValue(ss_net_profit#3))#13]
Results [3]: [s_store_sk#7, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#2))#12,17,2) AS sales#14, MakeDecimal(sum(UnscaledValue(ss_net_profit#3))#13,17,2) AS profit#15]

(19) Sort [codegen id : 4]
Input [3]: [s_store_sk#7, sales#14, profit#15]
Arguments: [s_store_sk#7 ASC NULLS FIRST], false, 0

(20) BatchScan default.store_returns
Output [4]: [sr_store_sk#16, sr_return_amt#17, sr_net_loss#18, sr_returned_date_sk#19]
DataFilters: [isnotnull(sr_store_sk#16)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/store_returns]
PartitionFilters: [isnotnull(sr_returned_date_sk#19)]
PushedFilters: [IsNotNull(sr_store_sk)]
ReadSchema: struct<sr_store_sk:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>

(21) Filter [codegen id : 7]
Input [4]: [sr_store_sk#16, sr_return_amt#17, sr_net_loss#18, sr_returned_date_sk#19]
Condition : isnotnull(sr_store_sk#16)

(22) Project [codegen id : 7]
Output [4]: [sr_store_sk#16, sr_return_amt#17, sr_net_loss#18, sr_returned_date_sk#19]
Input [4]: [sr_store_sk#16, sr_return_amt#17, sr_net_loss#18, sr_returned_date_sk#19]

(23) ReusedExchange [Reuses operator id: 7]
Output [1]: [d_date_sk#20]

(24) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [sr_returned_date_sk#19]
Right keys [1]: [d_date_sk#20]
Join type: Inner
Join condition: None

(25) Project [codegen id : 7]
Output [3]: [sr_store_sk#16, sr_return_amt#17, sr_net_loss#18]
Input [5]: [sr_store_sk#16, sr_return_amt#17, sr_net_loss#18, sr_returned_date_sk#19, d_date_sk#20]

(26) ReusedExchange [Reuses operator id: 13]
Output [1]: [s_store_sk#21]

(27) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [sr_store_sk#16]
Right keys [1]: [s_store_sk#21]
Join type: Inner
Join condition: None

(28) Project [codegen id : 7]
Output [3]: [sr_return_amt#17, sr_net_loss#18, s_store_sk#21]
Input [4]: [sr_store_sk#16, sr_return_amt#17, sr_net_loss#18, s_store_sk#21]

(29) HashAggregate [codegen id : 7]
Input [3]: [sr_return_amt#17, sr_net_loss#18, s_store_sk#21]
Keys [1]: [s_store_sk#21]
Functions [2]: [partial_sum(UnscaledValue(sr_return_amt#17)), partial_sum(UnscaledValue(sr_net_loss#18))]
Aggregate Attributes [2]: [sum#22, sum#23]
Results [3]: [s_store_sk#21, sum#24, sum#25]

(30) Exchange
Input [3]: [s_store_sk#21, sum#24, sum#25]
Arguments: hashpartitioning(s_store_sk#21, 5), ENSURE_REQUIREMENTS, [plan_id=4]

(31) HashAggregate [codegen id : 8]
Input [3]: [s_store_sk#21, sum#24, sum#25]
Keys [1]: [s_store_sk#21]
Functions [2]: [sum(UnscaledValue(sr_return_amt#17)), sum(UnscaledValue(sr_net_loss#18))]
Aggregate Attributes [2]: [sum(UnscaledValue(sr_return_amt#17))#26, sum(UnscaledValue(sr_net_loss#18))#27]
Results [3]: [s_store_sk#21, MakeDecimal(sum(UnscaledValue(sr_return_amt#17))#26,17,2) AS returns#28, MakeDecimal(sum(UnscaledValue(sr_net_loss#18))#27,17,2) AS profit_loss#29]

(32) Sort [codegen id : 8]
Input [3]: [s_store_sk#21, returns#28, profit_loss#29]
Arguments: [s_store_sk#21 ASC NULLS FIRST], false, 0

(33) SortMergeJoin [codegen id : 9]
Left keys [1]: [s_store_sk#7]
Right keys [1]: [s_store_sk#21]
Join type: LeftOuter
Join condition: None

(34) Project [codegen id : 9]
Output [5]: [store channel AS channel#30, s_store_sk#7 AS id#31, sales#14, coalesce(returns#28, 0.00) AS returns#32, (profit#15 - coalesce(profit_loss#29, 0.00)) AS profit#33]
Input [6]: [s_store_sk#7, sales#14, profit#15, s_store_sk#21, returns#28, profit_loss#29]

(35) BatchScan default.catalog_sales
Output [4]: [cs_call_center_sk#34, cs_ext_sales_price#35, cs_net_profit#36, cs_sold_date_sk#37]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/catalog_sales]
PartitionFilters: [isnotnull(cs_sold_date_sk#37)]
ReadSchema: struct<cs_call_center_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:decimal(7,2)>

(36) Project [codegen id : 11]
Output [4]: [cs_call_center_sk#34, cs_ext_sales_price#35, cs_net_profit#36, cs_sold_date_sk#37]
Input [4]: [cs_call_center_sk#34, cs_ext_sales_price#35, cs_net_profit#36, cs_sold_date_sk#37]

(37) ReusedExchange [Reuses operator id: 7]
Output [1]: [d_date_sk#38]

(38) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_sold_date_sk#37]
Right keys [1]: [d_date_sk#38]
Join type: Inner
Join condition: None

(39) Project [codegen id : 11]
Output [3]: [cs_call_center_sk#34, cs_ext_sales_price#35, cs_net_profit#36]
Input [5]: [cs_call_center_sk#34, cs_ext_sales_price#35, cs_net_profit#36, cs_sold_date_sk#37, d_date_sk#38]

(40) HashAggregate [codegen id : 11]
Input [3]: [cs_call_center_sk#34, cs_ext_sales_price#35, cs_net_profit#36]
Keys [1]: [cs_call_center_sk#34]
Functions [2]: [partial_sum(UnscaledValue(cs_ext_sales_price#35)), partial_sum(UnscaledValue(cs_net_profit#36))]
Aggregate Attributes [2]: [sum#39, sum#40]
Results [3]: [cs_call_center_sk#34, sum#41, sum#42]

(41) Exchange
Input [3]: [cs_call_center_sk#34, sum#41, sum#42]
Arguments: hashpartitioning(cs_call_center_sk#34, 5), ENSURE_REQUIREMENTS, [plan_id=5]

(42) HashAggregate [codegen id : 15]
Input [3]: [cs_call_center_sk#34, sum#41, sum#42]
Keys [1]: [cs_call_center_sk#34]
Functions [2]: [sum(UnscaledValue(cs_ext_sales_price#35)), sum(UnscaledValue(cs_net_profit#36))]
Aggregate Attributes [2]: [sum(UnscaledValue(cs_ext_sales_price#35))#43, sum(UnscaledValue(cs_net_profit#36))#44]
Results [3]: [cs_call_center_sk#34, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#35))#43,17,2) AS sales#45, MakeDecimal(sum(UnscaledValue(cs_net_profit#36))#44,17,2) AS profit#46]

(43) BatchScan default.catalog_returns
Output [3]: [cr_return_amount#47, cr_net_loss#48, cr_returned_date_sk#49]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/catalog_returns]
PartitionFilters: [isnotnull(cr_returned_date_sk#49)]
ReadSchema: struct<cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>

(44) Project [codegen id : 13]
Output [3]: [cr_return_amount#47, cr_net_loss#48, cr_returned_date_sk#49]
Input [3]: [cr_return_amount#47, cr_net_loss#48, cr_returned_date_sk#49]

(45) ReusedExchange [Reuses operator id: 7]
Output [1]: [d_date_sk#50]

(46) BroadcastHashJoin [codegen id : 13]
Left keys [1]: [cr_returned_date_sk#49]
Right keys [1]: [d_date_sk#50]
Join type: Inner
Join condition: None

(47) Project [codegen id : 13]
Output [2]: [cr_return_amount#47, cr_net_loss#48]
Input [4]: [cr_return_amount#47, cr_net_loss#48, cr_returned_date_sk#49, d_date_sk#50]

(48) HashAggregate [codegen id : 13]
Input [2]: [cr_return_amount#47, cr_net_loss#48]
Keys: []
Functions [2]: [partial_sum(UnscaledValue(cr_return_amount#47)), partial_sum(UnscaledValue(cr_net_loss#48))]
Aggregate Attributes [2]: [sum#51, sum#52]
Results [2]: [sum#53, sum#54]

(49) Exchange
Input [2]: [sum#53, sum#54]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=6]

(50) HashAggregate [codegen id : 14]
Input [2]: [sum#53, sum#54]
Keys: []
Functions [2]: [sum(UnscaledValue(cr_return_amount#47)), sum(UnscaledValue(cr_net_loss#48))]
Aggregate Attributes [2]: [sum(UnscaledValue(cr_return_amount#47))#55, sum(UnscaledValue(cr_net_loss#48))#56]
Results [2]: [MakeDecimal(sum(UnscaledValue(cr_return_amount#47))#55,17,2) AS returns#57, MakeDecimal(sum(UnscaledValue(cr_net_loss#48))#56,17,2) AS profit_loss#58]

(51) BroadcastExchange
Input [2]: [returns#57, profit_loss#58]
Arguments: IdentityBroadcastMode, [plan_id=7]

(52) BroadcastNestedLoopJoin [codegen id : 15]
Join type: Inner
Join condition: None

(53) Project [codegen id : 15]
Output [5]: [catalog channel AS channel#59, cs_call_center_sk#34 AS id#60, sales#45, returns#57, (profit#46 - profit_loss#58) AS profit#61]
Input [5]: [cs_call_center_sk#34, sales#45, profit#46, returns#57, profit_loss#58]

(54) BatchScan default.web_sales
Output [4]: [ws_web_page_sk#62, ws_ext_sales_price#63, ws_net_profit#64, ws_sold_date_sk#65]
DataFilters: [isnotnull(ws_web_page_sk#62)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/web_sales]
PartitionFilters: [isnotnull(ws_sold_date_sk#65)]
PushedFilters: [IsNotNull(ws_web_page_sk)]
ReadSchema: struct<ws_web_page_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decimal(7,2)>

(55) Filter [codegen id : 18]
Input [4]: [ws_web_page_sk#62, ws_ext_sales_price#63, ws_net_profit#64, ws_sold_date_sk#65]
Condition : isnotnull(ws_web_page_sk#62)

(56) Project [codegen id : 18]
Output [4]: [ws_web_page_sk#62, ws_ext_sales_price#63, ws_net_profit#64, ws_sold_date_sk#65]
Input [4]: [ws_web_page_sk#62, ws_ext_sales_price#63, ws_net_profit#64, ws_sold_date_sk#65]

(57) ReusedExchange [Reuses operator id: 7]
Output [1]: [d_date_sk#66]

(58) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [ws_sold_date_sk#65]
Right keys [1]: [d_date_sk#66]
Join type: Inner
Join condition: None

(59) Project [codegen id : 18]
Output [3]: [ws_web_page_sk#62, ws_ext_sales_price#63, ws_net_profit#64]
Input [5]: [ws_web_page_sk#62, ws_ext_sales_price#63, ws_net_profit#64, ws_sold_date_sk#65, d_date_sk#66]

(60) BatchScan default.web_page
Output [1]: [wp_web_page_sk#67]
DataFilters: [isnotnull(wp_web_page_sk#67)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/web_page]
PushedFilters: [IsNotNull(wp_web_page_sk)]
ReadSchema: struct<wp_web_page_sk:int>

(61) Filter [codegen id : 17]
Input [1]: [wp_web_page_sk#67]
Condition : isnotnull(wp_web_page_sk#67)

(62) Project [codegen id : 17]
Output [1]: [wp_web_page_sk#67]
Input [1]: [wp_web_page_sk#67]

(63) BroadcastExchange
Input [1]: [wp_web_page_sk#67]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=8]

(64) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [ws_web_page_sk#62]
Right keys [1]: [wp_web_page_sk#67]
Join type: Inner
Join condition: None

(65) Project [codegen id : 18]
Output [3]: [ws_ext_sales_price#63, ws_net_profit#64, wp_web_page_sk#67]
Input [4]: [ws_web_page_sk#62, ws_ext_sales_price#63, ws_net_profit#64, wp_web_page_sk#67]

(66) HashAggregate [codegen id : 18]
Input [3]: [ws_ext_sales_price#63, ws_net_profit#64, wp_web_page_sk#67]
Keys [1]: [wp_web_page_sk#67]
Functions [2]: [partial_sum(UnscaledValue(ws_ext_sales_price#63)), partial_sum(UnscaledValue(ws_net_profit#64))]
Aggregate Attributes [2]: [sum#68, sum#69]
Results [3]: [wp_web_page_sk#67, sum#70, sum#71]

(67) Exchange
Input [3]: [wp_web_page_sk#67, sum#70, sum#71]
Arguments: hashpartitioning(wp_web_page_sk#67, 5), ENSURE_REQUIREMENTS, [plan_id=9]

(68) HashAggregate [codegen id : 19]
Input [3]: [wp_web_page_sk#67, sum#70, sum#71]
Keys [1]: [wp_web_page_sk#67]
Functions [2]: [sum(UnscaledValue(ws_ext_sales_price#63)), sum(UnscaledValue(ws_net_profit#64))]
Aggregate Attributes [2]: [sum(UnscaledValue(ws_ext_sales_price#63))#72, sum(UnscaledValue(ws_net_profit#64))#73]
Results [3]: [wp_web_page_sk#67, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#63))#72,17,2) AS sales#74, MakeDecimal(sum(UnscaledValue(ws_net_profit#64))#73,17,2) AS profit#75]

(69) Sort [codegen id : 19]
Input [3]: [wp_web_page_sk#67, sales#74, profit#75]
Arguments: [wp_web_page_sk#67 ASC NULLS FIRST], false, 0

(70) BatchScan default.web_returns
Output [4]: [wr_web_page_sk#76, wr_return_amt#77, wr_net_loss#78, wr_returned_date_sk#79]
DataFilters: [isnotnull(wr_web_page_sk#76)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/web_returns]
PartitionFilters: [isnotnull(wr_returned_date_sk#79)]
PushedFilters: [IsNotNull(wr_web_page_sk)]
ReadSchema: struct<wr_web_page_sk:int,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>

(71) Filter [codegen id : 22]
Input [4]: [wr_web_page_sk#76, wr_return_amt#77, wr_net_loss#78, wr_returned_date_sk#79]
Condition : isnotnull(wr_web_page_sk#76)

(72) Project [codegen id : 22]
Output [4]: [wr_web_page_sk#76, wr_return_amt#77, wr_net_loss#78, wr_returned_date_sk#79]
Input [4]: [wr_web_page_sk#76, wr_return_amt#77, wr_net_loss#78, wr_returned_date_sk#79]

(73) ReusedExchange [Reuses operator id: 7]
Output [1]: [d_date_sk#80]

(74) BroadcastHashJoin [codegen id : 22]
Left keys [1]: [wr_returned_date_sk#79]
Right keys [1]: [d_date_sk#80]
Join type: Inner
Join condition: None

(75) Project [codegen id : 22]
Output [3]: [wr_web_page_sk#76, wr_return_amt#77, wr_net_loss#78]
Input [5]: [wr_web_page_sk#76, wr_return_amt#77, wr_net_loss#78, wr_returned_date_sk#79, d_date_sk#80]

(76) ReusedExchange [Reuses operator id: 63]
Output [1]: [wp_web_page_sk#81]

(77) BroadcastHashJoin [codegen id : 22]
Left keys [1]: [wr_web_page_sk#76]
Right keys [1]: [wp_web_page_sk#81]
Join type: Inner
Join condition: None

(78) Project [codegen id : 22]
Output [3]: [wr_return_amt#77, wr_net_loss#78, wp_web_page_sk#81]
Input [4]: [wr_web_page_sk#76, wr_return_amt#77, wr_net_loss#78, wp_web_page_sk#81]

(79) HashAggregate [codegen id : 22]
Input [3]: [wr_return_amt#77, wr_net_loss#78, wp_web_page_sk#81]
Keys [1]: [wp_web_page_sk#81]
Functions [2]: [partial_sum(UnscaledValue(wr_return_amt#77)), partial_sum(UnscaledValue(wr_net_loss#78))]
Aggregate Attributes [2]: [sum#82, sum#83]
Results [3]: [wp_web_page_sk#81, sum#84, sum#85]

(80) Exchange
Input [3]: [wp_web_page_sk#81, sum#84, sum#85]
Arguments: hashpartitioning(wp_web_page_sk#81, 5), ENSURE_REQUIREMENTS, [plan_id=10]

(81) HashAggregate [codegen id : 23]
Input [3]: [wp_web_page_sk#81, sum#84, sum#85]
Keys [1]: [wp_web_page_sk#81]
Functions [2]: [sum(UnscaledValue(wr_return_amt#77)), sum(UnscaledValue(wr_net_loss#78))]
Aggregate Attributes [2]: [sum(UnscaledValue(wr_return_amt#77))#86, sum(UnscaledValue(wr_net_loss#78))#87]
Results [3]: [wp_web_page_sk#81, MakeDecimal(sum(UnscaledValue(wr_return_amt#77))#86,17,2) AS returns#88, MakeDecimal(sum(UnscaledValue(wr_net_loss#78))#87,17,2) AS profit_loss#89]

(82) Sort [codegen id : 23]
Input [3]: [wp_web_page_sk#81, returns#88, profit_loss#89]
Arguments: [wp_web_page_sk#81 ASC NULLS FIRST], false, 0

(83) SortMergeJoin [codegen id : 24]
Left keys [1]: [wp_web_page_sk#67]
Right keys [1]: [wp_web_page_sk#81]
Join type: LeftOuter
Join condition: None

(84) Project [codegen id : 24]
Output [5]: [web channel AS channel#90, wp_web_page_sk#67 AS id#91, sales#74, coalesce(returns#88, 0.00) AS returns#92, (profit#75 - coalesce(profit_loss#89, 0.00)) AS profit#93]
Input [6]: [wp_web_page_sk#67, sales#74, profit#75, wp_web_page_sk#81, returns#88, profit_loss#89]

(85) Union

(86) HashAggregate [codegen id : 25]
Input [5]: [channel#30, id#31, sales#14, returns#32, profit#33]
Keys [2]: [channel#30, id#31]
Functions [3]: [partial_sum(sales#14), partial_sum(returns#32), partial_sum(profit#33)]
Aggregate Attributes [6]: [sum#94, isEmpty#95, sum#96, isEmpty#97, sum#98, isEmpty#99]
Results [8]: [channel#30, id#31, sum#100, isEmpty#101, sum#102, isEmpty#103, sum#104, isEmpty#105]

(87) Exchange
Input [8]: [channel#30, id#31, sum#100, isEmpty#101, sum#102, isEmpty#103, sum#104, isEmpty#105]
Arguments: hashpartitioning(channel#30, id#31, 5), ENSURE_REQUIREMENTS, [plan_id=11]

(88) HashAggregate [codegen id : 26]
Input [8]: [channel#30, id#31, sum#100, isEmpty#101, sum#102, isEmpty#103, sum#104, isEmpty#105]
Keys [2]: [channel#30, id#31]
Functions [3]: [sum(sales#14), sum(returns#32), sum(profit#33)]
Aggregate Attributes [3]: [sum(sales#14)#106, sum(returns#32)#107, sum(profit#33)#108]
Results [5]: [channel#30, id#31, cast(sum(sales#14)#106 as decimal(37,2)) AS sales#109, cast(sum(returns#32)#107 as decimal(37,2)) AS returns#110, cast(sum(profit#33)#108 as decimal(38,2)) AS profit#111]

(89) ReusedExchange [Reuses operator id: 87]
Output [8]: [channel#30, id#31, sum#100, isEmpty#101, sum#102, isEmpty#103, sum#104, isEmpty#105]

(90) HashAggregate [codegen id : 52]
Input [8]: [channel#30, id#31, sum#100, isEmpty#101, sum#102, isEmpty#103, sum#104, isEmpty#105]
Keys [2]: [channel#30, id#31]
Functions [3]: [sum(sales#14), sum(returns#32), sum(profit#33)]
Aggregate Attributes [3]: [sum(sales#14)#106, sum(returns#32)#107, sum(profit#33)#108]
Results [4]: [channel#30, sum(sales#14)#106 AS sales#112, sum(returns#32)#107 AS returns#113, sum(profit#33)#108 AS profit#114]

(91) HashAggregate [codegen id : 52]
Input [4]: [channel#30, sales#112, returns#113, profit#114]
Keys [1]: [channel#30]
Functions [3]: [partial_sum(sales#112), partial_sum(returns#113), partial_sum(profit#114)]
Aggregate Attributes [6]: [sum#115, isEmpty#116, sum#117, isEmpty#118, sum#119, isEmpty#120]
Results [7]: [channel#30, sum#121, isEmpty#122, sum#123, isEmpty#124, sum#125, isEmpty#126]

(92) Exchange
Input [7]: [channel#30, sum#121, isEmpty#122, sum#123, isEmpty#124, sum#125, isEmpty#126]
Arguments: hashpartitioning(channel#30, 5), ENSURE_REQUIREMENTS, [plan_id=12]

(93) HashAggregate [codegen id : 53]
Input [7]: [channel#30, sum#121, isEmpty#122, sum#123, isEmpty#124, sum#125, isEmpty#126]
Keys [1]: [channel#30]
Functions [3]: [sum(sales#112), sum(returns#113), sum(profit#114)]
Aggregate Attributes [3]: [sum(sales#112)#127, sum(returns#113)#128, sum(profit#114)#129]
Results [5]: [channel#30, null AS id#130, sum(sales#112)#127 AS sales#131, sum(returns#113)#128 AS returns#132, sum(profit#114)#129 AS profit#133]

(94) ReusedExchange [Reuses operator id: 87]
Output [8]: [channel#30, id#31, sum#100, isEmpty#101, sum#102, isEmpty#103, sum#104, isEmpty#105]

(95) HashAggregate [codegen id : 79]
Input [8]: [channel#30, id#31, sum#100, isEmpty#101, sum#102, isEmpty#103, sum#104, isEmpty#105]
Keys [2]: [channel#30, id#31]
Functions [3]: [sum(sales#14), sum(returns#32), sum(profit#33)]
Aggregate Attributes [3]: [sum(sales#14)#106, sum(returns#32)#107, sum(profit#33)#108]
Results [3]: [sum(sales#14)#106 AS sales#112, sum(returns#32)#107 AS returns#113, sum(profit#33)#108 AS profit#114]

(96) HashAggregate [codegen id : 79]
Input [3]: [sales#112, returns#113, profit#114]
Keys: []
Functions [3]: [partial_sum(sales#112), partial_sum(returns#113), partial_sum(profit#114)]
Aggregate Attributes [6]: [sum#134, isEmpty#135, sum#136, isEmpty#137, sum#138, isEmpty#139]
Results [6]: [sum#140, isEmpty#141, sum#142, isEmpty#143, sum#144, isEmpty#145]

(97) Exchange
Input [6]: [sum#140, isEmpty#141, sum#142, isEmpty#143, sum#144, isEmpty#145]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=13]

(98) HashAggregate [codegen id : 80]
Input [6]: [sum#140, isEmpty#141, sum#142, isEmpty#143, sum#144, isEmpty#145]
Keys: []
Functions [3]: [sum(sales#112), sum(returns#113), sum(profit#114)]
Aggregate Attributes [3]: [sum(sales#112)#146, sum(returns#113)#147, sum(profit#114)#148]
Results [5]: [null AS channel#149, null AS id#150, sum(sales#112)#146 AS sales#151, sum(returns#113)#147 AS returns#152, sum(profit#114)#148 AS profit#153]

(99) Union

(100) HashAggregate [codegen id : 81]
Input [5]: [channel#30, id#31, sales#109, returns#110, profit#111]
Keys [5]: [channel#30, id#31, sales#109, returns#110, profit#111]
Functions: []
Aggregate Attributes: []
Results [5]: [channel#30, id#31, sales#109, returns#110, profit#111]

(101) Exchange
Input [5]: [channel#30, id#31, sales#109, returns#110, profit#111]
Arguments: hashpartitioning(channel#30, id#31, sales#109, returns#110, profit#111, 5), ENSURE_REQUIREMENTS, [plan_id=14]

(102) HashAggregate [codegen id : 82]
Input [5]: [channel#30, id#31, sales#109, returns#110, profit#111]
Keys [5]: [channel#30, id#31, sales#109, returns#110, profit#111]
Functions: []
Aggregate Attributes: []
Results [5]: [channel#30, id#31, sales#109, returns#110, profit#111]

(103) TakeOrderedAndProject
Input [5]: [channel#30, id#31, sales#109, returns#110, profit#111]
Arguments: 100, [channel#30 ASC NULLS FIRST, id#31 ASC NULLS FIRST], [channel#30, id#31, sales#109, returns#110, profit#111]

