== Physical Plan ==
TakeOrderedAndProject (30)
+- * HashAggregate (29)
   +- Exchange (28)
      +- * HashAggregate (27)
         +- * Expand (26)
            +- * Project (25)
               +- BroadcastNestedLoopJoin Inner BuildRight (24)
                  :- * Project (20)
                  :  +- * SortMergeJoin Inner (19)
                  :     :- * Sort (12)
                  :     :  +- Exchange (11)
                  :     :     +- * Project (10)
                  :     :        +- * BroadcastHashJoin Inner BuildRight (9)
                  :     :           :- * Filter (3)
                  :     :           :  +- * ColumnarToRow (2)
                  :     :           :     +- Scan parquet default.inventory (1)
                  :     :           +- BroadcastExchange (8)
                  :     :              +- * Project (7)
                  :     :                 +- * Filter (6)
                  :     :                    +- * ColumnarToRow (5)
                  :     :                       +- Scan parquet default.date_dim (4)
                  :     +- * Sort (18)
                  :        +- Exchange (17)
                  :           +- * Project (16)
                  :              +- * Filter (15)
                  :                 +- * ColumnarToRow (14)
                  :                    +- Scan parquet default.item (13)
                  +- BroadcastExchange (23)
                     +- * ColumnarToRow (22)
                        +- Scan parquet default.warehouse (21)


(1) Scan parquet default.inventory
Output [3]: [inv_date_sk#1, inv_item_sk#2, inv_quantity_on_hand#3]
Batched: true
Location [not included in comparison]/{warehouse_dir}/inventory]
PushedFilters: [IsNotNull(inv_date_sk), IsNotNull(inv_item_sk)]
ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_quantity_on_hand:int>

(2) ColumnarToRow [codegen id : 2]
Input [3]: [inv_date_sk#1, inv_item_sk#2, inv_quantity_on_hand#3]

(3) Filter [codegen id : 2]
Input [3]: [inv_date_sk#1, inv_item_sk#2, inv_quantity_on_hand#3]
Condition : (isnotnull(inv_date_sk#1) AND isnotnull(inv_item_sk#2))

(4) Scan parquet default.date_dim
Output [2]: [d_date_sk#4, d_month_seq#5]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(5) ColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#4, d_month_seq#5]

(6) Filter [codegen id : 1]
Input [2]: [d_date_sk#4, d_month_seq#5]
Condition : (((isnotnull(d_month_seq#5) AND (d_month_seq#5 >= 1200)) AND (d_month_seq#5 <= 1211)) AND isnotnull(d_date_sk#4))

(7) Project [codegen id : 1]
Output [1]: [d_date_sk#4]
Input [2]: [d_date_sk#4, d_month_seq#5]

(8) BroadcastExchange
Input [1]: [d_date_sk#4]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#6]

(9) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [inv_date_sk#1]
Right keys [1]: [d_date_sk#4]
Join condition: None

(10) Project [codegen id : 2]
Output [2]: [inv_item_sk#2, inv_quantity_on_hand#3]
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_quantity_on_hand#3, d_date_sk#4]

(11) Exchange
Input [2]: [inv_item_sk#2, inv_quantity_on_hand#3]
Arguments: hashpartitioning(inv_item_sk#2, 5), ENSURE_REQUIREMENTS, [id=#7]

(12) Sort [codegen id : 3]
Input [2]: [inv_item_sk#2, inv_quantity_on_hand#3]
Arguments: [inv_item_sk#2 ASC NULLS FIRST], false, 0

(13) Scan parquet default.item
Output [5]: [i_item_sk#8, i_brand#9, i_class#10, i_category#11, i_product_name#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>

(14) ColumnarToRow [codegen id : 4]
Input [5]: [i_item_sk#8, i_brand#9, i_class#10, i_category#11, i_product_name#12]

(15) Filter [codegen id : 4]
Input [5]: [i_item_sk#8, i_brand#9, i_class#10, i_category#11, i_product_name#12]
Condition : isnotnull(i_item_sk#8)

(16) Project [codegen id : 4]
Output [5]: [i_item_sk#8, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, i_brand#9, 50, false, true) AS i_brand#13, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, i_class#10, 50, false, true) AS i_class#14, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, i_category#11, 50, false, true) AS i_category#15, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, i_product_name#12, 50, false, true) AS i_product_name#16]
Input [5]: [i_item_sk#8, i_brand#9, i_class#10, i_category#11, i_product_name#12]

(17) Exchange
Input [5]: [i_item_sk#8, i_brand#13, i_class#14, i_category#15, i_product_name#16]
Arguments: hashpartitioning(i_item_sk#8, 5), ENSURE_REQUIREMENTS, [id=#17]

(18) Sort [codegen id : 5]
Input [5]: [i_item_sk#8, i_brand#13, i_class#14, i_category#15, i_product_name#16]
Arguments: [i_item_sk#8 ASC NULLS FIRST], false, 0

(19) SortMergeJoin [codegen id : 6]
Left keys [1]: [inv_item_sk#2]
Right keys [1]: [i_item_sk#8]
Join condition: None

(20) Project [codegen id : 6]
Output [5]: [inv_quantity_on_hand#3, i_brand#13, i_class#14, i_category#15, i_product_name#16]
Input [7]: [inv_item_sk#2, inv_quantity_on_hand#3, i_item_sk#8, i_brand#13, i_class#14, i_category#15, i_product_name#16]

(21) Scan parquet default.warehouse
Output: []
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
ReadSchema: struct<>

(22) ColumnarToRow [codegen id : 7]
Input: []

(23) BroadcastExchange
Input: []
Arguments: IdentityBroadcastMode, [id=#18]

(24) BroadcastNestedLoopJoin
Join condition: None

(25) Project [codegen id : 8]
Output [5]: [inv_quantity_on_hand#3, i_product_name#16 AS i_product_name#19, i_brand#13 AS i_brand#20, i_class#14 AS i_class#21, i_category#15 AS i_category#22]
Input [5]: [inv_quantity_on_hand#3, i_brand#13, i_class#14, i_category#15, i_product_name#16]

(26) Expand [codegen id : 8]
Input [5]: [inv_quantity_on_hand#3, i_product_name#19, i_brand#20, i_class#21, i_category#22]
Arguments: [List(inv_quantity_on_hand#3, i_product_name#19, i_brand#20, i_class#21, i_category#22, 0), List(inv_quantity_on_hand#3, i_product_name#19, i_brand#20, i_class#21, null, 1), List(inv_quantity_on_hand#3, i_product_name#19, i_brand#20, null, null, 3), List(inv_quantity_on_hand#3, i_product_name#19, null, null, null, 7), List(inv_quantity_on_hand#3, null, null, null, null, 15)], [inv_quantity_on_hand#3, i_product_name#23, i_brand#24, i_class#25, i_category#26, spark_grouping_id#27]

(27) HashAggregate [codegen id : 8]
Input [6]: [inv_quantity_on_hand#3, i_product_name#23, i_brand#24, i_class#25, i_category#26, spark_grouping_id#27]
Keys [5]: [i_product_name#23, i_brand#24, i_class#25, i_category#26, spark_grouping_id#27]
Functions [1]: [partial_avg(cast(inv_quantity_on_hand#3 as bigint))]
Aggregate Attributes [2]: [sum#28, count#29]
Results [7]: [i_product_name#23, i_brand#24, i_class#25, i_category#26, spark_grouping_id#27, sum#30, count#31]

(28) Exchange
Input [7]: [i_product_name#23, i_brand#24, i_class#25, i_category#26, spark_grouping_id#27, sum#30, count#31]
Arguments: hashpartitioning(i_product_name#23, i_brand#24, i_class#25, i_category#26, spark_grouping_id#27, 5), ENSURE_REQUIREMENTS, [id=#32]

(29) HashAggregate [codegen id : 9]
Input [7]: [i_product_name#23, i_brand#24, i_class#25, i_category#26, spark_grouping_id#27, sum#30, count#31]
Keys [5]: [i_product_name#23, i_brand#24, i_class#25, i_category#26, spark_grouping_id#27]
Functions [1]: [avg(cast(inv_quantity_on_hand#3 as bigint))]
Aggregate Attributes [1]: [avg(cast(inv_quantity_on_hand#3 as bigint))#33]
Results [5]: [i_product_name#23, i_brand#24, i_class#25, i_category#26, avg(cast(inv_quantity_on_hand#3 as bigint))#33 AS qoh#34]

(30) TakeOrderedAndProject
Input [5]: [i_product_name#23, i_brand#24, i_class#25, i_category#26, qoh#34]
Arguments: 100, [qoh#34 ASC NULLS FIRST, i_product_name#23 ASC NULLS FIRST, i_brand#24 ASC NULLS FIRST, i_class#25 ASC NULLS FIRST, i_category#26 ASC NULLS FIRST], [i_product_name#23, i_brand#24, i_class#25, i_category#26, qoh#34]

