== Physical Plan ==
TakeOrderedAndProject (39)
+- * Project (38)
   +- Window (37)
      +- * Sort (36)
         +- Exchange (35)
            +- * HashAggregate (34)
               +- Exchange (33)
                  +- * HashAggregate (32)
                     +- Union (31)
                        :- * HashAggregate (20)
                        :  +- Exchange (19)
                        :     +- * HashAggregate (18)
                        :        +- * Project (17)
                        :           +- * BroadcastHashJoin Inner BuildRight (16)
                        :              :- * Project (10)
                        :              :  +- * BroadcastHashJoin Inner BuildRight (9)
                        :              :     :- * Filter (3)
                        :              :     :  +- * ColumnarToRow (2)
                        :              :     :     +- Scan parquet default.web_sales (1)
                        :              :     +- BroadcastExchange (8)
                        :              :        +- * Project (7)
                        :              :           +- * Filter (6)
                        :              :              +- * ColumnarToRow (5)
                        :              :                 +- Scan parquet default.date_dim (4)
                        :              +- BroadcastExchange (15)
                        :                 +- * Project (14)
                        :                    +- * Filter (13)
                        :                       +- * ColumnarToRow (12)
                        :                          +- Scan parquet default.item (11)
                        :- * HashAggregate (25)
                        :  +- Exchange (24)
                        :     +- * HashAggregate (23)
                        :        +- * HashAggregate (22)
                        :           +- ReusedExchange (21)
                        +- * HashAggregate (30)
                           +- Exchange (29)
                              +- * HashAggregate (28)
                                 +- * HashAggregate (27)
                                    +- ReusedExchange (26)


(1) Scan parquet default.web_sales
Output [3]: [ws_sold_date_sk#1, ws_item_sk#2, ws_net_paid#3]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_sales]
PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_net_paid:decimal(7,2)>

(2) ColumnarToRow [codegen id : 3]
Input [3]: [ws_sold_date_sk#1, ws_item_sk#2, ws_net_paid#3]

(3) Filter [codegen id : 3]
Input [3]: [ws_sold_date_sk#1, ws_item_sk#2, ws_net_paid#3]
Condition : (isnotnull(ws_sold_date_sk#1) AND isnotnull(ws_item_sk#2))

(4) Scan parquet default.date_dim
Output [2]: [d_date_sk#4, d_month_seq#5]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(5) ColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#4, d_month_seq#5]

(6) Filter [codegen id : 1]
Input [2]: [d_date_sk#4, d_month_seq#5]
Condition : (((isnotnull(d_month_seq#5) AND (d_month_seq#5 >= 1212)) AND (d_month_seq#5 <= 1223)) AND isnotnull(d_date_sk#4))

(7) Project [codegen id : 1]
Output [1]: [d_date_sk#4]
Input [2]: [d_date_sk#4, d_month_seq#5]

(8) BroadcastExchange
Input [1]: [d_date_sk#4]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#6]

(9) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ws_sold_date_sk#1]
Right keys [1]: [d_date_sk#4]
Join condition: None

(10) Project [codegen id : 3]
Output [2]: [ws_item_sk#2, ws_net_paid#3]
Input [4]: [ws_sold_date_sk#1, ws_item_sk#2, ws_net_paid#3, d_date_sk#4]

(11) Scan parquet default.item
Output [3]: [i_item_sk#7, i_class#8, i_category#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>

(12) ColumnarToRow [codegen id : 2]
Input [3]: [i_item_sk#7, i_class#8, i_category#9]

(13) Filter [codegen id : 2]
Input [3]: [i_item_sk#7, i_class#8, i_category#9]
Condition : isnotnull(i_item_sk#7)

(14) Project [codegen id : 2]
Output [3]: [i_item_sk#7, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, i_class#8, 50, false, true) AS i_class#10, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, i_category#9, 50, false, true) AS i_category#11]
Input [3]: [i_item_sk#7, i_class#8, i_category#9]

(15) BroadcastExchange
Input [3]: [i_item_sk#7, i_class#10, i_category#11]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#12]

(16) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ws_item_sk#2]
Right keys [1]: [i_item_sk#7]
Join condition: None

(17) Project [codegen id : 3]
Output [3]: [ws_net_paid#3, i_class#10, i_category#11]
Input [5]: [ws_item_sk#2, ws_net_paid#3, i_item_sk#7, i_class#10, i_category#11]

(18) HashAggregate [codegen id : 3]
Input [3]: [ws_net_paid#3, i_class#10, i_category#11]
Keys [2]: [i_category#11, i_class#10]
Functions [1]: [partial_sum(UnscaledValue(ws_net_paid#3))]
Aggregate Attributes [1]: [sum#13]
Results [3]: [i_category#11, i_class#10, sum#14]

(19) Exchange
Input [3]: [i_category#11, i_class#10, sum#14]
Arguments: hashpartitioning(i_category#11, i_class#10, 5), ENSURE_REQUIREMENTS, [id=#15]

(20) HashAggregate [codegen id : 4]
Input [3]: [i_category#11, i_class#10, sum#14]
Keys [2]: [i_category#11, i_class#10]
Functions [1]: [sum(UnscaledValue(ws_net_paid#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_net_paid#3))#16]
Results [6]: [cast(MakeDecimal(sum(UnscaledValue(ws_net_paid#3))#16,17,2) as decimal(27,2)) AS total_sum#17, i_category#11, i_class#10, 0 AS g_category#18, 0 AS g_class#19, 0 AS lochierarchy#20]

(21) ReusedExchange [Reuses operator id: 19]
Output [3]: [i_category#21, i_class#22, sum#23]

(22) HashAggregate [codegen id : 8]
Input [3]: [i_category#21, i_class#22, sum#23]
Keys [2]: [i_category#21, i_class#22]
Functions [1]: [sum(UnscaledValue(ws_net_paid#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_net_paid#3))#24]
Results [2]: [MakeDecimal(sum(UnscaledValue(ws_net_paid#3))#24,17,2) AS total_sum#25, i_category#21]

(23) HashAggregate [codegen id : 8]
Input [2]: [total_sum#25, i_category#21]
Keys [1]: [i_category#21]
Functions [1]: [partial_sum(total_sum#25)]
Aggregate Attributes [2]: [sum#26, isEmpty#27]
Results [3]: [i_category#21, sum#28, isEmpty#29]

(24) Exchange
Input [3]: [i_category#21, sum#28, isEmpty#29]
Arguments: hashpartitioning(i_category#21, 5), ENSURE_REQUIREMENTS, [id=#30]

(25) HashAggregate [codegen id : 9]
Input [3]: [i_category#21, sum#28, isEmpty#29]
Keys [1]: [i_category#21]
Functions [1]: [sum(total_sum#25)]
Aggregate Attributes [1]: [sum(total_sum#25)#31]
Results [6]: [sum(total_sum#25)#31 AS total_sum#32, i_category#21 AS i_category#33, null AS i_class#34, 0 AS g_category#35, 1 AS g_class#36, 1 AS lochierarchy#37]

(26) ReusedExchange [Reuses operator id: 19]
Output [3]: [i_category#38, i_class#39, sum#40]

(27) HashAggregate [codegen id : 13]
Input [3]: [i_category#38, i_class#39, sum#40]
Keys [2]: [i_category#38, i_class#39]
Functions [1]: [sum(UnscaledValue(ws_net_paid#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_net_paid#3))#41]
Results [1]: [MakeDecimal(sum(UnscaledValue(ws_net_paid#3))#41,17,2) AS total_sum#25]

(28) HashAggregate [codegen id : 13]
Input [1]: [total_sum#25]
Keys: []
Functions [1]: [partial_sum(total_sum#25)]
Aggregate Attributes [2]: [sum#42, isEmpty#43]
Results [2]: [sum#44, isEmpty#45]

(29) Exchange
Input [2]: [sum#44, isEmpty#45]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [id=#46]

(30) HashAggregate [codegen id : 14]
Input [2]: [sum#44, isEmpty#45]
Keys: []
Functions [1]: [sum(total_sum#25)]
Aggregate Attributes [1]: [sum(total_sum#25)#47]
Results [6]: [sum(total_sum#25)#47 AS total_sum#48, null AS i_category#49, null AS i_class#50, 1 AS g_category#51, 1 AS g_class#52, 2 AS lochierarchy#53]

(31) Union

(32) HashAggregate [codegen id : 15]
Input [6]: [total_sum#17, i_category#11, i_class#10, g_category#18, g_class#19, lochierarchy#20]
Keys [6]: [total_sum#17, i_category#11, i_class#10, g_category#18, g_class#19, lochierarchy#20]
Functions: []
Aggregate Attributes: []
Results [6]: [total_sum#17, i_category#11, i_class#10, g_category#18, g_class#19, lochierarchy#20]

(33) Exchange
Input [6]: [total_sum#17, i_category#11, i_class#10, g_category#18, g_class#19, lochierarchy#20]
Arguments: hashpartitioning(total_sum#17, i_category#11, i_class#10, g_category#18, g_class#19, lochierarchy#20, 5), ENSURE_REQUIREMENTS, [id=#54]

(34) HashAggregate [codegen id : 16]
Input [6]: [total_sum#17, i_category#11, i_class#10, g_category#18, g_class#19, lochierarchy#20]
Keys [6]: [total_sum#17, i_category#11, i_class#10, g_category#18, g_class#19, lochierarchy#20]
Functions: []
Aggregate Attributes: []
Results [5]: [total_sum#17, i_category#11, i_class#10, lochierarchy#20, CASE WHEN (g_class#19 = 0) THEN i_category#11 END AS _w0#55]

(35) Exchange
Input [5]: [total_sum#17, i_category#11, i_class#10, lochierarchy#20, _w0#55]
Arguments: hashpartitioning(lochierarchy#20, _w0#55, 5), ENSURE_REQUIREMENTS, [id=#56]

(36) Sort [codegen id : 17]
Input [5]: [total_sum#17, i_category#11, i_class#10, lochierarchy#20, _w0#55]
Arguments: [lochierarchy#20 ASC NULLS FIRST, _w0#55 ASC NULLS FIRST, total_sum#17 DESC NULLS LAST], false, 0

(37) Window
Input [5]: [total_sum#17, i_category#11, i_class#10, lochierarchy#20, _w0#55]
Arguments: [rank(total_sum#17) windowspecdefinition(lochierarchy#20, _w0#55, total_sum#17 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#57], [lochierarchy#20, _w0#55], [total_sum#17 DESC NULLS LAST]

(38) Project [codegen id : 18]
Output [5]: [total_sum#17, i_category#11, i_class#10, lochierarchy#20, rank_within_parent#57]
Input [6]: [total_sum#17, i_category#11, i_class#10, lochierarchy#20, _w0#55, rank_within_parent#57]

(39) TakeOrderedAndProject
Input [5]: [total_sum#17, i_category#11, i_class#10, lochierarchy#20, rank_within_parent#57]
Arguments: 100, [lochierarchy#20 DESC NULLS LAST, CASE WHEN (lochierarchy#20 = 0) THEN i_category#11 END ASC NULLS FIRST, rank_within_parent#57 ASC NULLS FIRST], [total_sum#17, i_category#11, i_class#10, lochierarchy#20, rank_within_parent#57]

