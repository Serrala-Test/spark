== Physical Plan ==
TakeOrderedAndProject (32)
+- * Project (31)
   +- Window (30)
      +- * Sort (29)
         +- Exchange (28)
            +- * HashAggregate (27)
               +- Exchange (26)
                  +- * HashAggregate (25)
                     +- Union (24)
                        :- * HashAggregate (13)
                        :  +- Exchange (12)
                        :     +- * HashAggregate (11)
                        :        +- * Project (10)
                        :           +- * BroadcastHashJoin Inner BuildRight (9)
                        :              :- * Project (5)
                        :              :  +- * BroadcastHashJoin Inner BuildRight (4)
                        :              :     :- * ColumnarToRow (2)
                        :              :     :  +- Scan parquet default.web_sales (1)
                        :              :     +- ReusedExchange (3)
                        :              +- BroadcastExchange (8)
                        :                 +- * ColumnarToRow (7)
                        :                    +- Scan parquet default.item (6)
                        :- * HashAggregate (18)
                        :  +- Exchange (17)
                        :     +- * HashAggregate (16)
                        :        +- * HashAggregate (15)
                        :           +- ReusedExchange (14)
                        +- * HashAggregate (23)
                           +- Exchange (22)
                              +- * HashAggregate (21)
                                 +- * HashAggregate (20)
                                    +- ReusedExchange (19)


(1) Scan parquet default.web_sales
Output [3]: [ws_item_sk#1, ws_net_paid#2, ws_sold_date_sk#3]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#3), dynamicpruningexpression(ws_sold_date_sk#3 IN dynamicpruning#4)]
ReadSchema: struct<ws_item_sk:int,ws_net_paid:decimal(7,2)>

(2) ColumnarToRow [codegen id : 3]
Input [3]: [ws_item_sk#1, ws_net_paid#2, ws_sold_date_sk#3]

(3) ReusedExchange [Reuses operator id: 37]
Output [1]: [d_date_sk#5]

(4) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ws_sold_date_sk#3]
Right keys [1]: [d_date_sk#5]
Join condition: None

(5) Project [codegen id : 3]
Output [2]: [ws_item_sk#1, ws_net_paid#2]
Input [4]: [ws_item_sk#1, ws_net_paid#2, ws_sold_date_sk#3, d_date_sk#5]

(6) Scan parquet default.item
Output [3]: [i_item_sk#6, i_class#7, i_category#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>

(7) ColumnarToRow [codegen id : 2]
Input [3]: [i_item_sk#6, i_class#7, i_category#8]

(8) BroadcastExchange
Input [3]: [i_item_sk#6, i_class#7, i_category#8]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#9]

(9) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ws_item_sk#1]
Right keys [1]: [i_item_sk#6]
Join condition: None

(10) Project [codegen id : 3]
Output [3]: [ws_net_paid#2, i_class#7, i_category#8]
Input [5]: [ws_item_sk#1, ws_net_paid#2, i_item_sk#6, i_class#7, i_category#8]

(11) HashAggregate [codegen id : 3]
Input [3]: [ws_net_paid#2, i_class#7, i_category#8]
Keys [2]: [i_category#8, i_class#7]
Functions [1]: [partial_sum(UnscaledValue(ws_net_paid#2))]
Aggregate Attributes [1]: [sum#10]
Results [3]: [i_category#8, i_class#7, sum#11]

(12) Exchange
Input [3]: [i_category#8, i_class#7, sum#11]
Arguments: hashpartitioning(i_category#8, i_class#7, 5), ENSURE_REQUIREMENTS, [id=#12]

(13) HashAggregate [codegen id : 4]
Input [3]: [i_category#8, i_class#7, sum#11]
Keys [2]: [i_category#8, i_class#7]
Functions [1]: [sum(UnscaledValue(ws_net_paid#2))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_net_paid#2))#13]
Results [6]: [cast(MakeDecimal(sum(UnscaledValue(ws_net_paid#2))#13,17,2) as decimal(27,2)) AS total_sum#14, i_category#8, i_class#7, 0 AS g_category#15, 0 AS g_class#16, 0 AS lochierarchy#17]

(14) ReusedExchange [Reuses operator id: 12]
Output [3]: [i_category#18, i_class#19, sum#20]

(15) HashAggregate [codegen id : 8]
Input [3]: [i_category#18, i_class#19, sum#20]
Keys [2]: [i_category#18, i_class#19]
Functions [1]: [sum(UnscaledValue(ws_net_paid#21))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_net_paid#21))#22]
Results [2]: [MakeDecimal(sum(UnscaledValue(ws_net_paid#21))#22,17,2) AS total_sum#23, i_category#18]

(16) HashAggregate [codegen id : 8]
Input [2]: [total_sum#23, i_category#18]
Keys [1]: [i_category#18]
Functions [1]: [partial_sum(total_sum#23)]
Aggregate Attributes [2]: [sum#24, isEmpty#25]
Results [3]: [i_category#18, sum#26, isEmpty#27]

(17) Exchange
Input [3]: [i_category#18, sum#26, isEmpty#27]
Arguments: hashpartitioning(i_category#18, 5), ENSURE_REQUIREMENTS, [id=#28]

(18) HashAggregate [codegen id : 9]
Input [3]: [i_category#18, sum#26, isEmpty#27]
Keys [1]: [i_category#18]
Functions [1]: [sum(total_sum#23)]
Aggregate Attributes [1]: [sum(total_sum#23)#29]
Results [6]: [sum(total_sum#23)#29 AS total_sum#30, i_category#18, null AS i_class#31, 0 AS g_category#32, 1 AS g_class#33, 1 AS lochierarchy#34]

(19) ReusedExchange [Reuses operator id: 12]
Output [3]: [i_category#35, i_class#36, sum#37]

(20) HashAggregate [codegen id : 13]
Input [3]: [i_category#35, i_class#36, sum#37]
Keys [2]: [i_category#35, i_class#36]
Functions [1]: [sum(UnscaledValue(ws_net_paid#38))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_net_paid#38))#39]
Results [1]: [MakeDecimal(sum(UnscaledValue(ws_net_paid#38))#39,17,2) AS total_sum#23]

(21) HashAggregate [codegen id : 13]
Input [1]: [total_sum#23]
Keys: []
Functions [1]: [partial_sum(total_sum#23)]
Aggregate Attributes [2]: [sum#40, isEmpty#41]
Results [2]: [sum#42, isEmpty#43]

(22) Exchange
Input [2]: [sum#42, isEmpty#43]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [id=#44]

(23) HashAggregate [codegen id : 14]
Input [2]: [sum#42, isEmpty#43]
Keys: []
Functions [1]: [sum(total_sum#23)]
Aggregate Attributes [1]: [sum(total_sum#23)#45]
Results [6]: [sum(total_sum#23)#45 AS total_sum#46, null AS i_category#47, null AS i_class#48, 1 AS g_category#49, 1 AS g_class#50, 2 AS lochierarchy#51]

(24) Union

(25) HashAggregate [codegen id : 15]
Input [6]: [total_sum#14, i_category#8, i_class#7, g_category#15, g_class#16, lochierarchy#17]
Keys [6]: [total_sum#14, i_category#8, i_class#7, g_category#15, g_class#16, lochierarchy#17]
Functions: []
Aggregate Attributes: []
Results [6]: [total_sum#14, i_category#8, i_class#7, g_category#15, g_class#16, lochierarchy#17]

(26) Exchange
Input [6]: [total_sum#14, i_category#8, i_class#7, g_category#15, g_class#16, lochierarchy#17]
Arguments: hashpartitioning(total_sum#14, i_category#8, i_class#7, g_category#15, g_class#16, lochierarchy#17, 5), ENSURE_REQUIREMENTS, [id=#52]

(27) HashAggregate [codegen id : 16]
Input [6]: [total_sum#14, i_category#8, i_class#7, g_category#15, g_class#16, lochierarchy#17]
Keys [6]: [total_sum#14, i_category#8, i_class#7, g_category#15, g_class#16, lochierarchy#17]
Functions: []
Aggregate Attributes: []
Results [5]: [total_sum#14, i_category#8, i_class#7, lochierarchy#17, CASE WHEN (g_class#16 = 0) THEN i_category#8 END AS _w0#53]

(28) Exchange
Input [5]: [total_sum#14, i_category#8, i_class#7, lochierarchy#17, _w0#53]
Arguments: hashpartitioning(lochierarchy#17, _w0#53, 5), ENSURE_REQUIREMENTS, [id=#54]

(29) Sort [codegen id : 17]
Input [5]: [total_sum#14, i_category#8, i_class#7, lochierarchy#17, _w0#53]
Arguments: [lochierarchy#17 ASC NULLS FIRST, _w0#53 ASC NULLS FIRST, total_sum#14 DESC NULLS LAST], false, 0

(30) Window
Input [5]: [total_sum#14, i_category#8, i_class#7, lochierarchy#17, _w0#53]
Arguments: [rank(total_sum#14) windowspecdefinition(lochierarchy#17, _w0#53, total_sum#14 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#55], [lochierarchy#17, _w0#53], [total_sum#14 DESC NULLS LAST]

(31) Project [codegen id : 18]
Output [5]: [total_sum#14, i_category#8, i_class#7, lochierarchy#17, rank_within_parent#55]
Input [6]: [total_sum#14, i_category#8, i_class#7, lochierarchy#17, _w0#53, rank_within_parent#55]

(32) TakeOrderedAndProject
Input [5]: [total_sum#14, i_category#8, i_class#7, lochierarchy#17, rank_within_parent#55]
Arguments: 100, [lochierarchy#17 DESC NULLS LAST, CASE WHEN (lochierarchy#17 = 0) THEN i_category#8 END ASC NULLS FIRST, rank_within_parent#55 ASC NULLS FIRST], [total_sum#14, i_category#8, i_class#7, lochierarchy#17, rank_within_parent#55]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ws_sold_date_sk#3 IN dynamicpruning#4
BroadcastExchange (37)
+- * Project (36)
   +- * Filter (35)
      +- * ColumnarToRow (34)
         +- Scan parquet default.date_dim (33)


(33) Scan parquet default.date_dim
Output [2]: [d_date_sk#5, d_month_seq#56]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(34) ColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#5, d_month_seq#56]

(35) Filter [codegen id : 1]
Input [2]: [d_date_sk#5, d_month_seq#56]
Condition : ((d_month_seq#56 >= 1212) AND (d_month_seq#56 <= 1223))

(36) Project [codegen id : 1]
Output [1]: [d_date_sk#5]
Input [2]: [d_date_sk#5, d_month_seq#56]

(37) BroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#57]


