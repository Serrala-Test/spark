== Physical Plan ==
TakeOrderedAndProject (54)
+- * HashAggregate (53)
   +- Exchange (52)
      +- * HashAggregate (51)
         +- * Project (50)
            +- * BroadcastHashJoin Inner BuildRight (49)
               :- * Project (44)
               :  +- * BroadcastHashJoin Inner BuildRight (43)
               :     :- * Project (38)
               :     :  +- * BroadcastHashJoin Inner BuildRight (37)
               :     :     :- * Project (35)
               :     :     :  +- * BroadcastHashJoin Inner BuildRight (34)
               :     :     :     :- * Project (28)
               :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (27)
               :     :     :     :     :- * Project (21)
               :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (20)
               :     :     :     :     :     :- * Project (15)
               :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (14)
               :     :     :     :     :     :     :- * Project (9)
               :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (8)
               :     :     :     :     :     :     :     :- * Filter (3)
               :     :     :     :     :     :     :     :  +- * ColumnarToRow (2)
               :     :     :     :     :     :     :     :     +- Scan parquet default.catalog_sales (1)
               :     :     :     :     :     :     :     +- BroadcastExchange (7)
               :     :     :     :     :     :     :        +- * Filter (6)
               :     :     :     :     :     :     :           +- * ColumnarToRow (5)
               :     :     :     :     :     :     :              +- Scan parquet default.inventory (4)
               :     :     :     :     :     :     +- BroadcastExchange (13)
               :     :     :     :     :     :        +- * Filter (12)
               :     :     :     :     :     :           +- * ColumnarToRow (11)
               :     :     :     :     :     :              +- Scan parquet default.warehouse (10)
               :     :     :     :     :     +- BroadcastExchange (19)
               :     :     :     :     :        +- * Filter (18)
               :     :     :     :     :           +- * ColumnarToRow (17)
               :     :     :     :     :              +- Scan parquet default.item (16)
               :     :     :     :     +- BroadcastExchange (26)
               :     :     :     :        +- * Project (25)
               :     :     :     :           +- * Filter (24)
               :     :     :     :              +- * ColumnarToRow (23)
               :     :     :     :                 +- Scan parquet default.customer_demographics (22)
               :     :     :     +- BroadcastExchange (33)
               :     :     :        +- * Project (32)
               :     :     :           +- * Filter (31)
               :     :     :              +- * ColumnarToRow (30)
               :     :     :                 +- Scan parquet default.household_demographics (29)
               :     :     +- ReusedExchange (36)
               :     +- BroadcastExchange (42)
               :        +- * Filter (41)
               :           +- * ColumnarToRow (40)
               :              +- Scan parquet default.date_dim (39)
               +- BroadcastExchange (48)
                  +- * Filter (47)
                     +- * ColumnarToRow (46)
                        +- Scan parquet default.date_dim (45)


(1) Scan parquet default.catalog_sales
Output [6]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_sold_date_sk#6]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#6), dynamicpruningexpression(cs_sold_date_sk#6 IN dynamicpruning#7)]
PushedFilters: [IsNotNull(cs_quantity), IsNotNull(cs_item_sk), IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_hdemo_sk), IsNotNull(cs_ship_date_sk)]
ReadSchema: struct<cs_ship_date_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_item_sk:int,cs_quantity:int>

(2) ColumnarToRow [codegen id : 9]
Input [6]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_sold_date_sk#6]

(3) Filter [codegen id : 9]
Input [6]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_sold_date_sk#6]
Condition : ((((isnotnull(cs_quantity#5) AND isnotnull(cs_item_sk#4)) AND isnotnull(cs_bill_cdemo_sk#2)) AND isnotnull(cs_bill_hdemo_sk#3)) AND isnotnull(cs_ship_date_sk#1))

(4) Scan parquet default.inventory
Output [4]: [inv_item_sk#8, inv_warehouse_sk#9, inv_quantity_on_hand#10, inv_date_sk#11]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(inv_date_sk#11)]
PushedFilters: [IsNotNull(inv_quantity_on_hand), IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)]
ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>

(5) ColumnarToRow [codegen id : 1]
Input [4]: [inv_item_sk#8, inv_warehouse_sk#9, inv_quantity_on_hand#10, inv_date_sk#11]

(6) Filter [codegen id : 1]
Input [4]: [inv_item_sk#8, inv_warehouse_sk#9, inv_quantity_on_hand#10, inv_date_sk#11]
Condition : ((isnotnull(inv_quantity_on_hand#10) AND isnotnull(inv_item_sk#8)) AND isnotnull(inv_warehouse_sk#9))

(7) BroadcastExchange
Input [4]: [inv_item_sk#8, inv_warehouse_sk#9, inv_quantity_on_hand#10, inv_date_sk#11]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#12]

(8) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [cs_item_sk#4]
Right keys [1]: [inv_item_sk#8]
Join condition: (inv_quantity_on_hand#10 < cs_quantity#5)

(9) Project [codegen id : 9]
Output [7]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_sold_date_sk#6, inv_warehouse_sk#9, inv_date_sk#11]
Input [10]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_sold_date_sk#6, inv_item_sk#8, inv_warehouse_sk#9, inv_quantity_on_hand#10, inv_date_sk#11]

(10) Scan parquet default.warehouse
Output [2]: [w_warehouse_sk#13, w_warehouse_name#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>

(11) ColumnarToRow [codegen id : 2]
Input [2]: [w_warehouse_sk#13, w_warehouse_name#14]

(12) Filter [codegen id : 2]
Input [2]: [w_warehouse_sk#13, w_warehouse_name#14]
Condition : isnotnull(w_warehouse_sk#13)

(13) BroadcastExchange
Input [2]: [w_warehouse_sk#13, w_warehouse_name#14]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#15]

(14) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [inv_warehouse_sk#9]
Right keys [1]: [w_warehouse_sk#13]
Join condition: None

(15) Project [codegen id : 9]
Output [7]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_sold_date_sk#6, inv_date_sk#11, w_warehouse_name#14]
Input [9]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_sold_date_sk#6, inv_warehouse_sk#9, inv_date_sk#11, w_warehouse_sk#13, w_warehouse_name#14]

(16) Scan parquet default.item
Output [2]: [i_item_sk#16, i_item_desc#17]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_desc:string>

(17) ColumnarToRow [codegen id : 3]
Input [2]: [i_item_sk#16, i_item_desc#17]

(18) Filter [codegen id : 3]
Input [2]: [i_item_sk#16, i_item_desc#17]
Condition : isnotnull(i_item_sk#16)

(19) BroadcastExchange
Input [2]: [i_item_sk#16, i_item_desc#17]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#18]

(20) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [cs_item_sk#4]
Right keys [1]: [i_item_sk#16]
Join condition: None

(21) Project [codegen id : 9]
Output [7]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_sold_date_sk#6, inv_date_sk#11, w_warehouse_name#14, i_item_desc#17]
Input [9]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_sold_date_sk#6, inv_date_sk#11, w_warehouse_name#14, i_item_sk#16, i_item_desc#17]

(22) Scan parquet default.customer_demographics
Output [2]: [cd_demo_sk#19, cd_marital_status#20]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_marital_status), EqualTo(cd_marital_status,M), IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>

(23) ColumnarToRow [codegen id : 4]
Input [2]: [cd_demo_sk#19, cd_marital_status#20]

(24) Filter [codegen id : 4]
Input [2]: [cd_demo_sk#19, cd_marital_status#20]
Condition : ((isnotnull(cd_marital_status#20) AND (cd_marital_status#20 = M)) AND isnotnull(cd_demo_sk#19))

(25) Project [codegen id : 4]
Output [1]: [cd_demo_sk#19]
Input [2]: [cd_demo_sk#19, cd_marital_status#20]

(26) BroadcastExchange
Input [1]: [cd_demo_sk#19]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#21]

(27) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [cs_bill_cdemo_sk#2]
Right keys [1]: [cd_demo_sk#19]
Join condition: None

(28) Project [codegen id : 9]
Output [6]: [cs_ship_date_sk#1, cs_bill_hdemo_sk#3, cs_sold_date_sk#6, inv_date_sk#11, w_warehouse_name#14, i_item_desc#17]
Input [8]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_sold_date_sk#6, inv_date_sk#11, w_warehouse_name#14, i_item_desc#17, cd_demo_sk#19]

(29) Scan parquet default.household_demographics
Output [2]: [hd_demo_sk#22, hd_buy_potential#23]
Batched: true
Location [not included in comparison]/{warehouse_dir}/household_demographics]
PushedFilters: [IsNotNull(hd_buy_potential), EqualTo(hd_buy_potential,1001-5000      ), IsNotNull(hd_demo_sk)]
ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>

(30) ColumnarToRow [codegen id : 5]
Input [2]: [hd_demo_sk#22, hd_buy_potential#23]

(31) Filter [codegen id : 5]
Input [2]: [hd_demo_sk#22, hd_buy_potential#23]
Condition : ((isnotnull(hd_buy_potential#23) AND (hd_buy_potential#23 = 1001-5000      )) AND isnotnull(hd_demo_sk#22))

(32) Project [codegen id : 5]
Output [1]: [hd_demo_sk#22]
Input [2]: [hd_demo_sk#22, hd_buy_potential#23]

(33) BroadcastExchange
Input [1]: [hd_demo_sk#22]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#24]

(34) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [cs_bill_hdemo_sk#3]
Right keys [1]: [hd_demo_sk#22]
Join condition: None

(35) Project [codegen id : 9]
Output [5]: [cs_ship_date_sk#1, cs_sold_date_sk#6, inv_date_sk#11, w_warehouse_name#14, i_item_desc#17]
Input [7]: [cs_ship_date_sk#1, cs_bill_hdemo_sk#3, cs_sold_date_sk#6, inv_date_sk#11, w_warehouse_name#14, i_item_desc#17, hd_demo_sk#22]

(36) ReusedExchange [Reuses operator id: 59]
Output [3]: [d_date_sk#25, d_date#26, d_week_seq#27]

(37) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [cs_sold_date_sk#6]
Right keys [1]: [d_date_sk#25]
Join condition: None

(38) Project [codegen id : 9]
Output [6]: [cs_ship_date_sk#1, inv_date_sk#11, w_warehouse_name#14, i_item_desc#17, d_date#26, d_week_seq#27]
Input [8]: [cs_ship_date_sk#1, cs_sold_date_sk#6, inv_date_sk#11, w_warehouse_name#14, i_item_desc#17, d_date_sk#25, d_date#26, d_week_seq#27]

(39) Scan parquet default.date_dim
Output [2]: [d_date_sk#28, d_week_seq#29]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_week_seq:int>

(40) ColumnarToRow [codegen id : 7]
Input [2]: [d_date_sk#28, d_week_seq#29]

(41) Filter [codegen id : 7]
Input [2]: [d_date_sk#28, d_week_seq#29]
Condition : (isnotnull(d_week_seq#29) AND isnotnull(d_date_sk#28))

(42) BroadcastExchange
Input [2]: [d_date_sk#28, d_week_seq#29]
Arguments: HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, false] as bigint), 32) | (cast(input[0, int, false] as bigint) & 4294967295))),false), [id=#30]

(43) BroadcastHashJoin [codegen id : 9]
Left keys [2]: [d_week_seq#27, inv_date_sk#11]
Right keys [2]: [d_week_seq#29, d_date_sk#28]
Join condition: None

(44) Project [codegen id : 9]
Output [5]: [cs_ship_date_sk#1, w_warehouse_name#14, i_item_desc#17, d_date#26, d_week_seq#27]
Input [8]: [cs_ship_date_sk#1, inv_date_sk#11, w_warehouse_name#14, i_item_desc#17, d_date#26, d_week_seq#27, d_date_sk#28, d_week_seq#29]

(45) Scan parquet default.date_dim
Output [2]: [d_date_sk#31, d_date#32]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(46) ColumnarToRow [codegen id : 8]
Input [2]: [d_date_sk#31, d_date#32]

(47) Filter [codegen id : 8]
Input [2]: [d_date_sk#31, d_date#32]
Condition : (isnotnull(d_date#32) AND isnotnull(d_date_sk#31))

(48) BroadcastExchange
Input [2]: [d_date_sk#31, d_date#32]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#33]

(49) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [cs_ship_date_sk#1]
Right keys [1]: [d_date_sk#31]
Join condition: (d_date#32 > date_add(d_date#26, 5))

(50) Project [codegen id : 9]
Output [3]: [w_warehouse_name#14, i_item_desc#17, d_week_seq#27]
Input [7]: [cs_ship_date_sk#1, w_warehouse_name#14, i_item_desc#17, d_date#26, d_week_seq#27, d_date_sk#31, d_date#32]

(51) HashAggregate [codegen id : 9]
Input [3]: [w_warehouse_name#14, i_item_desc#17, d_week_seq#27]
Keys [3]: [i_item_desc#17, w_warehouse_name#14, d_week_seq#27]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#34]
Results [4]: [i_item_desc#17, w_warehouse_name#14, d_week_seq#27, count#35]

(52) Exchange
Input [4]: [i_item_desc#17, w_warehouse_name#14, d_week_seq#27, count#35]
Arguments: hashpartitioning(i_item_desc#17, w_warehouse_name#14, d_week_seq#27, 5), ENSURE_REQUIREMENTS, [id=#36]

(53) HashAggregate [codegen id : 10]
Input [4]: [i_item_desc#17, w_warehouse_name#14, d_week_seq#27, count#35]
Keys [3]: [i_item_desc#17, w_warehouse_name#14, d_week_seq#27]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#37]
Results [6]: [i_item_desc#17, w_warehouse_name#14, d_week_seq#27, count(1)#37 AS no_promo#38, count(1)#37 AS promo#39, count(1)#37 AS total_cnt#40]

(54) TakeOrderedAndProject
Input [6]: [i_item_desc#17, w_warehouse_name#14, d_week_seq#27, no_promo#38, promo#39, total_cnt#40]
Arguments: 100, [total_cnt#40 DESC NULLS LAST, i_item_desc#17 ASC NULLS FIRST, w_warehouse_name#14 ASC NULLS FIRST, d_week_seq#27 ASC NULLS FIRST], [i_item_desc#17, w_warehouse_name#14, d_week_seq#27, no_promo#38, promo#39, total_cnt#40]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = cs_sold_date_sk#6 IN dynamicpruning#7
BroadcastExchange (59)
+- * Project (58)
   +- * Filter (57)
      +- * ColumnarToRow (56)
         +- Scan parquet default.date_dim (55)


(55) Scan parquet default.date_dim
Output [4]: [d_date_sk#25, d_date#26, d_week_seq#27, d_year#41]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk), IsNotNull(d_week_seq), IsNotNull(d_date)]
ReadSchema: struct<d_date_sk:int,d_date:date,d_week_seq:int,d_year:int>

(56) ColumnarToRow [codegen id : 1]
Input [4]: [d_date_sk#25, d_date#26, d_week_seq#27, d_year#41]

(57) Filter [codegen id : 1]
Input [4]: [d_date_sk#25, d_date#26, d_week_seq#27, d_year#41]
Condition : ((((isnotnull(d_year#41) AND (d_year#41 = 2001)) AND isnotnull(d_date_sk#25)) AND isnotnull(d_week_seq#27)) AND isnotnull(d_date#26))

(58) Project [codegen id : 1]
Output [3]: [d_date_sk#25, d_date#26, d_week_seq#27]
Input [4]: [d_date_sk#25, d_date#26, d_week_seq#27, d_year#41]

(59) BroadcastExchange
Input [3]: [d_date_sk#25, d_date#26, d_week_seq#27]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#42]


