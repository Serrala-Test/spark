== Physical Plan ==
TakeOrderedAndProject (72)
+- * HashAggregate (71)
   +- Exchange (70)
      +- * HashAggregate (69)
         +- * Project (68)
            +- * BroadcastHashJoin LeftOuter BuildRight (67)
               :- * Project (62)
               :  +- * BroadcastHashJoin LeftOuter BuildRight (61)
               :     :- * Project (56)
               :     :  +- * BroadcastHashJoin Inner BuildRight (55)
               :     :     :- * Project (50)
               :     :     :  +- * BroadcastHashJoin Inner BuildRight (49)
               :     :     :     :- * Project (44)
               :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (43)
               :     :     :     :     :- * Project (37)
               :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (36)
               :     :     :     :     :     :- * Project (30)
               :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (29)
               :     :     :     :     :     :     :- * Project (23)
               :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (22)
               :     :     :     :     :     :     :     :- * Project (16)
               :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (15)
               :     :     :     :     :     :     :     :     :- * Project (9)
               :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (8)
               :     :     :     :     :     :     :     :     :     :- * Filter (3)
               :     :     :     :     :     :     :     :     :     :  +- * ColumnarToRow (2)
               :     :     :     :     :     :     :     :     :     :     +- Scan parquet default.catalog_sales (1)
               :     :     :     :     :     :     :     :     :     +- BroadcastExchange (7)
               :     :     :     :     :     :     :     :     :        +- * Filter (6)
               :     :     :     :     :     :     :     :     :           +- * ColumnarToRow (5)
               :     :     :     :     :     :     :     :     :              +- Scan parquet default.inventory (4)
               :     :     :     :     :     :     :     :     +- BroadcastExchange (14)
               :     :     :     :     :     :     :     :        +- * Project (13)
               :     :     :     :     :     :     :     :           +- * Filter (12)
               :     :     :     :     :     :     :     :              +- * ColumnarToRow (11)
               :     :     :     :     :     :     :     :                 +- Scan parquet default.warehouse (10)
               :     :     :     :     :     :     :     +- BroadcastExchange (21)
               :     :     :     :     :     :     :        +- * Project (20)
               :     :     :     :     :     :     :           +- * Filter (19)
               :     :     :     :     :     :     :              +- * ColumnarToRow (18)
               :     :     :     :     :     :     :                 +- Scan parquet default.item (17)
               :     :     :     :     :     :     +- BroadcastExchange (28)
               :     :     :     :     :     :        +- * Project (27)
               :     :     :     :     :     :           +- * Filter (26)
               :     :     :     :     :     :              +- * ColumnarToRow (25)
               :     :     :     :     :     :                 +- Scan parquet default.customer_demographics (24)
               :     :     :     :     :     +- BroadcastExchange (35)
               :     :     :     :     :        +- * Project (34)
               :     :     :     :     :           +- * Filter (33)
               :     :     :     :     :              +- * ColumnarToRow (32)
               :     :     :     :     :                 +- Scan parquet default.household_demographics (31)
               :     :     :     :     +- BroadcastExchange (42)
               :     :     :     :        +- * Project (41)
               :     :     :     :           +- * Filter (40)
               :     :     :     :              +- * ColumnarToRow (39)
               :     :     :     :                 +- Scan parquet default.date_dim (38)
               :     :     :     +- BroadcastExchange (48)
               :     :     :        +- * Filter (47)
               :     :     :           +- * ColumnarToRow (46)
               :     :     :              +- Scan parquet default.date_dim (45)
               :     :     +- BroadcastExchange (54)
               :     :        +- * Filter (53)
               :     :           +- * ColumnarToRow (52)
               :     :              +- Scan parquet default.date_dim (51)
               :     +- BroadcastExchange (60)
               :        +- * Filter (59)
               :           +- * ColumnarToRow (58)
               :              +- Scan parquet default.promotion (57)
               +- BroadcastExchange (66)
                  +- * Filter (65)
                     +- * ColumnarToRow (64)
                        +- Scan parquet default.catalog_returns (63)


(1) Scan parquet default.catalog_sales
Output [8]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_sales]
PushedFilters: [IsNotNull(cs_quantity), IsNotNull(cs_item_sk), IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_hdemo_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_ship_date_sk)]
ReadSchema: struct<cs_sold_date_sk:int,cs_ship_date_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:int,cs_quantity:int>

(2) ColumnarToRow [codegen id : 11]
Input [8]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8]

(3) Filter [codegen id : 11]
Input [8]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8]
Condition : (((((isnotnull(cs_quantity#8) AND isnotnull(cs_item_sk#5)) AND isnotnull(cs_bill_cdemo_sk#3)) AND isnotnull(cs_bill_hdemo_sk#4)) AND isnotnull(cs_sold_date_sk#1)) AND isnotnull(cs_ship_date_sk#2))

(4) Scan parquet default.inventory
Output [4]: [inv_date_sk#9, inv_item_sk#10, inv_warehouse_sk#11, inv_quantity_on_hand#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/inventory]
PushedFilters: [IsNotNull(inv_quantity_on_hand), IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk), IsNotNull(inv_date_sk)]
ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>

(5) ColumnarToRow [codegen id : 1]
Input [4]: [inv_date_sk#9, inv_item_sk#10, inv_warehouse_sk#11, inv_quantity_on_hand#12]

(6) Filter [codegen id : 1]
Input [4]: [inv_date_sk#9, inv_item_sk#10, inv_warehouse_sk#11, inv_quantity_on_hand#12]
Condition : (((isnotnull(inv_quantity_on_hand#12) AND isnotnull(inv_item_sk#10)) AND isnotnull(inv_warehouse_sk#11)) AND isnotnull(inv_date_sk#9))

(7) BroadcastExchange
Input [4]: [inv_date_sk#9, inv_item_sk#10, inv_warehouse_sk#11, inv_quantity_on_hand#12]
Arguments: HashedRelationBroadcastMode(List(cast(input[1, int, false] as bigint)),false), [id=#13]

(8) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_item_sk#5]
Right keys [1]: [inv_item_sk#10]
Join condition: (inv_quantity_on_hand#12 < cs_quantity#8)

(9) Project [codegen id : 11]
Output [9]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, inv_date_sk#9, inv_warehouse_sk#11]
Input [12]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, cs_quantity#8, inv_date_sk#9, inv_item_sk#10, inv_warehouse_sk#11, inv_quantity_on_hand#12]

(10) Scan parquet default.warehouse
Output [2]: [w_warehouse_sk#14, w_warehouse_name#15]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>

(11) ColumnarToRow [codegen id : 2]
Input [2]: [w_warehouse_sk#14, w_warehouse_name#15]

(12) Filter [codegen id : 2]
Input [2]: [w_warehouse_sk#14, w_warehouse_name#15]
Condition : isnotnull(w_warehouse_sk#14)

(13) Project [codegen id : 2]
Output [2]: [w_warehouse_sk#14, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, lengthCheck, w_warehouse_name#15, 20, false, true) AS w_warehouse_name#16]
Input [2]: [w_warehouse_sk#14, w_warehouse_name#15]

(14) BroadcastExchange
Input [2]: [w_warehouse_sk#14, w_warehouse_name#16]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#17]

(15) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [inv_warehouse_sk#11]
Right keys [1]: [w_warehouse_sk#14]
Join condition: None

(16) Project [codegen id : 11]
Output [9]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, inv_date_sk#9, w_warehouse_name#16]
Input [11]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, inv_date_sk#9, inv_warehouse_sk#11, w_warehouse_sk#14, w_warehouse_name#16]

(17) Scan parquet default.item
Output [2]: [i_item_sk#18, i_item_desc#19]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_desc:string>

(18) ColumnarToRow [codegen id : 3]
Input [2]: [i_item_sk#18, i_item_desc#19]

(19) Filter [codegen id : 3]
Input [2]: [i_item_sk#18, i_item_desc#19]
Condition : isnotnull(i_item_sk#18)

(20) Project [codegen id : 3]
Output [2]: [i_item_sk#18, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, lengthCheck, i_item_desc#19, 200, false, true) AS i_item_desc#20]
Input [2]: [i_item_sk#18, i_item_desc#19]

(21) BroadcastExchange
Input [2]: [i_item_sk#18, i_item_desc#20]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#21]

(22) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_item_sk#5]
Right keys [1]: [i_item_sk#18]
Join condition: None

(23) Project [codegen id : 11]
Output [10]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, inv_date_sk#9, w_warehouse_name#16, i_item_desc#20]
Input [11]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, inv_date_sk#9, w_warehouse_name#16, i_item_sk#18, i_item_desc#20]

(24) Scan parquet default.customer_demographics
Output [2]: [cd_demo_sk#22, cd_marital_status#23]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>

(25) ColumnarToRow [codegen id : 4]
Input [2]: [cd_demo_sk#22, cd_marital_status#23]

(26) Filter [codegen id : 4]
Input [2]: [cd_demo_sk#22, cd_marital_status#23]
Condition : ((staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, cd_marital_status#23, 1, false, true) = M) AND isnotnull(cd_demo_sk#22))

(27) Project [codegen id : 4]
Output [1]: [cd_demo_sk#22]
Input [2]: [cd_demo_sk#22, cd_marital_status#23]

(28) BroadcastExchange
Input [1]: [cd_demo_sk#22]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#24]

(29) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_bill_cdemo_sk#3]
Right keys [1]: [cd_demo_sk#22]
Join condition: None

(30) Project [codegen id : 11]
Output [9]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, inv_date_sk#9, w_warehouse_name#16, i_item_desc#20]
Input [11]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_bill_cdemo_sk#3, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, inv_date_sk#9, w_warehouse_name#16, i_item_desc#20, cd_demo_sk#22]

(31) Scan parquet default.household_demographics
Output [2]: [hd_demo_sk#25, hd_buy_potential#26]
Batched: true
Location [not included in comparison]/{warehouse_dir}/household_demographics]
PushedFilters: [IsNotNull(hd_demo_sk)]
ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>

(32) ColumnarToRow [codegen id : 5]
Input [2]: [hd_demo_sk#25, hd_buy_potential#26]

(33) Filter [codegen id : 5]
Input [2]: [hd_demo_sk#25, hd_buy_potential#26]
Condition : ((staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, hd_buy_potential#26, 15, false, true) = 1001-5000      ) AND isnotnull(hd_demo_sk#25))

(34) Project [codegen id : 5]
Output [1]: [hd_demo_sk#25]
Input [2]: [hd_demo_sk#25, hd_buy_potential#26]

(35) BroadcastExchange
Input [1]: [hd_demo_sk#25]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#27]

(36) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_bill_hdemo_sk#4]
Right keys [1]: [hd_demo_sk#25]
Join condition: None

(37) Project [codegen id : 11]
Output [8]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, inv_date_sk#9, w_warehouse_name#16, i_item_desc#20]
Input [10]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_bill_hdemo_sk#4, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, inv_date_sk#9, w_warehouse_name#16, i_item_desc#20, hd_demo_sk#25]

(38) Scan parquet default.date_dim
Output [4]: [d_date_sk#28, d_date#29, d_week_seq#30, d_year#31]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk), IsNotNull(d_week_seq), IsNotNull(d_date)]
ReadSchema: struct<d_date_sk:int,d_date:date,d_week_seq:int,d_year:int>

(39) ColumnarToRow [codegen id : 6]
Input [4]: [d_date_sk#28, d_date#29, d_week_seq#30, d_year#31]

(40) Filter [codegen id : 6]
Input [4]: [d_date_sk#28, d_date#29, d_week_seq#30, d_year#31]
Condition : ((((isnotnull(d_year#31) AND (d_year#31 = 2001)) AND isnotnull(d_date_sk#28)) AND isnotnull(d_week_seq#30)) AND isnotnull(d_date#29))

(41) Project [codegen id : 6]
Output [3]: [d_date_sk#28, d_date#29, d_week_seq#30]
Input [4]: [d_date_sk#28, d_date#29, d_week_seq#30, d_year#31]

(42) BroadcastExchange
Input [3]: [d_date_sk#28, d_date#29, d_week_seq#30]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#32]

(43) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_sold_date_sk#1]
Right keys [1]: [d_date_sk#28]
Join condition: None

(44) Project [codegen id : 11]
Output [9]: [cs_ship_date_sk#2, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, inv_date_sk#9, w_warehouse_name#16, i_item_desc#20, d_date#29, d_week_seq#30]
Input [11]: [cs_sold_date_sk#1, cs_ship_date_sk#2, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, inv_date_sk#9, w_warehouse_name#16, i_item_desc#20, d_date_sk#28, d_date#29, d_week_seq#30]

(45) Scan parquet default.date_dim
Output [2]: [d_date_sk#33, d_week_seq#34]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_week_seq:int>

(46) ColumnarToRow [codegen id : 7]
Input [2]: [d_date_sk#33, d_week_seq#34]

(47) Filter [codegen id : 7]
Input [2]: [d_date_sk#33, d_week_seq#34]
Condition : (isnotnull(d_week_seq#34) AND isnotnull(d_date_sk#33))

(48) BroadcastExchange
Input [2]: [d_date_sk#33, d_week_seq#34]
Arguments: HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, false] as bigint), 32) | (cast(input[0, int, false] as bigint) & 4294967295))),false), [id=#35]

(49) BroadcastHashJoin [codegen id : 11]
Left keys [2]: [d_week_seq#30, inv_date_sk#9]
Right keys [2]: [d_week_seq#34, d_date_sk#33]
Join condition: None

(50) Project [codegen id : 11]
Output [8]: [cs_ship_date_sk#2, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, w_warehouse_name#16, i_item_desc#20, d_date#29, d_week_seq#30]
Input [11]: [cs_ship_date_sk#2, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, inv_date_sk#9, w_warehouse_name#16, i_item_desc#20, d_date#29, d_week_seq#30, d_date_sk#33, d_week_seq#34]

(51) Scan parquet default.date_dim
Output [2]: [d_date_sk#36, d_date#37]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(52) ColumnarToRow [codegen id : 8]
Input [2]: [d_date_sk#36, d_date#37]

(53) Filter [codegen id : 8]
Input [2]: [d_date_sk#36, d_date#37]
Condition : (isnotnull(d_date#37) AND isnotnull(d_date_sk#36))

(54) BroadcastExchange
Input [2]: [d_date_sk#36, d_date#37]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#38]

(55) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_ship_date_sk#2]
Right keys [1]: [d_date_sk#36]
Join condition: (d_date#37 > d_date#29 + 5 days)

(56) Project [codegen id : 11]
Output [6]: [cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, w_warehouse_name#16, i_item_desc#20, d_week_seq#30]
Input [10]: [cs_ship_date_sk#2, cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, w_warehouse_name#16, i_item_desc#20, d_date#29, d_week_seq#30, d_date_sk#36, d_date#37]

(57) Scan parquet default.promotion
Output [1]: [p_promo_sk#39]
Batched: true
Location [not included in comparison]/{warehouse_dir}/promotion]
PushedFilters: [IsNotNull(p_promo_sk)]
ReadSchema: struct<p_promo_sk:int>

(58) ColumnarToRow [codegen id : 9]
Input [1]: [p_promo_sk#39]

(59) Filter [codegen id : 9]
Input [1]: [p_promo_sk#39]
Condition : isnotnull(p_promo_sk#39)

(60) BroadcastExchange
Input [1]: [p_promo_sk#39]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#40]

(61) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_promo_sk#6]
Right keys [1]: [p_promo_sk#39]
Join condition: None

(62) Project [codegen id : 11]
Output [5]: [cs_item_sk#5, cs_order_number#7, w_warehouse_name#16, i_item_desc#20, d_week_seq#30]
Input [7]: [cs_item_sk#5, cs_promo_sk#6, cs_order_number#7, w_warehouse_name#16, i_item_desc#20, d_week_seq#30, p_promo_sk#39]

(63) Scan parquet default.catalog_returns
Output [2]: [cr_item_sk#41, cr_order_number#42]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_returns]
PushedFilters: [IsNotNull(cr_item_sk), IsNotNull(cr_order_number)]
ReadSchema: struct<cr_item_sk:int,cr_order_number:int>

(64) ColumnarToRow [codegen id : 10]
Input [2]: [cr_item_sk#41, cr_order_number#42]

(65) Filter [codegen id : 10]
Input [2]: [cr_item_sk#41, cr_order_number#42]
Condition : (isnotnull(cr_item_sk#41) AND isnotnull(cr_order_number#42))

(66) BroadcastExchange
Input [2]: [cr_item_sk#41, cr_order_number#42]
Arguments: HashedRelationBroadcastMode(List((shiftleft(cast(input[0, int, false] as bigint), 32) | (cast(input[1, int, false] as bigint) & 4294967295))),false), [id=#43]

(67) BroadcastHashJoin [codegen id : 11]
Left keys [2]: [cs_item_sk#5, cs_order_number#7]
Right keys [2]: [cr_item_sk#41, cr_order_number#42]
Join condition: None

(68) Project [codegen id : 11]
Output [3]: [w_warehouse_name#16, i_item_desc#20, d_week_seq#30]
Input [7]: [cs_item_sk#5, cs_order_number#7, w_warehouse_name#16, i_item_desc#20, d_week_seq#30, cr_item_sk#41, cr_order_number#42]

(69) HashAggregate [codegen id : 11]
Input [3]: [w_warehouse_name#16, i_item_desc#20, d_week_seq#30]
Keys [3]: [i_item_desc#20, w_warehouse_name#16, d_week_seq#30]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#44]
Results [4]: [i_item_desc#20, w_warehouse_name#16, d_week_seq#30, count#45]

(70) Exchange
Input [4]: [i_item_desc#20, w_warehouse_name#16, d_week_seq#30, count#45]
Arguments: hashpartitioning(i_item_desc#20, w_warehouse_name#16, d_week_seq#30, 5), ENSURE_REQUIREMENTS, [id=#46]

(71) HashAggregate [codegen id : 12]
Input [4]: [i_item_desc#20, w_warehouse_name#16, d_week_seq#30, count#45]
Keys [3]: [i_item_desc#20, w_warehouse_name#16, d_week_seq#30]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#47]
Results [6]: [i_item_desc#20, w_warehouse_name#16, d_week_seq#30, count(1)#47 AS no_promo#48, count(1)#47 AS promo#49, count(1)#47 AS total_cnt#50]

(72) TakeOrderedAndProject
Input [6]: [i_item_desc#20, w_warehouse_name#16, d_week_seq#30, no_promo#48, promo#49, total_cnt#50]
Arguments: 100, [total_cnt#50 DESC NULLS LAST, i_item_desc#20 ASC NULLS FIRST, w_warehouse_name#16 ASC NULLS FIRST, d_week_seq#30 ASC NULLS FIRST], [i_item_desc#20, w_warehouse_name#16, d_week_seq#30, no_promo#48, promo#49, total_cnt#50]

