== Physical Plan ==
TakeOrderedAndProject (27)
+- * Project (26)
   +- * Filter (25)
      +- Window (24)
         +- * Sort (23)
            +- Exchange (22)
               +- * HashAggregate (21)
                  +- Exchange (20)
                     +- * HashAggregate (19)
                        +- * Project (18)
                           +- * BroadcastHashJoin Inner BuildRight (17)
                              :- * Project (15)
                              :  +- * BroadcastHashJoin Inner BuildRight (14)
                              :     :- * Project (10)
                              :     :  +- * BroadcastHashJoin Inner BuildLeft (9)
                              :     :     :- BroadcastExchange (5)
                              :     :     :  +- * Project (4)
                              :     :     :     +- * Filter (3)
                              :     :     :        +- * ColumnarToRow (2)
                              :     :     :           +- Scan parquet default.item (1)
                              :     :     +- * Filter (8)
                              :     :        +- * ColumnarToRow (7)
                              :     :           +- Scan parquet default.store_sales (6)
                              :     +- BroadcastExchange (13)
                              :        +- * ColumnarToRow (12)
                              :           +- Scan parquet default.store (11)
                              +- ReusedExchange (16)


(1) Scan parquet default.item
Output [5]: [i_item_sk#1, i_brand#2, i_class#3, i_category#4, i_manager_id#5]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [Or(And(And(In(i_category, [Books                                             ,Children                                          ,Electronics                                       ]),In(i_class, [personal                                          ,portable                                          ,reference                                         ,self-help                                         ])),In(i_brand, [exportiunivamalg #6                               ,scholaramalgamalg #7                             ,scholaramalgamalg #8                              ,scholaramalgamalg #6                              ])),And(And(In(i_category, [Men                                               ,Music                                             ,Women                                             ]),In(i_class, [accessories                                       ,classical                                         ,fragrances                                        ,pants                                             ])),In(i_brand, [amalgimporto #9                                   ,edu packscholar #9                                ,exportiimporto #9                                 ,importoamalg #9                                   ])))]
ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_manager_id:int>

(2) ColumnarToRow [codegen id : 1]
Input [5]: [i_item_sk#1, i_brand#2, i_class#3, i_category#4, i_manager_id#5]

(3) Filter [codegen id : 1]
Input [5]: [i_item_sk#1, i_brand#2, i_class#3, i_category#4, i_manager_id#5]
Condition : (((i_category#4 IN (Books                                             ,Children                                          ,Electronics                                       ) AND i_class#3 IN (personal                                          ,portable                                          ,reference                                         ,self-help                                         )) AND i_brand#2 IN (scholaramalgamalg #7                             ,scholaramalgamalg #8                              ,exportiunivamalg #6                               ,scholaramalgamalg #6                              )) OR ((i_category#4 IN (Women                                             ,Music                                             ,Men                                               ) AND i_class#3 IN (accessories                                       ,classical                                         ,fragrances                                        ,pants                                             )) AND i_brand#2 IN (amalgimporto #9                                   ,edu packscholar #9                                ,exportiimporto #9                                 ,importoamalg #9                                   )))

(4) Project [codegen id : 1]
Output [2]: [i_item_sk#1, i_manager_id#5]
Input [5]: [i_item_sk#1, i_brand#2, i_class#3, i_category#4, i_manager_id#5]

(5) BroadcastExchange
Input [2]: [i_item_sk#1, i_manager_id#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#10]

(6) Scan parquet default.store_sales
Output [4]: [ss_item_sk#11, ss_store_sk#12, ss_sales_price#13, ss_sold_date_sk#14]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#14), (ss_sold_date_sk#14 >= 2452123), (ss_sold_date_sk#14 <= 2452487), dynamicpruningexpression(ss_sold_date_sk#14 IN dynamicpruning#15)]
PushedFilters: [IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>

(7) ColumnarToRow
Input [4]: [ss_item_sk#11, ss_store_sk#12, ss_sales_price#13, ss_sold_date_sk#14]

(8) Filter
Input [4]: [ss_item_sk#11, ss_store_sk#12, ss_sales_price#13, ss_sold_date_sk#14]
Condition : isnotnull(ss_store_sk#12)

(9) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [i_item_sk#1]
Right keys [1]: [ss_item_sk#11]
Join condition: None

(10) Project [codegen id : 4]
Output [4]: [i_manager_id#5, ss_store_sk#12, ss_sales_price#13, ss_sold_date_sk#14]
Input [6]: [i_item_sk#1, i_manager_id#5, ss_item_sk#11, ss_store_sk#12, ss_sales_price#13, ss_sold_date_sk#14]

(11) Scan parquet default.store
Output [1]: [s_store_sk#16]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
ReadSchema: struct<s_store_sk:int>

(12) ColumnarToRow [codegen id : 2]
Input [1]: [s_store_sk#16]

(13) BroadcastExchange
Input [1]: [s_store_sk#16]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#17]

(14) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [ss_store_sk#12]
Right keys [1]: [s_store_sk#16]
Join condition: None

(15) Project [codegen id : 4]
Output [3]: [i_manager_id#5, ss_sales_price#13, ss_sold_date_sk#14]
Input [5]: [i_manager_id#5, ss_store_sk#12, ss_sales_price#13, ss_sold_date_sk#14, s_store_sk#16]

(16) ReusedExchange [Reuses operator id: 32]
Output [2]: [d_date_sk#18, d_moy#19]

(17) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [ss_sold_date_sk#14]
Right keys [1]: [d_date_sk#18]
Join condition: None

(18) Project [codegen id : 4]
Output [3]: [i_manager_id#5, ss_sales_price#13, d_moy#19]
Input [5]: [i_manager_id#5, ss_sales_price#13, ss_sold_date_sk#14, d_date_sk#18, d_moy#19]

(19) HashAggregate [codegen id : 4]
Input [3]: [i_manager_id#5, ss_sales_price#13, d_moy#19]
Keys [2]: [i_manager_id#5, d_moy#19]
Functions [1]: [partial_sum(UnscaledValue(ss_sales_price#13))]
Aggregate Attributes [1]: [sum#20]
Results [3]: [i_manager_id#5, d_moy#19, sum#21]

(20) Exchange
Input [3]: [i_manager_id#5, d_moy#19, sum#21]
Arguments: hashpartitioning(i_manager_id#5, d_moy#19, 5), ENSURE_REQUIREMENTS, [id=#22]

(21) HashAggregate [codegen id : 5]
Input [3]: [i_manager_id#5, d_moy#19, sum#21]
Keys [2]: [i_manager_id#5, d_moy#19]
Functions [1]: [sum(UnscaledValue(ss_sales_price#13))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_sales_price#13))#23]
Results [3]: [i_manager_id#5, MakeDecimal(sum(UnscaledValue(ss_sales_price#13))#23,17,2) AS sum_sales#24, MakeDecimal(sum(UnscaledValue(ss_sales_price#13))#23,17,2) AS _w0#25]

(22) Exchange
Input [3]: [i_manager_id#5, sum_sales#24, _w0#25]
Arguments: hashpartitioning(i_manager_id#5, 5), ENSURE_REQUIREMENTS, [id=#26]

(23) Sort [codegen id : 6]
Input [3]: [i_manager_id#5, sum_sales#24, _w0#25]
Arguments: [i_manager_id#5 ASC NULLS FIRST], false, 0

(24) Window
Input [3]: [i_manager_id#5, sum_sales#24, _w0#25]
Arguments: [avg(_w0#25) windowspecdefinition(i_manager_id#5, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#27], [i_manager_id#5]

(25) Filter [codegen id : 7]
Input [4]: [i_manager_id#5, sum_sales#24, _w0#25, avg_monthly_sales#27]
Condition : (isnotnull(avg_monthly_sales#27) AND ((avg_monthly_sales#27 > 0.000000) AND (CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#24 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#27 as decimal(22,6)))), DecimalType(22,6), true), false)) / promote_precision(cast(avg_monthly_sales#27 as decimal(22,6)))), DecimalType(38,16), true) > 0.1000000000000000)))

(26) Project [codegen id : 7]
Output [3]: [i_manager_id#5, sum_sales#24, avg_monthly_sales#27]
Input [4]: [i_manager_id#5, sum_sales#24, _w0#25, avg_monthly_sales#27]

(27) TakeOrderedAndProject
Input [3]: [i_manager_id#5, sum_sales#24, avg_monthly_sales#27]
Arguments: 100, [i_manager_id#5 ASC NULLS FIRST, avg_monthly_sales#27 ASC NULLS FIRST, sum_sales#24 ASC NULLS FIRST], [i_manager_id#5, sum_sales#24, avg_monthly_sales#27]

===== Subqueries =====

Subquery:1 Hosting operator id = 6 Hosting Expression = ss_sold_date_sk#14 IN dynamicpruning#15
BroadcastExchange (32)
+- * Project (31)
   +- * Filter (30)
      +- * ColumnarToRow (29)
         +- Scan parquet default.date_dim (28)


(28) Scan parquet default.date_dim
Output [3]: [d_date_sk#18, d_month_seq#28, d_moy#19]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [In(d_month_seq, [1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230]), GreaterThanOrEqual(d_date_sk,2452123), LessThanOrEqual(d_date_sk,2452487)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_moy:int>

(29) ColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#18, d_month_seq#28, d_moy#19]

(30) Filter [codegen id : 1]
Input [3]: [d_date_sk#18, d_month_seq#28, d_moy#19]
Condition : ((d_month_seq#28 INSET 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230 AND (d_date_sk#18 >= 2452123)) AND (d_date_sk#18 <= 2452487))

(31) Project [codegen id : 1]
Output [2]: [d_date_sk#18, d_moy#19]
Input [3]: [d_date_sk#18, d_month_seq#28, d_moy#19]

(32) BroadcastExchange
Input [2]: [d_date_sk#18, d_moy#19]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#29]


