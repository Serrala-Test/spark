== Physical Plan ==
TakeOrderedAndProject (50)
+- * HashAggregate (49)
   +- Exchange (48)
      +- * HashAggregate (47)
         +- * Project (46)
            +- * BroadcastHashJoin Inner BuildRight (45)
               :- * Project (40)
               :  +- * BroadcastHashJoin Inner BuildRight (39)
               :     :- * Project (34)
               :     :  +- * SortMergeJoin LeftSemi (33)
               :     :     :- * SortMergeJoin LeftSemi (24)
               :     :     :  :- * Sort (5)
               :     :     :  :  +- Exchange (4)
               :     :     :  :     +- * Project (3)
               :     :     :  :        +- * Filter (2)
               :     :     :  :           +- BatchScan default.customer (1)
               :     :     :  +- * Sort (23)
               :     :     :     +- Exchange (22)
               :     :     :        +- Union (21)
               :     :     :           :- * Project (14)
               :     :     :           :  +- * BroadcastHashJoin Inner BuildRight (13)
               :     :     :           :     :- * Project (8)
               :     :     :           :     :  +- * Filter (7)
               :     :     :           :     :     +- BatchScan default.web_sales (6)
               :     :     :           :     +- BroadcastExchange (12)
               :     :     :           :        +- * Project (11)
               :     :     :           :           +- * Filter (10)
               :     :     :           :              +- BatchScan default.date_dim (9)
               :     :     :           +- * Project (20)
               :     :     :              +- * BroadcastHashJoin Inner BuildRight (19)
               :     :     :                 :- * Project (17)
               :     :     :                 :  +- * Filter (16)
               :     :     :                 :     +- BatchScan default.catalog_sales (15)
               :     :     :                 +- ReusedExchange (18)
               :     :     +- * Sort (32)
               :     :        +- Exchange (31)
               :     :           +- * Project (30)
               :     :              +- * BroadcastHashJoin Inner BuildRight (29)
               :     :                 :- * Project (27)
               :     :                 :  +- * Filter (26)
               :     :                 :     +- BatchScan default.store_sales (25)
               :     :                 +- ReusedExchange (28)
               :     +- BroadcastExchange (38)
               :        +- * Project (37)
               :           +- * Filter (36)
               :              +- BatchScan default.customer_address (35)
               +- BroadcastExchange (44)
                  +- * Project (43)
                     +- * Filter (42)
                        +- BatchScan default.customer_demographics (41)


(1) BatchScan default.customer
Output [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
DataFilters: [isnotnull(c_customer_sk#1), isnotnull(c_current_addr_sk#3), isnotnull(c_current_cdemo_sk#2)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)]
ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>

(2) Filter [codegen id : 1]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Condition : ((isnotnull(c_customer_sk#1) AND isnotnull(c_current_addr_sk#3)) AND isnotnull(c_current_cdemo_sk#2))

(3) Project [codegen id : 1]
Output [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]

(4) Exchange
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Arguments: hashpartitioning(c_customer_sk#1, 5), ENSURE_REQUIREMENTS, [plan_id=1]

(5) Sort [codegen id : 2]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Arguments: [c_customer_sk#1 ASC NULLS FIRST], false, 0

(6) BatchScan default.web_sales
Output [2]: [ws_bill_customer_sk#4, ws_sold_date_sk#5]
DataFilters: [isnotnull(ws_bill_customer_sk#4)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/web_sales]
PartitionFilters: [isnotnull(ws_sold_date_sk#5)]
PushedFilters: [IsNotNull(ws_bill_customer_sk)]
ReadSchema: struct<ws_bill_customer_sk:int>

(7) Filter [codegen id : 4]
Input [2]: [ws_bill_customer_sk#4, ws_sold_date_sk#5]
Condition : isnotnull(ws_bill_customer_sk#4)

(8) Project [codegen id : 4]
Output [2]: [ws_bill_customer_sk#4, ws_sold_date_sk#5]
Input [2]: [ws_bill_customer_sk#4, ws_sold_date_sk#5]

(9) BatchScan default.date_dim
Output [3]: [d_date_sk#6, d_year#7, d_moy#8]
DataFilters: [isnotnull(d_year#7), isnotnull(d_moy#8), (d_year#7 = 2002), (d_moy#8 >= 4), (d_moy#8 <= 7), isnotnull(d_date_sk#6)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,4), LessThanOrEqual(d_moy,7), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(10) Filter [codegen id : 3]
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]
Condition : (((((isnotnull(d_year#7) AND isnotnull(d_moy#8)) AND (d_year#7 = 2002)) AND (d_moy#8 >= 4)) AND (d_moy#8 <= 7)) AND isnotnull(d_date_sk#6))

(11) Project [codegen id : 3]
Output [1]: [d_date_sk#6]
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]

(12) BroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(13) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [ws_sold_date_sk#5]
Right keys [1]: [d_date_sk#6]
Join type: Inner
Join condition: None

(14) Project [codegen id : 4]
Output [1]: [ws_bill_customer_sk#4 AS customer_sk#9]
Input [3]: [ws_bill_customer_sk#4, ws_sold_date_sk#5, d_date_sk#6]

(15) BatchScan default.catalog_sales
Output [2]: [cs_ship_customer_sk#10, cs_sold_date_sk#11]
DataFilters: [isnotnull(cs_ship_customer_sk#10)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/catalog_sales]
PartitionFilters: [isnotnull(cs_sold_date_sk#11)]
PushedFilters: [IsNotNull(cs_ship_customer_sk)]
ReadSchema: struct<cs_ship_customer_sk:int>

(16) Filter [codegen id : 6]
Input [2]: [cs_ship_customer_sk#10, cs_sold_date_sk#11]
Condition : isnotnull(cs_ship_customer_sk#10)

(17) Project [codegen id : 6]
Output [2]: [cs_ship_customer_sk#10, cs_sold_date_sk#11]
Input [2]: [cs_ship_customer_sk#10, cs_sold_date_sk#11]

(18) ReusedExchange [Reuses operator id: 12]
Output [1]: [d_date_sk#12]

(19) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [cs_sold_date_sk#11]
Right keys [1]: [d_date_sk#12]
Join type: Inner
Join condition: None

(20) Project [codegen id : 6]
Output [1]: [cs_ship_customer_sk#10 AS customer_sk#13]
Input [3]: [cs_ship_customer_sk#10, cs_sold_date_sk#11, d_date_sk#12]

(21) Union

(22) Exchange
Input [1]: [customer_sk#9]
Arguments: hashpartitioning(customer_sk#9, 5), ENSURE_REQUIREMENTS, [plan_id=3]

(23) Sort [codegen id : 7]
Input [1]: [customer_sk#9]
Arguments: [customer_sk#9 ASC NULLS FIRST], false, 0

(24) SortMergeJoin [codegen id : 8]
Left keys [1]: [c_customer_sk#1]
Right keys [1]: [customer_sk#9]
Join type: LeftSemi
Join condition: None

(25) BatchScan default.store_sales
Output [2]: [ss_customer_sk#14, ss_sold_date_sk#15]
DataFilters: [isnotnull(ss_customer_sk#14)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/store_sales]
PartitionFilters: [isnotnull(ss_sold_date_sk#15)]
PushedFilters: [IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_customer_sk:int>

(26) Filter [codegen id : 10]
Input [2]: [ss_customer_sk#14, ss_sold_date_sk#15]
Condition : isnotnull(ss_customer_sk#14)

(27) Project [codegen id : 10]
Output [2]: [ss_customer_sk#14, ss_sold_date_sk#15]
Input [2]: [ss_customer_sk#14, ss_sold_date_sk#15]

(28) ReusedExchange [Reuses operator id: 12]
Output [1]: [d_date_sk#16]

(29) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [ss_sold_date_sk#15]
Right keys [1]: [d_date_sk#16]
Join type: Inner
Join condition: None

(30) Project [codegen id : 10]
Output [1]: [ss_customer_sk#14 AS customer_sk#17]
Input [3]: [ss_customer_sk#14, ss_sold_date_sk#15, d_date_sk#16]

(31) Exchange
Input [1]: [customer_sk#17]
Arguments: hashpartitioning(customer_sk#17, 5), ENSURE_REQUIREMENTS, [plan_id=4]

(32) Sort [codegen id : 11]
Input [1]: [customer_sk#17]
Arguments: [customer_sk#17 ASC NULLS FIRST], false, 0

(33) SortMergeJoin [codegen id : 14]
Left keys [1]: [c_customer_sk#1]
Right keys [1]: [customer_sk#17]
Join type: LeftSemi
Join condition: None

(34) Project [codegen id : 14]
Output [2]: [c_current_cdemo_sk#2, c_current_addr_sk#3]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]

(35) BatchScan default.customer_address
Output [2]: [ca_address_sk#18, ca_county#19]
DataFilters: [ca_county#19 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County), isnotnull(ca_address_sk#18)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_county:string>

(36) Filter [codegen id : 12]
Input [2]: [ca_address_sk#18, ca_county#19]
Condition : (ca_county#19 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#18))

(37) Project [codegen id : 12]
Output [1]: [ca_address_sk#18]
Input [2]: [ca_address_sk#18, ca_county#19]

(38) BroadcastExchange
Input [1]: [ca_address_sk#18]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5]

(39) BroadcastHashJoin [codegen id : 14]
Left keys [1]: [c_current_addr_sk#3]
Right keys [1]: [ca_address_sk#18]
Join type: Inner
Join condition: None

(40) Project [codegen id : 14]
Output [1]: [c_current_cdemo_sk#2]
Input [3]: [c_current_cdemo_sk#2, c_current_addr_sk#3, ca_address_sk#18]

(41) BatchScan default.customer_demographics
Output [9]: [cd_demo_sk#20, cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, cd_dep_count#26, cd_dep_employed_count#27, cd_dep_college_count#28]
DataFilters: [isnotnull(cd_demo_sk#20)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_purchase_estimate:int,cd_credit_rating:string,cd_dep_count:int,cd_dep_employed_count:int,cd_dep_college_count:int>

(42) Filter [codegen id : 13]
Input [9]: [cd_demo_sk#20, cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, cd_dep_count#26, cd_dep_employed_count#27, cd_dep_college_count#28]
Condition : isnotnull(cd_demo_sk#20)

(43) Project [codegen id : 13]
Output [9]: [cd_demo_sk#20, cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, cd_dep_count#26, cd_dep_employed_count#27, cd_dep_college_count#28]
Input [9]: [cd_demo_sk#20, cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, cd_dep_count#26, cd_dep_employed_count#27, cd_dep_college_count#28]

(44) BroadcastExchange
Input [9]: [cd_demo_sk#20, cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, cd_dep_count#26, cd_dep_employed_count#27, cd_dep_college_count#28]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6]

(45) BroadcastHashJoin [codegen id : 14]
Left keys [1]: [c_current_cdemo_sk#2]
Right keys [1]: [cd_demo_sk#20]
Join type: Inner
Join condition: None

(46) Project [codegen id : 14]
Output [8]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, cd_dep_count#26, cd_dep_employed_count#27, cd_dep_college_count#28]
Input [10]: [c_current_cdemo_sk#2, cd_demo_sk#20, cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, cd_dep_count#26, cd_dep_employed_count#27, cd_dep_college_count#28]

(47) HashAggregate [codegen id : 14]
Input [8]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, cd_dep_count#26, cd_dep_employed_count#27, cd_dep_college_count#28]
Keys [8]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, cd_dep_count#26, cd_dep_employed_count#27, cd_dep_college_count#28]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#29]
Results [9]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, cd_dep_count#26, cd_dep_employed_count#27, cd_dep_college_count#28, count#30]

(48) Exchange
Input [9]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, cd_dep_count#26, cd_dep_employed_count#27, cd_dep_college_count#28, count#30]
Arguments: hashpartitioning(cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, cd_dep_count#26, cd_dep_employed_count#27, cd_dep_college_count#28, 5), ENSURE_REQUIREMENTS, [plan_id=7]

(49) HashAggregate [codegen id : 15]
Input [9]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, cd_dep_count#26, cd_dep_employed_count#27, cd_dep_college_count#28, count#30]
Keys [8]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, cd_dep_count#26, cd_dep_employed_count#27, cd_dep_college_count#28]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#31]
Results [14]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, count(1)#31 AS cnt1#32, cd_purchase_estimate#24, count(1)#31 AS cnt2#33, cd_credit_rating#25, count(1)#31 AS cnt3#34, cd_dep_count#26, count(1)#31 AS cnt4#35, cd_dep_employed_count#27, count(1)#31 AS cnt5#36, cd_dep_college_count#28, count(1)#31 AS cnt6#37]

(50) TakeOrderedAndProject
Input [14]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cnt1#32, cd_purchase_estimate#24, cnt2#33, cd_credit_rating#25, cnt3#34, cd_dep_count#26, cnt4#35, cd_dep_employed_count#27, cnt5#36, cd_dep_college_count#28, cnt6#37]
Arguments: 100, [cd_gender#21 ASC NULLS FIRST, cd_marital_status#22 ASC NULLS FIRST, cd_education_status#23 ASC NULLS FIRST, cd_purchase_estimate#24 ASC NULLS FIRST, cd_credit_rating#25 ASC NULLS FIRST, cd_dep_count#26 ASC NULLS FIRST, cd_dep_employed_count#27 ASC NULLS FIRST, cd_dep_college_count#28 ASC NULLS FIRST], [cd_gender#21, cd_marital_status#22, cd_education_status#23, cnt1#32, cd_purchase_estimate#24, cnt2#33, cd_credit_rating#25, cnt3#34, cd_dep_count#26, cnt4#35, cd_dep_employed_count#27, cnt5#36, cd_dep_college_count#28, cnt6#37]

