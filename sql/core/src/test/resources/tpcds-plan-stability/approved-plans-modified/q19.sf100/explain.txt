== Physical Plan ==
TakeOrderedAndProject (45)
+- * HashAggregate (44)
   +- Exchange (43)
      +- * HashAggregate (42)
         +- * Project (41)
            +- * BroadcastHashJoin Inner BuildRight (40)
               :- * Project (34)
               :  +- * SortMergeJoin Inner (33)
               :     :- * Sort (27)
               :     :  +- Exchange (26)
               :     :     +- * Project (25)
               :     :        +- * BroadcastHashJoin Inner BuildRight (24)
               :     :           :- * Project (18)
               :     :           :  +- * SortMergeJoin Inner (17)
               :     :           :     :- * Sort (11)
               :     :           :     :  +- Exchange (10)
               :     :           :     :     +- * Project (9)
               :     :           :     :        +- BroadcastNestedLoopJoin Inner BuildRight (8)
               :     :           :     :           :- * Filter (3)
               :     :           :     :           :  +- * ColumnarToRow (2)
               :     :           :     :           :     +- Scan parquet default.customer_address (1)
               :     :           :     :           +- BroadcastExchange (7)
               :     :           :     :              +- * Filter (6)
               :     :           :     :                 +- * ColumnarToRow (5)
               :     :           :     :                    +- Scan parquet default.store (4)
               :     :           :     +- * Sort (16)
               :     :           :        +- Exchange (15)
               :     :           :           +- * Filter (14)
               :     :           :              +- * ColumnarToRow (13)
               :     :           :                 +- Scan parquet default.store_sales (12)
               :     :           +- BroadcastExchange (23)
               :     :              +- * Project (22)
               :     :                 +- * Filter (21)
               :     :                    +- * ColumnarToRow (20)
               :     :                       +- Scan parquet default.item (19)
               :     +- * Sort (32)
               :        +- Exchange (31)
               :           +- * Filter (30)
               :              +- * ColumnarToRow (29)
               :                 +- Scan parquet default.customer (28)
               +- BroadcastExchange (39)
                  +- * Project (38)
                     +- * Filter (37)
                        +- * ColumnarToRow (36)
                           +- Scan parquet default.date_dim (35)


(1) Scan parquet default.customer_address
Output [2]: [ca_address_sk#1, ca_zip#2]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_zip)]
ReadSchema: struct<ca_address_sk:int,ca_zip:string>

(2) ColumnarToRow [codegen id : 1]
Input [2]: [ca_address_sk#1, ca_zip#2]

(3) Filter [codegen id : 1]
Input [2]: [ca_address_sk#1, ca_zip#2]
Condition : (isnotnull(ca_address_sk#1) AND isnotnull(ca_zip#2))

(4) Scan parquet default.store
Output [2]: [s_store_sk#3, s_zip#4]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_zip), IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_zip:string>

(5) ColumnarToRow [codegen id : 2]
Input [2]: [s_store_sk#3, s_zip#4]

(6) Filter [codegen id : 2]
Input [2]: [s_store_sk#3, s_zip#4]
Condition : (isnotnull(s_zip#4) AND isnotnull(s_store_sk#3))

(7) BroadcastExchange
Input [2]: [s_store_sk#3, s_zip#4]
Arguments: IdentityBroadcastMode, [id=#5]

(8) BroadcastNestedLoopJoin
Join condition: NOT (substr(ca_zip#2, 1, 5) = substr(s_zip#4, 1, 5))

(9) Project [codegen id : 3]
Output [2]: [ca_address_sk#1, s_store_sk#3]
Input [4]: [ca_address_sk#1, ca_zip#2, s_store_sk#3, s_zip#4]

(10) Exchange
Input [2]: [ca_address_sk#1, s_store_sk#3]
Arguments: hashpartitioning(s_store_sk#3, 5), ENSURE_REQUIREMENTS, [id=#6]

(11) Sort [codegen id : 4]
Input [2]: [ca_address_sk#1, s_store_sk#3]
Arguments: [s_store_sk#3 ASC NULLS FIRST], false, 0

(12) Scan parquet default.store_sales
Output [5]: [ss_sold_date_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_store_sk#10, ss_ext_sales_price#11]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_sold_date_sk), GreaterThanOrEqual(ss_sold_date_sk,2451484), LessThanOrEqual(ss_sold_date_sk,2451513), IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2)>

(13) ColumnarToRow [codegen id : 5]
Input [5]: [ss_sold_date_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_store_sk#10, ss_ext_sales_price#11]

(14) Filter [codegen id : 5]
Input [5]: [ss_sold_date_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_store_sk#10, ss_ext_sales_price#11]
Condition : (((((isnotnull(ss_sold_date_sk#7) AND (ss_sold_date_sk#7 >= 2451484)) AND (ss_sold_date_sk#7 <= 2451513)) AND isnotnull(ss_item_sk#8)) AND isnotnull(ss_customer_sk#9)) AND isnotnull(ss_store_sk#10))

(15) Exchange
Input [5]: [ss_sold_date_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_store_sk#10, ss_ext_sales_price#11]
Arguments: hashpartitioning(ss_store_sk#10, 5), ENSURE_REQUIREMENTS, [id=#12]

(16) Sort [codegen id : 6]
Input [5]: [ss_sold_date_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_store_sk#10, ss_ext_sales_price#11]
Arguments: [ss_store_sk#10 ASC NULLS FIRST], false, 0

(17) SortMergeJoin [codegen id : 8]
Left keys [1]: [s_store_sk#3]
Right keys [1]: [ss_store_sk#10]
Join condition: None

(18) Project [codegen id : 8]
Output [5]: [ca_address_sk#1, ss_sold_date_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_ext_sales_price#11]
Input [7]: [ca_address_sk#1, s_store_sk#3, ss_sold_date_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_store_sk#10, ss_ext_sales_price#11]

(19) Scan parquet default.item
Output [6]: [i_item_sk#13, i_brand_id#14, i_brand#15, i_manufact_id#16, i_manufact#17, i_manager_id#18]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_manager_id), EqualTo(i_manager_id,7), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manufact_id:int,i_manufact:string,i_manager_id:int>

(20) ColumnarToRow [codegen id : 7]
Input [6]: [i_item_sk#13, i_brand_id#14, i_brand#15, i_manufact_id#16, i_manufact#17, i_manager_id#18]

(21) Filter [codegen id : 7]
Input [6]: [i_item_sk#13, i_brand_id#14, i_brand#15, i_manufact_id#16, i_manufact#17, i_manager_id#18]
Condition : ((isnotnull(i_manager_id#18) AND (i_manager_id#18 = 7)) AND isnotnull(i_item_sk#13))

(22) Project [codegen id : 7]
Output [5]: [i_item_sk#13, i_brand_id#14, i_brand#15, i_manufact_id#16, i_manufact#17]
Input [6]: [i_item_sk#13, i_brand_id#14, i_brand#15, i_manufact_id#16, i_manufact#17, i_manager_id#18]

(23) BroadcastExchange
Input [5]: [i_item_sk#13, i_brand_id#14, i_brand#15, i_manufact_id#16, i_manufact#17]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#19]

(24) BroadcastHashJoin [codegen id : 8]
Left keys [1]: [ss_item_sk#8]
Right keys [1]: [i_item_sk#13]
Join condition: None

(25) Project [codegen id : 8]
Output [8]: [ca_address_sk#1, ss_sold_date_sk#7, ss_customer_sk#9, ss_ext_sales_price#11, i_brand_id#14, i_brand#15, i_manufact_id#16, i_manufact#17]
Input [10]: [ca_address_sk#1, ss_sold_date_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_ext_sales_price#11, i_item_sk#13, i_brand_id#14, i_brand#15, i_manufact_id#16, i_manufact#17]

(26) Exchange
Input [8]: [ca_address_sk#1, ss_sold_date_sk#7, ss_customer_sk#9, ss_ext_sales_price#11, i_brand_id#14, i_brand#15, i_manufact_id#16, i_manufact#17]
Arguments: hashpartitioning(ss_customer_sk#9, ca_address_sk#1, 5), ENSURE_REQUIREMENTS, [id=#20]

(27) Sort [codegen id : 9]
Input [8]: [ca_address_sk#1, ss_sold_date_sk#7, ss_customer_sk#9, ss_ext_sales_price#11, i_brand_id#14, i_brand#15, i_manufact_id#16, i_manufact#17]
Arguments: [ss_customer_sk#9 ASC NULLS FIRST, ca_address_sk#1 ASC NULLS FIRST], false, 0

(28) Scan parquet default.customer
Output [2]: [c_customer_sk#21, c_current_addr_sk#22]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)]
ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>

(29) ColumnarToRow [codegen id : 10]
Input [2]: [c_customer_sk#21, c_current_addr_sk#22]

(30) Filter [codegen id : 10]
Input [2]: [c_customer_sk#21, c_current_addr_sk#22]
Condition : (isnotnull(c_customer_sk#21) AND isnotnull(c_current_addr_sk#22))

(31) Exchange
Input [2]: [c_customer_sk#21, c_current_addr_sk#22]
Arguments: hashpartitioning(c_customer_sk#21, c_current_addr_sk#22, 5), ENSURE_REQUIREMENTS, [id=#23]

(32) Sort [codegen id : 11]
Input [2]: [c_customer_sk#21, c_current_addr_sk#22]
Arguments: [c_customer_sk#21 ASC NULLS FIRST, c_current_addr_sk#22 ASC NULLS FIRST], false, 0

(33) SortMergeJoin [codegen id : 13]
Left keys [2]: [ss_customer_sk#9, ca_address_sk#1]
Right keys [2]: [c_customer_sk#21, c_current_addr_sk#22]
Join condition: None

(34) Project [codegen id : 13]
Output [6]: [ss_sold_date_sk#7, ss_ext_sales_price#11, i_brand_id#14, i_brand#15, i_manufact_id#16, i_manufact#17]
Input [10]: [ca_address_sk#1, ss_sold_date_sk#7, ss_customer_sk#9, ss_ext_sales_price#11, i_brand_id#14, i_brand#15, i_manufact_id#16, i_manufact#17, c_customer_sk#21, c_current_addr_sk#22]

(35) Scan parquet default.date_dim
Output [3]: [d_date_sk#24, d_year#25, d_moy#26]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,11), EqualTo(d_year,1999), GreaterThanOrEqual(d_date_sk,2451484), LessThanOrEqual(d_date_sk,2451513), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(36) ColumnarToRow [codegen id : 12]
Input [3]: [d_date_sk#24, d_year#25, d_moy#26]

(37) Filter [codegen id : 12]
Input [3]: [d_date_sk#24, d_year#25, d_moy#26]
Condition : ((((((isnotnull(d_moy#26) AND isnotnull(d_year#25)) AND (d_moy#26 = 11)) AND (d_year#25 = 1999)) AND (d_date_sk#24 >= 2451484)) AND (d_date_sk#24 <= 2451513)) AND isnotnull(d_date_sk#24))

(38) Project [codegen id : 12]
Output [1]: [d_date_sk#24]
Input [3]: [d_date_sk#24, d_year#25, d_moy#26]

(39) BroadcastExchange
Input [1]: [d_date_sk#24]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#27]

(40) BroadcastHashJoin [codegen id : 13]
Left keys [1]: [ss_sold_date_sk#7]
Right keys [1]: [d_date_sk#24]
Join condition: None

(41) Project [codegen id : 13]
Output [5]: [ss_ext_sales_price#11, i_brand_id#14, i_brand#15, i_manufact_id#16, i_manufact#17]
Input [7]: [ss_sold_date_sk#7, ss_ext_sales_price#11, i_brand_id#14, i_brand#15, i_manufact_id#16, i_manufact#17, d_date_sk#24]

(42) HashAggregate [codegen id : 13]
Input [5]: [ss_ext_sales_price#11, i_brand_id#14, i_brand#15, i_manufact_id#16, i_manufact#17]
Keys [4]: [i_brand#15, i_brand_id#14, i_manufact_id#16, i_manufact#17]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#11))]
Aggregate Attributes [1]: [sum#28]
Results [5]: [i_brand#15, i_brand_id#14, i_manufact_id#16, i_manufact#17, sum#29]

(43) Exchange
Input [5]: [i_brand#15, i_brand_id#14, i_manufact_id#16, i_manufact#17, sum#29]
Arguments: hashpartitioning(i_brand#15, i_brand_id#14, i_manufact_id#16, i_manufact#17, 5), ENSURE_REQUIREMENTS, [id=#30]

(44) HashAggregate [codegen id : 14]
Input [5]: [i_brand#15, i_brand_id#14, i_manufact_id#16, i_manufact#17, sum#29]
Keys [4]: [i_brand#15, i_brand_id#14, i_manufact_id#16, i_manufact#17]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#11))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#11))#31]
Results [5]: [i_brand_id#14 AS brand_id#32, i_brand#15 AS brand#33, i_manufact_id#16, i_manufact#17, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#11))#31,17,2) AS ext_price#34]

(45) TakeOrderedAndProject
Input [5]: [brand_id#32, brand#33, i_manufact_id#16, i_manufact#17, ext_price#34]
Arguments: 100, [ext_price#34 DESC NULLS LAST, brand#33 ASC NULLS FIRST, brand_id#32 ASC NULLS FIRST, i_manufact_id#16 ASC NULLS FIRST, i_manufact#17 ASC NULLS FIRST], [brand_id#32, brand#33, i_manufact_id#16, i_manufact#17, ext_price#34]

