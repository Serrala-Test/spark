== Physical Plan ==
TakeOrderedAndProject (39)
+- * HashAggregate (38)
   +- Exchange (37)
      +- * HashAggregate (36)
         +- * Project (35)
            +- * BroadcastHashJoin Inner BuildLeft (34)
               :- BroadcastExchange (29)
               :  +- * Project (28)
               :     +- * BroadcastHashJoin Inner BuildLeft (27)
               :        :- BroadcastExchange (22)
               :        :  +- * Project (21)
               :        :     +- * BroadcastHashJoin Inner BuildLeft (20)
               :        :        :- BroadcastExchange (16)
               :        :        :  +- * Project (15)
               :        :        :     +- * BroadcastNestedLoopJoin Inner BuildLeft (14)
               :        :        :        :- BroadcastExchange (10)
               :        :        :        :  +- * Project (9)
               :        :        :        :     +- * BroadcastHashJoin Inner BuildLeft (8)
               :        :        :        :        :- BroadcastExchange (4)
               :        :        :        :        :  +- * Filter (3)
               :        :        :        :        :     +- * ColumnarToRow (2)
               :        :        :        :        :        +- Scan parquet default.store_sales (1)
               :        :        :        :        +- * Filter (7)
               :        :        :        :           +- * ColumnarToRow (6)
               :        :        :        :              +- Scan parquet default.store (5)
               :        :        :        +- * Filter (13)
               :        :        :           +- * ColumnarToRow (12)
               :        :        :              +- Scan parquet default.customer_address (11)
               :        :        +- * Filter (19)
               :        :           +- * ColumnarToRow (18)
               :        :              +- Scan parquet default.customer (17)
               :        +- * Project (26)
               :           +- * Filter (25)
               :              +- * ColumnarToRow (24)
               :                 +- Scan parquet default.item (23)
               +- * Project (33)
                  +- * Filter (32)
                     +- * ColumnarToRow (31)
                        +- Scan parquet default.date_dim (30)


(1) Scan parquet default.store_sales
Output [5]: [ss_item_sk#1, ss_customer_sk#2, ss_store_sk#3, ss_ext_sales_price#4, ss_sold_date_sk#5]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#5), (ss_sold_date_sk#5 >= 2451484), (ss_sold_date_sk#5 <= 2451513), dynamicpruningexpression(true)]
PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2)>

(2) ColumnarToRow [codegen id : 1]
Input [5]: [ss_item_sk#1, ss_customer_sk#2, ss_store_sk#3, ss_ext_sales_price#4, ss_sold_date_sk#5]

(3) Filter [codegen id : 1]
Input [5]: [ss_item_sk#1, ss_customer_sk#2, ss_store_sk#3, ss_ext_sales_price#4, ss_sold_date_sk#5]
Condition : ((isnotnull(ss_item_sk#1) AND isnotnull(ss_customer_sk#2)) AND isnotnull(ss_store_sk#3))

(4) BroadcastExchange
Input [5]: [ss_item_sk#1, ss_customer_sk#2, ss_store_sk#3, ss_ext_sales_price#4, ss_sold_date_sk#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[2, int, false] as bigint)),false), [id=#6]

(5) Scan parquet default.store
Output [2]: [s_store_sk#7, s_zip#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_zip), IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_zip:string>

(6) ColumnarToRow
Input [2]: [s_store_sk#7, s_zip#8]

(7) Filter
Input [2]: [s_store_sk#7, s_zip#8]
Condition : (isnotnull(s_zip#8) AND isnotnull(s_store_sk#7))

(8) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [ss_store_sk#3]
Right keys [1]: [s_store_sk#7]
Join condition: None

(9) Project [codegen id : 2]
Output [5]: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#4, ss_sold_date_sk#5, s_zip#8]
Input [7]: [ss_item_sk#1, ss_customer_sk#2, ss_store_sk#3, ss_ext_sales_price#4, ss_sold_date_sk#5, s_store_sk#7, s_zip#8]

(10) BroadcastExchange
Input [5]: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#4, ss_sold_date_sk#5, s_zip#8]
Arguments: IdentityBroadcastMode, [id=#9]

(11) Scan parquet default.customer_address
Output [2]: [ca_address_sk#10, ca_zip#11]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_zip)]
ReadSchema: struct<ca_address_sk:int,ca_zip:string>

(12) ColumnarToRow
Input [2]: [ca_address_sk#10, ca_zip#11]

(13) Filter
Input [2]: [ca_address_sk#10, ca_zip#11]
Condition : (isnotnull(ca_address_sk#10) AND isnotnull(ca_zip#11))

(14) BroadcastNestedLoopJoin [codegen id : 3]
Join condition: NOT (substr(ca_zip#11, 1, 5) = substr(s_zip#8, 1, 5))

(15) Project [codegen id : 3]
Output [5]: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#4, ss_sold_date_sk#5, ca_address_sk#10]
Input [7]: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#4, ss_sold_date_sk#5, s_zip#8, ca_address_sk#10, ca_zip#11]

(16) BroadcastExchange
Input [5]: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#4, ss_sold_date_sk#5, ca_address_sk#10]
Arguments: HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, true] as bigint), 32) | (cast(input[4, int, true] as bigint) & 4294967295))),false), [id=#12]

(17) Scan parquet default.customer
Output [2]: [c_customer_sk#13, c_current_addr_sk#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)]
ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>

(18) ColumnarToRow
Input [2]: [c_customer_sk#13, c_current_addr_sk#14]

(19) Filter
Input [2]: [c_customer_sk#13, c_current_addr_sk#14]
Condition : (isnotnull(c_customer_sk#13) AND isnotnull(c_current_addr_sk#14))

(20) BroadcastHashJoin [codegen id : 4]
Left keys [2]: [ss_customer_sk#2, ca_address_sk#10]
Right keys [2]: [c_customer_sk#13, c_current_addr_sk#14]
Join condition: None

(21) Project [codegen id : 4]
Output [3]: [ss_item_sk#1, ss_ext_sales_price#4, ss_sold_date_sk#5]
Input [7]: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#4, ss_sold_date_sk#5, ca_address_sk#10, c_customer_sk#13, c_current_addr_sk#14]

(22) BroadcastExchange
Input [3]: [ss_item_sk#1, ss_ext_sales_price#4, ss_sold_date_sk#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#15]

(23) Scan parquet default.item
Output [6]: [i_item_sk#16, i_brand_id#17, i_brand#18, i_manufact_id#19, i_manufact#20, i_manager_id#21]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_manager_id), EqualTo(i_manager_id,7), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manufact_id:int,i_manufact:string,i_manager_id:int>

(24) ColumnarToRow
Input [6]: [i_item_sk#16, i_brand_id#17, i_brand#18, i_manufact_id#19, i_manufact#20, i_manager_id#21]

(25) Filter
Input [6]: [i_item_sk#16, i_brand_id#17, i_brand#18, i_manufact_id#19, i_manufact#20, i_manager_id#21]
Condition : ((isnotnull(i_manager_id#21) AND (i_manager_id#21 = 7)) AND isnotnull(i_item_sk#16))

(26) Project
Output [5]: [i_item_sk#16, i_brand_id#17, i_brand#18, i_manufact_id#19, i_manufact#20]
Input [6]: [i_item_sk#16, i_brand_id#17, i_brand#18, i_manufact_id#19, i_manufact#20, i_manager_id#21]

(27) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_item_sk#1]
Right keys [1]: [i_item_sk#16]
Join condition: None

(28) Project [codegen id : 5]
Output [6]: [ss_ext_sales_price#4, ss_sold_date_sk#5, i_brand_id#17, i_brand#18, i_manufact_id#19, i_manufact#20]
Input [8]: [ss_item_sk#1, ss_ext_sales_price#4, ss_sold_date_sk#5, i_item_sk#16, i_brand_id#17, i_brand#18, i_manufact_id#19, i_manufact#20]

(29) BroadcastExchange
Input [6]: [ss_ext_sales_price#4, ss_sold_date_sk#5, i_brand_id#17, i_brand#18, i_manufact_id#19, i_manufact#20]
Arguments: HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [id=#22]

(30) Scan parquet default.date_dim
Output [3]: [d_date_sk#23, d_year#24, d_moy#25]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,11), EqualTo(d_year,1999), GreaterThanOrEqual(d_date_sk,2451484), LessThanOrEqual(d_date_sk,2451513), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(31) ColumnarToRow
Input [3]: [d_date_sk#23, d_year#24, d_moy#25]

(32) Filter
Input [3]: [d_date_sk#23, d_year#24, d_moy#25]
Condition : ((((((isnotnull(d_moy#25) AND isnotnull(d_year#24)) AND (d_moy#25 = 11)) AND (d_year#24 = 1999)) AND (d_date_sk#23 >= 2451484)) AND (d_date_sk#23 <= 2451513)) AND isnotnull(d_date_sk#23))

(33) Project
Output [1]: [d_date_sk#23]
Input [3]: [d_date_sk#23, d_year#24, d_moy#25]

(34) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_sold_date_sk#5]
Right keys [1]: [d_date_sk#23]
Join condition: None

(35) Project [codegen id : 6]
Output [5]: [ss_ext_sales_price#4, i_brand_id#17, i_brand#18, i_manufact_id#19, i_manufact#20]
Input [7]: [ss_ext_sales_price#4, ss_sold_date_sk#5, i_brand_id#17, i_brand#18, i_manufact_id#19, i_manufact#20, d_date_sk#23]

(36) HashAggregate [codegen id : 6]
Input [5]: [ss_ext_sales_price#4, i_brand_id#17, i_brand#18, i_manufact_id#19, i_manufact#20]
Keys [4]: [i_brand#18, i_brand_id#17, i_manufact_id#19, i_manufact#20]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#4))]
Aggregate Attributes [1]: [sum#26]
Results [5]: [i_brand#18, i_brand_id#17, i_manufact_id#19, i_manufact#20, sum#27]

(37) Exchange
Input [5]: [i_brand#18, i_brand_id#17, i_manufact_id#19, i_manufact#20, sum#27]
Arguments: hashpartitioning(i_brand#18, i_brand_id#17, i_manufact_id#19, i_manufact#20, 5), ENSURE_REQUIREMENTS, [id=#28]

(38) HashAggregate [codegen id : 7]
Input [5]: [i_brand#18, i_brand_id#17, i_manufact_id#19, i_manufact#20, sum#27]
Keys [4]: [i_brand#18, i_brand_id#17, i_manufact_id#19, i_manufact#20]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#4))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#4))#29]
Results [5]: [i_brand_id#17 AS brand_id#30, i_brand#18 AS brand#31, i_manufact_id#19, i_manufact#20, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#4))#29,17,2) AS ext_price#32]

(39) TakeOrderedAndProject
Input [5]: [brand_id#30, brand#31, i_manufact_id#19, i_manufact#20, ext_price#32]
Arguments: 100, [ext_price#32 DESC NULLS LAST, brand#31 ASC NULLS FIRST, brand_id#30 ASC NULLS FIRST, i_manufact_id#19 ASC NULLS FIRST, i_manufact#20 ASC NULLS FIRST], [brand_id#30, brand#31, i_manufact_id#19, i_manufact#20, ext_price#32]

