== Physical Plan ==
TakeOrderedAndProject (67)
+- * HashAggregate (66)
   +- Exchange (65)
      +- * HashAggregate (64)
         +- Union (63)
            :- * HashAggregate (32)
            :  +- Exchange (31)
            :     +- * HashAggregate (30)
            :        +- * Project (29)
            :           +- * BroadcastHashJoin Inner BuildRight (28)
            :              :- * Project (22)
            :              :  +- * BroadcastHashJoin Inner BuildRight (21)
            :              :     :- * Project (15)
            :              :     :  +- * BroadcastHashJoin Inner BuildRight (14)
            :              :     :     :- * Filter (3)
            :              :     :     :  +- * ColumnarToRow (2)
            :              :     :     :     +- Scan parquet default.store_sales (1)
            :              :     :     +- BroadcastExchange (13)
            :              :     :        +- * BroadcastHashJoin LeftSemi BuildRight (12)
            :              :     :           :- * Filter (6)
            :              :     :           :  +- * ColumnarToRow (5)
            :              :     :           :     +- Scan parquet default.item (4)
            :              :     :           +- BroadcastExchange (11)
            :              :     :              +- * Project (10)
            :              :     :                 +- * Filter (9)
            :              :     :                    +- * ColumnarToRow (8)
            :              :     :                       +- Scan parquet default.item (7)
            :              :     +- BroadcastExchange (20)
            :              :        +- * Project (19)
            :              :           +- * Filter (18)
            :              :              +- * ColumnarToRow (17)
            :              :                 +- Scan parquet default.customer_address (16)
            :              +- BroadcastExchange (27)
            :                 +- * Project (26)
            :                    +- * Filter (25)
            :                       +- * ColumnarToRow (24)
            :                          +- Scan parquet default.date_dim (23)
            :- * HashAggregate (47)
            :  +- Exchange (46)
            :     +- * HashAggregate (45)
            :        +- * Project (44)
            :           +- * BroadcastHashJoin Inner BuildRight (43)
            :              :- * Project (41)
            :              :  +- * BroadcastHashJoin Inner BuildRight (40)
            :              :     :- * Project (38)
            :              :     :  +- * BroadcastHashJoin Inner BuildRight (37)
            :              :     :     :- * Filter (35)
            :              :     :     :  +- * ColumnarToRow (34)
            :              :     :     :     +- Scan parquet default.catalog_sales (33)
            :              :     :     +- ReusedExchange (36)
            :              :     +- ReusedExchange (39)
            :              +- ReusedExchange (42)
            +- * HashAggregate (62)
               +- Exchange (61)
                  +- * HashAggregate (60)
                     +- * Project (59)
                        +- * BroadcastHashJoin Inner BuildRight (58)
                           :- * Project (56)
                           :  +- * BroadcastHashJoin Inner BuildRight (55)
                           :     :- * Project (53)
                           :     :  +- * BroadcastHashJoin Inner BuildRight (52)
                           :     :     :- * Filter (50)
                           :     :     :  +- * ColumnarToRow (49)
                           :     :     :     +- Scan parquet default.web_sales (48)
                           :     :     +- ReusedExchange (51)
                           :     +- ReusedExchange (54)
                           +- ReusedExchange (57)


(1) Scan parquet default.store_sales
Output [4]: [ss_sold_date_sk#1, ss_item_sk#2, ss_addr_sk#3, ss_ext_sales_price#4]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(2) ColumnarToRow [codegen id : 5]
Input [4]: [ss_sold_date_sk#1, ss_item_sk#2, ss_addr_sk#3, ss_ext_sales_price#4]

(3) Filter [codegen id : 5]
Input [4]: [ss_sold_date_sk#1, ss_item_sk#2, ss_addr_sk#3, ss_ext_sales_price#4]
Condition : ((isnotnull(ss_sold_date_sk#1) AND isnotnull(ss_addr_sk#3)) AND isnotnull(ss_item_sk#2))

(4) Scan parquet default.item
Output [2]: [i_item_sk#5, i_item_id#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string>

(5) ColumnarToRow [codegen id : 2]
Input [2]: [i_item_sk#5, i_item_id#6]

(6) Filter [codegen id : 2]
Input [2]: [i_item_sk#5, i_item_id#6]
Condition : isnotnull(i_item_sk#5)

(7) Scan parquet default.item
Output [2]: [i_item_id#6, i_color#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [In(i_color, [slate,blanched,burnished])]
ReadSchema: struct<i_item_id:string,i_color:string>

(8) ColumnarToRow [codegen id : 1]
Input [2]: [i_item_id#6, i_color#7]

(9) Filter [codegen id : 1]
Input [2]: [i_item_id#6, i_color#7]
Condition : i_color#7 IN (slate,blanched,burnished)

(10) Project [codegen id : 1]
Output [1]: [i_item_id#6 AS i_item_id#6#8]
Input [2]: [i_item_id#6, i_color#7]

(11) BroadcastExchange
Input [1]: [i_item_id#6#8]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#9]

(12) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [i_item_id#6]
Right keys [1]: [i_item_id#6#8]
Join condition: None

(13) BroadcastExchange
Input [2]: [i_item_sk#5, i_item_id#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#10]

(14) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_item_sk#2]
Right keys [1]: [i_item_sk#5]
Join condition: None

(15) Project [codegen id : 5]
Output [4]: [ss_sold_date_sk#1, ss_addr_sk#3, ss_ext_sales_price#4, i_item_id#6]
Input [6]: [ss_sold_date_sk#1, ss_item_sk#2, ss_addr_sk#3, ss_ext_sales_price#4, i_item_sk#5, i_item_id#6]

(16) Scan parquet default.customer_address
Output [2]: [ca_address_sk#11, ca_gmt_offset#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-5.00), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>

(17) ColumnarToRow [codegen id : 3]
Input [2]: [ca_address_sk#11, ca_gmt_offset#12]

(18) Filter [codegen id : 3]
Input [2]: [ca_address_sk#11, ca_gmt_offset#12]
Condition : ((isnotnull(ca_gmt_offset#12) AND (ca_gmt_offset#12 = -5.00)) AND isnotnull(ca_address_sk#11))

(19) Project [codegen id : 3]
Output [1]: [ca_address_sk#11]
Input [2]: [ca_address_sk#11, ca_gmt_offset#12]

(20) BroadcastExchange
Input [1]: [ca_address_sk#11]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#13]

(21) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_addr_sk#3]
Right keys [1]: [ca_address_sk#11]
Join condition: None

(22) Project [codegen id : 5]
Output [3]: [ss_sold_date_sk#1, ss_ext_sales_price#4, i_item_id#6]
Input [5]: [ss_sold_date_sk#1, ss_addr_sk#3, ss_ext_sales_price#4, i_item_id#6, ca_address_sk#11]

(23) Scan parquet default.date_dim
Output [3]: [d_date_sk#14, d_year#15, d_moy#16]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,2), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(24) ColumnarToRow [codegen id : 4]
Input [3]: [d_date_sk#14, d_year#15, d_moy#16]

(25) Filter [codegen id : 4]
Input [3]: [d_date_sk#14, d_year#15, d_moy#16]
Condition : ((((isnotnull(d_year#15) AND isnotnull(d_moy#16)) AND (d_year#15 = 2001)) AND (d_moy#16 = 2)) AND isnotnull(d_date_sk#14))

(26) Project [codegen id : 4]
Output [1]: [d_date_sk#14]
Input [3]: [d_date_sk#14, d_year#15, d_moy#16]

(27) BroadcastExchange
Input [1]: [d_date_sk#14]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#17]

(28) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_sold_date_sk#1]
Right keys [1]: [d_date_sk#14]
Join condition: None

(29) Project [codegen id : 5]
Output [2]: [ss_ext_sales_price#4, i_item_id#6]
Input [4]: [ss_sold_date_sk#1, ss_ext_sales_price#4, i_item_id#6, d_date_sk#14]

(30) HashAggregate [codegen id : 5]
Input [2]: [ss_ext_sales_price#4, i_item_id#6]
Keys [1]: [i_item_id#6]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#4))]
Aggregate Attributes [1]: [sum#18]
Results [2]: [i_item_id#6, sum#19]

(31) Exchange
Input [2]: [i_item_id#6, sum#19]
Arguments: hashpartitioning(i_item_id#6, 5), ENSURE_REQUIREMENTS, [id=#20]

(32) HashAggregate [codegen id : 6]
Input [2]: [i_item_id#6, sum#19]
Keys [1]: [i_item_id#6]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#4))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#4))#21]
Results [2]: [i_item_id#6, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#4))#21,17,2) AS total_sales#22]

(33) Scan parquet default.catalog_sales
Output [4]: [cs_sold_date_sk#23, cs_bill_addr_sk#24, cs_item_sk#25, cs_ext_sales_price#26]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_sales]
PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_sold_date_sk:int,cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>

(34) ColumnarToRow [codegen id : 11]
Input [4]: [cs_sold_date_sk#23, cs_bill_addr_sk#24, cs_item_sk#25, cs_ext_sales_price#26]

(35) Filter [codegen id : 11]
Input [4]: [cs_sold_date_sk#23, cs_bill_addr_sk#24, cs_item_sk#25, cs_ext_sales_price#26]
Condition : ((isnotnull(cs_sold_date_sk#23) AND isnotnull(cs_bill_addr_sk#24)) AND isnotnull(cs_item_sk#25))

(36) ReusedExchange [Reuses operator id: 13]
Output [2]: [i_item_sk#5, i_item_id#6]

(37) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_item_sk#25]
Right keys [1]: [i_item_sk#5]
Join condition: None

(38) Project [codegen id : 11]
Output [4]: [cs_sold_date_sk#23, cs_bill_addr_sk#24, cs_ext_sales_price#26, i_item_id#6]
Input [6]: [cs_sold_date_sk#23, cs_bill_addr_sk#24, cs_item_sk#25, cs_ext_sales_price#26, i_item_sk#5, i_item_id#6]

(39) ReusedExchange [Reuses operator id: 20]
Output [1]: [ca_address_sk#11]

(40) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_bill_addr_sk#24]
Right keys [1]: [ca_address_sk#11]
Join condition: None

(41) Project [codegen id : 11]
Output [3]: [cs_sold_date_sk#23, cs_ext_sales_price#26, i_item_id#6]
Input [5]: [cs_sold_date_sk#23, cs_bill_addr_sk#24, cs_ext_sales_price#26, i_item_id#6, ca_address_sk#11]

(42) ReusedExchange [Reuses operator id: 27]
Output [1]: [d_date_sk#14]

(43) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_sold_date_sk#23]
Right keys [1]: [d_date_sk#14]
Join condition: None

(44) Project [codegen id : 11]
Output [2]: [cs_ext_sales_price#26, i_item_id#6]
Input [4]: [cs_sold_date_sk#23, cs_ext_sales_price#26, i_item_id#6, d_date_sk#14]

(45) HashAggregate [codegen id : 11]
Input [2]: [cs_ext_sales_price#26, i_item_id#6]
Keys [1]: [i_item_id#6]
Functions [1]: [partial_sum(UnscaledValue(cs_ext_sales_price#26))]
Aggregate Attributes [1]: [sum#27]
Results [2]: [i_item_id#6, sum#28]

(46) Exchange
Input [2]: [i_item_id#6, sum#28]
Arguments: hashpartitioning(i_item_id#6, 5), ENSURE_REQUIREMENTS, [id=#29]

(47) HashAggregate [codegen id : 12]
Input [2]: [i_item_id#6, sum#28]
Keys [1]: [i_item_id#6]
Functions [1]: [sum(UnscaledValue(cs_ext_sales_price#26))]
Aggregate Attributes [1]: [sum(UnscaledValue(cs_ext_sales_price#26))#30]
Results [2]: [i_item_id#6, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#26))#30,17,2) AS total_sales#31]

(48) Scan parquet default.web_sales
Output [4]: [ws_sold_date_sk#32, ws_item_sk#33, ws_bill_addr_sk#34, ws_ext_sales_price#35]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_sales]
PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(49) ColumnarToRow [codegen id : 17]
Input [4]: [ws_sold_date_sk#32, ws_item_sk#33, ws_bill_addr_sk#34, ws_ext_sales_price#35]

(50) Filter [codegen id : 17]
Input [4]: [ws_sold_date_sk#32, ws_item_sk#33, ws_bill_addr_sk#34, ws_ext_sales_price#35]
Condition : ((isnotnull(ws_sold_date_sk#32) AND isnotnull(ws_bill_addr_sk#34)) AND isnotnull(ws_item_sk#33))

(51) ReusedExchange [Reuses operator id: 13]
Output [2]: [i_item_sk#5, i_item_id#6]

(52) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_item_sk#33]
Right keys [1]: [i_item_sk#5]
Join condition: None

(53) Project [codegen id : 17]
Output [4]: [ws_sold_date_sk#32, ws_bill_addr_sk#34, ws_ext_sales_price#35, i_item_id#6]
Input [6]: [ws_sold_date_sk#32, ws_item_sk#33, ws_bill_addr_sk#34, ws_ext_sales_price#35, i_item_sk#5, i_item_id#6]

(54) ReusedExchange [Reuses operator id: 20]
Output [1]: [ca_address_sk#11]

(55) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_bill_addr_sk#34]
Right keys [1]: [ca_address_sk#11]
Join condition: None

(56) Project [codegen id : 17]
Output [3]: [ws_sold_date_sk#32, ws_ext_sales_price#35, i_item_id#6]
Input [5]: [ws_sold_date_sk#32, ws_bill_addr_sk#34, ws_ext_sales_price#35, i_item_id#6, ca_address_sk#11]

(57) ReusedExchange [Reuses operator id: 27]
Output [1]: [d_date_sk#14]

(58) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_sold_date_sk#32]
Right keys [1]: [d_date_sk#14]
Join condition: None

(59) Project [codegen id : 17]
Output [2]: [ws_ext_sales_price#35, i_item_id#6]
Input [4]: [ws_sold_date_sk#32, ws_ext_sales_price#35, i_item_id#6, d_date_sk#14]

(60) HashAggregate [codegen id : 17]
Input [2]: [ws_ext_sales_price#35, i_item_id#6]
Keys [1]: [i_item_id#6]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#35))]
Aggregate Attributes [1]: [sum#36]
Results [2]: [i_item_id#6, sum#37]

(61) Exchange
Input [2]: [i_item_id#6, sum#37]
Arguments: hashpartitioning(i_item_id#6, 5), ENSURE_REQUIREMENTS, [id=#38]

(62) HashAggregate [codegen id : 18]
Input [2]: [i_item_id#6, sum#37]
Keys [1]: [i_item_id#6]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#35))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#35))#39]
Results [2]: [i_item_id#6, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#35))#39,17,2) AS total_sales#40]

(63) Union

(64) HashAggregate [codegen id : 19]
Input [2]: [i_item_id#6, total_sales#22]
Keys [1]: [i_item_id#6]
Functions [1]: [partial_sum(total_sales#22)]
Aggregate Attributes [2]: [sum#41, isEmpty#42]
Results [3]: [i_item_id#6, sum#43, isEmpty#44]

(65) Exchange
Input [3]: [i_item_id#6, sum#43, isEmpty#44]
Arguments: hashpartitioning(i_item_id#6, 5), ENSURE_REQUIREMENTS, [id=#45]

(66) HashAggregate [codegen id : 20]
Input [3]: [i_item_id#6, sum#43, isEmpty#44]
Keys [1]: [i_item_id#6]
Functions [1]: [sum(total_sales#22)]
Aggregate Attributes [1]: [sum(total_sales#22)#46]
Results [2]: [i_item_id#6, sum(total_sales#22)#46 AS total_sales#47]

(67) TakeOrderedAndProject
Input [2]: [i_item_id#6, total_sales#47]
Arguments: 100, [total_sales#47 ASC NULLS FIRST], [i_item_id#6, total_sales#47]

