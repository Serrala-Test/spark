== Physical Plan ==
TakeOrderedAndProject (64)
+- * HashAggregate (63)
   +- Exchange (62)
      +- * HashAggregate (61)
         +- Union (60)
            :- * HashAggregate (29)
            :  +- Exchange (28)
            :     +- * HashAggregate (27)
            :        +- * Project (26)
            :           +- * BroadcastHashJoin Inner BuildRight (25)
            :              :- * Project (15)
            :              :  +- * BroadcastHashJoin Inner BuildRight (14)
            :              :     :- * Project (9)
            :              :     :  +- * BroadcastHashJoin Inner BuildRight (8)
            :              :     :     :- * Project (3)
            :              :     :     :  +- * Filter (2)
            :              :     :     :     +- BatchScan default.store_sales (1)
            :              :     :     +- BroadcastExchange (7)
            :              :     :        +- * Project (6)
            :              :     :           +- * Filter (5)
            :              :     :              +- BatchScan default.date_dim (4)
            :              :     +- BroadcastExchange (13)
            :              :        +- * Project (12)
            :              :           +- * Filter (11)
            :              :              +- BatchScan default.customer_address (10)
            :              +- BroadcastExchange (24)
            :                 +- * BroadcastHashJoin LeftSemi BuildRight (23)
            :                    :- * Project (18)
            :                    :  +- * Filter (17)
            :                    :     +- BatchScan default.item (16)
            :                    +- BroadcastExchange (22)
            :                       +- * Project (21)
            :                          +- * Filter (20)
            :                             +- BatchScan default.item (19)
            :- * HashAggregate (44)
            :  +- Exchange (43)
            :     +- * HashAggregate (42)
            :        +- * Project (41)
            :           +- * BroadcastHashJoin Inner BuildRight (40)
            :              :- * Project (38)
            :              :  +- * BroadcastHashJoin Inner BuildRight (37)
            :              :     :- * Project (35)
            :              :     :  +- * BroadcastHashJoin Inner BuildRight (34)
            :              :     :     :- * Project (32)
            :              :     :     :  +- * Filter (31)
            :              :     :     :     +- BatchScan default.catalog_sales (30)
            :              :     :     +- ReusedExchange (33)
            :              :     +- ReusedExchange (36)
            :              +- ReusedExchange (39)
            +- * HashAggregate (59)
               +- Exchange (58)
                  +- * HashAggregate (57)
                     +- * Project (56)
                        +- * BroadcastHashJoin Inner BuildRight (55)
                           :- * Project (53)
                           :  +- * BroadcastHashJoin Inner BuildRight (52)
                           :     :- * Project (50)
                           :     :  +- * BroadcastHashJoin Inner BuildRight (49)
                           :     :     :- * Project (47)
                           :     :     :  +- * Filter (46)
                           :     :     :     +- BatchScan default.web_sales (45)
                           :     :     +- ReusedExchange (48)
                           :     +- ReusedExchange (51)
                           +- ReusedExchange (54)


(1) BatchScan default.store_sales
Output [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
DataFilters: [isnotnull(ss_addr_sk#2), isnotnull(ss_item_sk#1)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/store_sales]
PartitionFilters: [isnotnull(ss_sold_date_sk#4)]
PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(2) Filter [codegen id : 5]
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Condition : (isnotnull(ss_addr_sk#2) AND isnotnull(ss_item_sk#1))

(3) Project [codegen id : 5]
Output [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]

(4) BatchScan default.date_dim
Output [3]: [d_date_sk#5, d_year#6, d_moy#7]
DataFilters: [isnotnull(d_year#6), isnotnull(d_moy#7), (d_year#6 = 1998), (d_moy#7 = 9), isnotnull(d_date_sk#5)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,9), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(5) Filter [codegen id : 1]
Input [3]: [d_date_sk#5, d_year#6, d_moy#7]
Condition : ((((isnotnull(d_year#6) AND isnotnull(d_moy#7)) AND (d_year#6 = 1998)) AND (d_moy#7 = 9)) AND isnotnull(d_date_sk#5))

(6) Project [codegen id : 1]
Output [1]: [d_date_sk#5]
Input [3]: [d_date_sk#5, d_year#6, d_moy#7]

(7) BroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(8) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_sold_date_sk#4]
Right keys [1]: [d_date_sk#5]
Join type: Inner
Join condition: None

(9) Project [codegen id : 5]
Output [3]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]
Input [5]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4, d_date_sk#5]

(10) BatchScan default.customer_address
Output [2]: [ca_address_sk#8, ca_gmt_offset#9]
DataFilters: [isnotnull(ca_gmt_offset#9), (ca_gmt_offset#9 = -5.00), isnotnull(ca_address_sk#8)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-5.00), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>

(11) Filter [codegen id : 2]
Input [2]: [ca_address_sk#8, ca_gmt_offset#9]
Condition : ((isnotnull(ca_gmt_offset#9) AND (ca_gmt_offset#9 = -5.00)) AND isnotnull(ca_address_sk#8))

(12) Project [codegen id : 2]
Output [1]: [ca_address_sk#8]
Input [2]: [ca_address_sk#8, ca_gmt_offset#9]

(13) BroadcastExchange
Input [1]: [ca_address_sk#8]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(14) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_addr_sk#2]
Right keys [1]: [ca_address_sk#8]
Join type: Inner
Join condition: None

(15) Project [codegen id : 5]
Output [2]: [ss_item_sk#1, ss_ext_sales_price#3]
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ca_address_sk#8]

(16) BatchScan default.item
Output [2]: [i_item_sk#10, i_item_id#11]
DataFilters: [isnotnull(i_item_sk#10)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string>

(17) Filter [codegen id : 4]
Input [2]: [i_item_sk#10, i_item_id#11]
Condition : isnotnull(i_item_sk#10)

(18) Project [codegen id : 4]
Output [2]: [i_item_sk#10, i_item_id#11]
Input [2]: [i_item_sk#10, i_item_id#11]

(19) BatchScan default.item
Output [2]: [i_item_id#12, i_category#13]
DataFilters: [isnotnull(i_category#13), (i_category#13 = Music                                             )]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Music                                             )]
ReadSchema: struct<i_item_id:string,i_category:string>

(20) Filter [codegen id : 3]
Input [2]: [i_item_id#12, i_category#13]
Condition : (isnotnull(i_category#13) AND (i_category#13 = Music                                             ))

(21) Project [codegen id : 3]
Output [1]: [i_item_id#12]
Input [2]: [i_item_id#12, i_category#13]

(22) BroadcastExchange
Input [1]: [i_item_id#12]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=3]

(23) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [i_item_id#11]
Right keys [1]: [i_item_id#12]
Join type: LeftSemi
Join condition: None

(24) BroadcastExchange
Input [2]: [i_item_sk#10, i_item_id#11]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4]

(25) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_item_sk#1]
Right keys [1]: [i_item_sk#10]
Join type: Inner
Join condition: None

(26) Project [codegen id : 5]
Output [2]: [ss_ext_sales_price#3, i_item_id#11]
Input [4]: [ss_item_sk#1, ss_ext_sales_price#3, i_item_sk#10, i_item_id#11]

(27) HashAggregate [codegen id : 5]
Input [2]: [ss_ext_sales_price#3, i_item_id#11]
Keys [1]: [i_item_id#11]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#3))]
Aggregate Attributes [1]: [sum#14]
Results [2]: [i_item_id#11, sum#15]

(28) Exchange
Input [2]: [i_item_id#11, sum#15]
Arguments: hashpartitioning(i_item_id#11, 5), ENSURE_REQUIREMENTS, [plan_id=5]

(29) HashAggregate [codegen id : 6]
Input [2]: [i_item_id#11, sum#15]
Keys [1]: [i_item_id#11]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#3))#16]
Results [2]: [i_item_id#11, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#3))#16,17,2) AS total_sales#17]

(30) BatchScan default.catalog_sales
Output [4]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20, cs_sold_date_sk#21]
DataFilters: [isnotnull(cs_bill_addr_sk#18), isnotnull(cs_item_sk#19)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/catalog_sales]
PartitionFilters: [isnotnull(cs_sold_date_sk#21)]
PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>

(31) Filter [codegen id : 11]
Input [4]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20, cs_sold_date_sk#21]
Condition : (isnotnull(cs_bill_addr_sk#18) AND isnotnull(cs_item_sk#19))

(32) Project [codegen id : 11]
Output [4]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20, cs_sold_date_sk#21]
Input [4]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20, cs_sold_date_sk#21]

(33) ReusedExchange [Reuses operator id: 7]
Output [1]: [d_date_sk#22]

(34) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_sold_date_sk#21]
Right keys [1]: [d_date_sk#22]
Join type: Inner
Join condition: None

(35) Project [codegen id : 11]
Output [3]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20]
Input [5]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20, cs_sold_date_sk#21, d_date_sk#22]

(36) ReusedExchange [Reuses operator id: 13]
Output [1]: [ca_address_sk#23]

(37) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_bill_addr_sk#18]
Right keys [1]: [ca_address_sk#23]
Join type: Inner
Join condition: None

(38) Project [codegen id : 11]
Output [2]: [cs_item_sk#19, cs_ext_sales_price#20]
Input [4]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20, ca_address_sk#23]

(39) ReusedExchange [Reuses operator id: 24]
Output [2]: [i_item_sk#24, i_item_id#25]

(40) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_item_sk#19]
Right keys [1]: [i_item_sk#24]
Join type: Inner
Join condition: None

(41) Project [codegen id : 11]
Output [2]: [cs_ext_sales_price#20, i_item_id#25]
Input [4]: [cs_item_sk#19, cs_ext_sales_price#20, i_item_sk#24, i_item_id#25]

(42) HashAggregate [codegen id : 11]
Input [2]: [cs_ext_sales_price#20, i_item_id#25]
Keys [1]: [i_item_id#25]
Functions [1]: [partial_sum(UnscaledValue(cs_ext_sales_price#20))]
Aggregate Attributes [1]: [sum#26]
Results [2]: [i_item_id#25, sum#27]

(43) Exchange
Input [2]: [i_item_id#25, sum#27]
Arguments: hashpartitioning(i_item_id#25, 5), ENSURE_REQUIREMENTS, [plan_id=6]

(44) HashAggregate [codegen id : 12]
Input [2]: [i_item_id#25, sum#27]
Keys [1]: [i_item_id#25]
Functions [1]: [sum(UnscaledValue(cs_ext_sales_price#20))]
Aggregate Attributes [1]: [sum(UnscaledValue(cs_ext_sales_price#20))#28]
Results [2]: [i_item_id#25, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#20))#28,17,2) AS total_sales#29]

(45) BatchScan default.web_sales
Output [4]: [ws_item_sk#30, ws_bill_addr_sk#31, ws_ext_sales_price#32, ws_sold_date_sk#33]
DataFilters: [isnotnull(ws_bill_addr_sk#31), isnotnull(ws_item_sk#30)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/web_sales]
PartitionFilters: [isnotnull(ws_sold_date_sk#33)]
PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(46) Filter [codegen id : 17]
Input [4]: [ws_item_sk#30, ws_bill_addr_sk#31, ws_ext_sales_price#32, ws_sold_date_sk#33]
Condition : (isnotnull(ws_bill_addr_sk#31) AND isnotnull(ws_item_sk#30))

(47) Project [codegen id : 17]
Output [4]: [ws_item_sk#30, ws_bill_addr_sk#31, ws_ext_sales_price#32, ws_sold_date_sk#33]
Input [4]: [ws_item_sk#30, ws_bill_addr_sk#31, ws_ext_sales_price#32, ws_sold_date_sk#33]

(48) ReusedExchange [Reuses operator id: 7]
Output [1]: [d_date_sk#34]

(49) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_sold_date_sk#33]
Right keys [1]: [d_date_sk#34]
Join type: Inner
Join condition: None

(50) Project [codegen id : 17]
Output [3]: [ws_item_sk#30, ws_bill_addr_sk#31, ws_ext_sales_price#32]
Input [5]: [ws_item_sk#30, ws_bill_addr_sk#31, ws_ext_sales_price#32, ws_sold_date_sk#33, d_date_sk#34]

(51) ReusedExchange [Reuses operator id: 13]
Output [1]: [ca_address_sk#35]

(52) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_bill_addr_sk#31]
Right keys [1]: [ca_address_sk#35]
Join type: Inner
Join condition: None

(53) Project [codegen id : 17]
Output [2]: [ws_item_sk#30, ws_ext_sales_price#32]
Input [4]: [ws_item_sk#30, ws_bill_addr_sk#31, ws_ext_sales_price#32, ca_address_sk#35]

(54) ReusedExchange [Reuses operator id: 24]
Output [2]: [i_item_sk#36, i_item_id#37]

(55) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_item_sk#30]
Right keys [1]: [i_item_sk#36]
Join type: Inner
Join condition: None

(56) Project [codegen id : 17]
Output [2]: [ws_ext_sales_price#32, i_item_id#37]
Input [4]: [ws_item_sk#30, ws_ext_sales_price#32, i_item_sk#36, i_item_id#37]

(57) HashAggregate [codegen id : 17]
Input [2]: [ws_ext_sales_price#32, i_item_id#37]
Keys [1]: [i_item_id#37]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#32))]
Aggregate Attributes [1]: [sum#38]
Results [2]: [i_item_id#37, sum#39]

(58) Exchange
Input [2]: [i_item_id#37, sum#39]
Arguments: hashpartitioning(i_item_id#37, 5), ENSURE_REQUIREMENTS, [plan_id=7]

(59) HashAggregate [codegen id : 18]
Input [2]: [i_item_id#37, sum#39]
Keys [1]: [i_item_id#37]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#32))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#32))#40]
Results [2]: [i_item_id#37, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#32))#40,17,2) AS total_sales#41]

(60) Union

(61) HashAggregate [codegen id : 19]
Input [2]: [i_item_id#11, total_sales#17]
Keys [1]: [i_item_id#11]
Functions [1]: [partial_sum(total_sales#17)]
Aggregate Attributes [2]: [sum#42, isEmpty#43]
Results [3]: [i_item_id#11, sum#44, isEmpty#45]

(62) Exchange
Input [3]: [i_item_id#11, sum#44, isEmpty#45]
Arguments: hashpartitioning(i_item_id#11, 5), ENSURE_REQUIREMENTS, [plan_id=8]

(63) HashAggregate [codegen id : 20]
Input [3]: [i_item_id#11, sum#44, isEmpty#45]
Keys [1]: [i_item_id#11]
Functions [1]: [sum(total_sales#17)]
Aggregate Attributes [1]: [sum(total_sales#17)#46]
Results [2]: [i_item_id#11, sum(total_sales#17)#46 AS total_sales#47]

(64) TakeOrderedAndProject
Input [2]: [i_item_id#11, total_sales#47]
Arguments: 100, [i_item_id#11 ASC NULLS FIRST, total_sales#47 ASC NULLS FIRST], [i_item_id#11, total_sales#47]

