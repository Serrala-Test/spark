== Physical Plan ==
TakeOrderedAndProject (56)
+- * Project (55)
   +- * BroadcastHashJoin Inner BuildRight (54)
      :- * Project (49)
      :  +- * BroadcastHashJoin Inner BuildRight (48)
      :     :- * Project (43)
      :     :  +- * SortMergeJoin Inner (42)
      :     :     :- * Sort (21)
      :     :     :  +- Exchange (20)
      :     :     :     +- * Filter (19)
      :     :     :        +- * HashAggregate (18)
      :     :     :           +- Exchange (17)
      :     :     :              +- * HashAggregate (16)
      :     :     :                 +- * Project (15)
      :     :     :                    +- * BroadcastHashJoin Inner BuildRight (14)
      :     :     :                       :- * Project (9)
      :     :     :                       :  +- * BroadcastHashJoin Inner BuildRight (8)
      :     :     :                       :     :- * Project (3)
      :     :     :                       :     :  +- * Filter (2)
      :     :     :                       :     :     +- BatchScan default.web_returns (1)
      :     :     :                       :     +- BroadcastExchange (7)
      :     :     :                       :        +- * Project (6)
      :     :     :                       :           +- * Filter (5)
      :     :     :                       :              +- BatchScan default.date_dim (4)
      :     :     :                       +- BroadcastExchange (13)
      :     :     :                          +- * Project (12)
      :     :     :                             +- * Filter (11)
      :     :     :                                +- BatchScan default.customer_address (10)
      :     :     +- * Sort (41)
      :     :        +- * Filter (40)
      :     :           +- * HashAggregate (39)
      :     :              +- Exchange (38)
      :     :                 +- * HashAggregate (37)
      :     :                    +- * HashAggregate (36)
      :     :                       +- Exchange (35)
      :     :                          +- * HashAggregate (34)
      :     :                             +- * Project (33)
      :     :                                +- * BroadcastHashJoin Inner BuildRight (32)
      :     :                                   :- * Project (27)
      :     :                                   :  +- * BroadcastHashJoin Inner BuildRight (26)
      :     :                                   :     :- * Project (24)
      :     :                                   :     :  +- * Filter (23)
      :     :                                   :     :     +- BatchScan default.web_returns (22)
      :     :                                   :     +- ReusedExchange (25)
      :     :                                   +- BroadcastExchange (31)
      :     :                                      +- * Project (30)
      :     :                                         +- * Filter (29)
      :     :                                            +- BatchScan default.customer_address (28)
      :     +- BroadcastExchange (47)
      :        +- * Project (46)
      :           +- * Filter (45)
      :              +- BatchScan default.customer (44)
      +- BroadcastExchange (53)
         +- * Project (52)
            +- * Filter (51)
               +- BatchScan default.customer_address (50)


(1) BatchScan default.web_returns
Output [4]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4]
DataFilters: [isnotnull(wr_returning_addr_sk#2), isnotnull(wr_returning_customer_sk#1)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/web_returns]
PartitionFilters: [isnotnull(wr_returned_date_sk#4)]
PushedFilters: [IsNotNull(wr_returning_addr_sk), IsNotNull(wr_returning_customer_sk)]
ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>

(2) Filter [codegen id : 3]
Input [4]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4]
Condition : (isnotnull(wr_returning_addr_sk#2) AND isnotnull(wr_returning_customer_sk#1))

(3) Project [codegen id : 3]
Output [4]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4]
Input [4]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4]

(4) BatchScan default.date_dim
Output [2]: [d_date_sk#5, d_year#6]
DataFilters: [isnotnull(d_year#6), (d_year#6 = 2002), isnotnull(d_date_sk#5)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(5) Filter [codegen id : 1]
Input [2]: [d_date_sk#5, d_year#6]
Condition : ((isnotnull(d_year#6) AND (d_year#6 = 2002)) AND isnotnull(d_date_sk#5))

(6) Project [codegen id : 1]
Output [1]: [d_date_sk#5]
Input [2]: [d_date_sk#5, d_year#6]

(7) BroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(8) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [wr_returned_date_sk#4]
Right keys [1]: [d_date_sk#5]
Join type: Inner
Join condition: None

(9) Project [codegen id : 3]
Output [3]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3]
Input [5]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4, d_date_sk#5]

(10) BatchScan default.customer_address
Output [2]: [ca_address_sk#7, ca_state#8]
DataFilters: [isnotnull(ca_address_sk#7), isnotnull(ca_state#8)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)]
ReadSchema: struct<ca_address_sk:int,ca_state:string>

(11) Filter [codegen id : 2]
Input [2]: [ca_address_sk#7, ca_state#8]
Condition : (isnotnull(ca_address_sk#7) AND isnotnull(ca_state#8))

(12) Project [codegen id : 2]
Output [2]: [ca_address_sk#7, ca_state#8]
Input [2]: [ca_address_sk#7, ca_state#8]

(13) BroadcastExchange
Input [2]: [ca_address_sk#7, ca_state#8]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(14) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [wr_returning_addr_sk#2]
Right keys [1]: [ca_address_sk#7]
Join type: Inner
Join condition: None

(15) Project [codegen id : 3]
Output [3]: [wr_returning_customer_sk#1, wr_return_amt#3, ca_state#8]
Input [5]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, ca_address_sk#7, ca_state#8]

(16) HashAggregate [codegen id : 3]
Input [3]: [wr_returning_customer_sk#1, wr_return_amt#3, ca_state#8]
Keys [2]: [wr_returning_customer_sk#1, ca_state#8]
Functions [1]: [partial_sum(UnscaledValue(wr_return_amt#3))]
Aggregate Attributes [1]: [sum#9]
Results [3]: [wr_returning_customer_sk#1, ca_state#8, sum#10]

(17) Exchange
Input [3]: [wr_returning_customer_sk#1, ca_state#8, sum#10]
Arguments: hashpartitioning(wr_returning_customer_sk#1, ca_state#8, 5), ENSURE_REQUIREMENTS, [plan_id=3]

(18) HashAggregate [codegen id : 4]
Input [3]: [wr_returning_customer_sk#1, ca_state#8, sum#10]
Keys [2]: [wr_returning_customer_sk#1, ca_state#8]
Functions [1]: [sum(UnscaledValue(wr_return_amt#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(wr_return_amt#3))#11]
Results [3]: [wr_returning_customer_sk#1 AS ctr_customer_sk#12, ca_state#8 AS ctr_state#13, MakeDecimal(sum(UnscaledValue(wr_return_amt#3))#11,17,2) AS ctr_total_return#14]

(19) Filter [codegen id : 4]
Input [3]: [ctr_customer_sk#12, ctr_state#13, ctr_total_return#14]
Condition : isnotnull(ctr_total_return#14)

(20) Exchange
Input [3]: [ctr_customer_sk#12, ctr_state#13, ctr_total_return#14]
Arguments: hashpartitioning(ctr_state#13, 5), ENSURE_REQUIREMENTS, [plan_id=4]

(21) Sort [codegen id : 5]
Input [3]: [ctr_customer_sk#12, ctr_state#13, ctr_total_return#14]
Arguments: [ctr_state#13 ASC NULLS FIRST], false, 0

(22) BatchScan default.web_returns
Output [4]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4]
DataFilters: [isnotnull(wr_returning_addr_sk#2)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/web_returns]
PartitionFilters: [isnotnull(wr_returned_date_sk#4)]
PushedFilters: [IsNotNull(wr_returning_addr_sk)]
ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>

(23) Filter [codegen id : 8]
Input [4]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4]
Condition : (isnotnull(wr_returning_addr_sk#2) AND isnotnull(wr_returned_date_sk#4))

(24) Project [codegen id : 8]
Output [4]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4]
Input [4]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4]

(25) ReusedExchange [Reuses operator id: 7]
Output [1]: [d_date_sk#5]

(26) BroadcastHashJoin [codegen id : 8]
Left keys [1]: [wr_returned_date_sk#4]
Right keys [1]: [d_date_sk#5]
Join type: Inner
Join condition: None

(27) Project [codegen id : 8]
Output [3]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3]
Input [5]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4, d_date_sk#5]

(28) BatchScan default.customer_address
Output [2]: [ca_address_sk#7, ca_state#8]
DataFilters: [isnotnull(ca_address_sk#7)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_state:string>

(29) Filter [codegen id : 7]
Input [2]: [ca_address_sk#7, ca_state#8]
Condition : (isnotnull(ca_address_sk#7) AND isnotnull(ca_state#8))

(30) Project [codegen id : 7]
Output [2]: [ca_address_sk#7, ca_state#8]
Input [2]: [ca_address_sk#7, ca_state#8]

(31) BroadcastExchange
Input [2]: [ca_address_sk#7, ca_state#8]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5]

(32) BroadcastHashJoin [codegen id : 8]
Left keys [1]: [wr_returning_addr_sk#2]
Right keys [1]: [ca_address_sk#7]
Join type: Inner
Join condition: None

(33) Project [codegen id : 8]
Output [3]: [wr_returning_customer_sk#1, wr_return_amt#3, ca_state#8]
Input [5]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, ca_address_sk#7, ca_state#8]

(34) HashAggregate [codegen id : 8]
Input [3]: [wr_returning_customer_sk#1, wr_return_amt#3, ca_state#8]
Keys [2]: [wr_returning_customer_sk#1, ca_state#8]
Functions [1]: [partial_sum(UnscaledValue(wr_return_amt#3))]
Aggregate Attributes [1]: [sum#15]
Results [3]: [wr_returning_customer_sk#1, ca_state#8, sum#16]

(35) Exchange
Input [3]: [wr_returning_customer_sk#1, ca_state#8, sum#16]
Arguments: hashpartitioning(wr_returning_customer_sk#1, ca_state#8, 5), ENSURE_REQUIREMENTS, [plan_id=6]

(36) HashAggregate [codegen id : 9]
Input [3]: [wr_returning_customer_sk#1, ca_state#8, sum#16]
Keys [2]: [wr_returning_customer_sk#1, ca_state#8]
Functions [1]: [sum(UnscaledValue(wr_return_amt#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(wr_return_amt#3))#11]
Results [2]: [ca_state#8 AS ctr_state#13, MakeDecimal(sum(UnscaledValue(wr_return_amt#3))#11,17,2) AS ctr_total_return#14]

(37) HashAggregate [codegen id : 9]
Input [2]: [ctr_state#13, ctr_total_return#14]
Keys [1]: [ctr_state#13]
Functions [1]: [partial_avg(ctr_total_return#14)]
Aggregate Attributes [2]: [sum#17, count#18]
Results [3]: [ctr_state#13, sum#19, count#20]

(38) Exchange
Input [3]: [ctr_state#13, sum#19, count#20]
Arguments: hashpartitioning(ctr_state#13, 5), ENSURE_REQUIREMENTS, [plan_id=7]

(39) HashAggregate [codegen id : 10]
Input [3]: [ctr_state#13, sum#19, count#20]
Keys [1]: [ctr_state#13]
Functions [1]: [avg(ctr_total_return#14)]
Aggregate Attributes [1]: [avg(ctr_total_return#14)#21]
Results [2]: [(avg(ctr_total_return#14)#21 * 1.2) AS (avg(ctr_total_return) * 1.2)#22, ctr_state#13 AS ctr_state#13#23]

(40) Filter [codegen id : 10]
Input [2]: [(avg(ctr_total_return) * 1.2)#22, ctr_state#13#23]
Condition : isnotnull((avg(ctr_total_return) * 1.2)#22)

(41) Sort [codegen id : 10]
Input [2]: [(avg(ctr_total_return) * 1.2)#22, ctr_state#13#23]
Arguments: [ctr_state#13#23 ASC NULLS FIRST], false, 0

(42) SortMergeJoin [codegen id : 13]
Left keys [1]: [ctr_state#13]
Right keys [1]: [ctr_state#13#23]
Join type: Inner
Join condition: (cast(ctr_total_return#14 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#22)

(43) Project [codegen id : 13]
Output [2]: [ctr_customer_sk#12, ctr_total_return#14]
Input [5]: [ctr_customer_sk#12, ctr_state#13, ctr_total_return#14, (avg(ctr_total_return) * 1.2)#22, ctr_state#13#23]

(44) BatchScan default.customer
Output [14]: [c_customer_sk#24, c_customer_id#25, c_current_addr_sk#26, c_salutation#27, c_first_name#28, c_last_name#29, c_preferred_cust_flag#30, c_birth_day#31, c_birth_month#32, c_birth_year#33, c_birth_country#34, c_login#35, c_email_address#36, c_last_review_date#37]
DataFilters: [isnotnull(c_customer_sk#24), isnotnull(c_current_addr_sk#26)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:int,c_birth_month:int,c_birth_year:int,c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:int>

(45) Filter [codegen id : 11]
Input [14]: [c_customer_sk#24, c_customer_id#25, c_current_addr_sk#26, c_salutation#27, c_first_name#28, c_last_name#29, c_preferred_cust_flag#30, c_birth_day#31, c_birth_month#32, c_birth_year#33, c_birth_country#34, c_login#35, c_email_address#36, c_last_review_date#37]
Condition : ((isnotnull(c_customer_sk#24) AND isnotnull(c_current_addr_sk#26)) AND might_contain(Subquery scalar-subquery#38, [id=#39], xxhash64(c_current_addr_sk#26, 42)))

(46) Project [codegen id : 11]
Output [14]: [c_customer_sk#24, c_customer_id#25, c_current_addr_sk#26, c_salutation#27, c_first_name#28, c_last_name#29, c_preferred_cust_flag#30, c_birth_day#31, c_birth_month#32, c_birth_year#33, c_birth_country#34, c_login#35, c_email_address#36, c_last_review_date#37]
Input [14]: [c_customer_sk#24, c_customer_id#25, c_current_addr_sk#26, c_salutation#27, c_first_name#28, c_last_name#29, c_preferred_cust_flag#30, c_birth_day#31, c_birth_month#32, c_birth_year#33, c_birth_country#34, c_login#35, c_email_address#36, c_last_review_date#37]

(47) BroadcastExchange
Input [14]: [c_customer_sk#24, c_customer_id#25, c_current_addr_sk#26, c_salutation#27, c_first_name#28, c_last_name#29, c_preferred_cust_flag#30, c_birth_day#31, c_birth_month#32, c_birth_year#33, c_birth_country#34, c_login#35, c_email_address#36, c_last_review_date#37]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=8]

(48) BroadcastHashJoin [codegen id : 13]
Left keys [1]: [ctr_customer_sk#12]
Right keys [1]: [c_customer_sk#24]
Join type: Inner
Join condition: None

(49) Project [codegen id : 13]
Output [14]: [ctr_total_return#14, c_customer_id#25, c_current_addr_sk#26, c_salutation#27, c_first_name#28, c_last_name#29, c_preferred_cust_flag#30, c_birth_day#31, c_birth_month#32, c_birth_year#33, c_birth_country#34, c_login#35, c_email_address#36, c_last_review_date#37]
Input [16]: [ctr_customer_sk#12, ctr_total_return#14, c_customer_sk#24, c_customer_id#25, c_current_addr_sk#26, c_salutation#27, c_first_name#28, c_last_name#29, c_preferred_cust_flag#30, c_birth_day#31, c_birth_month#32, c_birth_year#33, c_birth_country#34, c_login#35, c_email_address#36, c_last_review_date#37]

(50) BatchScan default.customer_address
Output [2]: [ca_address_sk#40, ca_state#41]
DataFilters: [isnotnull(ca_state#41), (ca_state#41 = GA), isnotnull(ca_address_sk#40)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,GA), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_state:string>

(51) Filter [codegen id : 12]
Input [2]: [ca_address_sk#40, ca_state#41]
Condition : ((isnotnull(ca_state#41) AND (ca_state#41 = GA)) AND isnotnull(ca_address_sk#40))

(52) Project [codegen id : 12]
Output [1]: [ca_address_sk#40]
Input [2]: [ca_address_sk#40, ca_state#41]

(53) BroadcastExchange
Input [1]: [ca_address_sk#40]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=9]

(54) BroadcastHashJoin [codegen id : 13]
Left keys [1]: [c_current_addr_sk#26]
Right keys [1]: [ca_address_sk#40]
Join type: Inner
Join condition: None

(55) Project [codegen id : 13]
Output [13]: [c_customer_id#25, c_salutation#27, c_first_name#28, c_last_name#29, c_preferred_cust_flag#30, c_birth_day#31, c_birth_month#32, c_birth_year#33, c_birth_country#34, c_login#35, c_email_address#36, c_last_review_date#37, ctr_total_return#14]
Input [15]: [ctr_total_return#14, c_customer_id#25, c_current_addr_sk#26, c_salutation#27, c_first_name#28, c_last_name#29, c_preferred_cust_flag#30, c_birth_day#31, c_birth_month#32, c_birth_year#33, c_birth_country#34, c_login#35, c_email_address#36, c_last_review_date#37, ca_address_sk#40]

(56) TakeOrderedAndProject
Input [13]: [c_customer_id#25, c_salutation#27, c_first_name#28, c_last_name#29, c_preferred_cust_flag#30, c_birth_day#31, c_birth_month#32, c_birth_year#33, c_birth_country#34, c_login#35, c_email_address#36, c_last_review_date#37, ctr_total_return#14]
Arguments: 100, [c_customer_id#25 ASC NULLS FIRST, c_salutation#27 ASC NULLS FIRST, c_first_name#28 ASC NULLS FIRST, c_last_name#29 ASC NULLS FIRST, c_preferred_cust_flag#30 ASC NULLS FIRST, c_birth_day#31 ASC NULLS FIRST, c_birth_month#32 ASC NULLS FIRST, c_birth_year#33 ASC NULLS FIRST, c_birth_country#34 ASC NULLS FIRST, c_login#35 ASC NULLS FIRST, c_email_address#36 ASC NULLS FIRST, c_last_review_date#37 ASC NULLS FIRST, ctr_total_return#14 ASC NULLS FIRST], [c_customer_id#25, c_salutation#27, c_first_name#28, c_last_name#29, c_preferred_cust_flag#30, c_birth_day#31, c_birth_month#32, c_birth_year#33, c_birth_country#34, c_login#35, c_email_address#36, c_last_review_date#37, ctr_total_return#14]

===== Subqueries =====

Subquery:1 Hosting operator id = 45 Hosting Expression = Subquery scalar-subquery#38, [id=#39]
ObjectHashAggregate (62)
+- Exchange (61)
   +- ObjectHashAggregate (60)
      +- * Project (59)
         +- * Filter (58)
            +- BatchScan default.customer_address (57)


(57) BatchScan default.customer_address
Output [2]: [ca_address_sk#40, ca_state#41]
DataFilters: [isnotnull(ca_state#41), (ca_state#41 = GA), isnotnull(ca_address_sk#40)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,GA), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_state:string>

(58) Filter [codegen id : 1]
Input [2]: [ca_address_sk#40, ca_state#41]
Condition : ((isnotnull(ca_state#41) AND (ca_state#41 = GA)) AND isnotnull(ca_address_sk#40))

(59) Project [codegen id : 1]
Output [1]: [ca_address_sk#40]
Input [2]: [ca_address_sk#40, ca_state#41]

(60) ObjectHashAggregate
Input [1]: [ca_address_sk#40]
Keys: []
Functions [1]: [partial_bloom_filter_agg(xxhash64(ca_address_sk#40, 42), 1000000, 8388608, 0, 0)]
Aggregate Attributes [1]: [buf#42]
Results [1]: [buf#43]

(61) Exchange
Input [1]: [buf#43]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=10]

(62) ObjectHashAggregate
Input [1]: [buf#43]
Keys: []
Functions [1]: [bloom_filter_agg(xxhash64(ca_address_sk#40, 42), 1000000, 8388608, 0, 0)]
Aggregate Attributes [1]: [bloom_filter_agg(xxhash64(ca_address_sk#40, 42), 1000000, 8388608, 0, 0)#44]
Results [1]: [bloom_filter_agg(xxhash64(ca_address_sk#40, 42), 1000000, 8388608, 0, 0)#44 AS bloomFilter#45]


