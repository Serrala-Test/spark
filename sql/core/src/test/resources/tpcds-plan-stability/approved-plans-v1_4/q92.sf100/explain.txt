== Physical Plan ==
* Sort (34)
+- * HashAggregate (33)
   +- Exchange (32)
      +- * HashAggregate (31)
         +- * Project (30)
            +- * BroadcastHashJoin Inner BuildRight (29)
               :- * Project (23)
               :  +- * BroadcastHashJoin Inner BuildRight (22)
               :     :- * Project (20)
               :     :  +- BroadcastNestedLoopJoin Inner BuildRight (19)
               :     :     :- * Filter (3)
               :     :     :  +- * ColumnarToRow (2)
               :     :     :     +- Scan parquet default.web_sales (1)
               :     :     +- BroadcastExchange (18)
               :     :        +- * Filter (17)
               :     :           +- * HashAggregate (16)
               :     :              +- Exchange (15)
               :     :                 +- * HashAggregate (14)
               :     :                    +- * Project (13)
               :     :                       +- * BroadcastHashJoin Inner BuildRight (12)
               :     :                          :- * Filter (6)
               :     :                          :  +- * ColumnarToRow (5)
               :     :                          :     +- Scan parquet default.web_sales (4)
               :     :                          +- BroadcastExchange (11)
               :     :                             +- * Project (10)
               :     :                                +- * Filter (9)
               :     :                                   +- * ColumnarToRow (8)
               :     :                                      +- Scan parquet default.date_dim (7)
               :     +- ReusedExchange (21)
               +- BroadcastExchange (28)
                  +- * Project (27)
                     +- * Filter (26)
                        +- * ColumnarToRow (25)
                           +- Scan parquet default.item (24)


(1) Scan parquet default.web_sales
Output [3]: [ws_sold_date_sk#1, ws_item_sk#2, ws_ext_discount_amt#3]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_sales]
PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_ext_discount_amt), IsNotNull(ws_sold_date_sk)]
ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_ext_discount_amt:decimal(7,2)>

(2) ColumnarToRow [codegen id : 1]
Input [3]: [ws_sold_date_sk#1, ws_item_sk#2, ws_ext_discount_amt#3]

(3) Filter [codegen id : 1]
Input [3]: [ws_sold_date_sk#1, ws_item_sk#2, ws_ext_discount_amt#3]
Condition : ((isnotnull(ws_item_sk#2) AND isnotnull(ws_ext_discount_amt#3)) AND isnotnull(ws_sold_date_sk#1))

(4) Scan parquet default.web_sales
Output [3]: [ws_sold_date_sk#1, ws_item_sk#2, ws_ext_discount_amt#3]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_sales]
PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_ext_discount_amt:decimal(7,2)>

(5) ColumnarToRow [codegen id : 3]
Input [3]: [ws_sold_date_sk#1, ws_item_sk#2, ws_ext_discount_amt#3]

(6) Filter [codegen id : 3]
Input [3]: [ws_sold_date_sk#1, ws_item_sk#2, ws_ext_discount_amt#3]
Condition : (isnotnull(ws_sold_date_sk#1) AND isnotnull(ws_item_sk#2))

(7) Scan parquet default.date_dim
Output [2]: [d_date_sk#4, d_date#5]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-01-27), LessThanOrEqual(d_date,2000-04-26), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(8) ColumnarToRow [codegen id : 2]
Input [2]: [d_date_sk#4, d_date#5]

(9) Filter [codegen id : 2]
Input [2]: [d_date_sk#4, d_date#5]
Condition : (((isnotnull(d_date#5) AND (d_date#5 >= 10983)) AND (d_date#5 <= 11073)) AND isnotnull(d_date_sk#4))

(10) Project [codegen id : 2]
Output [1]: [d_date_sk#4]
Input [2]: [d_date_sk#4, d_date#5]

(11) BroadcastExchange
Input [1]: [d_date_sk#4]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#6]

(12) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ws_sold_date_sk#1]
Right keys [1]: [d_date_sk#4]
Join condition: None

(13) Project [codegen id : 3]
Output [2]: [ws_item_sk#2, ws_ext_discount_amt#3]
Input [4]: [ws_sold_date_sk#1, ws_item_sk#2, ws_ext_discount_amt#3, d_date_sk#4]

(14) HashAggregate [codegen id : 3]
Input [2]: [ws_item_sk#2, ws_ext_discount_amt#3]
Keys [1]: [ws_item_sk#2]
Functions [1]: [partial_avg(UnscaledValue(ws_ext_discount_amt#3))]
Aggregate Attributes [2]: [sum#7, count#8]
Results [3]: [ws_item_sk#2, sum#9, count#10]

(15) Exchange
Input [3]: [ws_item_sk#2, sum#9, count#10]
Arguments: hashpartitioning(ws_item_sk#2, 5), ENSURE_REQUIREMENTS, [id=#11]

(16) HashAggregate [codegen id : 4]
Input [3]: [ws_item_sk#2, sum#9, count#10]
Keys [1]: [ws_item_sk#2]
Functions [1]: [avg(UnscaledValue(ws_ext_discount_amt#3))]
Aggregate Attributes [1]: [avg(UnscaledValue(ws_ext_discount_amt#3))#12]
Results [2]: [CheckOverflow((1.300000 * promote_precision(cast((avg(UnscaledValue(ws_ext_discount_amt#3))#12 / 100.0) as decimal(11,6)))), DecimalType(14,7), true) AS (CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(ws_ext_discount_amt) AS DECIMAL(11,6)))#13, ws_item_sk#2 AS ws_item_sk#2#14]

(17) Filter [codegen id : 4]
Input [2]: [(CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(ws_ext_discount_amt) AS DECIMAL(11,6)))#13, ws_item_sk#2#14]
Condition : isnotnull((CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(ws_ext_discount_amt) AS DECIMAL(11,6)))#13)

(18) BroadcastExchange
Input [2]: [(CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(ws_ext_discount_amt) AS DECIMAL(11,6)))#13, ws_item_sk#2#14]
Arguments: IdentityBroadcastMode, [id=#15]

(19) BroadcastNestedLoopJoin
Join condition: (cast(ws_ext_discount_amt#3 as decimal(14,7)) > (CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(ws_ext_discount_amt) AS DECIMAL(11,6)))#13)

(20) Project [codegen id : 7]
Output [4]: [ws_sold_date_sk#1, ws_item_sk#2, ws_ext_discount_amt#3, ws_item_sk#2#14]
Input [5]: [ws_sold_date_sk#1, ws_item_sk#2, ws_ext_discount_amt#3, (CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(ws_ext_discount_amt) AS DECIMAL(11,6)))#13, ws_item_sk#2#14]

(21) ReusedExchange [Reuses operator id: 11]
Output [1]: [d_date_sk#4]

(22) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [ws_sold_date_sk#1]
Right keys [1]: [d_date_sk#4]
Join condition: None

(23) Project [codegen id : 7]
Output [3]: [ws_item_sk#2, ws_ext_discount_amt#3, ws_item_sk#2#14]
Input [5]: [ws_sold_date_sk#1, ws_item_sk#2, ws_ext_discount_amt#3, ws_item_sk#2#14, d_date_sk#4]

(24) Scan parquet default.item
Output [2]: [i_item_sk#16, i_manufact_id#17]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_manufact_id), EqualTo(i_manufact_id,350), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_manufact_id:int>

(25) ColumnarToRow [codegen id : 6]
Input [2]: [i_item_sk#16, i_manufact_id#17]

(26) Filter [codegen id : 6]
Input [2]: [i_item_sk#16, i_manufact_id#17]
Condition : ((isnotnull(i_manufact_id#17) AND (i_manufact_id#17 = 350)) AND isnotnull(i_item_sk#16))

(27) Project [codegen id : 6]
Output [1]: [i_item_sk#16]
Input [2]: [i_item_sk#16, i_manufact_id#17]

(28) BroadcastExchange
Input [1]: [i_item_sk#16]
Arguments: HashedRelationBroadcastMode(List((shiftleft(cast(input[0, int, true] as bigint), 32) | (cast(input[0, int, true] as bigint) & 4294967295))),false), [id=#18]

(29) BroadcastHashJoin [codegen id : 7]
Left keys [2]: [ws_item_sk#2, ws_item_sk#2#14]
Right keys [2]: [i_item_sk#16, i_item_sk#16]
Join condition: None

(30) Project [codegen id : 7]
Output [1]: [ws_ext_discount_amt#3]
Input [4]: [ws_item_sk#2, ws_ext_discount_amt#3, ws_item_sk#2#14, i_item_sk#16]

(31) HashAggregate [codegen id : 7]
Input [1]: [ws_ext_discount_amt#3]
Keys: []
Functions [1]: [partial_sum(UnscaledValue(ws_ext_discount_amt#3))]
Aggregate Attributes [1]: [sum#19]
Results [1]: [sum#20]

(32) Exchange
Input [1]: [sum#20]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [id=#21]

(33) HashAggregate [codegen id : 8]
Input [1]: [sum#20]
Keys: []
Functions [1]: [sum(UnscaledValue(ws_ext_discount_amt#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_discount_amt#3))#22]
Results [1]: [MakeDecimal(sum(UnscaledValue(ws_ext_discount_amt#3))#22,17,2) AS Excess Discount Amount #23]

(34) Sort [codegen id : 8]
Input [1]: [Excess Discount Amount #23]
Arguments: [Excess Discount Amount #23 ASC NULLS FIRST], true, 0

