== Physical Plan ==
TakeOrderedAndProject (82)
+- * HashAggregate (81)
   +- Exchange (80)
      +- * HashAggregate (79)
         +- * Project (78)
            +- SortMergeJoin LeftOuter (77)
               :- * Sort (71)
               :  +- Exchange (70)
               :     +- * Project (69)
               :        +- * BroadcastHashJoin LeftOuter BuildRight (68)
               :           :- * Project (63)
               :           :  +- * BroadcastHashJoin Inner BuildRight (62)
               :           :     :- * Project (56)
               :           :     :  +- * BroadcastHashJoin Inner BuildRight (55)
               :           :     :     :- * Project (49)
               :           :     :     :  +- * SortMergeJoin Inner (48)
               :           :     :     :     :- * Sort (42)
               :           :     :     :     :  +- Exchange (41)
               :           :     :     :     :     +- * Project (40)
               :           :     :     :     :        +- * SortMergeJoin Inner (39)
               :           :     :     :     :           :- * Sort (33)
               :           :     :     :     :           :  +- Exchange (32)
               :           :     :     :     :           :     +- * Project (31)
               :           :     :     :     :           :        +- * BroadcastHashJoin Inner BuildRight (30)
               :           :     :     :     :           :           :- * Project (25)
               :           :     :     :     :           :           :  +- * SortMergeJoin Inner (24)
               :           :     :     :     :           :           :     :- * Sort (11)
               :           :     :     :     :           :           :     :  +- Exchange (10)
               :           :     :     :     :           :           :     :     +- * Project (9)
               :           :     :     :     :           :           :     :        +- * BroadcastHashJoin Inner BuildRight (8)
               :           :     :     :     :           :           :     :           :- * Filter (3)
               :           :     :     :     :           :           :     :           :  +- * ColumnarToRow (2)
               :           :     :     :     :           :           :     :           :     +- Scan parquet default.inventory (1)
               :           :     :     :     :           :           :     :           +- BroadcastExchange (7)
               :           :     :     :     :           :           :     :              +- * Filter (6)
               :           :     :     :     :           :           :     :                 +- * ColumnarToRow (5)
               :           :     :     :     :           :           :     :                    +- Scan parquet default.date_dim (4)
               :           :     :     :     :           :           :     +- * Sort (23)
               :           :     :     :     :           :           :        +- Exchange (22)
               :           :     :     :     :           :           :           +- * Project (21)
               :           :     :     :     :           :           :              +- BroadcastNestedLoopJoin Inner BuildLeft (20)
               :           :     :     :     :           :           :                 :- BroadcastExchange (16)
               :           :     :     :     :           :           :                 :  +- * Project (15)
               :           :     :     :     :           :           :                 :     +- * Filter (14)
               :           :     :     :     :           :           :                 :        +- * ColumnarToRow (13)
               :           :     :     :     :           :           :                 :           +- Scan parquet default.date_dim (12)
               :           :     :     :     :           :           :                 +- * Filter (19)
               :           :     :     :     :           :           :                    +- * ColumnarToRow (18)
               :           :     :     :     :           :           :                       +- Scan parquet default.date_dim (17)
               :           :     :     :     :           :           +- BroadcastExchange (29)
               :           :     :     :     :           :              +- * Filter (28)
               :           :     :     :     :           :                 +- * ColumnarToRow (27)
               :           :     :     :     :           :                    +- Scan parquet default.warehouse (26)
               :           :     :     :     :           +- * Sort (38)
               :           :     :     :     :              +- Exchange (37)
               :           :     :     :     :                 +- * Filter (36)
               :           :     :     :     :                    +- * ColumnarToRow (35)
               :           :     :     :     :                       +- Scan parquet default.catalog_sales (34)
               :           :     :     :     +- * Sort (47)
               :           :     :     :        +- Exchange (46)
               :           :     :     :           +- * Filter (45)
               :           :     :     :              +- * ColumnarToRow (44)
               :           :     :     :                 +- Scan parquet default.item (43)
               :           :     :     +- BroadcastExchange (54)
               :           :     :        +- * Project (53)
               :           :     :           +- * Filter (52)
               :           :     :              +- * ColumnarToRow (51)
               :           :     :                 +- Scan parquet default.customer_demographics (50)
               :           :     +- BroadcastExchange (61)
               :           :        +- * Project (60)
               :           :           +- * Filter (59)
               :           :              +- * ColumnarToRow (58)
               :           :                 +- Scan parquet default.household_demographics (57)
               :           +- BroadcastExchange (67)
               :              +- * Filter (66)
               :                 +- * ColumnarToRow (65)
               :                    +- Scan parquet default.promotion (64)
               +- * Sort (76)
                  +- Exchange (75)
                     +- * Filter (74)
                        +- * ColumnarToRow (73)
                           +- Scan parquet default.catalog_returns (72)


(1) Scan parquet default.inventory
Output [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Batched: true
Location [not included in comparison]/{warehouse_dir}/inventory]
PushedFilters: [IsNotNull(inv_quantity_on_hand), IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk), IsNotNull(inv_date_sk)]
ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>

(2) ColumnarToRow [codegen id : 2]
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]

(3) Filter [codegen id : 2]
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Condition : (((isnotnull(inv_quantity_on_hand#4) AND isnotnull(inv_item_sk#2)) AND isnotnull(inv_warehouse_sk#3)) AND isnotnull(inv_date_sk#1))

(4) Scan parquet default.date_dim
Output [2]: [d_date_sk#5, d_week_seq#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_week_seq:int>

(5) ColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#5, d_week_seq#6]

(6) Filter [codegen id : 1]
Input [2]: [d_date_sk#5, d_week_seq#6]
Condition : (isnotnull(d_week_seq#6) AND isnotnull(d_date_sk#5))

(7) BroadcastExchange
Input [2]: [d_date_sk#5, d_week_seq#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#7]

(8) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [inv_date_sk#1]
Right keys [1]: [d_date_sk#5]
Join condition: None

(9) Project [codegen id : 2]
Output [4]: [inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4, d_week_seq#6]
Input [6]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4, d_date_sk#5, d_week_seq#6]

(10) Exchange
Input [4]: [inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4, d_week_seq#6]
Arguments: hashpartitioning(d_week_seq#6, 5), ENSURE_REQUIREMENTS, [id=#8]

(11) Sort [codegen id : 3]
Input [4]: [inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4, d_week_seq#6]
Arguments: [d_week_seq#6 ASC NULLS FIRST], false, 0

(12) Scan parquet default.date_dim
Output [4]: [d_date_sk#9, d_date#10, d_week_seq#11, d_year#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk), IsNotNull(d_week_seq), IsNotNull(d_date)]
ReadSchema: struct<d_date_sk:int,d_date:date,d_week_seq:int,d_year:int>

(13) ColumnarToRow [codegen id : 4]
Input [4]: [d_date_sk#9, d_date#10, d_week_seq#11, d_year#12]

(14) Filter [codegen id : 4]
Input [4]: [d_date_sk#9, d_date#10, d_week_seq#11, d_year#12]
Condition : ((((isnotnull(d_year#12) AND (d_year#12 = 1999)) AND isnotnull(d_date_sk#9)) AND isnotnull(d_week_seq#11)) AND isnotnull(d_date#10))

(15) Project [codegen id : 4]
Output [3]: [d_date_sk#9, d_date#10, d_week_seq#11]
Input [4]: [d_date_sk#9, d_date#10, d_week_seq#11, d_year#12]

(16) BroadcastExchange
Input [3]: [d_date_sk#9, d_date#10, d_week_seq#11]
Arguments: IdentityBroadcastMode, [id=#13]

(17) Scan parquet default.date_dim
Output [2]: [d_date_sk#14, d_date#15]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(18) ColumnarToRow [codegen id : 5]
Input [2]: [d_date_sk#14, d_date#15]

(19) Filter [codegen id : 5]
Input [2]: [d_date_sk#14, d_date#15]
Condition : (isnotnull(d_date#15) AND isnotnull(d_date_sk#14))

(20) BroadcastNestedLoopJoin
Join condition: (d_date#15 > d_date#10 + 5 days)

(21) Project [codegen id : 6]
Output [3]: [d_date_sk#9, d_week_seq#11, d_date_sk#14]
Input [5]: [d_date_sk#9, d_date#10, d_week_seq#11, d_date_sk#14, d_date#15]

(22) Exchange
Input [3]: [d_date_sk#9, d_week_seq#11, d_date_sk#14]
Arguments: hashpartitioning(d_week_seq#11, 5), ENSURE_REQUIREMENTS, [id=#16]

(23) Sort [codegen id : 7]
Input [3]: [d_date_sk#9, d_week_seq#11, d_date_sk#14]
Arguments: [d_week_seq#11 ASC NULLS FIRST], false, 0

(24) SortMergeJoin [codegen id : 9]
Left keys [1]: [d_week_seq#6]
Right keys [1]: [d_week_seq#11]
Join condition: None

(25) Project [codegen id : 9]
Output [6]: [inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4, d_date_sk#9, d_week_seq#11, d_date_sk#14]
Input [7]: [inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4, d_week_seq#6, d_date_sk#9, d_week_seq#11, d_date_sk#14]

(26) Scan parquet default.warehouse
Output [2]: [w_warehouse_sk#17, w_warehouse_name#18]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>

(27) ColumnarToRow [codegen id : 8]
Input [2]: [w_warehouse_sk#17, w_warehouse_name#18]

(28) Filter [codegen id : 8]
Input [2]: [w_warehouse_sk#17, w_warehouse_name#18]
Condition : isnotnull(w_warehouse_sk#17)

(29) BroadcastExchange
Input [2]: [w_warehouse_sk#17, w_warehouse_name#18]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#19]

(30) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [inv_warehouse_sk#3]
Right keys [1]: [w_warehouse_sk#17]
Join condition: None

(31) Project [codegen id : 9]
Output [6]: [inv_item_sk#2, inv_quantity_on_hand#4, d_date_sk#9, d_week_seq#11, d_date_sk#14, w_warehouse_name#18]
Input [8]: [inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4, d_date_sk#9, d_week_seq#11, d_date_sk#14, w_warehouse_sk#17, w_warehouse_name#18]

(32) Exchange
Input [6]: [inv_item_sk#2, inv_quantity_on_hand#4, d_date_sk#9, d_week_seq#11, d_date_sk#14, w_warehouse_name#18]
Arguments: hashpartitioning(inv_item_sk#2, d_date_sk#9, d_date_sk#14, 5), ENSURE_REQUIREMENTS, [id=#20]

(33) Sort [codegen id : 10]
Input [6]: [inv_item_sk#2, inv_quantity_on_hand#4, d_date_sk#9, d_week_seq#11, d_date_sk#14, w_warehouse_name#18]
Arguments: [inv_item_sk#2 ASC NULLS FIRST, d_date_sk#9 ASC NULLS FIRST, d_date_sk#14 ASC NULLS FIRST], false, 0

(34) Scan parquet default.catalog_sales
Output [8]: [cs_sold_date_sk#21, cs_ship_date_sk#22, cs_bill_cdemo_sk#23, cs_bill_hdemo_sk#24, cs_item_sk#25, cs_promo_sk#26, cs_order_number#27, cs_quantity#28]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_sales]
PushedFilters: [IsNotNull(cs_quantity), IsNotNull(cs_item_sk), IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_hdemo_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_ship_date_sk)]
ReadSchema: struct<cs_sold_date_sk:int,cs_ship_date_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:int,cs_quantity:int>

(35) ColumnarToRow [codegen id : 11]
Input [8]: [cs_sold_date_sk#21, cs_ship_date_sk#22, cs_bill_cdemo_sk#23, cs_bill_hdemo_sk#24, cs_item_sk#25, cs_promo_sk#26, cs_order_number#27, cs_quantity#28]

(36) Filter [codegen id : 11]
Input [8]: [cs_sold_date_sk#21, cs_ship_date_sk#22, cs_bill_cdemo_sk#23, cs_bill_hdemo_sk#24, cs_item_sk#25, cs_promo_sk#26, cs_order_number#27, cs_quantity#28]
Condition : (((((isnotnull(cs_quantity#28) AND isnotnull(cs_item_sk#25)) AND isnotnull(cs_bill_cdemo_sk#23)) AND isnotnull(cs_bill_hdemo_sk#24)) AND isnotnull(cs_sold_date_sk#21)) AND isnotnull(cs_ship_date_sk#22))

(37) Exchange
Input [8]: [cs_sold_date_sk#21, cs_ship_date_sk#22, cs_bill_cdemo_sk#23, cs_bill_hdemo_sk#24, cs_item_sk#25, cs_promo_sk#26, cs_order_number#27, cs_quantity#28]
Arguments: hashpartitioning(cs_item_sk#25, cs_sold_date_sk#21, cs_ship_date_sk#22, 5), ENSURE_REQUIREMENTS, [id=#29]

(38) Sort [codegen id : 12]
Input [8]: [cs_sold_date_sk#21, cs_ship_date_sk#22, cs_bill_cdemo_sk#23, cs_bill_hdemo_sk#24, cs_item_sk#25, cs_promo_sk#26, cs_order_number#27, cs_quantity#28]
Arguments: [cs_item_sk#25 ASC NULLS FIRST, cs_sold_date_sk#21 ASC NULLS FIRST, cs_ship_date_sk#22 ASC NULLS FIRST], false, 0

(39) SortMergeJoin [codegen id : 13]
Left keys [3]: [inv_item_sk#2, d_date_sk#9, d_date_sk#14]
Right keys [3]: [cs_item_sk#25, cs_sold_date_sk#21, cs_ship_date_sk#22]
Join condition: (inv_quantity_on_hand#4 < cs_quantity#28)

(40) Project [codegen id : 13]
Output [7]: [d_week_seq#11, w_warehouse_name#18, cs_bill_cdemo_sk#23, cs_bill_hdemo_sk#24, cs_item_sk#25, cs_promo_sk#26, cs_order_number#27]
Input [14]: [inv_item_sk#2, inv_quantity_on_hand#4, d_date_sk#9, d_week_seq#11, d_date_sk#14, w_warehouse_name#18, cs_sold_date_sk#21, cs_ship_date_sk#22, cs_bill_cdemo_sk#23, cs_bill_hdemo_sk#24, cs_item_sk#25, cs_promo_sk#26, cs_order_number#27, cs_quantity#28]

(41) Exchange
Input [7]: [d_week_seq#11, w_warehouse_name#18, cs_bill_cdemo_sk#23, cs_bill_hdemo_sk#24, cs_item_sk#25, cs_promo_sk#26, cs_order_number#27]
Arguments: hashpartitioning(cs_item_sk#25, 5), ENSURE_REQUIREMENTS, [id=#30]

(42) Sort [codegen id : 14]
Input [7]: [d_week_seq#11, w_warehouse_name#18, cs_bill_cdemo_sk#23, cs_bill_hdemo_sk#24, cs_item_sk#25, cs_promo_sk#26, cs_order_number#27]
Arguments: [cs_item_sk#25 ASC NULLS FIRST], false, 0

(43) Scan parquet default.item
Output [2]: [i_item_sk#31, i_item_desc#32]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_desc:string>

(44) ColumnarToRow [codegen id : 15]
Input [2]: [i_item_sk#31, i_item_desc#32]

(45) Filter [codegen id : 15]
Input [2]: [i_item_sk#31, i_item_desc#32]
Condition : isnotnull(i_item_sk#31)

(46) Exchange
Input [2]: [i_item_sk#31, i_item_desc#32]
Arguments: hashpartitioning(i_item_sk#31, 5), ENSURE_REQUIREMENTS, [id=#33]

(47) Sort [codegen id : 16]
Input [2]: [i_item_sk#31, i_item_desc#32]
Arguments: [i_item_sk#31 ASC NULLS FIRST], false, 0

(48) SortMergeJoin [codegen id : 20]
Left keys [1]: [cs_item_sk#25]
Right keys [1]: [i_item_sk#31]
Join condition: None

(49) Project [codegen id : 20]
Output [8]: [d_week_seq#11, w_warehouse_name#18, cs_bill_cdemo_sk#23, cs_bill_hdemo_sk#24, cs_item_sk#25, cs_promo_sk#26, cs_order_number#27, i_item_desc#32]
Input [9]: [d_week_seq#11, w_warehouse_name#18, cs_bill_cdemo_sk#23, cs_bill_hdemo_sk#24, cs_item_sk#25, cs_promo_sk#26, cs_order_number#27, i_item_sk#31, i_item_desc#32]

(50) Scan parquet default.customer_demographics
Output [2]: [cd_demo_sk#34, cd_marital_status#35]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_marital_status), EqualTo(cd_marital_status,D), IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>

(51) ColumnarToRow [codegen id : 17]
Input [2]: [cd_demo_sk#34, cd_marital_status#35]

(52) Filter [codegen id : 17]
Input [2]: [cd_demo_sk#34, cd_marital_status#35]
Condition : ((isnotnull(cd_marital_status#35) AND (cd_marital_status#35 = D)) AND isnotnull(cd_demo_sk#34))

(53) Project [codegen id : 17]
Output [1]: [cd_demo_sk#34]
Input [2]: [cd_demo_sk#34, cd_marital_status#35]

(54) BroadcastExchange
Input [1]: [cd_demo_sk#34]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#36]

(55) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [cs_bill_cdemo_sk#23]
Right keys [1]: [cd_demo_sk#34]
Join condition: None

(56) Project [codegen id : 20]
Output [7]: [d_week_seq#11, w_warehouse_name#18, cs_bill_hdemo_sk#24, cs_item_sk#25, cs_promo_sk#26, cs_order_number#27, i_item_desc#32]
Input [9]: [d_week_seq#11, w_warehouse_name#18, cs_bill_cdemo_sk#23, cs_bill_hdemo_sk#24, cs_item_sk#25, cs_promo_sk#26, cs_order_number#27, i_item_desc#32, cd_demo_sk#34]

(57) Scan parquet default.household_demographics
Output [2]: [hd_demo_sk#37, hd_buy_potential#38]
Batched: true
Location [not included in comparison]/{warehouse_dir}/household_demographics]
PushedFilters: [IsNotNull(hd_buy_potential), EqualTo(hd_buy_potential,>10000), IsNotNull(hd_demo_sk)]
ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>

(58) ColumnarToRow [codegen id : 18]
Input [2]: [hd_demo_sk#37, hd_buy_potential#38]

(59) Filter [codegen id : 18]
Input [2]: [hd_demo_sk#37, hd_buy_potential#38]
Condition : ((isnotnull(hd_buy_potential#38) AND (hd_buy_potential#38 = >10000)) AND isnotnull(hd_demo_sk#37))

(60) Project [codegen id : 18]
Output [1]: [hd_demo_sk#37]
Input [2]: [hd_demo_sk#37, hd_buy_potential#38]

(61) BroadcastExchange
Input [1]: [hd_demo_sk#37]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#39]

(62) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [cs_bill_hdemo_sk#24]
Right keys [1]: [hd_demo_sk#37]
Join condition: None

(63) Project [codegen id : 20]
Output [6]: [cs_item_sk#25, cs_promo_sk#26, cs_order_number#27, w_warehouse_name#18, i_item_desc#32, d_week_seq#11]
Input [8]: [d_week_seq#11, w_warehouse_name#18, cs_bill_hdemo_sk#24, cs_item_sk#25, cs_promo_sk#26, cs_order_number#27, i_item_desc#32, hd_demo_sk#37]

(64) Scan parquet default.promotion
Output [1]: [p_promo_sk#40]
Batched: true
Location [not included in comparison]/{warehouse_dir}/promotion]
PushedFilters: [IsNotNull(p_promo_sk)]
ReadSchema: struct<p_promo_sk:int>

(65) ColumnarToRow [codegen id : 19]
Input [1]: [p_promo_sk#40]

(66) Filter [codegen id : 19]
Input [1]: [p_promo_sk#40]
Condition : isnotnull(p_promo_sk#40)

(67) BroadcastExchange
Input [1]: [p_promo_sk#40]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#41]

(68) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [cs_promo_sk#26]
Right keys [1]: [p_promo_sk#40]
Join condition: None

(69) Project [codegen id : 20]
Output [5]: [cs_item_sk#25, cs_order_number#27, w_warehouse_name#18, i_item_desc#32, d_week_seq#11]
Input [7]: [cs_item_sk#25, cs_promo_sk#26, cs_order_number#27, w_warehouse_name#18, i_item_desc#32, d_week_seq#11, p_promo_sk#40]

(70) Exchange
Input [5]: [cs_item_sk#25, cs_order_number#27, w_warehouse_name#18, i_item_desc#32, d_week_seq#11]
Arguments: hashpartitioning(cs_item_sk#25, cs_order_number#27, 5), ENSURE_REQUIREMENTS, [id=#42]

(71) Sort [codegen id : 21]
Input [5]: [cs_item_sk#25, cs_order_number#27, w_warehouse_name#18, i_item_desc#32, d_week_seq#11]
Arguments: [cs_item_sk#25 ASC NULLS FIRST, cs_order_number#27 ASC NULLS FIRST], false, 0

(72) Scan parquet default.catalog_returns
Output [2]: [cr_item_sk#43, cr_order_number#44]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_returns]
PushedFilters: [IsNotNull(cr_item_sk), IsNotNull(cr_order_number)]
ReadSchema: struct<cr_item_sk:int,cr_order_number:int>

(73) ColumnarToRow [codegen id : 22]
Input [2]: [cr_item_sk#43, cr_order_number#44]

(74) Filter [codegen id : 22]
Input [2]: [cr_item_sk#43, cr_order_number#44]
Condition : (isnotnull(cr_item_sk#43) AND isnotnull(cr_order_number#44))

(75) Exchange
Input [2]: [cr_item_sk#43, cr_order_number#44]
Arguments: hashpartitioning(cr_item_sk#43, cr_order_number#44, 5), ENSURE_REQUIREMENTS, [id=#45]

(76) Sort [codegen id : 23]
Input [2]: [cr_item_sk#43, cr_order_number#44]
Arguments: [cr_item_sk#43 ASC NULLS FIRST, cr_order_number#44 ASC NULLS FIRST], false, 0

(77) SortMergeJoin
Left keys [2]: [cs_item_sk#25, cs_order_number#27]
Right keys [2]: [cr_item_sk#43, cr_order_number#44]
Join condition: None

(78) Project [codegen id : 24]
Output [3]: [w_warehouse_name#18, i_item_desc#32, d_week_seq#11]
Input [7]: [cs_item_sk#25, cs_order_number#27, w_warehouse_name#18, i_item_desc#32, d_week_seq#11, cr_item_sk#43, cr_order_number#44]

(79) HashAggregate [codegen id : 24]
Input [3]: [w_warehouse_name#18, i_item_desc#32, d_week_seq#11]
Keys [3]: [i_item_desc#32, w_warehouse_name#18, d_week_seq#11]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#46]
Results [4]: [i_item_desc#32, w_warehouse_name#18, d_week_seq#11, count#47]

(80) Exchange
Input [4]: [i_item_desc#32, w_warehouse_name#18, d_week_seq#11, count#47]
Arguments: hashpartitioning(i_item_desc#32, w_warehouse_name#18, d_week_seq#11, 5), ENSURE_REQUIREMENTS, [id=#48]

(81) HashAggregate [codegen id : 25]
Input [4]: [i_item_desc#32, w_warehouse_name#18, d_week_seq#11, count#47]
Keys [3]: [i_item_desc#32, w_warehouse_name#18, d_week_seq#11]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#49]
Results [6]: [i_item_desc#32, w_warehouse_name#18, d_week_seq#11, count(1)#49 AS no_promo#50, count(1)#49 AS promo#51, count(1)#49 AS total_cnt#52]

(82) TakeOrderedAndProject
Input [6]: [i_item_desc#32, w_warehouse_name#18, d_week_seq#11, no_promo#50, promo#51, total_cnt#52]
Arguments: 100, [total_cnt#52 DESC NULLS LAST, i_item_desc#32 ASC NULLS FIRST, w_warehouse_name#18 ASC NULLS FIRST, d_week_seq#11 ASC NULLS FIRST], [i_item_desc#32, w_warehouse_name#18, d_week_seq#11, no_promo#50, promo#51, total_cnt#52]

