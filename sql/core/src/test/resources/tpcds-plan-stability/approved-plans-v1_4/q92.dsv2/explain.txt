== Physical Plan ==
* HashAggregate (33)
+- Exchange (32)
   +- * HashAggregate (31)
      +- * Project (30)
         +- * BroadcastHashJoin Inner BuildRight (29)
            :- * Project (27)
            :  +- * SortMergeJoin Inner (26)
            :     :- * Sort (11)
            :     :  +- Exchange (10)
            :     :     +- * Project (9)
            :     :        +- * BroadcastHashJoin Inner BuildRight (8)
            :     :           :- * Project (3)
            :     :           :  +- * Filter (2)
            :     :           :     +- BatchScan default.web_sales (1)
            :     :           +- BroadcastExchange (7)
            :     :              +- * Project (6)
            :     :                 +- * Filter (5)
            :     :                    +- BatchScan default.item (4)
            :     +- * Sort (25)
            :        +- * Filter (24)
            :           +- * HashAggregate (23)
            :              +- Exchange (22)
            :                 +- * HashAggregate (21)
            :                    +- * Project (20)
            :                       +- * BroadcastHashJoin Inner BuildRight (19)
            :                          :- * Project (14)
            :                          :  +- * Filter (13)
            :                          :     +- BatchScan default.web_sales (12)
            :                          +- BroadcastExchange (18)
            :                             +- * Project (17)
            :                                +- * Filter (16)
            :                                   +- BatchScan default.date_dim (15)
            +- ReusedExchange (28)


(1) BatchScan default.web_sales
Output [3]: [ws_item_sk#1, ws_ext_discount_amt#2, ws_sold_date_sk#3]
DataFilters: [isnotnull(ws_item_sk#1), isnotnull(ws_ext_discount_amt#2)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/web_sales]
PartitionFilters: [isnotnull(ws_sold_date_sk#3)]
PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_ext_discount_amt)]
ReadSchema: struct<ws_item_sk:int,ws_ext_discount_amt:decimal(7,2)>

(2) Filter [codegen id : 2]
Input [3]: [ws_item_sk#1, ws_ext_discount_amt#2, ws_sold_date_sk#3]
Condition : ((isnotnull(ws_item_sk#1) AND isnotnull(ws_ext_discount_amt#2)) AND might_contain(Subquery scalar-subquery#4, [id=#5], xxhash64(ws_sold_date_sk#3, 42)))

(3) Project [codegen id : 2]
Output [3]: [ws_item_sk#1, ws_ext_discount_amt#2, ws_sold_date_sk#3]
Input [3]: [ws_item_sk#1, ws_ext_discount_amt#2, ws_sold_date_sk#3]

(4) BatchScan default.item
Output [2]: [i_item_sk#6, i_manufact_id#7]
DataFilters: [isnotnull(i_manufact_id#7), (i_manufact_id#7 = 350), isnotnull(i_item_sk#6)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_manufact_id), EqualTo(i_manufact_id,350), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_manufact_id:int>

(5) Filter [codegen id : 1]
Input [2]: [i_item_sk#6, i_manufact_id#7]
Condition : ((isnotnull(i_manufact_id#7) AND (i_manufact_id#7 = 350)) AND isnotnull(i_item_sk#6))

(6) Project [codegen id : 1]
Output [1]: [i_item_sk#6]
Input [2]: [i_item_sk#6, i_manufact_id#7]

(7) BroadcastExchange
Input [1]: [i_item_sk#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(8) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [ws_item_sk#1]
Right keys [1]: [i_item_sk#6]
Join type: Inner
Join condition: None

(9) Project [codegen id : 2]
Output [3]: [ws_ext_discount_amt#2, ws_sold_date_sk#3, i_item_sk#6]
Input [4]: [ws_item_sk#1, ws_ext_discount_amt#2, ws_sold_date_sk#3, i_item_sk#6]

(10) Exchange
Input [3]: [ws_ext_discount_amt#2, ws_sold_date_sk#3, i_item_sk#6]
Arguments: hashpartitioning(i_item_sk#6, 5), ENSURE_REQUIREMENTS, [plan_id=2]

(11) Sort [codegen id : 3]
Input [3]: [ws_ext_discount_amt#2, ws_sold_date_sk#3, i_item_sk#6]
Arguments: [i_item_sk#6 ASC NULLS FIRST], false, 0

(12) BatchScan default.web_sales
Output [3]: [ws_item_sk#8, ws_ext_discount_amt#9, ws_sold_date_sk#10]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/web_sales]
PartitionFilters: [isnotnull(ws_sold_date_sk#10)]
ReadSchema: struct<ws_item_sk:int,ws_ext_discount_amt:decimal(7,2)>

(13) Filter [codegen id : 5]
Input [3]: [ws_item_sk#8, ws_ext_discount_amt#9, ws_sold_date_sk#10]
Condition : (isnotnull(ws_sold_date_sk#10) AND isnotnull(ws_item_sk#8))

(14) Project [codegen id : 5]
Output [3]: [ws_item_sk#8, ws_ext_discount_amt#9, ws_sold_date_sk#10]
Input [3]: [ws_item_sk#8, ws_ext_discount_amt#9, ws_sold_date_sk#10]

(15) BatchScan default.date_dim
Output [2]: [d_date_sk#11, d_date#12]
DataFilters: [isnotnull(d_date#12), (d_date#12 >= 2000-01-27), (d_date#12 <= 2000-04-26), isnotnull(d_date_sk#11)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-01-27), LessThanOrEqual(d_date,2000-04-26), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(16) Filter [codegen id : 4]
Input [2]: [d_date_sk#11, d_date#12]
Condition : (((isnotnull(d_date#12) AND (d_date#12 >= 2000-01-27)) AND (d_date#12 <= 2000-04-26)) AND isnotnull(d_date_sk#11))

(17) Project [codegen id : 4]
Output [1]: [d_date_sk#11]
Input [2]: [d_date_sk#11, d_date#12]

(18) BroadcastExchange
Input [1]: [d_date_sk#11]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=3]

(19) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ws_sold_date_sk#10]
Right keys [1]: [d_date_sk#11]
Join type: Inner
Join condition: None

(20) Project [codegen id : 5]
Output [2]: [ws_item_sk#8, ws_ext_discount_amt#9]
Input [4]: [ws_item_sk#8, ws_ext_discount_amt#9, ws_sold_date_sk#10, d_date_sk#11]

(21) HashAggregate [codegen id : 5]
Input [2]: [ws_item_sk#8, ws_ext_discount_amt#9]
Keys [1]: [ws_item_sk#8]
Functions [1]: [partial_avg(UnscaledValue(ws_ext_discount_amt#9))]
Aggregate Attributes [2]: [sum#13, count#14]
Results [3]: [ws_item_sk#8, sum#15, count#16]

(22) Exchange
Input [3]: [ws_item_sk#8, sum#15, count#16]
Arguments: hashpartitioning(ws_item_sk#8, 5), ENSURE_REQUIREMENTS, [plan_id=4]

(23) HashAggregate [codegen id : 6]
Input [3]: [ws_item_sk#8, sum#15, count#16]
Keys [1]: [ws_item_sk#8]
Functions [1]: [avg(UnscaledValue(ws_ext_discount_amt#9))]
Aggregate Attributes [1]: [avg(UnscaledValue(ws_ext_discount_amt#9))#17]
Results [2]: [(1.3 * cast((avg(UnscaledValue(ws_ext_discount_amt#9))#17 / 100.0) as decimal(11,6))) AS (1.3 * avg(ws_ext_discount_amt))#18, ws_item_sk#8]

(24) Filter [codegen id : 6]
Input [2]: [(1.3 * avg(ws_ext_discount_amt))#18, ws_item_sk#8]
Condition : isnotnull((1.3 * avg(ws_ext_discount_amt))#18)

(25) Sort [codegen id : 6]
Input [2]: [(1.3 * avg(ws_ext_discount_amt))#18, ws_item_sk#8]
Arguments: [ws_item_sk#8 ASC NULLS FIRST], false, 0

(26) SortMergeJoin [codegen id : 8]
Left keys [1]: [i_item_sk#6]
Right keys [1]: [ws_item_sk#8]
Join type: Inner
Join condition: (cast(ws_ext_discount_amt#2 as decimal(14,7)) > (1.3 * avg(ws_ext_discount_amt))#18)

(27) Project [codegen id : 8]
Output [2]: [ws_ext_discount_amt#2, ws_sold_date_sk#3]
Input [5]: [ws_ext_discount_amt#2, ws_sold_date_sk#3, i_item_sk#6, (1.3 * avg(ws_ext_discount_amt))#18, ws_item_sk#8]

(28) ReusedExchange [Reuses operator id: 18]
Output [1]: [d_date_sk#19]

(29) BroadcastHashJoin [codegen id : 8]
Left keys [1]: [ws_sold_date_sk#3]
Right keys [1]: [d_date_sk#19]
Join type: Inner
Join condition: None

(30) Project [codegen id : 8]
Output [1]: [ws_ext_discount_amt#2]
Input [3]: [ws_ext_discount_amt#2, ws_sold_date_sk#3, d_date_sk#19]

(31) HashAggregate [codegen id : 8]
Input [1]: [ws_ext_discount_amt#2]
Keys: []
Functions [1]: [partial_sum(UnscaledValue(ws_ext_discount_amt#2))]
Aggregate Attributes [1]: [sum#20]
Results [1]: [sum#21]

(32) Exchange
Input [1]: [sum#21]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=5]

(33) HashAggregate [codegen id : 9]
Input [1]: [sum#21]
Keys: []
Functions [1]: [sum(UnscaledValue(ws_ext_discount_amt#2))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_discount_amt#2))#22]
Results [1]: [MakeDecimal(sum(UnscaledValue(ws_ext_discount_amt#2))#22,17,2) AS Excess Discount Amount #23]

===== Subqueries =====

Subquery:1 Hosting operator id = 2 Hosting Expression = Subquery scalar-subquery#4, [id=#5]
ObjectHashAggregate (39)
+- Exchange (38)
   +- ObjectHashAggregate (37)
      +- * Project (36)
         +- * Filter (35)
            +- BatchScan default.date_dim (34)


(34) BatchScan default.date_dim
Output [2]: [d_date_sk#19, d_date#24]
DataFilters: [isnotnull(d_date#24), (d_date#24 >= 2000-01-27), (d_date#24 <= 2000-04-26), isnotnull(d_date_sk#19)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-01-27), LessThanOrEqual(d_date,2000-04-26), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(35) Filter [codegen id : 1]
Input [2]: [d_date_sk#19, d_date#24]
Condition : (((isnotnull(d_date#24) AND (d_date#24 >= 2000-01-27)) AND (d_date#24 <= 2000-04-26)) AND isnotnull(d_date_sk#19))

(36) Project [codegen id : 1]
Output [1]: [d_date_sk#19]
Input [2]: [d_date_sk#19, d_date#24]

(37) ObjectHashAggregate
Input [1]: [d_date_sk#19]
Keys: []
Functions [1]: [partial_bloom_filter_agg(xxhash64(d_date_sk#19, 42), 1000000, 8388608, 0, 0)]
Aggregate Attributes [1]: [buf#25]
Results [1]: [buf#26]

(38) Exchange
Input [1]: [buf#26]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=6]

(39) ObjectHashAggregate
Input [1]: [buf#26]
Keys: []
Functions [1]: [bloom_filter_agg(xxhash64(d_date_sk#19, 42), 1000000, 8388608, 0, 0)]
Aggregate Attributes [1]: [bloom_filter_agg(xxhash64(d_date_sk#19, 42), 1000000, 8388608, 0, 0)#27]
Results [1]: [bloom_filter_agg(xxhash64(d_date_sk#19, 42), 1000000, 8388608, 0, 0)#27 AS bloomFilter#28]


