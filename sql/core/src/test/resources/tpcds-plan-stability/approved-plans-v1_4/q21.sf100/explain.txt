== Physical Plan ==
TakeOrderedAndProject (28)
+- * Filter (27)
   +- * HashAggregate (26)
      +- Exchange (25)
         +- * HashAggregate (24)
            +- * Project (23)
               +- * BroadcastHashJoin Inner BuildRight (22)
                  :- * Project (16)
                  :  +- * BroadcastHashJoin Inner BuildRight (15)
                  :     :- * Project (10)
                  :     :  +- * BroadcastHashJoin Inner BuildRight (9)
                  :     :     :- * Filter (3)
                  :     :     :  +- * ColumnarToRow (2)
                  :     :     :     +- Scan parquet default.inventory (1)
                  :     :     +- BroadcastExchange (8)
                  :     :        +- * Project (7)
                  :     :           +- * Filter (6)
                  :     :              +- * ColumnarToRow (5)
                  :     :                 +- Scan parquet default.item (4)
                  :     +- BroadcastExchange (14)
                  :        +- * Filter (13)
                  :           +- * ColumnarToRow (12)
                  :              +- Scan parquet default.date_dim (11)
                  +- BroadcastExchange (21)
                     +- * Project (20)
                        +- * Filter (19)
                           +- * ColumnarToRow (18)
                              +- Scan parquet default.warehouse (17)


(1) Scan parquet default.inventory
Output [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Batched: true
Location [not included in comparison]/{warehouse_dir}/inventory]
PushedFilters: [IsNotNull(inv_warehouse_sk), IsNotNull(inv_item_sk), IsNotNull(inv_date_sk)]
ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>

(2) ColumnarToRow [codegen id : 4]
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]

(3) Filter [codegen id : 4]
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Condition : ((isnotnull(inv_warehouse_sk#3) AND isnotnull(inv_item_sk#2)) AND isnotnull(inv_date_sk#1))

(4) Scan parquet default.item
Output [3]: [i_item_sk#5, i_item_id#6, i_current_price#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_current_price), GreaterThanOrEqual(i_current_price,0.99), LessThanOrEqual(i_current_price,1.49), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string,i_current_price:decimal(7,2)>

(5) ColumnarToRow [codegen id : 1]
Input [3]: [i_item_sk#5, i_item_id#6, i_current_price#7]

(6) Filter [codegen id : 1]
Input [3]: [i_item_sk#5, i_item_id#6, i_current_price#7]
Condition : (((isnotnull(i_current_price#7) AND (i_current_price#7 >= 0.99)) AND (i_current_price#7 <= 1.49)) AND isnotnull(i_item_sk#5))

(7) Project [codegen id : 1]
Output [2]: [i_item_sk#5, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, i_item_id#6, 16, false, true) AS i_item_id#8]
Input [3]: [i_item_sk#5, i_item_id#6, i_current_price#7]

(8) BroadcastExchange
Input [2]: [i_item_sk#5, i_item_id#8]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#9]

(9) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_item_sk#2]
Right keys [1]: [i_item_sk#5]
Join condition: None

(10) Project [codegen id : 4]
Output [4]: [inv_date_sk#1, inv_warehouse_sk#3, inv_quantity_on_hand#4, i_item_id#8]
Input [6]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4, i_item_sk#5, i_item_id#8]

(11) Scan parquet default.date_dim
Output [2]: [d_date_sk#10, d_date#11]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-02-10), LessThanOrEqual(d_date,2000-04-10), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(12) ColumnarToRow [codegen id : 2]
Input [2]: [d_date_sk#10, d_date#11]

(13) Filter [codegen id : 2]
Input [2]: [d_date_sk#10, d_date#11]
Condition : (((isnotnull(d_date#11) AND (d_date#11 >= 10997)) AND (d_date#11 <= 11057)) AND isnotnull(d_date_sk#10))

(14) BroadcastExchange
Input [2]: [d_date_sk#10, d_date#11]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#12]

(15) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_date_sk#1]
Right keys [1]: [d_date_sk#10]
Join condition: None

(16) Project [codegen id : 4]
Output [4]: [inv_warehouse_sk#3, inv_quantity_on_hand#4, i_item_id#8, d_date#11]
Input [6]: [inv_date_sk#1, inv_warehouse_sk#3, inv_quantity_on_hand#4, i_item_id#8, d_date_sk#10, d_date#11]

(17) Scan parquet default.warehouse
Output [2]: [w_warehouse_sk#13, w_warehouse_name#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>

(18) ColumnarToRow [codegen id : 3]
Input [2]: [w_warehouse_sk#13, w_warehouse_name#14]

(19) Filter [codegen id : 3]
Input [2]: [w_warehouse_sk#13, w_warehouse_name#14]
Condition : isnotnull(w_warehouse_sk#13)

(20) Project [codegen id : 3]
Output [2]: [w_warehouse_sk#13, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, lengthCheck, w_warehouse_name#14, 20, false, true) AS w_warehouse_name#15]
Input [2]: [w_warehouse_sk#13, w_warehouse_name#14]

(21) BroadcastExchange
Input [2]: [w_warehouse_sk#13, w_warehouse_name#15]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#16]

(22) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_warehouse_sk#3]
Right keys [1]: [w_warehouse_sk#13]
Join condition: None

(23) Project [codegen id : 4]
Output [4]: [inv_quantity_on_hand#4, w_warehouse_name#15, i_item_id#8, d_date#11]
Input [6]: [inv_warehouse_sk#3, inv_quantity_on_hand#4, i_item_id#8, d_date#11, w_warehouse_sk#13, w_warehouse_name#15]

(24) HashAggregate [codegen id : 4]
Input [4]: [inv_quantity_on_hand#4, w_warehouse_name#15, i_item_id#8, d_date#11]
Keys [2]: [w_warehouse_name#15, i_item_id#8]
Functions [2]: [partial_sum(CASE WHEN (d_date#11 < 11027) THEN cast(inv_quantity_on_hand#4 as bigint) ELSE 0 END), partial_sum(CASE WHEN (d_date#11 >= 11027) THEN cast(inv_quantity_on_hand#4 as bigint) ELSE 0 END)]
Aggregate Attributes [2]: [sum#17, sum#18]
Results [4]: [w_warehouse_name#15, i_item_id#8, sum#19, sum#20]

(25) Exchange
Input [4]: [w_warehouse_name#15, i_item_id#8, sum#19, sum#20]
Arguments: hashpartitioning(w_warehouse_name#15, i_item_id#8, 5), ENSURE_REQUIREMENTS, [id=#21]

(26) HashAggregate [codegen id : 5]
Input [4]: [w_warehouse_name#15, i_item_id#8, sum#19, sum#20]
Keys [2]: [w_warehouse_name#15, i_item_id#8]
Functions [2]: [sum(CASE WHEN (d_date#11 < 11027) THEN cast(inv_quantity_on_hand#4 as bigint) ELSE 0 END), sum(CASE WHEN (d_date#11 >= 11027) THEN cast(inv_quantity_on_hand#4 as bigint) ELSE 0 END)]
Aggregate Attributes [2]: [sum(CASE WHEN (d_date#11 < 11027) THEN cast(inv_quantity_on_hand#4 as bigint) ELSE 0 END)#22, sum(CASE WHEN (d_date#11 >= 11027) THEN cast(inv_quantity_on_hand#4 as bigint) ELSE 0 END)#23]
Results [4]: [w_warehouse_name#15, i_item_id#8, sum(CASE WHEN (d_date#11 < 11027) THEN cast(inv_quantity_on_hand#4 as bigint) ELSE 0 END)#22 AS inv_before#24, sum(CASE WHEN (d_date#11 >= 11027) THEN cast(inv_quantity_on_hand#4 as bigint) ELSE 0 END)#23 AS inv_after#25]

(27) Filter [codegen id : 5]
Input [4]: [w_warehouse_name#15, i_item_id#8, inv_before#24, inv_after#25]
Condition : (((((isnotnull(inv_before#24) AND isnotnull(inv_after#25)) AND (inv_before#24 > 0)) AND ((cast(inv_after#25 as double) / cast(inv_before#24 as double)) >= 0.666667)) AND (inv_before#24 > 0)) AND ((cast(inv_after#25 as double) / cast(inv_before#24 as double)) <= 1.5))

(28) TakeOrderedAndProject
Input [4]: [w_warehouse_name#15, i_item_id#8, inv_before#24, inv_after#25]
Arguments: 100, [w_warehouse_name#15 ASC NULLS FIRST, i_item_id#8 ASC NULLS FIRST], [w_warehouse_name#15, i_item_id#8, inv_before#24, inv_after#25]

