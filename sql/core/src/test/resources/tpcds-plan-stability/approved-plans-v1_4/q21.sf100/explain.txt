== Physical Plan ==
TakeOrderedAndProject (27)
+- * Filter (26)
   +- * HashAggregate (25)
      +- Exchange (24)
         +- * HashAggregate (23)
            +- * Project (22)
               +- * BroadcastHashJoin Inner BuildRight (21)
                  :- * Project (15)
                  :  +- * BroadcastHashJoin Inner BuildRight (14)
                  :     :- * Project (9)
                  :     :  +- * BroadcastHashJoin Inner BuildRight (8)
                  :     :     :- * Filter (3)
                  :     :     :  +- * ColumnarToRow (2)
                  :     :     :     +- Scan parquet default.inventory (1)
                  :     :     +- BroadcastExchange (7)
                  :     :        +- * Filter (6)
                  :     :           +- * ColumnarToRow (5)
                  :     :              +- Scan parquet default.warehouse (4)
                  :     +- BroadcastExchange (13)
                  :        +- * Filter (12)
                  :           +- * ColumnarToRow (11)
                  :              +- Scan parquet default.date_dim (10)
                  +- BroadcastExchange (20)
                     +- * Project (19)
                        +- * Filter (18)
                           +- * ColumnarToRow (17)
                              +- Scan parquet default.item (16)


(1) Scan parquet default.inventory
Output [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Batched: true
Location [not included in comparison]/{warehouse_dir}/inventory]
PushedFilters: [IsNotNull(inv_warehouse_sk), IsNotNull(inv_item_sk), IsNotNull(inv_date_sk)]
ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>

(2) ColumnarToRow [codegen id : 4]
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]

(3) Filter [codegen id : 4]
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Condition : ((isnotnull(inv_warehouse_sk#3) AND isnotnull(inv_item_sk#2)) AND isnotnull(inv_date_sk#1))

(4) Scan parquet default.warehouse
Output [2]: [w_warehouse_sk#5, w_warehouse_name#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>

(5) ColumnarToRow [codegen id : 1]
Input [2]: [w_warehouse_sk#5, w_warehouse_name#6]

(6) Filter [codegen id : 1]
Input [2]: [w_warehouse_sk#5, w_warehouse_name#6]
Condition : isnotnull(w_warehouse_sk#5)

(7) BroadcastExchange
Input [2]: [w_warehouse_sk#5, w_warehouse_name#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#7]

(8) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_warehouse_sk#3]
Right keys [1]: [w_warehouse_sk#5]
Join condition: None

(9) Project [codegen id : 4]
Output [4]: [inv_date_sk#1, inv_item_sk#2, inv_quantity_on_hand#4, w_warehouse_name#6]
Input [6]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4, w_warehouse_sk#5, w_warehouse_name#6]

(10) Scan parquet default.date_dim
Output [2]: [d_date_sk#8, d_date#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-02-10), LessThanOrEqual(d_date,2000-04-10), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(11) ColumnarToRow [codegen id : 2]
Input [2]: [d_date_sk#8, d_date#9]

(12) Filter [codegen id : 2]
Input [2]: [d_date_sk#8, d_date#9]
Condition : (((isnotnull(d_date#9) AND (d_date#9 >= 10997)) AND (d_date#9 <= 11057)) AND isnotnull(d_date_sk#8))

(13) BroadcastExchange
Input [2]: [d_date_sk#8, d_date#9]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#10]

(14) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_date_sk#1]
Right keys [1]: [d_date_sk#8]
Join condition: None

(15) Project [codegen id : 4]
Output [4]: [inv_item_sk#2, inv_quantity_on_hand#4, w_warehouse_name#6, d_date#9]
Input [6]: [inv_date_sk#1, inv_item_sk#2, inv_quantity_on_hand#4, w_warehouse_name#6, d_date_sk#8, d_date#9]

(16) Scan parquet default.item
Output [3]: [i_item_sk#11, i_item_id#12, i_current_price#13]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_current_price), GreaterThanOrEqual(i_current_price,0.99), LessThanOrEqual(i_current_price,1.49), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string,i_current_price:decimal(7,2)>

(17) ColumnarToRow [codegen id : 3]
Input [3]: [i_item_sk#11, i_item_id#12, i_current_price#13]

(18) Filter [codegen id : 3]
Input [3]: [i_item_sk#11, i_item_id#12, i_current_price#13]
Condition : (((isnotnull(i_current_price#13) AND (i_current_price#13 >= 0.99)) AND (i_current_price#13 <= 1.49)) AND isnotnull(i_item_sk#11))

(19) Project [codegen id : 3]
Output [2]: [i_item_sk#11, i_item_id#12]
Input [3]: [i_item_sk#11, i_item_id#12, i_current_price#13]

(20) BroadcastExchange
Input [2]: [i_item_sk#11, i_item_id#12]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#14]

(21) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_item_sk#2]
Right keys [1]: [i_item_sk#11]
Join condition: None

(22) Project [codegen id : 4]
Output [4]: [inv_quantity_on_hand#4, w_warehouse_name#6, i_item_id#12, d_date#9]
Input [6]: [inv_item_sk#2, inv_quantity_on_hand#4, w_warehouse_name#6, d_date#9, i_item_sk#11, i_item_id#12]

(23) HashAggregate [codegen id : 4]
Input [4]: [inv_quantity_on_hand#4, w_warehouse_name#6, i_item_id#12, d_date#9]
Keys [2]: [w_warehouse_name#6, i_item_id#12]
Functions [2]: [partial_sum(CASE WHEN (d_date#9 < 11027) THEN cast(inv_quantity_on_hand#4 as bigint) ELSE 0 END), partial_sum(CASE WHEN (d_date#9 >= 11027) THEN cast(inv_quantity_on_hand#4 as bigint) ELSE 0 END)]
Aggregate Attributes [2]: [sum#15, sum#16]
Results [4]: [w_warehouse_name#6, i_item_id#12, sum#17, sum#18]

(24) Exchange
Input [4]: [w_warehouse_name#6, i_item_id#12, sum#17, sum#18]
Arguments: hashpartitioning(w_warehouse_name#6, i_item_id#12, 5), ENSURE_REQUIREMENTS, [id=#19]

(25) HashAggregate [codegen id : 5]
Input [4]: [w_warehouse_name#6, i_item_id#12, sum#17, sum#18]
Keys [2]: [w_warehouse_name#6, i_item_id#12]
Functions [2]: [sum(CASE WHEN (d_date#9 < 11027) THEN cast(inv_quantity_on_hand#4 as bigint) ELSE 0 END), sum(CASE WHEN (d_date#9 >= 11027) THEN cast(inv_quantity_on_hand#4 as bigint) ELSE 0 END)]
Aggregate Attributes [2]: [sum(CASE WHEN (d_date#9 < 11027) THEN cast(inv_quantity_on_hand#4 as bigint) ELSE 0 END)#20, sum(CASE WHEN (d_date#9 >= 11027) THEN cast(inv_quantity_on_hand#4 as bigint) ELSE 0 END)#21]
Results [4]: [w_warehouse_name#6, i_item_id#12, sum(CASE WHEN (d_date#9 < 11027) THEN cast(inv_quantity_on_hand#4 as bigint) ELSE 0 END)#20 AS inv_before#22, sum(CASE WHEN (d_date#9 >= 11027) THEN cast(inv_quantity_on_hand#4 as bigint) ELSE 0 END)#21 AS inv_after#23]

(26) Filter [codegen id : 5]
Input [4]: [w_warehouse_name#6, i_item_id#12, inv_before#22, inv_after#23]
Condition : (((((isnotnull(inv_before#22) AND isnotnull(inv_after#23)) AND (inv_before#22 > 0)) AND ((cast(inv_after#23 as double) / cast(inv_before#22 as double)) >= 0.666667)) AND (inv_before#22 > 0)) AND ((cast(inv_after#23 as double) / cast(inv_before#22 as double)) <= 1.5))

(27) TakeOrderedAndProject
Input [4]: [w_warehouse_name#6, i_item_id#12, inv_before#22, inv_after#23]
Arguments: 100, [w_warehouse_name#6 ASC NULLS FIRST, i_item_id#12 ASC NULLS FIRST], [w_warehouse_name#6, i_item_id#12, inv_before#22, inv_after#23]

