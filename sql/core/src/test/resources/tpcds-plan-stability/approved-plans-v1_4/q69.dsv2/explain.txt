== Physical Plan ==
TakeOrderedAndProject (49)
+- * HashAggregate (48)
   +- Exchange (47)
      +- * HashAggregate (46)
         +- * Project (45)
            +- * BroadcastHashJoin Inner BuildRight (44)
               :- * Project (39)
               :  +- * BroadcastHashJoin Inner BuildRight (38)
               :     :- * Project (33)
               :     :  +- * SortMergeJoin LeftAnti (32)
               :     :     :- * SortMergeJoin LeftAnti (24)
               :     :     :  :- * SortMergeJoin LeftSemi (16)
               :     :     :  :  :- * Sort (5)
               :     :     :  :  :  +- Exchange (4)
               :     :     :  :  :     +- * Project (3)
               :     :     :  :  :        +- * Filter (2)
               :     :     :  :  :           +- BatchScan default.customer (1)
               :     :     :  :  +- * Sort (15)
               :     :     :  :     +- Exchange (14)
               :     :     :  :        +- * Project (13)
               :     :     :  :           +- * BroadcastHashJoin Inner BuildRight (12)
               :     :     :  :              :- * Project (7)
               :     :     :  :              :  +- BatchScan default.store_sales (6)
               :     :     :  :              +- BroadcastExchange (11)
               :     :     :  :                 +- * Project (10)
               :     :     :  :                    +- * Filter (9)
               :     :     :  :                       +- BatchScan default.date_dim (8)
               :     :     :  +- * Sort (23)
               :     :     :     +- Exchange (22)
               :     :     :        +- * Project (21)
               :     :     :           +- * BroadcastHashJoin Inner BuildRight (20)
               :     :     :              :- * Project (18)
               :     :     :              :  +- BatchScan default.web_sales (17)
               :     :     :              +- ReusedExchange (19)
               :     :     +- * Sort (31)
               :     :        +- Exchange (30)
               :     :           +- * Project (29)
               :     :              +- * BroadcastHashJoin Inner BuildRight (28)
               :     :                 :- * Project (26)
               :     :                 :  +- BatchScan default.catalog_sales (25)
               :     :                 +- ReusedExchange (27)
               :     +- BroadcastExchange (37)
               :        +- * Project (36)
               :           +- * Filter (35)
               :              +- BatchScan default.customer_address (34)
               +- BroadcastExchange (43)
                  +- * Project (42)
                     +- * Filter (41)
                        +- BatchScan default.customer_demographics (40)


(1) BatchScan default.customer
Output [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
DataFilters: [isnotnull(c_current_addr_sk#3), isnotnull(c_current_cdemo_sk#2)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)]
ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>

(2) Filter [codegen id : 1]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Condition : (isnotnull(c_current_addr_sk#3) AND isnotnull(c_current_cdemo_sk#2))

(3) Project [codegen id : 1]
Output [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]

(4) Exchange
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Arguments: hashpartitioning(c_customer_sk#1, 5), ENSURE_REQUIREMENTS, [plan_id=1]

(5) Sort [codegen id : 2]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Arguments: [c_customer_sk#1 ASC NULLS FIRST], false, 0

(6) BatchScan default.store_sales
Output [23]: [ss_sold_time_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_cdemo_sk#7, ss_hdemo_sk#8, ss_addr_sk#9, ss_store_sk#10, ss_promo_sk#11, ss_ticket_number#12, ss_quantity#13, ss_wholesale_cost#14, ss_list_price#15, ss_sales_price#16, ss_ext_discount_amt#17, ss_ext_sales_price#18, ss_ext_wholesale_cost#19, ss_ext_list_price#20, ss_ext_tax#21, ss_coupon_amt#22, ss_net_paid#23, ss_net_paid_inc_tax#24, ss_net_profit#25, ss_sold_date_sk#26]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/store_sales]
PartitionFilters: [isnotnull(ss_sold_date_sk#26)]
ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_sales_price:decimal(7,2),ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2),ss_ext_tax:decimal(7,2),ss_coupon_amt:decimal(7,2),ss_net_paid:decimal(7,2),ss_net_paid_inc_tax:decimal(7,2),ss_net_profit:decimal(7,2)>

(7) Project [codegen id : 4]
Output [2]: [ss_customer_sk#6, ss_sold_date_sk#26]
Input [23]: [ss_sold_time_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_cdemo_sk#7, ss_hdemo_sk#8, ss_addr_sk#9, ss_store_sk#10, ss_promo_sk#11, ss_ticket_number#12, ss_quantity#13, ss_wholesale_cost#14, ss_list_price#15, ss_sales_price#16, ss_ext_discount_amt#17, ss_ext_sales_price#18, ss_ext_wholesale_cost#19, ss_ext_list_price#20, ss_ext_tax#21, ss_coupon_amt#22, ss_net_paid#23, ss_net_paid_inc_tax#24, ss_net_profit#25, ss_sold_date_sk#26]

(8) BatchScan default.date_dim
Output [28]: [d_date_sk#27, d_date_id#28, d_date#29, d_month_seq#30, d_week_seq#31, d_quarter_seq#32, d_year#33, d_dow#34, d_moy#35, d_dom#36, d_qoy#37, d_fy_year#38, d_fy_quarter_seq#39, d_fy_week_seq#40, d_day_name#41, d_quarter_name#42, d_holiday#43, d_weekend#44, d_following_holiday#45, d_first_dom#46, d_last_dom#47, d_same_day_ly#48, d_same_day_lq#49, d_current_day#50, d_current_week#51, d_current_month#52, d_current_quarter#53, d_current_year#54]
DataFilters: [isnotnull(d_year#33), isnotnull(d_moy#35), (d_year#33 = 2001), (d_moy#35 >= 4), (d_moy#35 <= 6), isnotnull(d_date_sk#27)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), GreaterThanOrEqual(d_moy,4), LessThanOrEqual(d_moy,6), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(9) Filter [codegen id : 3]
Input [28]: [d_date_sk#27, d_date_id#28, d_date#29, d_month_seq#30, d_week_seq#31, d_quarter_seq#32, d_year#33, d_dow#34, d_moy#35, d_dom#36, d_qoy#37, d_fy_year#38, d_fy_quarter_seq#39, d_fy_week_seq#40, d_day_name#41, d_quarter_name#42, d_holiday#43, d_weekend#44, d_following_holiday#45, d_first_dom#46, d_last_dom#47, d_same_day_ly#48, d_same_day_lq#49, d_current_day#50, d_current_week#51, d_current_month#52, d_current_quarter#53, d_current_year#54]
Condition : (((((isnotnull(d_year#33) AND isnotnull(d_moy#35)) AND (d_year#33 = 2001)) AND (d_moy#35 >= 4)) AND (d_moy#35 <= 6)) AND isnotnull(d_date_sk#27))

(10) Project [codegen id : 3]
Output [1]: [d_date_sk#27]
Input [28]: [d_date_sk#27, d_date_id#28, d_date#29, d_month_seq#30, d_week_seq#31, d_quarter_seq#32, d_year#33, d_dow#34, d_moy#35, d_dom#36, d_qoy#37, d_fy_year#38, d_fy_quarter_seq#39, d_fy_week_seq#40, d_day_name#41, d_quarter_name#42, d_holiday#43, d_weekend#44, d_following_holiday#45, d_first_dom#46, d_last_dom#47, d_same_day_ly#48, d_same_day_lq#49, d_current_day#50, d_current_week#51, d_current_month#52, d_current_quarter#53, d_current_year#54]

(11) BroadcastExchange
Input [1]: [d_date_sk#27]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(12) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [ss_sold_date_sk#26]
Right keys [1]: [d_date_sk#27]
Join type: Inner
Join condition: None

(13) Project [codegen id : 4]
Output [1]: [ss_customer_sk#6]
Input [3]: [ss_customer_sk#6, ss_sold_date_sk#26, d_date_sk#27]

(14) Exchange
Input [1]: [ss_customer_sk#6]
Arguments: hashpartitioning(ss_customer_sk#6, 5), ENSURE_REQUIREMENTS, [plan_id=3]

(15) Sort [codegen id : 5]
Input [1]: [ss_customer_sk#6]
Arguments: [ss_customer_sk#6 ASC NULLS FIRST], false, 0

(16) SortMergeJoin [codegen id : 6]
Left keys [1]: [c_customer_sk#1]
Right keys [1]: [ss_customer_sk#6]
Join type: LeftSemi
Join condition: None

(17) BatchScan default.web_sales
Output [34]: [ws_sold_time_sk#55, ws_ship_date_sk#56, ws_item_sk#57, ws_bill_customer_sk#58, ws_bill_cdemo_sk#59, ws_bill_hdemo_sk#60, ws_bill_addr_sk#61, ws_ship_customer_sk#62, ws_ship_cdemo_sk#63, ws_ship_hdemo_sk#64, ws_ship_addr_sk#65, ws_web_page_sk#66, ws_web_site_sk#67, ws_ship_mode_sk#68, ws_warehouse_sk#69, ws_promo_sk#70, ws_order_number#71, ws_quantity#72, ws_wholesale_cost#73, ws_list_price#74, ws_sales_price#75, ws_ext_discount_amt#76, ws_ext_sales_price#77, ws_ext_wholesale_cost#78, ws_ext_list_price#79, ws_ext_tax#80, ws_coupon_amt#81, ws_ext_ship_cost#82, ws_net_paid#83, ws_net_paid_inc_tax#84, ws_net_paid_inc_ship#85, ws_net_paid_inc_ship_tax#86, ws_net_profit#87, ws_sold_date_sk#88]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/web_sales]
PartitionFilters: [isnotnull(ws_sold_date_sk#88)]
ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cdemo_sk:int,ws_bill_hdemo_sk:int,ws_bill_addr_sk:int,ws_ship_customer_sk:int,ws_ship_cdemo_sk:int,ws_ship_hdemo_sk:int,ws_ship_addr_sk:int,ws_web_page_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_promo_sk:int,ws_order_number:int,ws_quantity:int,ws_wholesale_cost:decimal(7,2),ws_list_price:decimal(7,2),ws_sales_price:decimal(7,2),ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2),ws_ext_tax:decimal(7,2),ws_coupon_amt:decimal(7,2),ws_ext_ship_cost:decimal(7,2),ws_net_paid:decimal(7,2),ws_net_paid_inc_tax:decimal(7,2),ws_net_paid_inc_ship:decimal(7,2),ws_net_paid_inc_ship_tax:decimal(7,2),ws_net_profit:decimal(7,2)>

(18) Project [codegen id : 8]
Output [2]: [ws_bill_customer_sk#58, ws_sold_date_sk#88]
Input [34]: [ws_sold_time_sk#55, ws_ship_date_sk#56, ws_item_sk#57, ws_bill_customer_sk#58, ws_bill_cdemo_sk#59, ws_bill_hdemo_sk#60, ws_bill_addr_sk#61, ws_ship_customer_sk#62, ws_ship_cdemo_sk#63, ws_ship_hdemo_sk#64, ws_ship_addr_sk#65, ws_web_page_sk#66, ws_web_site_sk#67, ws_ship_mode_sk#68, ws_warehouse_sk#69, ws_promo_sk#70, ws_order_number#71, ws_quantity#72, ws_wholesale_cost#73, ws_list_price#74, ws_sales_price#75, ws_ext_discount_amt#76, ws_ext_sales_price#77, ws_ext_wholesale_cost#78, ws_ext_list_price#79, ws_ext_tax#80, ws_coupon_amt#81, ws_ext_ship_cost#82, ws_net_paid#83, ws_net_paid_inc_tax#84, ws_net_paid_inc_ship#85, ws_net_paid_inc_ship_tax#86, ws_net_profit#87, ws_sold_date_sk#88]

(19) ReusedExchange [Reuses operator id: 11]
Output [1]: [d_date_sk#89]

(20) BroadcastHashJoin [codegen id : 8]
Left keys [1]: [ws_sold_date_sk#88]
Right keys [1]: [d_date_sk#89]
Join type: Inner
Join condition: None

(21) Project [codegen id : 8]
Output [1]: [ws_bill_customer_sk#58]
Input [3]: [ws_bill_customer_sk#58, ws_sold_date_sk#88, d_date_sk#89]

(22) Exchange
Input [1]: [ws_bill_customer_sk#58]
Arguments: hashpartitioning(ws_bill_customer_sk#58, 5), ENSURE_REQUIREMENTS, [plan_id=4]

(23) Sort [codegen id : 9]
Input [1]: [ws_bill_customer_sk#58]
Arguments: [ws_bill_customer_sk#58 ASC NULLS FIRST], false, 0

(24) SortMergeJoin [codegen id : 10]
Left keys [1]: [c_customer_sk#1]
Right keys [1]: [ws_bill_customer_sk#58]
Join type: LeftAnti
Join condition: None

(25) BatchScan default.catalog_sales
Output [34]: [cs_sold_time_sk#90, cs_ship_date_sk#91, cs_bill_customer_sk#92, cs_bill_cdemo_sk#93, cs_bill_hdemo_sk#94, cs_bill_addr_sk#95, cs_ship_customer_sk#96, cs_ship_cdemo_sk#97, cs_ship_hdemo_sk#98, cs_ship_addr_sk#99, cs_call_center_sk#100, cs_catalog_page_sk#101, cs_ship_mode_sk#102, cs_warehouse_sk#103, cs_item_sk#104, cs_promo_sk#105, cs_order_number#106, cs_quantity#107, cs_wholesale_cost#108, cs_list_price#109, cs_sales_price#110, cs_ext_discount_amt#111, cs_ext_sales_price#112, cs_ext_wholesale_cost#113, cs_ext_list_price#114, cs_ext_tax#115, cs_coupon_amt#116, cs_ext_ship_cost#117, cs_net_paid#118, cs_net_paid_inc_tax#119, cs_net_paid_inc_ship#120, cs_net_paid_inc_ship_tax#121, cs_net_profit#122, cs_sold_date_sk#123]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/catalog_sales]
PartitionFilters: [isnotnull(cs_sold_date_sk#123)]
ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_bill_addr_sk:int,cs_ship_customer_sk:int,cs_ship_cdemo_sk:int,cs_ship_hdemo_sk:int,cs_ship_addr_sk:int,cs_call_center_sk:int,cs_catalog_page_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:int,cs_quantity:int,cs_wholesale_cost:decimal(7,2),cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),cs_ext_wholesale_cost:decimal(7,2),cs_ext_list_price:decimal(7,2),cs_ext_tax:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_ext_ship_cost:decimal(7,2),cs_net_paid:decimal(7,2),cs_net_paid_inc_tax:decimal(7,2),cs_net_paid_inc_ship:decimal(7,2),cs_net_paid_inc_ship_tax:decimal(7,2),cs_net_profit:decimal(7,2)>

(26) Project [codegen id : 12]
Output [2]: [cs_ship_customer_sk#96, cs_sold_date_sk#123]
Input [34]: [cs_sold_time_sk#90, cs_ship_date_sk#91, cs_bill_customer_sk#92, cs_bill_cdemo_sk#93, cs_bill_hdemo_sk#94, cs_bill_addr_sk#95, cs_ship_customer_sk#96, cs_ship_cdemo_sk#97, cs_ship_hdemo_sk#98, cs_ship_addr_sk#99, cs_call_center_sk#100, cs_catalog_page_sk#101, cs_ship_mode_sk#102, cs_warehouse_sk#103, cs_item_sk#104, cs_promo_sk#105, cs_order_number#106, cs_quantity#107, cs_wholesale_cost#108, cs_list_price#109, cs_sales_price#110, cs_ext_discount_amt#111, cs_ext_sales_price#112, cs_ext_wholesale_cost#113, cs_ext_list_price#114, cs_ext_tax#115, cs_coupon_amt#116, cs_ext_ship_cost#117, cs_net_paid#118, cs_net_paid_inc_tax#119, cs_net_paid_inc_ship#120, cs_net_paid_inc_ship_tax#121, cs_net_profit#122, cs_sold_date_sk#123]

(27) ReusedExchange [Reuses operator id: 11]
Output [1]: [d_date_sk#124]

(28) BroadcastHashJoin [codegen id : 12]
Left keys [1]: [cs_sold_date_sk#123]
Right keys [1]: [d_date_sk#124]
Join type: Inner
Join condition: None

(29) Project [codegen id : 12]
Output [1]: [cs_ship_customer_sk#96]
Input [3]: [cs_ship_customer_sk#96, cs_sold_date_sk#123, d_date_sk#124]

(30) Exchange
Input [1]: [cs_ship_customer_sk#96]
Arguments: hashpartitioning(cs_ship_customer_sk#96, 5), ENSURE_REQUIREMENTS, [plan_id=5]

(31) Sort [codegen id : 13]
Input [1]: [cs_ship_customer_sk#96]
Arguments: [cs_ship_customer_sk#96 ASC NULLS FIRST], false, 0

(32) SortMergeJoin [codegen id : 16]
Left keys [1]: [c_customer_sk#1]
Right keys [1]: [cs_ship_customer_sk#96]
Join type: LeftAnti
Join condition: None

(33) Project [codegen id : 16]
Output [2]: [c_current_cdemo_sk#2, c_current_addr_sk#3]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]

(34) BatchScan default.customer_address
Output [2]: [ca_address_sk#125, ca_state#126]
DataFilters: [ca_state#126 IN (KY,GA,NM), isnotnull(ca_address_sk#125)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [In(ca_state, [GA,KY,NM]), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_state:string>

(35) Filter [codegen id : 14]
Input [2]: [ca_address_sk#125, ca_state#126]
Condition : (ca_state#126 IN (KY,GA,NM) AND isnotnull(ca_address_sk#125))

(36) Project [codegen id : 14]
Output [1]: [ca_address_sk#125]
Input [2]: [ca_address_sk#125, ca_state#126]

(37) BroadcastExchange
Input [1]: [ca_address_sk#125]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6]

(38) BroadcastHashJoin [codegen id : 16]
Left keys [1]: [c_current_addr_sk#3]
Right keys [1]: [ca_address_sk#125]
Join type: Inner
Join condition: None

(39) Project [codegen id : 16]
Output [1]: [c_current_cdemo_sk#2]
Input [3]: [c_current_cdemo_sk#2, c_current_addr_sk#3, ca_address_sk#125]

(40) BatchScan default.customer_demographics
Output [6]: [cd_demo_sk#127, cd_gender#128, cd_marital_status#129, cd_education_status#130, cd_purchase_estimate#131, cd_credit_rating#132]
DataFilters: [isnotnull(cd_demo_sk#127)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_purchase_estimate:int,cd_credit_rating:string>

(41) Filter [codegen id : 15]
Input [6]: [cd_demo_sk#127, cd_gender#128, cd_marital_status#129, cd_education_status#130, cd_purchase_estimate#131, cd_credit_rating#132]
Condition : isnotnull(cd_demo_sk#127)

(42) Project [codegen id : 15]
Output [6]: [cd_demo_sk#127, cd_gender#128, cd_marital_status#129, cd_education_status#130, cd_purchase_estimate#131, cd_credit_rating#132]
Input [6]: [cd_demo_sk#127, cd_gender#128, cd_marital_status#129, cd_education_status#130, cd_purchase_estimate#131, cd_credit_rating#132]

(43) BroadcastExchange
Input [6]: [cd_demo_sk#127, cd_gender#128, cd_marital_status#129, cd_education_status#130, cd_purchase_estimate#131, cd_credit_rating#132]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=7]

(44) BroadcastHashJoin [codegen id : 16]
Left keys [1]: [c_current_cdemo_sk#2]
Right keys [1]: [cd_demo_sk#127]
Join type: Inner
Join condition: None

(45) Project [codegen id : 16]
Output [5]: [cd_gender#128, cd_marital_status#129, cd_education_status#130, cd_purchase_estimate#131, cd_credit_rating#132]
Input [7]: [c_current_cdemo_sk#2, cd_demo_sk#127, cd_gender#128, cd_marital_status#129, cd_education_status#130, cd_purchase_estimate#131, cd_credit_rating#132]

(46) HashAggregate [codegen id : 16]
Input [5]: [cd_gender#128, cd_marital_status#129, cd_education_status#130, cd_purchase_estimate#131, cd_credit_rating#132]
Keys [5]: [cd_gender#128, cd_marital_status#129, cd_education_status#130, cd_purchase_estimate#131, cd_credit_rating#132]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#133]
Results [6]: [cd_gender#128, cd_marital_status#129, cd_education_status#130, cd_purchase_estimate#131, cd_credit_rating#132, count#134]

(47) Exchange
Input [6]: [cd_gender#128, cd_marital_status#129, cd_education_status#130, cd_purchase_estimate#131, cd_credit_rating#132, count#134]
Arguments: hashpartitioning(cd_gender#128, cd_marital_status#129, cd_education_status#130, cd_purchase_estimate#131, cd_credit_rating#132, 5), ENSURE_REQUIREMENTS, [plan_id=8]

(48) HashAggregate [codegen id : 17]
Input [6]: [cd_gender#128, cd_marital_status#129, cd_education_status#130, cd_purchase_estimate#131, cd_credit_rating#132, count#134]
Keys [5]: [cd_gender#128, cd_marital_status#129, cd_education_status#130, cd_purchase_estimate#131, cd_credit_rating#132]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#135]
Results [8]: [cd_gender#128, cd_marital_status#129, cd_education_status#130, count(1)#135 AS cnt1#136, cd_purchase_estimate#131, count(1)#135 AS cnt2#137, cd_credit_rating#132, count(1)#135 AS cnt3#138]

(49) TakeOrderedAndProject
Input [8]: [cd_gender#128, cd_marital_status#129, cd_education_status#130, cnt1#136, cd_purchase_estimate#131, cnt2#137, cd_credit_rating#132, cnt3#138]
Arguments: 100, [cd_gender#128 ASC NULLS FIRST, cd_marital_status#129 ASC NULLS FIRST, cd_education_status#130 ASC NULLS FIRST, cd_purchase_estimate#131 ASC NULLS FIRST, cd_credit_rating#132 ASC NULLS FIRST], [cd_gender#128, cd_marital_status#129, cd_education_status#130, cnt1#136, cd_purchase_estimate#131, cnt2#137, cd_credit_rating#132, cnt3#138]

