== Physical Plan ==
TakeOrderedAndProject (61)
+- * HashAggregate (60)
   +- Exchange (59)
      +- * HashAggregate (58)
         +- * HashAggregate (57)
            +- * HashAggregate (56)
               +- * Project (55)
                  +- * BroadcastHashJoin Inner BuildRight (54)
                     :- * Project (49)
                     :  +- * BroadcastHashJoin Inner BuildRight (48)
                     :     :- * Project (43)
                     :     :  +- * BroadcastHashJoin Inner BuildRight (42)
                     :     :     :- * Project (37)
                     :     :     :  +- * SortMergeJoin Inner (36)
                     :     :     :     :- * Sort (30)
                     :     :     :     :  +- Exchange (29)
                     :     :     :     :     +- * HashAggregate (28)
                     :     :     :     :        +- Exchange (27)
                     :     :     :     :           +- * HashAggregate (26)
                     :     :     :     :              +- * Project (25)
                     :     :     :     :                 +- * BroadcastHashJoin Inner BuildRight (24)
                     :     :     :     :                    :- * Project (19)
                     :     :     :     :                    :  +- * BroadcastHashJoin Inner BuildRight (18)
                     :     :     :     :                    :     :- * Project (13)
                     :     :     :     :                    :     :  +- * BroadcastHashJoin Inner BuildRight (12)
                     :     :     :     :                    :     :     :- Union (7)
                     :     :     :     :                    :     :     :  :- * Project (3)
                     :     :     :     :                    :     :     :  :  +- * Filter (2)
                     :     :     :     :                    :     :     :  :     +- BatchScan default.catalog_sales (1)
                     :     :     :     :                    :     :     :  +- * Project (6)
                     :     :     :     :                    :     :     :     +- * Filter (5)
                     :     :     :     :                    :     :     :        +- BatchScan default.web_sales (4)
                     :     :     :     :                    :     :     +- BroadcastExchange (11)
                     :     :     :     :                    :     :        +- * Project (10)
                     :     :     :     :                    :     :           +- * Filter (9)
                     :     :     :     :                    :     :              +- BatchScan default.item (8)
                     :     :     :     :                    :     +- BroadcastExchange (17)
                     :     :     :     :                    :        +- * Project (16)
                     :     :     :     :                    :           +- * Filter (15)
                     :     :     :     :                    :              +- BatchScan default.date_dim (14)
                     :     :     :     :                    +- BroadcastExchange (23)
                     :     :     :     :                       +- * Project (22)
                     :     :     :     :                          +- * Filter (21)
                     :     :     :     :                             +- BatchScan default.customer (20)
                     :     :     :     +- * Sort (35)
                     :     :     :        +- Exchange (34)
                     :     :     :           +- * Project (33)
                     :     :     :              +- * Filter (32)
                     :     :     :                 +- BatchScan default.store_sales (31)
                     :     :     +- BroadcastExchange (41)
                     :     :        +- * Project (40)
                     :     :           +- * Filter (39)
                     :     :              +- BatchScan default.customer_address (38)
                     :     +- BroadcastExchange (47)
                     :        +- * Project (46)
                     :           +- * Filter (45)
                     :              +- BatchScan default.store (44)
                     +- BroadcastExchange (53)
                        +- * Project (52)
                           +- * Filter (51)
                              +- BatchScan default.date_dim (50)


(1) BatchScan default.catalog_sales
Output [3]: [cs_bill_customer_sk#1, cs_item_sk#2, cs_sold_date_sk#3]
DataFilters: [isnotnull(cs_item_sk#2), isnotnull(cs_bill_customer_sk#1)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/catalog_sales]
PartitionFilters: [isnotnull(cs_sold_date_sk#3)]
PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_bill_customer_sk)]
ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int>

(2) Filter [codegen id : 1]
Input [3]: [cs_bill_customer_sk#1, cs_item_sk#2, cs_sold_date_sk#3]
Condition : (isnotnull(cs_item_sk#2) AND isnotnull(cs_bill_customer_sk#1))

(3) Project [codegen id : 1]
Output [3]: [cs_sold_date_sk#3 AS sold_date_sk#4, cs_bill_customer_sk#1 AS customer_sk#5, cs_item_sk#2 AS item_sk#6]
Input [3]: [cs_bill_customer_sk#1, cs_item_sk#2, cs_sold_date_sk#3]

(4) BatchScan default.web_sales
Output [3]: [ws_item_sk#7, ws_bill_customer_sk#8, ws_sold_date_sk#9]
DataFilters: [isnotnull(ws_item_sk#7), isnotnull(ws_bill_customer_sk#8)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/web_sales]
PartitionFilters: [isnotnull(ws_sold_date_sk#9)]
PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_bill_customer_sk)]
ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int>

(5) Filter [codegen id : 2]
Input [3]: [ws_item_sk#7, ws_bill_customer_sk#8, ws_sold_date_sk#9]
Condition : (isnotnull(ws_item_sk#7) AND isnotnull(ws_bill_customer_sk#8))

(6) Project [codegen id : 2]
Output [3]: [ws_sold_date_sk#9 AS sold_date_sk#10, ws_bill_customer_sk#8 AS customer_sk#11, ws_item_sk#7 AS item_sk#12]
Input [3]: [ws_item_sk#7, ws_bill_customer_sk#8, ws_sold_date_sk#9]

(7) Union

(8) BatchScan default.item
Output [3]: [i_item_sk#13, i_class#14, i_category#15]
DataFilters: [isnotnull(i_category#15), isnotnull(i_class#14), (i_category#15 = Women                                             ), (i_class#14 = maternity                                         ), isnotnull(i_item_sk#13)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_category), IsNotNull(i_class), EqualTo(i_category,Women                                             ), EqualTo(i_class,maternity                                         ), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>

(9) Filter [codegen id : 3]
Input [3]: [i_item_sk#13, i_class#14, i_category#15]
Condition : ((((isnotnull(i_category#15) AND isnotnull(i_class#14)) AND (i_category#15 = Women                                             )) AND (i_class#14 = maternity                                         )) AND isnotnull(i_item_sk#13))

(10) Project [codegen id : 3]
Output [1]: [i_item_sk#13]
Input [3]: [i_item_sk#13, i_class#14, i_category#15]

(11) BroadcastExchange
Input [1]: [i_item_sk#13]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(12) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [item_sk#6]
Right keys [1]: [i_item_sk#13]
Join type: Inner
Join condition: None

(13) Project [codegen id : 6]
Output [2]: [sold_date_sk#4, customer_sk#5]
Input [4]: [sold_date_sk#4, customer_sk#5, item_sk#6, i_item_sk#13]

(14) BatchScan default.date_dim
Output [3]: [d_date_sk#16, d_year#17, d_moy#18]
DataFilters: [isnotnull(d_moy#18), isnotnull(d_year#17), (d_moy#18 = 12), (d_year#17 = 1998), isnotnull(d_date_sk#16)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,12), EqualTo(d_year,1998), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(15) Filter [codegen id : 4]
Input [3]: [d_date_sk#16, d_year#17, d_moy#18]
Condition : ((((isnotnull(d_moy#18) AND isnotnull(d_year#17)) AND (d_moy#18 = 12)) AND (d_year#17 = 1998)) AND isnotnull(d_date_sk#16))

(16) Project [codegen id : 4]
Output [1]: [d_date_sk#16]
Input [3]: [d_date_sk#16, d_year#17, d_moy#18]

(17) BroadcastExchange
Input [1]: [d_date_sk#16]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(18) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [sold_date_sk#4]
Right keys [1]: [d_date_sk#16]
Join type: Inner
Join condition: None

(19) Project [codegen id : 6]
Output [1]: [customer_sk#5]
Input [3]: [sold_date_sk#4, customer_sk#5, d_date_sk#16]

(20) BatchScan default.customer
Output [2]: [c_customer_sk#19, c_current_addr_sk#20]
DataFilters: [isnotnull(c_customer_sk#19), isnotnull(c_current_addr_sk#20)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)]
ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>

(21) Filter [codegen id : 5]
Input [2]: [c_customer_sk#19, c_current_addr_sk#20]
Condition : (isnotnull(c_customer_sk#19) AND isnotnull(c_current_addr_sk#20))

(22) Project [codegen id : 5]
Output [2]: [c_customer_sk#19, c_current_addr_sk#20]
Input [2]: [c_customer_sk#19, c_current_addr_sk#20]

(23) BroadcastExchange
Input [2]: [c_customer_sk#19, c_current_addr_sk#20]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=3]

(24) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [customer_sk#5]
Right keys [1]: [c_customer_sk#19]
Join type: Inner
Join condition: None

(25) Project [codegen id : 6]
Output [2]: [c_customer_sk#19, c_current_addr_sk#20]
Input [3]: [customer_sk#5, c_customer_sk#19, c_current_addr_sk#20]

(26) HashAggregate [codegen id : 6]
Input [2]: [c_customer_sk#19, c_current_addr_sk#20]
Keys [2]: [c_customer_sk#19, c_current_addr_sk#20]
Functions: []
Aggregate Attributes: []
Results [2]: [c_customer_sk#19, c_current_addr_sk#20]

(27) Exchange
Input [2]: [c_customer_sk#19, c_current_addr_sk#20]
Arguments: hashpartitioning(c_customer_sk#19, c_current_addr_sk#20, 5), ENSURE_REQUIREMENTS, [plan_id=4]

(28) HashAggregate [codegen id : 7]
Input [2]: [c_customer_sk#19, c_current_addr_sk#20]
Keys [2]: [c_customer_sk#19, c_current_addr_sk#20]
Functions: []
Aggregate Attributes: []
Results [2]: [c_customer_sk#19, c_current_addr_sk#20]

(29) Exchange
Input [2]: [c_customer_sk#19, c_current_addr_sk#20]
Arguments: hashpartitioning(c_customer_sk#19, 5), ENSURE_REQUIREMENTS, [plan_id=5]

(30) Sort [codegen id : 8]
Input [2]: [c_customer_sk#19, c_current_addr_sk#20]
Arguments: [c_customer_sk#19 ASC NULLS FIRST], false, 0

(31) BatchScan default.store_sales
Output [3]: [ss_customer_sk#21, ss_ext_sales_price#22, ss_sold_date_sk#23]
DataFilters: [isnotnull(ss_customer_sk#21)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/store_sales]
PartitionFilters: [isnotnull(ss_sold_date_sk#23)]
PushedFilters: [IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_customer_sk:int,ss_ext_sales_price:decimal(7,2)>

(32) Filter [codegen id : 9]
Input [3]: [ss_customer_sk#21, ss_ext_sales_price#22, ss_sold_date_sk#23]
Condition : (isnotnull(ss_customer_sk#21) AND might_contain(Subquery scalar-subquery#24, [id=#25], xxhash64(ss_sold_date_sk#23, 42)))

(33) Project [codegen id : 9]
Output [3]: [ss_customer_sk#21, ss_ext_sales_price#22, ss_sold_date_sk#23]
Input [3]: [ss_customer_sk#21, ss_ext_sales_price#22, ss_sold_date_sk#23]

(34) Exchange
Input [3]: [ss_customer_sk#21, ss_ext_sales_price#22, ss_sold_date_sk#23]
Arguments: hashpartitioning(ss_customer_sk#21, 5), ENSURE_REQUIREMENTS, [plan_id=6]

(35) Sort [codegen id : 10]
Input [3]: [ss_customer_sk#21, ss_ext_sales_price#22, ss_sold_date_sk#23]
Arguments: [ss_customer_sk#21 ASC NULLS FIRST], false, 0

(36) SortMergeJoin [codegen id : 14]
Left keys [1]: [c_customer_sk#19]
Right keys [1]: [ss_customer_sk#21]
Join type: Inner
Join condition: None

(37) Project [codegen id : 14]
Output [4]: [c_customer_sk#19, c_current_addr_sk#20, ss_ext_sales_price#22, ss_sold_date_sk#23]
Input [5]: [c_customer_sk#19, c_current_addr_sk#20, ss_customer_sk#21, ss_ext_sales_price#22, ss_sold_date_sk#23]

(38) BatchScan default.customer_address
Output [3]: [ca_address_sk#26, ca_county#27, ca_state#28]
DataFilters: [isnotnull(ca_address_sk#26), isnotnull(ca_county#27), isnotnull(ca_state#28)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_county), IsNotNull(ca_state)]
ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_state:string>

(39) Filter [codegen id : 11]
Input [3]: [ca_address_sk#26, ca_county#27, ca_state#28]
Condition : ((isnotnull(ca_address_sk#26) AND isnotnull(ca_county#27)) AND isnotnull(ca_state#28))

(40) Project [codegen id : 11]
Output [3]: [ca_address_sk#26, ca_county#27, ca_state#28]
Input [3]: [ca_address_sk#26, ca_county#27, ca_state#28]

(41) BroadcastExchange
Input [3]: [ca_address_sk#26, ca_county#27, ca_state#28]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=7]

(42) BroadcastHashJoin [codegen id : 14]
Left keys [1]: [c_current_addr_sk#20]
Right keys [1]: [ca_address_sk#26]
Join type: Inner
Join condition: None

(43) Project [codegen id : 14]
Output [5]: [c_customer_sk#19, ss_ext_sales_price#22, ss_sold_date_sk#23, ca_county#27, ca_state#28]
Input [7]: [c_customer_sk#19, c_current_addr_sk#20, ss_ext_sales_price#22, ss_sold_date_sk#23, ca_address_sk#26, ca_county#27, ca_state#28]

(44) BatchScan default.store
Output [2]: [s_county#29, s_state#30]
DataFilters: [isnotnull(s_county#29), isnotnull(s_state#30)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_county), IsNotNull(s_state)]
ReadSchema: struct<s_county:string,s_state:string>

(45) Filter [codegen id : 12]
Input [2]: [s_county#29, s_state#30]
Condition : (isnotnull(s_county#29) AND isnotnull(s_state#30))

(46) Project [codegen id : 12]
Output [2]: [s_county#29, s_state#30]
Input [2]: [s_county#29, s_state#30]

(47) BroadcastExchange
Input [2]: [s_county#29, s_state#30]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true], input[1, string, true]),false), [plan_id=8]

(48) BroadcastHashJoin [codegen id : 14]
Left keys [2]: [ca_county#27, ca_state#28]
Right keys [2]: [s_county#29, s_state#30]
Join type: Inner
Join condition: None

(49) Project [codegen id : 14]
Output [3]: [c_customer_sk#19, ss_ext_sales_price#22, ss_sold_date_sk#23]
Input [7]: [c_customer_sk#19, ss_ext_sales_price#22, ss_sold_date_sk#23, ca_county#27, ca_state#28, s_county#29, s_state#30]

(50) BatchScan default.date_dim
Output [2]: [d_date_sk#31, d_month_seq#32]
DataFilters: [isnotnull(d_month_seq#32), isnotnull(d_date_sk#31)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(51) Filter [codegen id : 13]
Input [2]: [d_date_sk#31, d_month_seq#32]
Condition : (((isnotnull(d_month_seq#32) AND isnotnull(d_date_sk#31)) AND (d_month_seq#32 >= ReusedSubquery Subquery scalar-subquery#33, [id=#34])) AND (d_month_seq#32 <= ReusedSubquery Subquery scalar-subquery#35, [id=#36]))

(52) Project [codegen id : 13]
Output [1]: [d_date_sk#31]
Input [2]: [d_date_sk#31, d_month_seq#32]

(53) BroadcastExchange
Input [1]: [d_date_sk#31]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=9]

(54) BroadcastHashJoin [codegen id : 14]
Left keys [1]: [ss_sold_date_sk#23]
Right keys [1]: [d_date_sk#31]
Join type: Inner
Join condition: None

(55) Project [codegen id : 14]
Output [2]: [c_customer_sk#19, ss_ext_sales_price#22]
Input [4]: [c_customer_sk#19, ss_ext_sales_price#22, ss_sold_date_sk#23, d_date_sk#31]

(56) HashAggregate [codegen id : 14]
Input [2]: [c_customer_sk#19, ss_ext_sales_price#22]
Keys [1]: [c_customer_sk#19]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#22))]
Aggregate Attributes [1]: [sum#37]
Results [2]: [c_customer_sk#19, sum#38]

(57) HashAggregate [codegen id : 14]
Input [2]: [c_customer_sk#19, sum#38]
Keys [1]: [c_customer_sk#19]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#22))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#22))#39]
Results [1]: [cast((MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#22))#39,17,2) / 50) as int) AS segment#40]

(58) HashAggregate [codegen id : 14]
Input [1]: [segment#40]
Keys [1]: [segment#40]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#41]
Results [2]: [segment#40, count#42]

(59) Exchange
Input [2]: [segment#40, count#42]
Arguments: hashpartitioning(segment#40, 5), ENSURE_REQUIREMENTS, [plan_id=10]

(60) HashAggregate [codegen id : 15]
Input [2]: [segment#40, count#42]
Keys [1]: [segment#40]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#43]
Results [3]: [segment#40, count(1)#43 AS num_customers#44, (segment#40 * 50) AS segment_base#45]

(61) TakeOrderedAndProject
Input [3]: [segment#40, num_customers#44, segment_base#45]
Arguments: 100, [segment#40 ASC NULLS FIRST, num_customers#44 ASC NULLS FIRST], [segment#40, num_customers#44, segment_base#45]

===== Subqueries =====

Subquery:1 Hosting operator id = 32 Hosting Expression = Subquery scalar-subquery#24, [id=#25]
ObjectHashAggregate (67)
+- Exchange (66)
   +- ObjectHashAggregate (65)
      +- * Project (64)
         +- * Filter (63)
            +- BatchScan default.date_dim (62)


(62) BatchScan default.date_dim
Output [2]: [d_date_sk#31, d_month_seq#32]
DataFilters: [isnotnull(d_month_seq#32), isnotnull(d_date_sk#31)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(63) Filter [codegen id : 1]
Input [2]: [d_date_sk#31, d_month_seq#32]
Condition : (((isnotnull(d_month_seq#32) AND isnotnull(d_date_sk#31)) AND (d_month_seq#32 >= Subquery scalar-subquery#33, [id=#34])) AND (d_month_seq#32 <= Subquery scalar-subquery#35, [id=#36]))

(64) Project [codegen id : 1]
Output [1]: [d_date_sk#31]
Input [2]: [d_date_sk#31, d_month_seq#32]

(65) ObjectHashAggregate
Input [1]: [d_date_sk#31]
Keys: []
Functions [1]: [partial_bloom_filter_agg(xxhash64(d_date_sk#31, 42), 1000000, 8388608, 0, 0)]
Aggregate Attributes [1]: [buf#46]
Results [1]: [buf#47]

(66) Exchange
Input [1]: [buf#47]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=11]

(67) ObjectHashAggregate
Input [1]: [buf#47]
Keys: []
Functions [1]: [bloom_filter_agg(xxhash64(d_date_sk#31, 42), 1000000, 8388608, 0, 0)]
Aggregate Attributes [1]: [bloom_filter_agg(xxhash64(d_date_sk#31, 42), 1000000, 8388608, 0, 0)#48]
Results [1]: [bloom_filter_agg(xxhash64(d_date_sk#31, 42), 1000000, 8388608, 0, 0)#48 AS bloomFilter#49]

Subquery:2 Hosting operator id = 63 Hosting Expression = Subquery scalar-subquery#33, [id=#34]
* HashAggregate (73)
+- Exchange (72)
   +- * HashAggregate (71)
      +- * Project (70)
         +- * Filter (69)
            +- BatchScan default.date_dim (68)


(68) BatchScan default.date_dim
Output [3]: [d_month_seq#50, d_year#51, d_moy#52]
DataFilters: [isnotnull(d_year#51), isnotnull(d_moy#52), (d_year#51 = 1998), (d_moy#52 = 12)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,12)]
ReadSchema: struct<d_month_seq:int,d_year:int,d_moy:int>

(69) Filter [codegen id : 1]
Input [3]: [d_month_seq#50, d_year#51, d_moy#52]
Condition : (((isnotnull(d_year#51) AND isnotnull(d_moy#52)) AND (d_year#51 = 1998)) AND (d_moy#52 = 12))

(70) Project [codegen id : 1]
Output [1]: [(d_month_seq#50 + 1) AS (d_month_seq + 1)#53]
Input [3]: [d_month_seq#50, d_year#51, d_moy#52]

(71) HashAggregate [codegen id : 1]
Input [1]: [(d_month_seq + 1)#53]
Keys [1]: [(d_month_seq + 1)#53]
Functions: []
Aggregate Attributes: []
Results [1]: [(d_month_seq + 1)#53]

(72) Exchange
Input [1]: [(d_month_seq + 1)#53]
Arguments: hashpartitioning((d_month_seq + 1)#53, 5), ENSURE_REQUIREMENTS, [plan_id=12]

(73) HashAggregate [codegen id : 2]
Input [1]: [(d_month_seq + 1)#53]
Keys [1]: [(d_month_seq + 1)#53]
Functions: []
Aggregate Attributes: []
Results [1]: [(d_month_seq + 1)#53]

Subquery:3 Hosting operator id = 63 Hosting Expression = Subquery scalar-subquery#35, [id=#36]
* HashAggregate (79)
+- Exchange (78)
   +- * HashAggregate (77)
      +- * Project (76)
         +- * Filter (75)
            +- BatchScan default.date_dim (74)


(74) BatchScan default.date_dim
Output [3]: [d_month_seq#54, d_year#55, d_moy#56]
DataFilters: [isnotnull(d_year#55), isnotnull(d_moy#56), (d_year#55 = 1998), (d_moy#56 = 12)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,12)]
ReadSchema: struct<d_month_seq:int,d_year:int,d_moy:int>

(75) Filter [codegen id : 1]
Input [3]: [d_month_seq#54, d_year#55, d_moy#56]
Condition : (((isnotnull(d_year#55) AND isnotnull(d_moy#56)) AND (d_year#55 = 1998)) AND (d_moy#56 = 12))

(76) Project [codegen id : 1]
Output [1]: [(d_month_seq#54 + 3) AS (d_month_seq + 3)#57]
Input [3]: [d_month_seq#54, d_year#55, d_moy#56]

(77) HashAggregate [codegen id : 1]
Input [1]: [(d_month_seq + 3)#57]
Keys [1]: [(d_month_seq + 3)#57]
Functions: []
Aggregate Attributes: []
Results [1]: [(d_month_seq + 3)#57]

(78) Exchange
Input [1]: [(d_month_seq + 3)#57]
Arguments: hashpartitioning((d_month_seq + 3)#57, 5), ENSURE_REQUIREMENTS, [plan_id=13]

(79) HashAggregate [codegen id : 2]
Input [1]: [(d_month_seq + 3)#57]
Keys [1]: [(d_month_seq + 3)#57]
Functions: []
Aggregate Attributes: []
Results [1]: [(d_month_seq + 3)#57]

Subquery:4 Hosting operator id = 51 Hosting Expression = ReusedSubquery Subquery scalar-subquery#33, [id=#34]

Subquery:5 Hosting operator id = 51 Hosting Expression = ReusedSubquery Subquery scalar-subquery#35, [id=#36]


