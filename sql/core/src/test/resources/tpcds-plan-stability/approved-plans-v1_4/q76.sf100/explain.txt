== Physical Plan ==
TakeOrderedAndProject (40)
+- * HashAggregate (39)
   +- Exchange (38)
      +- * HashAggregate (37)
         +- Union (36)
            :- * Project (13)
            :  +- * BroadcastHashJoin Inner BuildRight (12)
            :     :- * Project (8)
            :     :  +- * BroadcastHashJoin Inner BuildRight (7)
            :     :     :- * Filter (3)
            :     :     :  +- * ColumnarToRow (2)
            :     :     :     +- Scan parquet default.store_sales (1)
            :     :     +- BroadcastExchange (6)
            :     :        +- * ColumnarToRow (5)
            :     :           +- Scan parquet default.date_dim (4)
            :     +- BroadcastExchange (11)
            :        +- * ColumnarToRow (10)
            :           +- Scan parquet default.item (9)
            :- * Project (26)
            :  +- * BroadcastHashJoin Inner BuildLeft (25)
            :     :- BroadcastExchange (22)
            :     :  +- * Project (21)
            :     :     +- * BroadcastHashJoin Inner BuildLeft (20)
            :     :        :- BroadcastExchange (17)
            :     :        :  +- * Filter (16)
            :     :        :     +- * ColumnarToRow (15)
            :     :        :        +- Scan parquet default.web_sales (14)
            :     :        +- * ColumnarToRow (19)
            :     :           +- Scan parquet default.date_dim (18)
            :     +- * ColumnarToRow (24)
            :        +- Scan parquet default.item (23)
            +- * Project (35)
               +- * BroadcastHashJoin Inner BuildRight (34)
                  :- * Project (32)
                  :  +- * BroadcastHashJoin Inner BuildRight (31)
                  :     :- * Filter (29)
                  :     :  +- * ColumnarToRow (28)
                  :     :     +- Scan parquet default.catalog_sales (27)
                  :     +- ReusedExchange (30)
                  +- ReusedExchange (33)


(1) Scan parquet default.store_sales
Output [4]: [ss_item_sk#1, ss_store_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#4)]
PushedFilters: [IsNull(ss_store_sk)]
ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2)>

(2) ColumnarToRow [codegen id : 3]
Input [4]: [ss_item_sk#1, ss_store_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]

(3) Filter [codegen id : 3]
Input [4]: [ss_item_sk#1, ss_store_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Condition : isnull(ss_store_sk#2)

(4) Scan parquet default.date_dim
Output [3]: [d_date_sk#5, d_year#6, d_qoy#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(5) ColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#5, d_year#6, d_qoy#7]

(6) BroadcastExchange
Input [3]: [d_date_sk#5, d_year#6, d_qoy#7]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#8]

(7) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_sold_date_sk#4]
Right keys [1]: [d_date_sk#5]
Join condition: None

(8) Project [codegen id : 3]
Output [5]: [ss_item_sk#1, ss_store_sk#2, ss_ext_sales_price#3, d_year#6, d_qoy#7]
Input [7]: [ss_item_sk#1, ss_store_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4, d_date_sk#5, d_year#6, d_qoy#7]

(9) Scan parquet default.item
Output [2]: [i_item_sk#9, i_category#10]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
ReadSchema: struct<i_item_sk:int,i_category:string>

(10) ColumnarToRow [codegen id : 2]
Input [2]: [i_item_sk#9, i_category#10]

(11) BroadcastExchange
Input [2]: [i_item_sk#9, i_category#10]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#11]

(12) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_item_sk#1]
Right keys [1]: [i_item_sk#9]
Join condition: None

(13) Project [codegen id : 3]
Output [6]: [store AS channel#12, ss_store_sk#2 AS col_name#13, d_year#6, d_qoy#7, i_category#10, ss_ext_sales_price#3 AS ext_sales_price#14]
Input [7]: [ss_item_sk#1, ss_store_sk#2, ss_ext_sales_price#3, d_year#6, d_qoy#7, i_item_sk#9, i_category#10]

(14) Scan parquet default.web_sales
Output [4]: [ws_item_sk#15, ws_ship_customer_sk#16, ws_ext_sales_price#17, ws_sold_date_sk#18]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#18)]
PushedFilters: [IsNull(ws_ship_customer_sk)]
ReadSchema: struct<ws_item_sk:int,ws_ship_customer_sk:int,ws_ext_sales_price:decimal(7,2)>

(15) ColumnarToRow [codegen id : 4]
Input [4]: [ws_item_sk#15, ws_ship_customer_sk#16, ws_ext_sales_price#17, ws_sold_date_sk#18]

(16) Filter [codegen id : 4]
Input [4]: [ws_item_sk#15, ws_ship_customer_sk#16, ws_ext_sales_price#17, ws_sold_date_sk#18]
Condition : isnull(ws_ship_customer_sk#16)

(17) BroadcastExchange
Input [4]: [ws_item_sk#15, ws_ship_customer_sk#16, ws_ext_sales_price#17, ws_sold_date_sk#18]
Arguments: HashedRelationBroadcastMode(List(cast(input[3, int, true] as bigint)),false), [id=#19]

(18) Scan parquet default.date_dim
Output [3]: [d_date_sk#20, d_year#21, d_qoy#22]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(19) ColumnarToRow
Input [3]: [d_date_sk#20, d_year#21, d_qoy#22]

(20) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ws_sold_date_sk#18]
Right keys [1]: [d_date_sk#20]
Join condition: None

(21) Project [codegen id : 5]
Output [5]: [ws_item_sk#15, ws_ship_customer_sk#16, ws_ext_sales_price#17, d_year#21, d_qoy#22]
Input [7]: [ws_item_sk#15, ws_ship_customer_sk#16, ws_ext_sales_price#17, ws_sold_date_sk#18, d_date_sk#20, d_year#21, d_qoy#22]

(22) BroadcastExchange
Input [5]: [ws_item_sk#15, ws_ship_customer_sk#16, ws_ext_sales_price#17, d_year#21, d_qoy#22]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#23]

(23) Scan parquet default.item
Output [2]: [i_item_sk#24, i_category#25]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
ReadSchema: struct<i_item_sk:int,i_category:string>

(24) ColumnarToRow
Input [2]: [i_item_sk#24, i_category#25]

(25) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ws_item_sk#15]
Right keys [1]: [i_item_sk#24]
Join condition: None

(26) Project [codegen id : 6]
Output [6]: [web AS channel#26, ws_ship_customer_sk#16 AS col_name#27, d_year#21, d_qoy#22, i_category#25, ws_ext_sales_price#17 AS ext_sales_price#28]
Input [7]: [ws_item_sk#15, ws_ship_customer_sk#16, ws_ext_sales_price#17, d_year#21, d_qoy#22, i_item_sk#24, i_category#25]

(27) Scan parquet default.catalog_sales
Output [4]: [cs_ship_addr_sk#29, cs_item_sk#30, cs_ext_sales_price#31, cs_sold_date_sk#32]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#32)]
PushedFilters: [IsNull(cs_ship_addr_sk)]
ReadSchema: struct<cs_ship_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>

(28) ColumnarToRow [codegen id : 9]
Input [4]: [cs_ship_addr_sk#29, cs_item_sk#30, cs_ext_sales_price#31, cs_sold_date_sk#32]

(29) Filter [codegen id : 9]
Input [4]: [cs_ship_addr_sk#29, cs_item_sk#30, cs_ext_sales_price#31, cs_sold_date_sk#32]
Condition : isnull(cs_ship_addr_sk#29)

(30) ReusedExchange [Reuses operator id: 6]
Output [3]: [d_date_sk#33, d_year#34, d_qoy#35]

(31) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [cs_sold_date_sk#32]
Right keys [1]: [d_date_sk#33]
Join condition: None

(32) Project [codegen id : 9]
Output [5]: [cs_ship_addr_sk#29, cs_item_sk#30, cs_ext_sales_price#31, d_year#34, d_qoy#35]
Input [7]: [cs_ship_addr_sk#29, cs_item_sk#30, cs_ext_sales_price#31, cs_sold_date_sk#32, d_date_sk#33, d_year#34, d_qoy#35]

(33) ReusedExchange [Reuses operator id: 11]
Output [2]: [i_item_sk#36, i_category#37]

(34) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [cs_item_sk#30]
Right keys [1]: [i_item_sk#36]
Join condition: None

(35) Project [codegen id : 9]
Output [6]: [catalog AS channel#38, cs_ship_addr_sk#29 AS col_name#39, d_year#34, d_qoy#35, i_category#37, cs_ext_sales_price#31 AS ext_sales_price#40]
Input [7]: [cs_ship_addr_sk#29, cs_item_sk#30, cs_ext_sales_price#31, d_year#34, d_qoy#35, i_item_sk#36, i_category#37]

(36) Union

(37) HashAggregate [codegen id : 10]
Input [6]: [channel#12, col_name#13, d_year#6, d_qoy#7, i_category#10, ext_sales_price#14]
Keys [5]: [channel#12, col_name#13, d_year#6, d_qoy#7, i_category#10]
Functions [2]: [partial_count(1), partial_sum(UnscaledValue(ext_sales_price#14))]
Aggregate Attributes [2]: [count#41, sum#42]
Results [7]: [channel#12, col_name#13, d_year#6, d_qoy#7, i_category#10, count#43, sum#44]

(38) Exchange
Input [7]: [channel#12, col_name#13, d_year#6, d_qoy#7, i_category#10, count#43, sum#44]
Arguments: hashpartitioning(channel#12, col_name#13, d_year#6, d_qoy#7, i_category#10, 5), ENSURE_REQUIREMENTS, [id=#45]

(39) HashAggregate [codegen id : 11]
Input [7]: [channel#12, col_name#13, d_year#6, d_qoy#7, i_category#10, count#43, sum#44]
Keys [5]: [channel#12, col_name#13, d_year#6, d_qoy#7, i_category#10]
Functions [2]: [count(1), sum(UnscaledValue(ext_sales_price#14))]
Aggregate Attributes [2]: [count(1)#46, sum(UnscaledValue(ext_sales_price#14))#47]
Results [7]: [channel#12, col_name#13, d_year#6, d_qoy#7, i_category#10, count(1)#46 AS sales_cnt#48, MakeDecimal(sum(UnscaledValue(ext_sales_price#14))#47,17,2) AS sales_amt#49]

(40) TakeOrderedAndProject
Input [7]: [channel#12, col_name#13, d_year#6, d_qoy#7, i_category#10, sales_cnt#48, sales_amt#49]
Arguments: 100, [channel#12 ASC NULLS FIRST, col_name#13 ASC NULLS FIRST, d_year#6 ASC NULLS FIRST, d_qoy#7 ASC NULLS FIRST, i_category#10 ASC NULLS FIRST], [channel#12, col_name#13, d_year#6, d_qoy#7, i_category#10, sales_cnt#48, sales_amt#49]

