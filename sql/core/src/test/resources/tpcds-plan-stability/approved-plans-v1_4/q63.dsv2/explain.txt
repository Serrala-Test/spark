== Physical Plan ==
TakeOrderedAndProject (30)
+- * Project (29)
   +- * Filter (28)
      +- Window (27)
         +- * Sort (26)
            +- Exchange (25)
               +- * HashAggregate (24)
                  +- Exchange (23)
                     +- * HashAggregate (22)
                        +- * Project (21)
                           +- * BroadcastHashJoin Inner BuildRight (20)
                              :- * Project (15)
                              :  +- * BroadcastHashJoin Inner BuildRight (14)
                              :     :- * Project (9)
                              :     :  +- * BroadcastHashJoin Inner BuildLeft (8)
                              :     :     :- BroadcastExchange (4)
                              :     :     :  +- * Project (3)
                              :     :     :     +- * Filter (2)
                              :     :     :        +- BatchScan default.item (1)
                              :     :     +- * Project (7)
                              :     :        +- * Filter (6)
                              :     :           +- BatchScan default.store_sales (5)
                              :     +- BroadcastExchange (13)
                              :        +- * Project (12)
                              :           +- * Filter (11)
                              :              +- BatchScan default.date_dim (10)
                              +- BroadcastExchange (19)
                                 +- * Project (18)
                                    +- * Filter (17)
                                       +- BatchScan default.store (16)


(1) BatchScan default.item
Output [5]: [i_item_sk#1, i_brand#2, i_class#3, i_category#4, i_manager_id#5]
DataFilters: [(((i_category#4 IN (Books                                             ,Children                                          ,Electronics                                       ) AND i_class#3 IN (personal                                          ,portable                                          ,refernece                                         ,self-help                                         )) AND i_brand#2 IN (scholaramalgamalg #6                             ,scholaramalgamalg #7                              ,exportiunivamalg #8                               ,scholaramalgamalg #8                              )) OR ((i_category#4 IN (Women                                             ,Music                                             ,Men                                               ) AND i_class#3 IN (accessories                                       ,classical                                         ,fragrances                                        ,pants                                             )) AND i_brand#2 IN (amalgimporto #9                                   ,edu packscholar #9                                ,exportiimporto #9                                 ,importoamalg #9                                   ))), isnotnull(i_item_sk#1)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [Or(And(And(In(i_category, [Books                                             ,Children                                          ,Electronics                                       ]),In(i_class, [personal                                          ,portable                                          ,refernece                                         ,self-help                                         ])),In(i_brand, [exportiunivamalg #8                               ,scholaramalgamalg #6                             ,scholaramalgamalg #7                              ,scholaramalgamalg #8                              ])),And(And(In(i_category, [Men                                               ,Music                                             ,Women                                             ]),In(i_class, [accessories                                       ,classical                                         ,fragrances                                        ,pants                                             ])),In(i_brand, [amalgimporto #9                                   ,edu packscholar #9                                ,exportiimporto #9                                 ,importoamalg #9                                   ]))), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_manager_id:int>

(2) Filter [codegen id : 1]
Input [5]: [i_item_sk#1, i_brand#2, i_class#3, i_category#4, i_manager_id#5]
Condition : ((((i_category#4 IN (Books                                             ,Children                                          ,Electronics                                       ) AND i_class#3 IN (personal                                          ,portable                                          ,refernece                                         ,self-help                                         )) AND i_brand#2 IN (scholaramalgamalg #6                             ,scholaramalgamalg #7                              ,exportiunivamalg #8                               ,scholaramalgamalg #8                              )) OR ((i_category#4 IN (Women                                             ,Music                                             ,Men                                               ) AND i_class#3 IN (accessories                                       ,classical                                         ,fragrances                                        ,pants                                             )) AND i_brand#2 IN (amalgimporto #9                                   ,edu packscholar #9                                ,exportiimporto #9                                 ,importoamalg #9                                   ))) AND isnotnull(i_item_sk#1))

(3) Project [codegen id : 1]
Output [2]: [i_item_sk#1, i_manager_id#5]
Input [5]: [i_item_sk#1, i_brand#2, i_class#3, i_category#4, i_manager_id#5]

(4) BroadcastExchange
Input [2]: [i_item_sk#1, i_manager_id#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(5) BatchScan default.store_sales
Output [4]: [ss_item_sk#10, ss_store_sk#11, ss_sales_price#12, ss_sold_date_sk#13]
DataFilters: [isnotnull(ss_item_sk#10), isnotnull(ss_store_sk#11)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/store_sales]
PartitionFilters: [isnotnull(ss_sold_date_sk#13)]
PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>

(6) Filter
Input [4]: [ss_item_sk#10, ss_store_sk#11, ss_sales_price#12, ss_sold_date_sk#13]
Condition : (isnotnull(ss_item_sk#10) AND isnotnull(ss_store_sk#11))

(7) Project
Output [4]: [ss_item_sk#10, ss_store_sk#11, ss_sales_price#12, ss_sold_date_sk#13]
Input [4]: [ss_item_sk#10, ss_store_sk#11, ss_sales_price#12, ss_sold_date_sk#13]

(8) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [i_item_sk#1]
Right keys [1]: [ss_item_sk#10]
Join type: Inner
Join condition: None

(9) Project [codegen id : 4]
Output [4]: [i_manager_id#5, ss_store_sk#11, ss_sales_price#12, ss_sold_date_sk#13]
Input [6]: [i_item_sk#1, i_manager_id#5, ss_item_sk#10, ss_store_sk#11, ss_sales_price#12, ss_sold_date_sk#13]

(10) BatchScan default.date_dim
Output [3]: [d_date_sk#14, d_month_seq#15, d_moy#16]
DataFilters: [d_month_seq#15 INSET 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, isnotnull(d_date_sk#14)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [In(d_month_seq, [1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211]), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_moy:int>

(11) Filter [codegen id : 2]
Input [3]: [d_date_sk#14, d_month_seq#15, d_moy#16]
Condition : (d_month_seq#15 INSET 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211 AND isnotnull(d_date_sk#14))

(12) Project [codegen id : 2]
Output [2]: [d_date_sk#14, d_moy#16]
Input [3]: [d_date_sk#14, d_month_seq#15, d_moy#16]

(13) BroadcastExchange
Input [2]: [d_date_sk#14, d_moy#16]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(14) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [ss_sold_date_sk#13]
Right keys [1]: [d_date_sk#14]
Join type: Inner
Join condition: None

(15) Project [codegen id : 4]
Output [4]: [i_manager_id#5, ss_store_sk#11, ss_sales_price#12, d_moy#16]
Input [6]: [i_manager_id#5, ss_store_sk#11, ss_sales_price#12, ss_sold_date_sk#13, d_date_sk#14, d_moy#16]

(16) BatchScan default.store
Output [1]: [s_store_sk#17]
DataFilters: [isnotnull(s_store_sk#17)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int>

(17) Filter [codegen id : 3]
Input [1]: [s_store_sk#17]
Condition : isnotnull(s_store_sk#17)

(18) Project [codegen id : 3]
Output [1]: [s_store_sk#17]
Input [1]: [s_store_sk#17]

(19) BroadcastExchange
Input [1]: [s_store_sk#17]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=3]

(20) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [ss_store_sk#11]
Right keys [1]: [s_store_sk#17]
Join type: Inner
Join condition: None

(21) Project [codegen id : 4]
Output [3]: [i_manager_id#5, ss_sales_price#12, d_moy#16]
Input [5]: [i_manager_id#5, ss_store_sk#11, ss_sales_price#12, d_moy#16, s_store_sk#17]

(22) HashAggregate [codegen id : 4]
Input [3]: [i_manager_id#5, ss_sales_price#12, d_moy#16]
Keys [2]: [i_manager_id#5, d_moy#16]
Functions [1]: [partial_sum(UnscaledValue(ss_sales_price#12))]
Aggregate Attributes [1]: [sum#18]
Results [3]: [i_manager_id#5, d_moy#16, sum#19]

(23) Exchange
Input [3]: [i_manager_id#5, d_moy#16, sum#19]
Arguments: hashpartitioning(i_manager_id#5, d_moy#16, 5), ENSURE_REQUIREMENTS, [plan_id=4]

(24) HashAggregate [codegen id : 5]
Input [3]: [i_manager_id#5, d_moy#16, sum#19]
Keys [2]: [i_manager_id#5, d_moy#16]
Functions [1]: [sum(UnscaledValue(ss_sales_price#12))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_sales_price#12))#20]
Results [3]: [i_manager_id#5, MakeDecimal(sum(UnscaledValue(ss_sales_price#12))#20,17,2) AS sum_sales#21, MakeDecimal(sum(UnscaledValue(ss_sales_price#12))#20,17,2) AS _w0#22]

(25) Exchange
Input [3]: [i_manager_id#5, sum_sales#21, _w0#22]
Arguments: hashpartitioning(i_manager_id#5, 5), ENSURE_REQUIREMENTS, [plan_id=5]

(26) Sort [codegen id : 6]
Input [3]: [i_manager_id#5, sum_sales#21, _w0#22]
Arguments: [i_manager_id#5 ASC NULLS FIRST], false, 0

(27) Window
Input [3]: [i_manager_id#5, sum_sales#21, _w0#22]
Arguments: [avg(_w0#22) windowspecdefinition(i_manager_id#5, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#23], [i_manager_id#5]

(28) Filter [codegen id : 7]
Input [4]: [i_manager_id#5, sum_sales#21, _w0#22, avg_monthly_sales#23]
Condition : CASE WHEN (avg_monthly_sales#23 > 0.000000) THEN ((abs((sum_sales#21 - avg_monthly_sales#23)) / avg_monthly_sales#23) > 0.1000000000000000) ELSE false END

(29) Project [codegen id : 7]
Output [3]: [i_manager_id#5, sum_sales#21, avg_monthly_sales#23]
Input [4]: [i_manager_id#5, sum_sales#21, _w0#22, avg_monthly_sales#23]

(30) TakeOrderedAndProject
Input [3]: [i_manager_id#5, sum_sales#21, avg_monthly_sales#23]
Arguments: 100, [i_manager_id#5 ASC NULLS FIRST, avg_monthly_sales#23 ASC NULLS FIRST, sum_sales#21 ASC NULLS FIRST], [i_manager_id#5, sum_sales#21, avg_monthly_sales#23]

