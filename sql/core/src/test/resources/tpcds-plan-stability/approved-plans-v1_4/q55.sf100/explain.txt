== Physical Plan ==
TakeOrderedAndProject (16)
+- * HashAggregate (15)
   +- Exchange (14)
      +- * HashAggregate (13)
         +- * Project (12)
            +- * BroadcastHashJoin Inner BuildRight (11)
               :- * Project (9)
               :  +- * BroadcastHashJoin Inner BuildRight (8)
               :     :- * ColumnarToRow (2)
               :     :  +- Scan parquet default.store_sales (1)
               :     +- BroadcastExchange (7)
               :        +- * Project (6)
               :           +- * Filter (5)
               :              +- * ColumnarToRow (4)
               :                 +- Scan parquet default.item (3)
               +- ReusedExchange (10)


(1) Scan parquet default.store_sales
Output [3]: [ss_item_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#3), dynamicpruningexpression(ss_sold_date_sk#3 IN dynamicpruning#4)]
ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>

(2) ColumnarToRow [codegen id : 3]
Input [3]: [ss_item_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]

(3) Scan parquet default.item
Output [4]: [i_item_sk#5, i_brand_id#6, i_brand#7, i_manager_id#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_manager_id), EqualTo(i_manager_id,28)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manager_id:int>

(4) ColumnarToRow [codegen id : 1]
Input [4]: [i_item_sk#5, i_brand_id#6, i_brand#7, i_manager_id#8]

(5) Filter [codegen id : 1]
Input [4]: [i_item_sk#5, i_brand_id#6, i_brand#7, i_manager_id#8]
Condition : (isnotnull(i_manager_id#8) AND (i_manager_id#8 = 28))

(6) Project [codegen id : 1]
Output [3]: [i_item_sk#5, i_brand_id#6, i_brand#7]
Input [4]: [i_item_sk#5, i_brand_id#6, i_brand#7, i_manager_id#8]

(7) BroadcastExchange
Input [3]: [i_item_sk#5, i_brand_id#6, i_brand#7]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#9]

(8) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_item_sk#1]
Right keys [1]: [i_item_sk#5]
Join condition: None

(9) Project [codegen id : 3]
Output [4]: [ss_ext_sales_price#2, ss_sold_date_sk#3, i_brand_id#6, i_brand#7]
Input [6]: [ss_item_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3, i_item_sk#5, i_brand_id#6, i_brand#7]

(10) ReusedExchange [Reuses operator id: 21]
Output [1]: [d_date_sk#10]

(11) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_sold_date_sk#3]
Right keys [1]: [d_date_sk#10]
Join condition: None

(12) Project [codegen id : 3]
Output [3]: [ss_ext_sales_price#2, i_brand_id#6, i_brand#7]
Input [5]: [ss_ext_sales_price#2, ss_sold_date_sk#3, i_brand_id#6, i_brand#7, d_date_sk#10]

(13) HashAggregate [codegen id : 3]
Input [3]: [ss_ext_sales_price#2, i_brand_id#6, i_brand#7]
Keys [2]: [i_brand#7, i_brand_id#6]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#2))]
Aggregate Attributes [1]: [sum#11]
Results [3]: [i_brand#7, i_brand_id#6, sum#12]

(14) Exchange
Input [3]: [i_brand#7, i_brand_id#6, sum#12]
Arguments: hashpartitioning(i_brand#7, i_brand_id#6, 5), ENSURE_REQUIREMENTS, [id=#13]

(15) HashAggregate [codegen id : 4]
Input [3]: [i_brand#7, i_brand_id#6, sum#12]
Keys [2]: [i_brand#7, i_brand_id#6]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#2))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#2))#14]
Results [3]: [i_brand_id#6 AS brand_id#15, i_brand#7 AS brand#16, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#2))#14,17,2) AS ext_price#17]

(16) TakeOrderedAndProject
Input [3]: [brand_id#15, brand#16, ext_price#17]
Arguments: 100, [ext_price#17 DESC NULLS LAST, brand_id#15 ASC NULLS FIRST], [brand_id#15, brand#16, ext_price#17]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#3 IN dynamicpruning#4
BroadcastExchange (21)
+- * Project (20)
   +- * Filter (19)
      +- * ColumnarToRow (18)
         +- Scan parquet default.date_dim (17)


(17) Scan parquet default.date_dim
Output [3]: [d_date_sk#10, d_year#18, d_moy#19]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [EqualTo(d_moy,11), EqualTo(d_year,1999)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(18) ColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#10, d_year#18, d_moy#19]

(19) Filter [codegen id : 1]
Input [3]: [d_date_sk#10, d_year#18, d_moy#19]
Condition : ((d_moy#19 = 11) AND (d_year#18 = 1999))

(20) Project [codegen id : 1]
Output [1]: [d_date_sk#10]
Input [3]: [d_date_sk#10, d_year#18, d_moy#19]

(21) BroadcastExchange
Input [1]: [d_date_sk#10]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#20]


