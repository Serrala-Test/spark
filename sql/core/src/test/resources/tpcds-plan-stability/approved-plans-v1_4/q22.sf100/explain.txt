== Physical Plan ==
TakeOrderedAndProject (30)
+- * HashAggregate (29)
   +- Exchange (28)
      +- * HashAggregate (27)
         +- * Expand (26)
            +- * Project (25)
               +- * BroadcastHashJoin Inner BuildRight (24)
                  :- * Project (18)
                  :  +- * BroadcastHashJoin Inner BuildRight (17)
                  :     :- * Project (12)
                  :     :  +- * SortMergeJoin Inner (11)
                  :     :     :- * Sort (5)
                  :     :     :  +- Exchange (4)
                  :     :     :     +- * Filter (3)
                  :     :     :        +- * ColumnarToRow (2)
                  :     :     :           +- Scan parquet default.inventory (1)
                  :     :     +- * Sort (10)
                  :     :        +- Exchange (9)
                  :     :           +- * Filter (8)
                  :     :              +- * ColumnarToRow (7)
                  :     :                 +- Scan parquet default.item (6)
                  :     +- BroadcastExchange (16)
                  :        +- * Filter (15)
                  :           +- * ColumnarToRow (14)
                  :              +- Scan parquet default.warehouse (13)
                  +- BroadcastExchange (23)
                     +- * Project (22)
                        +- * Filter (21)
                           +- * ColumnarToRow (20)
                              +- Scan parquet default.date_dim (19)


(1) Scan parquet default.inventory
Output [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Batched: true
Location [not included in comparison]/{warehouse_dir}/inventory]
PushedFilters: [IsNotNull(inv_date_sk), IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)]
ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>

(2) ColumnarToRow [codegen id : 1]
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]

(3) Filter [codegen id : 1]
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Condition : ((isnotnull(inv_date_sk#1) AND isnotnull(inv_item_sk#2)) AND isnotnull(inv_warehouse_sk#3))

(4) Exchange
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Arguments: hashpartitioning(inv_item_sk#2, 5), ENSURE_REQUIREMENTS, [id=#5]

(5) Sort [codegen id : 2]
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Arguments: [inv_item_sk#2 ASC NULLS FIRST], false, 0

(6) Scan parquet default.item
Output [5]: [i_item_sk#6, i_brand#7, i_class#8, i_category#9, i_product_name#10]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>

(7) ColumnarToRow [codegen id : 3]
Input [5]: [i_item_sk#6, i_brand#7, i_class#8, i_category#9, i_product_name#10]

(8) Filter [codegen id : 3]
Input [5]: [i_item_sk#6, i_brand#7, i_class#8, i_category#9, i_product_name#10]
Condition : isnotnull(i_item_sk#6)

(9) Exchange
Input [5]: [i_item_sk#6, i_brand#7, i_class#8, i_category#9, i_product_name#10]
Arguments: hashpartitioning(i_item_sk#6, 5), ENSURE_REQUIREMENTS, [id=#11]

(10) Sort [codegen id : 4]
Input [5]: [i_item_sk#6, i_brand#7, i_class#8, i_category#9, i_product_name#10]
Arguments: [i_item_sk#6 ASC NULLS FIRST], false, 0

(11) SortMergeJoin [codegen id : 7]
Left keys [1]: [inv_item_sk#2]
Right keys [1]: [i_item_sk#6]
Join condition: None

(12) Project [codegen id : 7]
Output [7]: [inv_date_sk#1, inv_warehouse_sk#3, inv_quantity_on_hand#4, i_brand#7, i_class#8, i_category#9, i_product_name#10]
Input [9]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4, i_item_sk#6, i_brand#7, i_class#8, i_category#9, i_product_name#10]

(13) Scan parquet default.warehouse
Output [1]: [w_warehouse_sk#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int>

(14) ColumnarToRow [codegen id : 5]
Input [1]: [w_warehouse_sk#12]

(15) Filter [codegen id : 5]
Input [1]: [w_warehouse_sk#12]
Condition : isnotnull(w_warehouse_sk#12)

(16) BroadcastExchange
Input [1]: [w_warehouse_sk#12]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#13]

(17) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [inv_warehouse_sk#3]
Right keys [1]: [w_warehouse_sk#12]
Join condition: None

(18) Project [codegen id : 7]
Output [6]: [inv_date_sk#1, inv_quantity_on_hand#4, i_brand#7, i_class#8, i_category#9, i_product_name#10]
Input [8]: [inv_date_sk#1, inv_warehouse_sk#3, inv_quantity_on_hand#4, i_brand#7, i_class#8, i_category#9, i_product_name#10, w_warehouse_sk#12]

(19) Scan parquet default.date_dim
Output [2]: [d_date_sk#14, d_month_seq#15]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(20) ColumnarToRow [codegen id : 6]
Input [2]: [d_date_sk#14, d_month_seq#15]

(21) Filter [codegen id : 6]
Input [2]: [d_date_sk#14, d_month_seq#15]
Condition : (((isnotnull(d_month_seq#15) AND (d_month_seq#15 >= 1200)) AND (d_month_seq#15 <= 1211)) AND isnotnull(d_date_sk#14))

(22) Project [codegen id : 6]
Output [1]: [d_date_sk#14]
Input [2]: [d_date_sk#14, d_month_seq#15]

(23) BroadcastExchange
Input [1]: [d_date_sk#14]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#16]

(24) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [inv_date_sk#1]
Right keys [1]: [d_date_sk#14]
Join condition: None

(25) Project [codegen id : 7]
Output [5]: [inv_quantity_on_hand#4, i_product_name#10, i_brand#7, i_class#8, i_category#9]
Input [7]: [inv_date_sk#1, inv_quantity_on_hand#4, i_brand#7, i_class#8, i_category#9, i_product_name#10, d_date_sk#14]

(26) Expand [codegen id : 7]
Input [5]: [inv_quantity_on_hand#4, i_product_name#10, i_brand#7, i_class#8, i_category#9]
Arguments: [List(inv_quantity_on_hand#4, i_product_name#10, i_brand#7, i_class#8, i_category#9, 0), List(inv_quantity_on_hand#4, i_product_name#10, i_brand#7, i_class#8, null, 1), List(inv_quantity_on_hand#4, i_product_name#10, i_brand#7, null, null, 3), List(inv_quantity_on_hand#4, i_product_name#10, null, null, null, 7), List(inv_quantity_on_hand#4, null, null, null, null, 15)], [inv_quantity_on_hand#4, i_product_name#17, i_brand#18, i_class#19, i_category#20, spark_grouping_id#21]

(27) HashAggregate [codegen id : 7]
Input [6]: [inv_quantity_on_hand#4, i_product_name#17, i_brand#18, i_class#19, i_category#20, spark_grouping_id#21]
Keys [5]: [i_product_name#17, i_brand#18, i_class#19, i_category#20, spark_grouping_id#21]
Functions [1]: [partial_avg(cast(inv_quantity_on_hand#4 as bigint))]
Aggregate Attributes [2]: [sum#22, count#23]
Results [7]: [i_product_name#17, i_brand#18, i_class#19, i_category#20, spark_grouping_id#21, sum#24, count#25]

(28) Exchange
Input [7]: [i_product_name#17, i_brand#18, i_class#19, i_category#20, spark_grouping_id#21, sum#24, count#25]
Arguments: hashpartitioning(i_product_name#17, i_brand#18, i_class#19, i_category#20, spark_grouping_id#21, 5), ENSURE_REQUIREMENTS, [id=#26]

(29) HashAggregate [codegen id : 8]
Input [7]: [i_product_name#17, i_brand#18, i_class#19, i_category#20, spark_grouping_id#21, sum#24, count#25]
Keys [5]: [i_product_name#17, i_brand#18, i_class#19, i_category#20, spark_grouping_id#21]
Functions [1]: [avg(cast(inv_quantity_on_hand#4 as bigint))]
Aggregate Attributes [1]: [avg(cast(inv_quantity_on_hand#4 as bigint))#27]
Results [5]: [i_product_name#17, i_brand#18, i_class#19, i_category#20, avg(cast(inv_quantity_on_hand#4 as bigint))#27 AS qoh#28]

(30) TakeOrderedAndProject
Input [5]: [i_product_name#17, i_brand#18, i_class#19, i_category#20, qoh#28]
Arguments: 100, [qoh#28 ASC NULLS FIRST, i_product_name#17 ASC NULLS FIRST, i_brand#18 ASC NULLS FIRST, i_class#19 ASC NULLS FIRST, i_category#20 ASC NULLS FIRST], [i_product_name#17, i_brand#18, i_class#19, i_category#20, qoh#28]

