== Physical Plan ==
* Sort (44)
+- Exchange (43)
   +- * HashAggregate (42)
      +- Exchange (41)
         +- * HashAggregate (40)
            +- * Project (39)
               +- * BroadcastHashJoin Inner BuildRight (38)
                  :- * Project (33)
                  :  +- * BroadcastHashJoin Inner BuildRight (32)
                  :     :- * Project (27)
                  :     :  +- * BroadcastHashJoin Inner BuildRight (26)
                  :     :     :- * Project (21)
                  :     :     :  +- * BroadcastHashJoin Inner BuildRight (20)
                  :     :     :     :- * Project (15)
                  :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (14)
                  :     :     :     :     :- * Project (9)
                  :     :     :     :     :  +- * BroadcastHashJoin Inner BuildLeft (8)
                  :     :     :     :     :     :- BroadcastExchange (4)
                  :     :     :     :     :     :  +- * Project (3)
                  :     :     :     :     :     :     +- * Filter (2)
                  :     :     :     :     :     :        +- BatchScan default.call_center (1)
                  :     :     :     :     :     +- * Project (7)
                  :     :     :     :     :        +- * Filter (6)
                  :     :     :     :     :           +- BatchScan default.catalog_returns (5)
                  :     :     :     :     +- BroadcastExchange (13)
                  :     :     :     :        +- * Project (12)
                  :     :     :     :           +- * Filter (11)
                  :     :     :     :              +- BatchScan default.date_dim (10)
                  :     :     :     +- BroadcastExchange (19)
                  :     :     :        +- * Project (18)
                  :     :     :           +- * Filter (17)
                  :     :     :              +- BatchScan default.customer (16)
                  :     :     +- BroadcastExchange (25)
                  :     :        +- * Project (24)
                  :     :           +- * Filter (23)
                  :     :              +- BatchScan default.customer_address (22)
                  :     +- BroadcastExchange (31)
                  :        +- * Project (30)
                  :           +- * Filter (29)
                  :              +- BatchScan default.customer_demographics (28)
                  +- BroadcastExchange (37)
                     +- * Project (36)
                        +- * Filter (35)
                           +- BatchScan default.household_demographics (34)


(1) BatchScan default.call_center
Output [4]: [cc_call_center_sk#1, cc_call_center_id#2, cc_name#3, cc_manager#4]
DataFilters: [isnotnull(cc_call_center_sk#1)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/call_center]
PushedFilters: [IsNotNull(cc_call_center_sk)]
ReadSchema: struct<cc_call_center_sk:int,cc_call_center_id:string,cc_name:string,cc_manager:string>

(2) Filter [codegen id : 1]
Input [4]: [cc_call_center_sk#1, cc_call_center_id#2, cc_name#3, cc_manager#4]
Condition : isnotnull(cc_call_center_sk#1)

(3) Project [codegen id : 1]
Output [4]: [cc_call_center_sk#1, cc_call_center_id#2, cc_name#3, cc_manager#4]
Input [4]: [cc_call_center_sk#1, cc_call_center_id#2, cc_name#3, cc_manager#4]

(4) BroadcastExchange
Input [4]: [cc_call_center_sk#1, cc_call_center_id#2, cc_name#3, cc_manager#4]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(5) BatchScan default.catalog_returns
Output [4]: [cr_returning_customer_sk#5, cr_call_center_sk#6, cr_net_loss#7, cr_returned_date_sk#8]
DataFilters: [isnotnull(cr_call_center_sk#6), isnotnull(cr_returning_customer_sk#5)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/catalog_returns]
PartitionFilters: [isnotnull(cr_returned_date_sk#8)]
PushedFilters: [IsNotNull(cr_call_center_sk), IsNotNull(cr_returning_customer_sk)]
ReadSchema: struct<cr_returning_customer_sk:int,cr_call_center_sk:int,cr_net_loss:decimal(7,2)>

(6) Filter
Input [4]: [cr_returning_customer_sk#5, cr_call_center_sk#6, cr_net_loss#7, cr_returned_date_sk#8]
Condition : (isnotnull(cr_call_center_sk#6) AND isnotnull(cr_returning_customer_sk#5))

(7) Project
Output [4]: [cr_returning_customer_sk#5, cr_call_center_sk#6, cr_net_loss#7, cr_returned_date_sk#8]
Input [4]: [cr_returning_customer_sk#5, cr_call_center_sk#6, cr_net_loss#7, cr_returned_date_sk#8]

(8) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [cc_call_center_sk#1]
Right keys [1]: [cr_call_center_sk#6]
Join type: Inner
Join condition: None

(9) Project [codegen id : 7]
Output [6]: [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_returning_customer_sk#5, cr_net_loss#7, cr_returned_date_sk#8]
Input [8]: [cc_call_center_sk#1, cc_call_center_id#2, cc_name#3, cc_manager#4, cr_returning_customer_sk#5, cr_call_center_sk#6, cr_net_loss#7, cr_returned_date_sk#8]

(10) BatchScan default.date_dim
Output [3]: [d_date_sk#9, d_year#10, d_moy#11]
DataFilters: [isnotnull(d_year#10), isnotnull(d_moy#11), (d_year#10 = 1998), (d_moy#11 = 11), isnotnull(d_date_sk#9)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,11), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(11) Filter [codegen id : 2]
Input [3]: [d_date_sk#9, d_year#10, d_moy#11]
Condition : ((((isnotnull(d_year#10) AND isnotnull(d_moy#11)) AND (d_year#10 = 1998)) AND (d_moy#11 = 11)) AND isnotnull(d_date_sk#9))

(12) Project [codegen id : 2]
Output [1]: [d_date_sk#9]
Input [3]: [d_date_sk#9, d_year#10, d_moy#11]

(13) BroadcastExchange
Input [1]: [d_date_sk#9]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(14) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [cr_returned_date_sk#8]
Right keys [1]: [d_date_sk#9]
Join type: Inner
Join condition: None

(15) Project [codegen id : 7]
Output [5]: [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_returning_customer_sk#5, cr_net_loss#7]
Input [7]: [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_returning_customer_sk#5, cr_net_loss#7, cr_returned_date_sk#8, d_date_sk#9]

(16) BatchScan default.customer
Output [4]: [c_customer_sk#12, c_current_cdemo_sk#13, c_current_hdemo_sk#14, c_current_addr_sk#15]
DataFilters: [isnotnull(c_customer_sk#12), isnotnull(c_current_addr_sk#15), isnotnull(c_current_cdemo_sk#13), isnotnull(c_current_hdemo_sk#14)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk), IsNotNull(c_current_hdemo_sk)]
ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int>

(17) Filter [codegen id : 3]
Input [4]: [c_customer_sk#12, c_current_cdemo_sk#13, c_current_hdemo_sk#14, c_current_addr_sk#15]
Condition : (((isnotnull(c_customer_sk#12) AND isnotnull(c_current_addr_sk#15)) AND isnotnull(c_current_cdemo_sk#13)) AND isnotnull(c_current_hdemo_sk#14))

(18) Project [codegen id : 3]
Output [4]: [c_customer_sk#12, c_current_cdemo_sk#13, c_current_hdemo_sk#14, c_current_addr_sk#15]
Input [4]: [c_customer_sk#12, c_current_cdemo_sk#13, c_current_hdemo_sk#14, c_current_addr_sk#15]

(19) BroadcastExchange
Input [4]: [c_customer_sk#12, c_current_cdemo_sk#13, c_current_hdemo_sk#14, c_current_addr_sk#15]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=3]

(20) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [cr_returning_customer_sk#5]
Right keys [1]: [c_customer_sk#12]
Join type: Inner
Join condition: None

(21) Project [codegen id : 7]
Output [7]: [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_net_loss#7, c_current_cdemo_sk#13, c_current_hdemo_sk#14, c_current_addr_sk#15]
Input [9]: [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_returning_customer_sk#5, cr_net_loss#7, c_customer_sk#12, c_current_cdemo_sk#13, c_current_hdemo_sk#14, c_current_addr_sk#15]

(22) BatchScan default.customer_address
Output [2]: [ca_address_sk#16, ca_gmt_offset#17]
DataFilters: [isnotnull(ca_gmt_offset#17), (ca_gmt_offset#17 = -7.00), isnotnull(ca_address_sk#16)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-7.00), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>

(23) Filter [codegen id : 4]
Input [2]: [ca_address_sk#16, ca_gmt_offset#17]
Condition : ((isnotnull(ca_gmt_offset#17) AND (ca_gmt_offset#17 = -7.00)) AND isnotnull(ca_address_sk#16))

(24) Project [codegen id : 4]
Output [1]: [ca_address_sk#16]
Input [2]: [ca_address_sk#16, ca_gmt_offset#17]

(25) BroadcastExchange
Input [1]: [ca_address_sk#16]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4]

(26) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [c_current_addr_sk#15]
Right keys [1]: [ca_address_sk#16]
Join type: Inner
Join condition: None

(27) Project [codegen id : 7]
Output [6]: [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_net_loss#7, c_current_cdemo_sk#13, c_current_hdemo_sk#14]
Input [8]: [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_net_loss#7, c_current_cdemo_sk#13, c_current_hdemo_sk#14, c_current_addr_sk#15, ca_address_sk#16]

(28) BatchScan default.customer_demographics
Output [3]: [cd_demo_sk#18, cd_marital_status#19, cd_education_status#20]
DataFilters: [(((cd_marital_status#19 = M) AND (cd_education_status#20 = Unknown             )) OR ((cd_marital_status#19 = W) AND (cd_education_status#20 = Advanced Degree     ))), isnotnull(cd_demo_sk#18)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [Or(And(EqualTo(cd_marital_status,M),EqualTo(cd_education_status,Unknown             )),And(EqualTo(cd_marital_status,W),EqualTo(cd_education_status,Advanced Degree     ))), IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>

(29) Filter [codegen id : 5]
Input [3]: [cd_demo_sk#18, cd_marital_status#19, cd_education_status#20]
Condition : ((((cd_marital_status#19 = M) AND (cd_education_status#20 = Unknown             )) OR ((cd_marital_status#19 = W) AND (cd_education_status#20 = Advanced Degree     ))) AND isnotnull(cd_demo_sk#18))

(30) Project [codegen id : 5]
Output [3]: [cd_demo_sk#18, cd_marital_status#19, cd_education_status#20]
Input [3]: [cd_demo_sk#18, cd_marital_status#19, cd_education_status#20]

(31) BroadcastExchange
Input [3]: [cd_demo_sk#18, cd_marital_status#19, cd_education_status#20]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5]

(32) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [c_current_cdemo_sk#13]
Right keys [1]: [cd_demo_sk#18]
Join type: Inner
Join condition: None

(33) Project [codegen id : 7]
Output [7]: [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_net_loss#7, c_current_hdemo_sk#14, cd_marital_status#19, cd_education_status#20]
Input [9]: [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_net_loss#7, c_current_cdemo_sk#13, c_current_hdemo_sk#14, cd_demo_sk#18, cd_marital_status#19, cd_education_status#20]

(34) BatchScan default.household_demographics
Output [2]: [hd_demo_sk#21, hd_buy_potential#22]
DataFilters: [isnotnull(hd_buy_potential#22), StartsWith(hd_buy_potential#22, Unknown), isnotnull(hd_demo_sk#21)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/household_demographics]
PushedFilters: [IsNotNull(hd_buy_potential), StringStartsWith(hd_buy_potential,Unknown), IsNotNull(hd_demo_sk)]
ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>

(35) Filter [codegen id : 6]
Input [2]: [hd_demo_sk#21, hd_buy_potential#22]
Condition : ((isnotnull(hd_buy_potential#22) AND StartsWith(hd_buy_potential#22, Unknown)) AND isnotnull(hd_demo_sk#21))

(36) Project [codegen id : 6]
Output [1]: [hd_demo_sk#21]
Input [2]: [hd_demo_sk#21, hd_buy_potential#22]

(37) BroadcastExchange
Input [1]: [hd_demo_sk#21]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6]

(38) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [c_current_hdemo_sk#14]
Right keys [1]: [hd_demo_sk#21]
Join type: Inner
Join condition: None

(39) Project [codegen id : 7]
Output [6]: [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_net_loss#7, cd_marital_status#19, cd_education_status#20]
Input [8]: [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_net_loss#7, c_current_hdemo_sk#14, cd_marital_status#19, cd_education_status#20, hd_demo_sk#21]

(40) HashAggregate [codegen id : 7]
Input [6]: [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_net_loss#7, cd_marital_status#19, cd_education_status#20]
Keys [5]: [cc_call_center_id#2, cc_name#3, cc_manager#4, cd_marital_status#19, cd_education_status#20]
Functions [1]: [partial_sum(UnscaledValue(cr_net_loss#7))]
Aggregate Attributes [1]: [sum#23]
Results [6]: [cc_call_center_id#2, cc_name#3, cc_manager#4, cd_marital_status#19, cd_education_status#20, sum#24]

(41) Exchange
Input [6]: [cc_call_center_id#2, cc_name#3, cc_manager#4, cd_marital_status#19, cd_education_status#20, sum#24]
Arguments: hashpartitioning(cc_call_center_id#2, cc_name#3, cc_manager#4, cd_marital_status#19, cd_education_status#20, 5), ENSURE_REQUIREMENTS, [plan_id=7]

(42) HashAggregate [codegen id : 8]
Input [6]: [cc_call_center_id#2, cc_name#3, cc_manager#4, cd_marital_status#19, cd_education_status#20, sum#24]
Keys [5]: [cc_call_center_id#2, cc_name#3, cc_manager#4, cd_marital_status#19, cd_education_status#20]
Functions [1]: [sum(UnscaledValue(cr_net_loss#7))]
Aggregate Attributes [1]: [sum(UnscaledValue(cr_net_loss#7))#25]
Results [4]: [cc_call_center_id#2 AS Call_Center#26, cc_name#3 AS Call_Center_Name#27, cc_manager#4 AS Manager#28, MakeDecimal(sum(UnscaledValue(cr_net_loss#7))#25,17,2) AS Returns_Loss#29]

(43) Exchange
Input [4]: [Call_Center#26, Call_Center_Name#27, Manager#28, Returns_Loss#29]
Arguments: rangepartitioning(Returns_Loss#29 DESC NULLS LAST, 5), ENSURE_REQUIREMENTS, [plan_id=8]

(44) Sort [codegen id : 9]
Input [4]: [Call_Center#26, Call_Center_Name#27, Manager#28, Returns_Loss#29]
Arguments: [Returns_Loss#29 DESC NULLS LAST], true, 0

