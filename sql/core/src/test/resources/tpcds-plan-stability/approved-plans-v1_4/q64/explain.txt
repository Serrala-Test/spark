== Physical Plan ==
* Sort (173)
+- Exchange (172)
   +- * Project (171)
      +- * BroadcastHashJoin Inner BuildRight (170)
         :- * HashAggregate (108)
         :  +- Exchange (107)
         :     +- * HashAggregate (106)
         :        +- * Project (105)
         :           +- * BroadcastHashJoin Inner BuildRight (104)
         :              :- * Project (98)
         :              :  +- * BroadcastHashJoin Inner BuildRight (97)
         :              :     :- * Project (95)
         :              :     :  +- * BroadcastHashJoin Inner BuildRight (94)
         :              :     :     :- * Project (89)
         :              :     :     :  +- * BroadcastHashJoin Inner BuildRight (88)
         :              :     :     :     :- * Project (86)
         :              :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (85)
         :              :     :     :     :     :- * Project (79)
         :              :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (78)
         :              :     :     :     :     :     :- * Project (76)
         :              :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (75)
         :              :     :     :     :     :     :     :- * Project (70)
         :              :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (69)
         :              :     :     :     :     :     :     :     :- * Project (64)
         :              :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (63)
         :              :     :     :     :     :     :     :     :     :- * Project (61)
         :              :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (60)
         :              :     :     :     :     :     :     :     :     :     :- * Project (54)
         :              :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (53)
         :              :     :     :     :     :     :     :     :     :     :     :- * Project (51)
         :              :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (50)
         :              :     :     :     :     :     :     :     :     :     :     :     :- * Project (45)
         :              :     :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (44)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :- * Project (39)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (38)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :- * Project (32)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (31)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- * Project (26)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (25)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- * Project (9)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (8)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- * Filter (3)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- * ColumnarToRow (2)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- Scan parquet default.store_sales (1)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange (7)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- * Filter (6)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- * ColumnarToRow (5)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- Scan parquet default.store_returns (4)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange (24)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- * Project (23)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- * Filter (22)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- * HashAggregate (21)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- Exchange (20)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                    +- * HashAggregate (19)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                       +- * Project (18)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                          +- * BroadcastHashJoin Inner BuildRight (17)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :- * Filter (12)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :  +- * ColumnarToRow (11)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :     +- Scan parquet default.catalog_sales (10)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             +- BroadcastExchange (16)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                +- * Filter (15)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                   +- * ColumnarToRow (14)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                      +- Scan parquet default.catalog_returns (13)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange (30)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- * Filter (29)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- * ColumnarToRow (28)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- Scan parquet default.date_dim (27)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange (37)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :        +- * Project (36)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :           +- * Filter (35)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :              +- * ColumnarToRow (34)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :                 +- Scan parquet default.store (33)
         :              :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange (43)
         :              :     :     :     :     :     :     :     :     :     :     :     :        +- * Filter (42)
         :              :     :     :     :     :     :     :     :     :     :     :     :           +- * ColumnarToRow (41)
         :              :     :     :     :     :     :     :     :     :     :     :     :              +- Scan parquet default.customer (40)
         :              :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange (49)
         :              :     :     :     :     :     :     :     :     :     :     :        +- * Filter (48)
         :              :     :     :     :     :     :     :     :     :     :     :           +- * ColumnarToRow (47)
         :              :     :     :     :     :     :     :     :     :     :     :              +- Scan parquet default.date_dim (46)
         :              :     :     :     :     :     :     :     :     :     :     +- ReusedExchange (52)
         :              :     :     :     :     :     :     :     :     :     +- BroadcastExchange (59)
         :              :     :     :     :     :     :     :     :     :        +- * Project (58)
         :              :     :     :     :     :     :     :     :     :           +- * Filter (57)
         :              :     :     :     :     :     :     :     :     :              +- * ColumnarToRow (56)
         :              :     :     :     :     :     :     :     :     :                 +- Scan parquet default.customer_demographics (55)
         :              :     :     :     :     :     :     :     :     +- ReusedExchange (62)
         :              :     :     :     :     :     :     :     +- BroadcastExchange (68)
         :              :     :     :     :     :     :     :        +- * Filter (67)
         :              :     :     :     :     :     :     :           +- * ColumnarToRow (66)
         :              :     :     :     :     :     :     :              +- Scan parquet default.promotion (65)
         :              :     :     :     :     :     :     +- BroadcastExchange (74)
         :              :     :     :     :     :     :        +- * Filter (73)
         :              :     :     :     :     :     :           +- * ColumnarToRow (72)
         :              :     :     :     :     :     :              +- Scan parquet default.household_demographics (71)
         :              :     :     :     :     :     +- ReusedExchange (77)
         :              :     :     :     :     +- BroadcastExchange (84)
         :              :     :     :     :        +- * Project (83)
         :              :     :     :     :           +- * Filter (82)
         :              :     :     :     :              +- * ColumnarToRow (81)
         :              :     :     :     :                 +- Scan parquet default.customer_address (80)
         :              :     :     :     +- ReusedExchange (87)
         :              :     :     +- BroadcastExchange (93)
         :              :     :        +- * Filter (92)
         :              :     :           +- * ColumnarToRow (91)
         :              :     :              +- Scan parquet default.income_band (90)
         :              :     +- ReusedExchange (96)
         :              +- BroadcastExchange (103)
         :                 +- * Project (102)
         :                    +- * Filter (101)
         :                       +- * ColumnarToRow (100)
         :                          +- Scan parquet default.item (99)
         +- BroadcastExchange (169)
            +- * HashAggregate (168)
               +- Exchange (167)
                  +- * HashAggregate (166)
                     +- * Project (165)
                        +- * BroadcastHashJoin Inner BuildRight (164)
                           :- * Project (162)
                           :  +- * BroadcastHashJoin Inner BuildRight (161)
                           :     :- * Project (159)
                           :     :  +- * BroadcastHashJoin Inner BuildRight (158)
                           :     :     :- * Project (156)
                           :     :     :  +- * BroadcastHashJoin Inner BuildRight (155)
                           :     :     :     :- * Project (153)
                           :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (152)
                           :     :     :     :     :- * Project (150)
                           :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (149)
                           :     :     :     :     :     :- * Project (147)
                           :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (146)
                           :     :     :     :     :     :     :- * Project (144)
                           :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (143)
                           :     :     :     :     :     :     :     :- * Project (141)
                           :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (140)
                           :     :     :     :     :     :     :     :     :- * Project (138)
                           :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (137)
                           :     :     :     :     :     :     :     :     :     :- * Project (135)
                           :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (134)
                           :     :     :     :     :     :     :     :     :     :     :- * Project (132)
                           :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (131)
                           :     :     :     :     :     :     :     :     :     :     :     :- * Project (129)
                           :     :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (128)
                           :     :     :     :     :     :     :     :     :     :     :     :     :- * Project (126)
                           :     :     :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (125)
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :- * Project (123)
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (122)
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- * Project (117)
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (116)
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- * Project (114)
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (113)
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- * Filter (111)
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- * ColumnarToRow (110)
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- Scan parquet default.store_sales (109)
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange (112)
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange (115)
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange (121)
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- * Filter (120)
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- * ColumnarToRow (119)
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- Scan parquet default.date_dim (118)
                           :     :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange (124)
                           :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange (127)
                           :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange (130)
                           :     :     :     :     :     :     :     :     :     :     +- ReusedExchange (133)
                           :     :     :     :     :     :     :     :     :     +- ReusedExchange (136)
                           :     :     :     :     :     :     :     :     +- ReusedExchange (139)
                           :     :     :     :     :     :     :     +- ReusedExchange (142)
                           :     :     :     :     :     :     +- ReusedExchange (145)
                           :     :     :     :     :     +- ReusedExchange (148)
                           :     :     :     :     +- ReusedExchange (151)
                           :     :     :     +- ReusedExchange (154)
                           :     :     +- ReusedExchange (157)
                           :     +- ReusedExchange (160)
                           +- ReusedExchange (163)


(1) Scan parquet default.store_sales
Output [12]: [ss_sold_date_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_ticket_number), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_cdemo_sk), IsNotNull(ss_promo_sk), IsNotNull(ss_hdemo_sk), IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:decimal(7,2)>

(2) ColumnarToRow [codegen id : 20]
Input [12]: [ss_sold_date_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12]

(3) Filter [codegen id : 20]
Input [12]: [ss_sold_date_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12]
Condition : ((((((((isnotnull(ss_item_sk#2) AND isnotnull(ss_ticket_number#9)) AND isnotnull(ss_sold_date_sk#1)) AND isnotnull(ss_store_sk#7)) AND isnotnull(ss_customer_sk#3)) AND isnotnull(ss_cdemo_sk#4)) AND isnotnull(ss_promo_sk#8)) AND isnotnull(ss_hdemo_sk#5)) AND isnotnull(ss_addr_sk#6))

(4) Scan parquet default.store_returns
Output [2]: [sr_item_sk#13, sr_ticket_number#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_returns]
PushedFilters: [IsNotNull(sr_item_sk), IsNotNull(sr_ticket_number)]
ReadSchema: struct<sr_item_sk:bigint,sr_ticket_number:bigint>

(5) ColumnarToRow [codegen id : 1]
Input [2]: [sr_item_sk#13, sr_ticket_number#14]

(6) Filter [codegen id : 1]
Input [2]: [sr_item_sk#13, sr_ticket_number#14]
Condition : (isnotnull(sr_item_sk#13) AND isnotnull(sr_ticket_number#14))

(7) BroadcastExchange
Input [2]: [sr_item_sk#13, sr_ticket_number#14]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false], input[1, bigint, false]),false), [id=#15]

(8) BroadcastHashJoin [codegen id : 20]
Left keys [2]: [cast(ss_item_sk#2 as bigint), cast(ss_ticket_number#9 as bigint)]
Right keys [2]: [sr_item_sk#13, sr_ticket_number#14]
Join condition: None

(9) Project [codegen id : 20]
Output [11]: [ss_sold_date_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12]
Input [14]: [ss_sold_date_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, sr_item_sk#13, sr_ticket_number#14]

(10) Scan parquet default.catalog_sales
Output [3]: [cs_item_sk#16, cs_order_number#17, cs_ext_list_price#18]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_sales]
PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_order_number)]
ReadSchema: struct<cs_item_sk:int,cs_order_number:int,cs_ext_list_price:decimal(7,2)>

(11) ColumnarToRow [codegen id : 3]
Input [3]: [cs_item_sk#16, cs_order_number#17, cs_ext_list_price#18]

(12) Filter [codegen id : 3]
Input [3]: [cs_item_sk#16, cs_order_number#17, cs_ext_list_price#18]
Condition : (isnotnull(cs_item_sk#16) AND isnotnull(cs_order_number#17))

(13) Scan parquet default.catalog_returns
Output [5]: [cr_item_sk#19, cr_order_number#20, cr_refunded_cash#21, cr_reversed_charge#22, cr_store_credit#23]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_returns]
PushedFilters: [IsNotNull(cr_item_sk), IsNotNull(cr_order_number)]
ReadSchema: struct<cr_item_sk:int,cr_order_number:int,cr_refunded_cash:decimal(7,2),cr_reversed_charge:decimal(7,2),cr_store_credit:decimal(7,2)>

(14) ColumnarToRow [codegen id : 2]
Input [5]: [cr_item_sk#19, cr_order_number#20, cr_refunded_cash#21, cr_reversed_charge#22, cr_store_credit#23]

(15) Filter [codegen id : 2]
Input [5]: [cr_item_sk#19, cr_order_number#20, cr_refunded_cash#21, cr_reversed_charge#22, cr_store_credit#23]
Condition : (isnotnull(cr_item_sk#19) AND isnotnull(cr_order_number#20))

(16) BroadcastExchange
Input [5]: [cr_item_sk#19, cr_order_number#20, cr_refunded_cash#21, cr_reversed_charge#22, cr_store_credit#23]
Arguments: HashedRelationBroadcastMode(List((shiftleft(cast(input[0, int, false] as bigint), 32) | (cast(input[1, int, false] as bigint) & 4294967295))),false), [id=#24]

(17) BroadcastHashJoin [codegen id : 3]
Left keys [2]: [cs_item_sk#16, cs_order_number#17]
Right keys [2]: [cr_item_sk#19, cr_order_number#20]
Join condition: None

(18) Project [codegen id : 3]
Output [5]: [cs_item_sk#16, cs_ext_list_price#18, cr_refunded_cash#21, cr_reversed_charge#22, cr_store_credit#23]
Input [8]: [cs_item_sk#16, cs_order_number#17, cs_ext_list_price#18, cr_item_sk#19, cr_order_number#20, cr_refunded_cash#21, cr_reversed_charge#22, cr_store_credit#23]

(19) HashAggregate [codegen id : 3]
Input [5]: [cs_item_sk#16, cs_ext_list_price#18, cr_refunded_cash#21, cr_reversed_charge#22, cr_store_credit#23]
Keys [1]: [cs_item_sk#16]
Functions [2]: [partial_sum(UnscaledValue(cs_ext_list_price#18)), partial_sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#21 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#22 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#23 as decimal(9,2)))), DecimalType(9,2), true))]
Aggregate Attributes [3]: [sum#25, sum#26, isEmpty#27]
Results [4]: [cs_item_sk#16, sum#28, sum#29, isEmpty#30]

(20) Exchange
Input [4]: [cs_item_sk#16, sum#28, sum#29, isEmpty#30]
Arguments: hashpartitioning(cs_item_sk#16, 5), ENSURE_REQUIREMENTS, [id=#31]

(21) HashAggregate [codegen id : 4]
Input [4]: [cs_item_sk#16, sum#28, sum#29, isEmpty#30]
Keys [1]: [cs_item_sk#16]
Functions [2]: [sum(UnscaledValue(cs_ext_list_price#18)), sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#21 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#22 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#23 as decimal(9,2)))), DecimalType(9,2), true))]
Aggregate Attributes [2]: [sum(UnscaledValue(cs_ext_list_price#18))#32, sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#21 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#22 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#23 as decimal(9,2)))), DecimalType(9,2), true))#33]
Results [3]: [cs_item_sk#16, MakeDecimal(sum(UnscaledValue(cs_ext_list_price#18))#32,17,2) AS sum(cs_ext_list_price#18)#34, sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#21 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#22 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#23 as decimal(9,2)))), DecimalType(9,2), true))#33 AS sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#21 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#22 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#23 as decimal(9,2)))), DecimalType(9,2), true))#35]

(22) Filter [codegen id : 4]
Input [3]: [cs_item_sk#16, sum(cs_ext_list_price#18)#34, sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#21 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#22 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#23 as decimal(9,2)))), DecimalType(9,2), true))#35]
Condition : (isnotnull(sum(cs_ext_list_price#18)#34) AND (cast(sum(cs_ext_list_price#18)#34 as decimal(21,2)) > CheckOverflow((2.00 * promote_precision(sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#21 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#22 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#23 as decimal(9,2)))), DecimalType(9,2), true))#35)), DecimalType(21,2), true)))

(23) Project [codegen id : 4]
Output [1]: [cs_item_sk#16]
Input [3]: [cs_item_sk#16, sum(cs_ext_list_price#18)#34, sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#21 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#22 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#23 as decimal(9,2)))), DecimalType(9,2), true))#35]

(24) BroadcastExchange
Input [1]: [cs_item_sk#16]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#36]

(25) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [ss_item_sk#2]
Right keys [1]: [cs_item_sk#16]
Join condition: None

(26) Project [codegen id : 20]
Output [11]: [ss_sold_date_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12]
Input [12]: [ss_sold_date_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, cs_item_sk#16]

(27) Scan parquet default.date_dim
Output [2]: [d_date_sk#37, d_year#38]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(28) ColumnarToRow [codegen id : 5]
Input [2]: [d_date_sk#37, d_year#38]

(29) Filter [codegen id : 5]
Input [2]: [d_date_sk#37, d_year#38]
Condition : ((isnotnull(d_year#38) AND (d_year#38 = 1999)) AND isnotnull(d_date_sk#37))

(30) BroadcastExchange
Input [2]: [d_date_sk#37, d_year#38]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#39]

(31) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [ss_sold_date_sk#1]
Right keys [1]: [d_date_sk#37]
Join condition: None

(32) Project [codegen id : 20]
Output [11]: [ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38]
Input [13]: [ss_sold_date_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_date_sk#37, d_year#38]

(33) Scan parquet default.store
Output [3]: [s_store_sk#40, s_store_name#41, s_zip#42]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_store_name:string,s_zip:string>

(34) ColumnarToRow [codegen id : 6]
Input [3]: [s_store_sk#40, s_store_name#41, s_zip#42]

(35) Filter [codegen id : 6]
Input [3]: [s_store_sk#40, s_store_name#41, s_zip#42]
Condition : ((isnotnull(s_store_sk#40) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, lengthCheck, s_store_name#41, 50, false, true))) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, s_zip#42, 10, false, true)))

(36) Project [codegen id : 6]
Output [3]: [s_store_sk#40, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, lengthCheck, s_store_name#41, 50, false, true) AS s_store_name#43, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, s_zip#42, 10, false, true) AS s_zip#44]
Input [3]: [s_store_sk#40, s_store_name#41, s_zip#42]

(37) BroadcastExchange
Input [3]: [s_store_sk#40, s_store_name#43, s_zip#44]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#45]

(38) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [ss_store_sk#7]
Right keys [1]: [s_store_sk#40]
Join condition: None

(39) Project [codegen id : 20]
Output [12]: [ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44]
Input [14]: [ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_sk#40, s_store_name#43, s_zip#44]

(40) Scan parquet default.customer
Output [6]: [c_customer_sk#46, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, c_first_shipto_date_sk#50, c_first_sales_date_sk#51]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_first_sales_date_sk), IsNotNull(c_first_shipto_date_sk), IsNotNull(c_current_cdemo_sk), IsNotNull(c_current_hdemo_sk), IsNotNull(c_current_addr_sk)]
ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int,c_first_shipto_date_sk:int,c_first_sales_date_sk:int>

(41) ColumnarToRow [codegen id : 7]
Input [6]: [c_customer_sk#46, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, c_first_shipto_date_sk#50, c_first_sales_date_sk#51]

(42) Filter [codegen id : 7]
Input [6]: [c_customer_sk#46, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, c_first_shipto_date_sk#50, c_first_sales_date_sk#51]
Condition : (((((isnotnull(c_customer_sk#46) AND isnotnull(c_first_sales_date_sk#51)) AND isnotnull(c_first_shipto_date_sk#50)) AND isnotnull(c_current_cdemo_sk#47)) AND isnotnull(c_current_hdemo_sk#48)) AND isnotnull(c_current_addr_sk#49))

(43) BroadcastExchange
Input [6]: [c_customer_sk#46, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, c_first_shipto_date_sk#50, c_first_sales_date_sk#51]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#52]

(44) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [ss_customer_sk#3]
Right keys [1]: [c_customer_sk#46]
Join condition: None

(45) Project [codegen id : 20]
Output [16]: [ss_item_sk#2, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, c_first_shipto_date_sk#50, c_first_sales_date_sk#51]
Input [18]: [ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_customer_sk#46, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, c_first_shipto_date_sk#50, c_first_sales_date_sk#51]

(46) Scan parquet default.date_dim
Output [2]: [d_date_sk#53, d_year#54]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(47) ColumnarToRow [codegen id : 8]
Input [2]: [d_date_sk#53, d_year#54]

(48) Filter [codegen id : 8]
Input [2]: [d_date_sk#53, d_year#54]
Condition : isnotnull(d_date_sk#53)

(49) BroadcastExchange
Input [2]: [d_date_sk#53, d_year#54]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#55]

(50) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [c_first_sales_date_sk#51]
Right keys [1]: [d_date_sk#53]
Join condition: None

(51) Project [codegen id : 20]
Output [16]: [ss_item_sk#2, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, c_first_shipto_date_sk#50, d_year#54]
Input [18]: [ss_item_sk#2, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, c_first_shipto_date_sk#50, c_first_sales_date_sk#51, d_date_sk#53, d_year#54]

(52) ReusedExchange [Reuses operator id: 49]
Output [2]: [d_date_sk#56, d_year#57]

(53) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [c_first_shipto_date_sk#50]
Right keys [1]: [d_date_sk#56]
Join condition: None

(54) Project [codegen id : 20]
Output [16]: [ss_item_sk#2, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#54, d_year#57]
Input [18]: [ss_item_sk#2, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, c_first_shipto_date_sk#50, d_year#54, d_date_sk#56, d_year#57]

(55) Scan parquet default.customer_demographics
Output [2]: [cd_demo_sk#58, cd_marital_status#59]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>

(56) ColumnarToRow [codegen id : 10]
Input [2]: [cd_demo_sk#58, cd_marital_status#59]

(57) Filter [codegen id : 10]
Input [2]: [cd_demo_sk#58, cd_marital_status#59]
Condition : (isnotnull(cd_demo_sk#58) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, cd_marital_status#59, 1, false, true)))

(58) Project [codegen id : 10]
Output [2]: [cd_demo_sk#58, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, cd_marital_status#59, 1, false, true) AS cd_marital_status#60]
Input [2]: [cd_demo_sk#58, cd_marital_status#59]

(59) BroadcastExchange
Input [2]: [cd_demo_sk#58, cd_marital_status#60]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#61]

(60) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [ss_cdemo_sk#4]
Right keys [1]: [cd_demo_sk#58]
Join condition: None

(61) Project [codegen id : 20]
Output [16]: [ss_item_sk#2, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#54, d_year#57, cd_marital_status#60]
Input [18]: [ss_item_sk#2, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#54, d_year#57, cd_demo_sk#58, cd_marital_status#60]

(62) ReusedExchange [Reuses operator id: 59]
Output [2]: [cd_demo_sk#62, cd_marital_status#63]

(63) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [c_current_cdemo_sk#47]
Right keys [1]: [cd_demo_sk#62]
Join condition: NOT (cd_marital_status#60 = cd_marital_status#63)

(64) Project [codegen id : 20]
Output [14]: [ss_item_sk#2, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#54, d_year#57]
Input [18]: [ss_item_sk#2, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#54, d_year#57, cd_marital_status#60, cd_demo_sk#62, cd_marital_status#63]

(65) Scan parquet default.promotion
Output [1]: [p_promo_sk#64]
Batched: true
Location [not included in comparison]/{warehouse_dir}/promotion]
PushedFilters: [IsNotNull(p_promo_sk)]
ReadSchema: struct<p_promo_sk:int>

(66) ColumnarToRow [codegen id : 12]
Input [1]: [p_promo_sk#64]

(67) Filter [codegen id : 12]
Input [1]: [p_promo_sk#64]
Condition : isnotnull(p_promo_sk#64)

(68) BroadcastExchange
Input [1]: [p_promo_sk#64]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#65]

(69) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [ss_promo_sk#8]
Right keys [1]: [p_promo_sk#64]
Join condition: None

(70) Project [codegen id : 20]
Output [13]: [ss_item_sk#2, ss_hdemo_sk#5, ss_addr_sk#6, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#54, d_year#57]
Input [15]: [ss_item_sk#2, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#54, d_year#57, p_promo_sk#64]

(71) Scan parquet default.household_demographics
Output [2]: [hd_demo_sk#66, hd_income_band_sk#67]
Batched: true
Location [not included in comparison]/{warehouse_dir}/household_demographics]
PushedFilters: [IsNotNull(hd_demo_sk), IsNotNull(hd_income_band_sk)]
ReadSchema: struct<hd_demo_sk:int,hd_income_band_sk:int>

(72) ColumnarToRow [codegen id : 13]
Input [2]: [hd_demo_sk#66, hd_income_band_sk#67]

(73) Filter [codegen id : 13]
Input [2]: [hd_demo_sk#66, hd_income_band_sk#67]
Condition : (isnotnull(hd_demo_sk#66) AND isnotnull(hd_income_band_sk#67))

(74) BroadcastExchange
Input [2]: [hd_demo_sk#66, hd_income_band_sk#67]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#68]

(75) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [ss_hdemo_sk#5]
Right keys [1]: [hd_demo_sk#66]
Join condition: None

(76) Project [codegen id : 20]
Output [13]: [ss_item_sk#2, ss_addr_sk#6, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#54, d_year#57, hd_income_band_sk#67]
Input [15]: [ss_item_sk#2, ss_hdemo_sk#5, ss_addr_sk#6, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#54, d_year#57, hd_demo_sk#66, hd_income_band_sk#67]

(77) ReusedExchange [Reuses operator id: 74]
Output [2]: [hd_demo_sk#69, hd_income_band_sk#70]

(78) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [c_current_hdemo_sk#48]
Right keys [1]: [hd_demo_sk#69]
Join condition: None

(79) Project [codegen id : 20]
Output [13]: [ss_item_sk#2, ss_addr_sk#6, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_addr_sk#49, d_year#54, d_year#57, hd_income_band_sk#67, hd_income_band_sk#70]
Input [15]: [ss_item_sk#2, ss_addr_sk#6, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#54, d_year#57, hd_income_band_sk#67, hd_demo_sk#69, hd_income_band_sk#70]

(80) Scan parquet default.customer_address
Output [5]: [ca_address_sk#71, ca_street_number#72, ca_street_name#73, ca_city#74, ca_zip#75]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_street_number:string,ca_street_name:string,ca_city:string,ca_zip:string>

(81) ColumnarToRow [codegen id : 15]
Input [5]: [ca_address_sk#71, ca_street_number#72, ca_street_name#73, ca_city#74, ca_zip#75]

(82) Filter [codegen id : 15]
Input [5]: [ca_address_sk#71, ca_street_number#72, ca_street_name#73, ca_city#74, ca_zip#75]
Condition : isnotnull(ca_address_sk#71)

(83) Project [codegen id : 15]
Output [5]: [ca_address_sk#71, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, ca_street_number#72, 10, false, true) AS ca_street_number#76, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, lengthCheck, ca_street_name#73, 60, false, true) AS ca_street_name#77, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, lengthCheck, ca_city#74, 60, false, true) AS ca_city#78, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, ca_zip#75, 10, false, true) AS ca_zip#79]
Input [5]: [ca_address_sk#71, ca_street_number#72, ca_street_name#73, ca_city#74, ca_zip#75]

(84) BroadcastExchange
Input [5]: [ca_address_sk#71, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#80]

(85) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [ss_addr_sk#6]
Right keys [1]: [ca_address_sk#71]
Join condition: None

(86) Project [codegen id : 20]
Output [16]: [ss_item_sk#2, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_addr_sk#49, d_year#54, d_year#57, hd_income_band_sk#67, hd_income_band_sk#70, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79]
Input [18]: [ss_item_sk#2, ss_addr_sk#6, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_addr_sk#49, d_year#54, d_year#57, hd_income_band_sk#67, hd_income_band_sk#70, ca_address_sk#71, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79]

(87) ReusedExchange [Reuses operator id: 84]
Output [5]: [ca_address_sk#81, ca_street_number#82, ca_street_name#83, ca_city#84, ca_zip#85]

(88) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [c_current_addr_sk#49]
Right keys [1]: [ca_address_sk#81]
Join condition: None

(89) Project [codegen id : 20]
Output [19]: [ss_item_sk#2, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, d_year#54, d_year#57, hd_income_band_sk#67, hd_income_band_sk#70, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79, ca_street_number#82, ca_street_name#83, ca_city#84, ca_zip#85]
Input [21]: [ss_item_sk#2, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, c_current_addr_sk#49, d_year#54, d_year#57, hd_income_band_sk#67, hd_income_band_sk#70, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79, ca_address_sk#81, ca_street_number#82, ca_street_name#83, ca_city#84, ca_zip#85]

(90) Scan parquet default.income_band
Output [1]: [ib_income_band_sk#86]
Batched: true
Location [not included in comparison]/{warehouse_dir}/income_band]
PushedFilters: [IsNotNull(ib_income_band_sk)]
ReadSchema: struct<ib_income_band_sk:int>

(91) ColumnarToRow [codegen id : 17]
Input [1]: [ib_income_band_sk#86]

(92) Filter [codegen id : 17]
Input [1]: [ib_income_band_sk#86]
Condition : isnotnull(ib_income_band_sk#86)

(93) BroadcastExchange
Input [1]: [ib_income_band_sk#86]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#87]

(94) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [hd_income_band_sk#67]
Right keys [1]: [ib_income_band_sk#86]
Join condition: None

(95) Project [codegen id : 20]
Output [18]: [ss_item_sk#2, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, d_year#54, d_year#57, hd_income_band_sk#70, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79, ca_street_number#82, ca_street_name#83, ca_city#84, ca_zip#85]
Input [20]: [ss_item_sk#2, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, d_year#54, d_year#57, hd_income_band_sk#67, hd_income_band_sk#70, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79, ca_street_number#82, ca_street_name#83, ca_city#84, ca_zip#85, ib_income_band_sk#86]

(96) ReusedExchange [Reuses operator id: 93]
Output [1]: [ib_income_band_sk#88]

(97) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [hd_income_band_sk#70]
Right keys [1]: [ib_income_band_sk#88]
Join condition: None

(98) Project [codegen id : 20]
Output [17]: [ss_item_sk#2, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, d_year#54, d_year#57, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79, ca_street_number#82, ca_street_name#83, ca_city#84, ca_zip#85]
Input [19]: [ss_item_sk#2, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, d_year#54, d_year#57, hd_income_band_sk#70, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79, ca_street_number#82, ca_street_name#83, ca_city#84, ca_zip#85, ib_income_band_sk#88]

(99) Scan parquet default.item
Output [4]: [i_item_sk#89, i_current_price#90, i_color#91, i_product_name#92]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_current_price), GreaterThanOrEqual(i_current_price,64.00), LessThanOrEqual(i_current_price,74.00), GreaterThanOrEqual(i_current_price,65.00), LessThanOrEqual(i_current_price,79.00), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_color:string,i_product_name:string>

(100) ColumnarToRow [codegen id : 19]
Input [4]: [i_item_sk#89, i_current_price#90, i_color#91, i_product_name#92]

(101) Filter [codegen id : 19]
Input [4]: [i_item_sk#89, i_current_price#90, i_color#91, i_product_name#92]
Condition : ((((((isnotnull(i_current_price#90) AND staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, i_color#91, 20, false, true) IN (purple              ,burlywood           ,indian              ,spring              ,floral              ,medium              )) AND (i_current_price#90 >= 64.00)) AND (i_current_price#90 <= 74.00)) AND (i_current_price#90 >= 65.00)) AND (i_current_price#90 <= 79.00)) AND isnotnull(i_item_sk#89))

(102) Project [codegen id : 19]
Output [2]: [i_item_sk#89, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, i_product_name#92, 50, false, true) AS i_product_name#93]
Input [4]: [i_item_sk#89, i_current_price#90, i_color#91, i_product_name#92]

(103) BroadcastExchange
Input [2]: [i_item_sk#89, i_product_name#93]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#94]

(104) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [ss_item_sk#2]
Right keys [1]: [i_item_sk#89]
Join condition: None

(105) Project [codegen id : 20]
Output [18]: [ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, d_year#54, d_year#57, s_store_name#43, s_zip#44, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79, ca_street_number#82, ca_street_name#83, ca_city#84, ca_zip#85, i_item_sk#89, i_product_name#93]
Input [19]: [ss_item_sk#2, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#43, s_zip#44, d_year#54, d_year#57, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79, ca_street_number#82, ca_street_name#83, ca_city#84, ca_zip#85, i_item_sk#89, i_product_name#93]

(106) HashAggregate [codegen id : 20]
Input [18]: [ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, d_year#54, d_year#57, s_store_name#43, s_zip#44, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79, ca_street_number#82, ca_street_name#83, ca_city#84, ca_zip#85, i_item_sk#89, i_product_name#93]
Keys [15]: [i_product_name#93, i_item_sk#89, s_store_name#43, s_zip#44, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79, ca_street_number#82, ca_street_name#83, ca_city#84, ca_zip#85, d_year#38, d_year#54, d_year#57]
Functions [4]: [partial_count(1), partial_sum(UnscaledValue(ss_wholesale_cost#10)), partial_sum(UnscaledValue(ss_list_price#11)), partial_sum(UnscaledValue(ss_coupon_amt#12))]
Aggregate Attributes [4]: [count#95, sum#96, sum#97, sum#98]
Results [19]: [i_product_name#93, i_item_sk#89, s_store_name#43, s_zip#44, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79, ca_street_number#82, ca_street_name#83, ca_city#84, ca_zip#85, d_year#38, d_year#54, d_year#57, count#99, sum#100, sum#101, sum#102]

(107) Exchange
Input [19]: [i_product_name#93, i_item_sk#89, s_store_name#43, s_zip#44, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79, ca_street_number#82, ca_street_name#83, ca_city#84, ca_zip#85, d_year#38, d_year#54, d_year#57, count#99, sum#100, sum#101, sum#102]
Arguments: hashpartitioning(i_product_name#93, i_item_sk#89, s_store_name#43, s_zip#44, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79, ca_street_number#82, ca_street_name#83, ca_city#84, ca_zip#85, d_year#38, d_year#54, d_year#57, 5), ENSURE_REQUIREMENTS, [id=#103]

(108) HashAggregate [codegen id : 42]
Input [19]: [i_product_name#93, i_item_sk#89, s_store_name#43, s_zip#44, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79, ca_street_number#82, ca_street_name#83, ca_city#84, ca_zip#85, d_year#38, d_year#54, d_year#57, count#99, sum#100, sum#101, sum#102]
Keys [15]: [i_product_name#93, i_item_sk#89, s_store_name#43, s_zip#44, ca_street_number#76, ca_street_name#77, ca_city#78, ca_zip#79, ca_street_number#82, ca_street_name#83, ca_city#84, ca_zip#85, d_year#38, d_year#54, d_year#57]
Functions [4]: [count(1), sum(UnscaledValue(ss_wholesale_cost#10)), sum(UnscaledValue(ss_list_price#11)), sum(UnscaledValue(ss_coupon_amt#12))]
Aggregate Attributes [4]: [count(1)#104, sum(UnscaledValue(ss_wholesale_cost#10))#105, sum(UnscaledValue(ss_list_price#11))#106, sum(UnscaledValue(ss_coupon_amt#12))#107]
Results [17]: [i_product_name#93 AS product_name#108, i_item_sk#89 AS item_sk#109, s_store_name#43 AS store_name#110, s_zip#44 AS store_zip#111, ca_street_number#76 AS b_street_number#112, ca_street_name#77 AS b_streen_name#113, ca_city#78 AS b_city#114, ca_zip#79 AS b_zip#115, ca_street_number#82 AS c_street_number#116, ca_street_name#83 AS c_street_name#117, ca_city#84 AS c_city#118, ca_zip#85 AS c_zip#119, d_year#38 AS syear#120, count(1)#104 AS cnt#121, MakeDecimal(sum(UnscaledValue(ss_wholesale_cost#10))#105,17,2) AS s1#122, MakeDecimal(sum(UnscaledValue(ss_list_price#11))#106,17,2) AS s2#123, MakeDecimal(sum(UnscaledValue(ss_coupon_amt#12))#107,17,2) AS s3#124]

(109) Scan parquet default.store_sales
Output [12]: [ss_sold_date_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_ticket_number), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_cdemo_sk), IsNotNull(ss_promo_sk), IsNotNull(ss_hdemo_sk), IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:decimal(7,2)>

(110) ColumnarToRow [codegen id : 40]
Input [12]: [ss_sold_date_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12]

(111) Filter [codegen id : 40]
Input [12]: [ss_sold_date_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12]
Condition : ((((((((isnotnull(ss_item_sk#2) AND isnotnull(ss_ticket_number#9)) AND isnotnull(ss_sold_date_sk#1)) AND isnotnull(ss_store_sk#7)) AND isnotnull(ss_customer_sk#3)) AND isnotnull(ss_cdemo_sk#4)) AND isnotnull(ss_promo_sk#8)) AND isnotnull(ss_hdemo_sk#5)) AND isnotnull(ss_addr_sk#6))

(112) ReusedExchange [Reuses operator id: 7]
Output [2]: [sr_item_sk#13, sr_ticket_number#14]

(113) BroadcastHashJoin [codegen id : 40]
Left keys [2]: [cast(ss_item_sk#2 as bigint), cast(ss_ticket_number#9 as bigint)]
Right keys [2]: [sr_item_sk#13, sr_ticket_number#14]
Join condition: None

(114) Project [codegen id : 40]
Output [11]: [ss_sold_date_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12]
Input [14]: [ss_sold_date_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, sr_item_sk#13, sr_ticket_number#14]

(115) ReusedExchange [Reuses operator id: 24]
Output [1]: [cs_item_sk#16]

(116) BroadcastHashJoin [codegen id : 40]
Left keys [1]: [ss_item_sk#2]
Right keys [1]: [cs_item_sk#16]
Join condition: None

(117) Project [codegen id : 40]
Output [11]: [ss_sold_date_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12]
Input [12]: [ss_sold_date_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, cs_item_sk#16]

(118) Scan parquet default.date_dim
Output [2]: [d_date_sk#37, d_year#38]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(119) ColumnarToRow [codegen id : 25]
Input [2]: [d_date_sk#37, d_year#38]

(120) Filter [codegen id : 25]
Input [2]: [d_date_sk#37, d_year#38]
Condition : ((isnotnull(d_year#38) AND (d_year#38 = 2000)) AND isnotnull(d_date_sk#37))

(121) BroadcastExchange
Input [2]: [d_date_sk#37, d_year#38]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#125]

(122) BroadcastHashJoin [codegen id : 40]
Left keys [1]: [ss_sold_date_sk#1]
Right keys [1]: [d_date_sk#37]
Join condition: None

(123) Project [codegen id : 40]
Output [11]: [ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38]
Input [13]: [ss_sold_date_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_date_sk#37, d_year#38]

(124) ReusedExchange [Reuses operator id: 37]
Output [3]: [s_store_sk#40, s_store_name#126, s_zip#127]

(125) BroadcastHashJoin [codegen id : 40]
Left keys [1]: [ss_store_sk#7]
Right keys [1]: [s_store_sk#40]
Join condition: None

(126) Project [codegen id : 40]
Output [12]: [ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127]
Input [14]: [ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_sk#40, s_store_name#126, s_zip#127]

(127) ReusedExchange [Reuses operator id: 43]
Output [6]: [c_customer_sk#46, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, c_first_shipto_date_sk#50, c_first_sales_date_sk#51]

(128) BroadcastHashJoin [codegen id : 40]
Left keys [1]: [ss_customer_sk#3]
Right keys [1]: [c_customer_sk#46]
Join condition: None

(129) Project [codegen id : 40]
Output [16]: [ss_item_sk#2, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, c_first_shipto_date_sk#50, c_first_sales_date_sk#51]
Input [18]: [ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_customer_sk#46, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, c_first_shipto_date_sk#50, c_first_sales_date_sk#51]

(130) ReusedExchange [Reuses operator id: 49]
Output [2]: [d_date_sk#128, d_year#129]

(131) BroadcastHashJoin [codegen id : 40]
Left keys [1]: [c_first_sales_date_sk#51]
Right keys [1]: [d_date_sk#128]
Join condition: None

(132) Project [codegen id : 40]
Output [16]: [ss_item_sk#2, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, c_first_shipto_date_sk#50, d_year#129]
Input [18]: [ss_item_sk#2, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, c_first_shipto_date_sk#50, c_first_sales_date_sk#51, d_date_sk#128, d_year#129]

(133) ReusedExchange [Reuses operator id: 49]
Output [2]: [d_date_sk#130, d_year#131]

(134) BroadcastHashJoin [codegen id : 40]
Left keys [1]: [c_first_shipto_date_sk#50]
Right keys [1]: [d_date_sk#130]
Join condition: None

(135) Project [codegen id : 40]
Output [16]: [ss_item_sk#2, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#129, d_year#131]
Input [18]: [ss_item_sk#2, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, c_first_shipto_date_sk#50, d_year#129, d_date_sk#130, d_year#131]

(136) ReusedExchange [Reuses operator id: 59]
Output [2]: [cd_demo_sk#58, cd_marital_status#132]

(137) BroadcastHashJoin [codegen id : 40]
Left keys [1]: [ss_cdemo_sk#4]
Right keys [1]: [cd_demo_sk#58]
Join condition: None

(138) Project [codegen id : 40]
Output [16]: [ss_item_sk#2, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#129, d_year#131, cd_marital_status#132]
Input [18]: [ss_item_sk#2, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#129, d_year#131, cd_demo_sk#58, cd_marital_status#132]

(139) ReusedExchange [Reuses operator id: 59]
Output [2]: [cd_demo_sk#133, cd_marital_status#134]

(140) BroadcastHashJoin [codegen id : 40]
Left keys [1]: [c_current_cdemo_sk#47]
Right keys [1]: [cd_demo_sk#133]
Join condition: NOT (cd_marital_status#132 = cd_marital_status#134)

(141) Project [codegen id : 40]
Output [14]: [ss_item_sk#2, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#129, d_year#131]
Input [18]: [ss_item_sk#2, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_cdemo_sk#47, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#129, d_year#131, cd_marital_status#132, cd_demo_sk#133, cd_marital_status#134]

(142) ReusedExchange [Reuses operator id: 68]
Output [1]: [p_promo_sk#64]

(143) BroadcastHashJoin [codegen id : 40]
Left keys [1]: [ss_promo_sk#8]
Right keys [1]: [p_promo_sk#64]
Join condition: None

(144) Project [codegen id : 40]
Output [13]: [ss_item_sk#2, ss_hdemo_sk#5, ss_addr_sk#6, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#129, d_year#131]
Input [15]: [ss_item_sk#2, ss_hdemo_sk#5, ss_addr_sk#6, ss_promo_sk#8, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#129, d_year#131, p_promo_sk#64]

(145) ReusedExchange [Reuses operator id: 74]
Output [2]: [hd_demo_sk#66, hd_income_band_sk#67]

(146) BroadcastHashJoin [codegen id : 40]
Left keys [1]: [ss_hdemo_sk#5]
Right keys [1]: [hd_demo_sk#66]
Join condition: None

(147) Project [codegen id : 40]
Output [13]: [ss_item_sk#2, ss_addr_sk#6, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#129, d_year#131, hd_income_band_sk#67]
Input [15]: [ss_item_sk#2, ss_hdemo_sk#5, ss_addr_sk#6, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#129, d_year#131, hd_demo_sk#66, hd_income_band_sk#67]

(148) ReusedExchange [Reuses operator id: 74]
Output [2]: [hd_demo_sk#135, hd_income_band_sk#136]

(149) BroadcastHashJoin [codegen id : 40]
Left keys [1]: [c_current_hdemo_sk#48]
Right keys [1]: [hd_demo_sk#135]
Join condition: None

(150) Project [codegen id : 40]
Output [13]: [ss_item_sk#2, ss_addr_sk#6, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_addr_sk#49, d_year#129, d_year#131, hd_income_band_sk#67, hd_income_band_sk#136]
Input [15]: [ss_item_sk#2, ss_addr_sk#6, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_hdemo_sk#48, c_current_addr_sk#49, d_year#129, d_year#131, hd_income_band_sk#67, hd_demo_sk#135, hd_income_band_sk#136]

(151) ReusedExchange [Reuses operator id: 84]
Output [5]: [ca_address_sk#71, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140]

(152) BroadcastHashJoin [codegen id : 40]
Left keys [1]: [ss_addr_sk#6]
Right keys [1]: [ca_address_sk#71]
Join condition: None

(153) Project [codegen id : 40]
Output [16]: [ss_item_sk#2, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_addr_sk#49, d_year#129, d_year#131, hd_income_band_sk#67, hd_income_band_sk#136, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140]
Input [18]: [ss_item_sk#2, ss_addr_sk#6, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_addr_sk#49, d_year#129, d_year#131, hd_income_band_sk#67, hd_income_band_sk#136, ca_address_sk#71, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140]

(154) ReusedExchange [Reuses operator id: 84]
Output [5]: [ca_address_sk#141, ca_street_number#142, ca_street_name#143, ca_city#144, ca_zip#145]

(155) BroadcastHashJoin [codegen id : 40]
Left keys [1]: [c_current_addr_sk#49]
Right keys [1]: [ca_address_sk#141]
Join condition: None

(156) Project [codegen id : 40]
Output [19]: [ss_item_sk#2, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, d_year#129, d_year#131, hd_income_band_sk#67, hd_income_band_sk#136, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140, ca_street_number#142, ca_street_name#143, ca_city#144, ca_zip#145]
Input [21]: [ss_item_sk#2, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, c_current_addr_sk#49, d_year#129, d_year#131, hd_income_band_sk#67, hd_income_band_sk#136, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140, ca_address_sk#141, ca_street_number#142, ca_street_name#143, ca_city#144, ca_zip#145]

(157) ReusedExchange [Reuses operator id: 93]
Output [1]: [ib_income_band_sk#86]

(158) BroadcastHashJoin [codegen id : 40]
Left keys [1]: [hd_income_band_sk#67]
Right keys [1]: [ib_income_band_sk#86]
Join condition: None

(159) Project [codegen id : 40]
Output [18]: [ss_item_sk#2, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, d_year#129, d_year#131, hd_income_band_sk#136, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140, ca_street_number#142, ca_street_name#143, ca_city#144, ca_zip#145]
Input [20]: [ss_item_sk#2, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, d_year#129, d_year#131, hd_income_band_sk#67, hd_income_band_sk#136, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140, ca_street_number#142, ca_street_name#143, ca_city#144, ca_zip#145, ib_income_band_sk#86]

(160) ReusedExchange [Reuses operator id: 93]
Output [1]: [ib_income_band_sk#146]

(161) BroadcastHashJoin [codegen id : 40]
Left keys [1]: [hd_income_band_sk#136]
Right keys [1]: [ib_income_band_sk#146]
Join condition: None

(162) Project [codegen id : 40]
Output [17]: [ss_item_sk#2, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, d_year#129, d_year#131, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140, ca_street_number#142, ca_street_name#143, ca_city#144, ca_zip#145]
Input [19]: [ss_item_sk#2, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, d_year#129, d_year#131, hd_income_band_sk#136, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140, ca_street_number#142, ca_street_name#143, ca_city#144, ca_zip#145, ib_income_band_sk#146]

(163) ReusedExchange [Reuses operator id: 103]
Output [2]: [i_item_sk#89, i_product_name#147]

(164) BroadcastHashJoin [codegen id : 40]
Left keys [1]: [ss_item_sk#2]
Right keys [1]: [i_item_sk#89]
Join condition: None

(165) Project [codegen id : 40]
Output [18]: [ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, d_year#129, d_year#131, s_store_name#126, s_zip#127, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140, ca_street_number#142, ca_street_name#143, ca_city#144, ca_zip#145, i_item_sk#89, i_product_name#147]
Input [19]: [ss_item_sk#2, ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, s_store_name#126, s_zip#127, d_year#129, d_year#131, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140, ca_street_number#142, ca_street_name#143, ca_city#144, ca_zip#145, i_item_sk#89, i_product_name#147]

(166) HashAggregate [codegen id : 40]
Input [18]: [ss_wholesale_cost#10, ss_list_price#11, ss_coupon_amt#12, d_year#38, d_year#129, d_year#131, s_store_name#126, s_zip#127, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140, ca_street_number#142, ca_street_name#143, ca_city#144, ca_zip#145, i_item_sk#89, i_product_name#147]
Keys [15]: [i_product_name#147, i_item_sk#89, s_store_name#126, s_zip#127, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140, ca_street_number#142, ca_street_name#143, ca_city#144, ca_zip#145, d_year#38, d_year#129, d_year#131]
Functions [4]: [partial_count(1), partial_sum(UnscaledValue(ss_wholesale_cost#10)), partial_sum(UnscaledValue(ss_list_price#11)), partial_sum(UnscaledValue(ss_coupon_amt#12))]
Aggregate Attributes [4]: [count#148, sum#149, sum#150, sum#151]
Results [19]: [i_product_name#147, i_item_sk#89, s_store_name#126, s_zip#127, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140, ca_street_number#142, ca_street_name#143, ca_city#144, ca_zip#145, d_year#38, d_year#129, d_year#131, count#152, sum#153, sum#154, sum#155]

(167) Exchange
Input [19]: [i_product_name#147, i_item_sk#89, s_store_name#126, s_zip#127, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140, ca_street_number#142, ca_street_name#143, ca_city#144, ca_zip#145, d_year#38, d_year#129, d_year#131, count#152, sum#153, sum#154, sum#155]
Arguments: hashpartitioning(i_product_name#147, i_item_sk#89, s_store_name#126, s_zip#127, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140, ca_street_number#142, ca_street_name#143, ca_city#144, ca_zip#145, d_year#38, d_year#129, d_year#131, 5), ENSURE_REQUIREMENTS, [id=#156]

(168) HashAggregate [codegen id : 41]
Input [19]: [i_product_name#147, i_item_sk#89, s_store_name#126, s_zip#127, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140, ca_street_number#142, ca_street_name#143, ca_city#144, ca_zip#145, d_year#38, d_year#129, d_year#131, count#152, sum#153, sum#154, sum#155]
Keys [15]: [i_product_name#147, i_item_sk#89, s_store_name#126, s_zip#127, ca_street_number#137, ca_street_name#138, ca_city#139, ca_zip#140, ca_street_number#142, ca_street_name#143, ca_city#144, ca_zip#145, d_year#38, d_year#129, d_year#131]
Functions [4]: [count(1), sum(UnscaledValue(ss_wholesale_cost#10)), sum(UnscaledValue(ss_list_price#11)), sum(UnscaledValue(ss_coupon_amt#12))]
Aggregate Attributes [4]: [count(1)#157, sum(UnscaledValue(ss_wholesale_cost#10))#158, sum(UnscaledValue(ss_list_price#11))#159, sum(UnscaledValue(ss_coupon_amt#12))#160]
Results [8]: [i_item_sk#89 AS item_sk#161, s_store_name#126 AS store_name#162, s_zip#127 AS store_zip#163, d_year#38 AS syear#164, count(1)#157 AS cnt#165, MakeDecimal(sum(UnscaledValue(ss_wholesale_cost#10))#158,17,2) AS s1#166, MakeDecimal(sum(UnscaledValue(ss_list_price#11))#159,17,2) AS s2#167, MakeDecimal(sum(UnscaledValue(ss_coupon_amt#12))#160,17,2) AS s3#168]

(169) BroadcastExchange
Input [8]: [item_sk#161, store_name#162, store_zip#163, syear#164, cnt#165, s1#166, s2#167, s3#168]
Arguments: HashedRelationBroadcastMode(List(input[0, int, true], input[1, string, true], input[2, string, true]),false), [id=#169]

(170) BroadcastHashJoin [codegen id : 42]
Left keys [3]: [item_sk#109, store_name#110, store_zip#111]
Right keys [3]: [item_sk#161, store_name#162, store_zip#163]
Join condition: (cnt#165 <= cnt#121)

(171) Project [codegen id : 42]
Output [21]: [product_name#108, store_name#110, store_zip#111, b_street_number#112, b_streen_name#113, b_city#114, b_zip#115, c_street_number#116, c_street_name#117, c_city#118, c_zip#119, syear#120, cnt#121, s1#122, s2#123, s3#124, s1#166, s2#167, s3#168, syear#164, cnt#165]
Input [25]: [product_name#108, item_sk#109, store_name#110, store_zip#111, b_street_number#112, b_streen_name#113, b_city#114, b_zip#115, c_street_number#116, c_street_name#117, c_city#118, c_zip#119, syear#120, cnt#121, s1#122, s2#123, s3#124, item_sk#161, store_name#162, store_zip#163, syear#164, cnt#165, s1#166, s2#167, s3#168]

(172) Exchange
Input [21]: [product_name#108, store_name#110, store_zip#111, b_street_number#112, b_streen_name#113, b_city#114, b_zip#115, c_street_number#116, c_street_name#117, c_city#118, c_zip#119, syear#120, cnt#121, s1#122, s2#123, s3#124, s1#166, s2#167, s3#168, syear#164, cnt#165]
Arguments: rangepartitioning(product_name#108 ASC NULLS FIRST, store_name#110 ASC NULLS FIRST, cnt#165 ASC NULLS FIRST, 5), ENSURE_REQUIREMENTS, [id=#170]

(173) Sort [codegen id : 43]
Input [21]: [product_name#108, store_name#110, store_zip#111, b_street_number#112, b_streen_name#113, b_city#114, b_zip#115, c_street_number#116, c_street_name#117, c_city#118, c_zip#119, syear#120, cnt#121, s1#122, s2#123, s3#124, s1#166, s2#167, s3#168, syear#164, cnt#165]
Arguments: [product_name#108 ASC NULLS FIRST, store_name#110 ASC NULLS FIRST, cnt#165 ASC NULLS FIRST], true, 0

