== Physical Plan ==
TakeOrderedAndProject (28)
+- * HashAggregate (27)
   +- Exchange (26)
      +- * HashAggregate (25)
         +- * Expand (24)
            +- * Project (23)
               +- * BroadcastHashJoin Inner BuildRight (22)
                  :- * Project (17)
                  :  +- * BroadcastHashJoin Inner BuildRight (16)
                  :     :- * Project (10)
                  :     :  +- * BroadcastHashJoin Inner BuildRight (9)
                  :     :     :- * Filter (3)
                  :     :     :  +- * ColumnarToRow (2)
                  :     :     :     +- Scan parquet default.inventory (1)
                  :     :     +- BroadcastExchange (8)
                  :     :        +- * Project (7)
                  :     :           +- * Filter (6)
                  :     :              +- * ColumnarToRow (5)
                  :     :                 +- Scan parquet default.date_dim (4)
                  :     +- BroadcastExchange (15)
                  :        +- * Project (14)
                  :           +- * Filter (13)
                  :              +- * ColumnarToRow (12)
                  :                 +- Scan parquet default.item (11)
                  +- BroadcastExchange (21)
                     +- * Filter (20)
                        +- * ColumnarToRow (19)
                           +- Scan parquet default.warehouse (18)


(1) Scan parquet default.inventory
Output [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Batched: true
Location [not included in comparison]/{warehouse_dir}/inventory]
PushedFilters: [IsNotNull(inv_date_sk), IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)]
ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>

(2) ColumnarToRow [codegen id : 4]
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]

(3) Filter [codegen id : 4]
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Condition : ((isnotnull(inv_date_sk#1) AND isnotnull(inv_item_sk#2)) AND isnotnull(inv_warehouse_sk#3))

(4) Scan parquet default.date_dim
Output [2]: [d_date_sk#5, d_month_seq#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(5) ColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#5, d_month_seq#6]

(6) Filter [codegen id : 1]
Input [2]: [d_date_sk#5, d_month_seq#6]
Condition : (((isnotnull(d_month_seq#6) AND (d_month_seq#6 >= 1200)) AND (d_month_seq#6 <= 1211)) AND isnotnull(d_date_sk#5))

(7) Project [codegen id : 1]
Output [1]: [d_date_sk#5]
Input [2]: [d_date_sk#5, d_month_seq#6]

(8) BroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#7]

(9) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_date_sk#1]
Right keys [1]: [d_date_sk#5]
Join condition: None

(10) Project [codegen id : 4]
Output [3]: [inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Input [5]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4, d_date_sk#5]

(11) Scan parquet default.item
Output [5]: [i_item_sk#8, i_brand#9, i_class#10, i_category#11, i_product_name#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>

(12) ColumnarToRow [codegen id : 2]
Input [5]: [i_item_sk#8, i_brand#9, i_class#10, i_category#11, i_product_name#12]

(13) Filter [codegen id : 2]
Input [5]: [i_item_sk#8, i_brand#9, i_class#10, i_category#11, i_product_name#12]
Condition : isnotnull(i_item_sk#8)

(14) Project [codegen id : 2]
Output [5]: [i_item_sk#8, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, i_brand#9, 50, false, true) AS i_brand#13, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, i_class#10, 50, false, true) AS i_class#14, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, i_category#11, 50, false, true) AS i_category#15, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, i_product_name#12, 50, false, true) AS i_product_name#16]
Input [5]: [i_item_sk#8, i_brand#9, i_class#10, i_category#11, i_product_name#12]

(15) BroadcastExchange
Input [5]: [i_item_sk#8, i_brand#13, i_class#14, i_category#15, i_product_name#16]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#17]

(16) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_item_sk#2]
Right keys [1]: [i_item_sk#8]
Join condition: None

(17) Project [codegen id : 4]
Output [6]: [inv_warehouse_sk#3, inv_quantity_on_hand#4, i_brand#13, i_class#14, i_category#15, i_product_name#16]
Input [8]: [inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4, i_item_sk#8, i_brand#13, i_class#14, i_category#15, i_product_name#16]

(18) Scan parquet default.warehouse
Output [1]: [w_warehouse_sk#18]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int>

(19) ColumnarToRow [codegen id : 3]
Input [1]: [w_warehouse_sk#18]

(20) Filter [codegen id : 3]
Input [1]: [w_warehouse_sk#18]
Condition : isnotnull(w_warehouse_sk#18)

(21) BroadcastExchange
Input [1]: [w_warehouse_sk#18]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#19]

(22) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_warehouse_sk#3]
Right keys [1]: [w_warehouse_sk#18]
Join condition: None

(23) Project [codegen id : 4]
Output [5]: [inv_quantity_on_hand#4, i_product_name#16 AS i_product_name#20, i_brand#13 AS i_brand#21, i_class#14 AS i_class#22, i_category#15 AS i_category#23]
Input [7]: [inv_warehouse_sk#3, inv_quantity_on_hand#4, i_brand#13, i_class#14, i_category#15, i_product_name#16, w_warehouse_sk#18]

(24) Expand [codegen id : 4]
Input [5]: [inv_quantity_on_hand#4, i_product_name#20, i_brand#21, i_class#22, i_category#23]
Arguments: [List(inv_quantity_on_hand#4, i_product_name#20, i_brand#21, i_class#22, i_category#23, 0), List(inv_quantity_on_hand#4, i_product_name#20, i_brand#21, i_class#22, null, 1), List(inv_quantity_on_hand#4, i_product_name#20, i_brand#21, null, null, 3), List(inv_quantity_on_hand#4, i_product_name#20, null, null, null, 7), List(inv_quantity_on_hand#4, null, null, null, null, 15)], [inv_quantity_on_hand#4, i_product_name#24, i_brand#25, i_class#26, i_category#27, spark_grouping_id#28]

(25) HashAggregate [codegen id : 4]
Input [6]: [inv_quantity_on_hand#4, i_product_name#24, i_brand#25, i_class#26, i_category#27, spark_grouping_id#28]
Keys [5]: [i_product_name#24, i_brand#25, i_class#26, i_category#27, spark_grouping_id#28]
Functions [1]: [partial_avg(cast(inv_quantity_on_hand#4 as bigint))]
Aggregate Attributes [2]: [sum#29, count#30]
Results [7]: [i_product_name#24, i_brand#25, i_class#26, i_category#27, spark_grouping_id#28, sum#31, count#32]

(26) Exchange
Input [7]: [i_product_name#24, i_brand#25, i_class#26, i_category#27, spark_grouping_id#28, sum#31, count#32]
Arguments: hashpartitioning(i_product_name#24, i_brand#25, i_class#26, i_category#27, spark_grouping_id#28, 5), ENSURE_REQUIREMENTS, [id=#33]

(27) HashAggregate [codegen id : 5]
Input [7]: [i_product_name#24, i_brand#25, i_class#26, i_category#27, spark_grouping_id#28, sum#31, count#32]
Keys [5]: [i_product_name#24, i_brand#25, i_class#26, i_category#27, spark_grouping_id#28]
Functions [1]: [avg(cast(inv_quantity_on_hand#4 as bigint))]
Aggregate Attributes [1]: [avg(cast(inv_quantity_on_hand#4 as bigint))#34]
Results [5]: [i_product_name#24, i_brand#25, i_class#26, i_category#27, avg(cast(inv_quantity_on_hand#4 as bigint))#34 AS qoh#35]

(28) TakeOrderedAndProject
Input [5]: [i_product_name#24, i_brand#25, i_class#26, i_category#27, qoh#35]
Arguments: 100, [qoh#35 ASC NULLS FIRST, i_product_name#24 ASC NULLS FIRST, i_brand#25 ASC NULLS FIRST, i_class#26 ASC NULLS FIRST, i_category#27 ASC NULLS FIRST], [i_product_name#24, i_brand#25, i_class#26, i_category#27, qoh#35]

