== Physical Plan ==
TakeOrderedAndProject (62)
+- * HashAggregate (61)
   +- Exchange (60)
      +- * HashAggregate (59)
         +- Union (58)
            :- * HashAggregate (27)
            :  +- Exchange (26)
            :     +- * HashAggregate (25)
            :        +- * Project (24)
            :           +- * BroadcastHashJoin Inner BuildRight (23)
            :              :- * Project (17)
            :              :  +- * BroadcastHashJoin Inner BuildRight (16)
            :              :     :- * Project (6)
            :              :     :  +- * BroadcastHashJoin Inner BuildRight (5)
            :              :     :     :- * Filter (3)
            :              :     :     :  +- * ColumnarToRow (2)
            :              :     :     :     +- Scan parquet default.store_sales (1)
            :              :     :     +- ReusedExchange (4)
            :              :     +- BroadcastExchange (15)
            :              :        +- * BroadcastHashJoin LeftSemi BuildRight (14)
            :              :           :- * ColumnarToRow (8)
            :              :           :  +- Scan parquet default.item (7)
            :              :           +- BroadcastExchange (13)
            :              :              +- * Project (12)
            :              :                 +- * Filter (11)
            :              :                    +- * ColumnarToRow (10)
            :              :                       +- Scan parquet default.item (9)
            :              +- BroadcastExchange (22)
            :                 +- * Project (21)
            :                    +- * Filter (20)
            :                       +- * ColumnarToRow (19)
            :                          +- Scan parquet default.customer_address (18)
            :- * HashAggregate (42)
            :  +- Exchange (41)
            :     +- * HashAggregate (40)
            :        +- * Project (39)
            :           +- * BroadcastHashJoin Inner BuildRight (38)
            :              :- * Project (36)
            :              :  +- * BroadcastHashJoin Inner BuildRight (35)
            :              :     :- * Project (33)
            :              :     :  +- * BroadcastHashJoin Inner BuildRight (32)
            :              :     :     :- * Filter (30)
            :              :     :     :  +- * ColumnarToRow (29)
            :              :     :     :     +- Scan parquet default.catalog_sales (28)
            :              :     :     +- ReusedExchange (31)
            :              :     +- ReusedExchange (34)
            :              +- ReusedExchange (37)
            +- * HashAggregate (57)
               +- Exchange (56)
                  +- * HashAggregate (55)
                     +- * Project (54)
                        +- * BroadcastHashJoin Inner BuildRight (53)
                           :- * Project (51)
                           :  +- * BroadcastHashJoin Inner BuildRight (50)
                           :     :- * Project (48)
                           :     :  +- * BroadcastHashJoin Inner BuildRight (47)
                           :     :     :- * Filter (45)
                           :     :     :  +- * ColumnarToRow (44)
                           :     :     :     +- Scan parquet default.web_sales (43)
                           :     :     +- ReusedExchange (46)
                           :     +- ReusedExchange (49)
                           +- ReusedExchange (52)


(1) Scan parquet default.store_sales
Output [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#4), dynamicpruningexpression(ss_sold_date_sk#4 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(2) ColumnarToRow [codegen id : 5]
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]

(3) Filter [codegen id : 5]
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Condition : isnotnull(ss_addr_sk#2)

(4) ReusedExchange [Reuses operator id: 67]
Output [1]: [d_date_sk#6]

(5) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_sold_date_sk#4]
Right keys [1]: [d_date_sk#6]
Join condition: None

(6) Project [codegen id : 5]
Output [3]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]
Input [5]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4, d_date_sk#6]

(7) Scan parquet default.item
Output [2]: [i_item_sk#7, i_manufact_id#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
ReadSchema: struct<i_item_sk:int,i_manufact_id:int>

(8) ColumnarToRow [codegen id : 3]
Input [2]: [i_item_sk#7, i_manufact_id#8]

(9) Scan parquet default.item
Output [2]: [i_category#9, i_manufact_id#10]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Electronics                                       )]
ReadSchema: struct<i_category:string,i_manufact_id:int>

(10) ColumnarToRow [codegen id : 2]
Input [2]: [i_category#9, i_manufact_id#10]

(11) Filter [codegen id : 2]
Input [2]: [i_category#9, i_manufact_id#10]
Condition : (isnotnull(i_category#9) AND (i_category#9 = Electronics                                       ))

(12) Project [codegen id : 2]
Output [1]: [i_manufact_id#10]
Input [2]: [i_category#9, i_manufact_id#10]

(13) BroadcastExchange
Input [1]: [i_manufact_id#10]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#11]

(14) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [i_manufact_id#8]
Right keys [1]: [i_manufact_id#10]
Join condition: None

(15) BroadcastExchange
Input [2]: [i_item_sk#7, i_manufact_id#8]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#12]

(16) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_item_sk#1]
Right keys [1]: [i_item_sk#7]
Join condition: None

(17) Project [codegen id : 5]
Output [3]: [ss_addr_sk#2, ss_ext_sales_price#3, i_manufact_id#8]
Input [5]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, i_item_sk#7, i_manufact_id#8]

(18) Scan parquet default.customer_address
Output [2]: [ca_address_sk#13, ca_gmt_offset#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-5.00)]
ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>

(19) ColumnarToRow [codegen id : 4]
Input [2]: [ca_address_sk#13, ca_gmt_offset#14]

(20) Filter [codegen id : 4]
Input [2]: [ca_address_sk#13, ca_gmt_offset#14]
Condition : (isnotnull(ca_gmt_offset#14) AND (ca_gmt_offset#14 = -5.00))

(21) Project [codegen id : 4]
Output [1]: [ca_address_sk#13]
Input [2]: [ca_address_sk#13, ca_gmt_offset#14]

(22) BroadcastExchange
Input [1]: [ca_address_sk#13]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#15]

(23) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_addr_sk#2]
Right keys [1]: [ca_address_sk#13]
Join condition: None

(24) Project [codegen id : 5]
Output [2]: [ss_ext_sales_price#3, i_manufact_id#8]
Input [4]: [ss_addr_sk#2, ss_ext_sales_price#3, i_manufact_id#8, ca_address_sk#13]

(25) HashAggregate [codegen id : 5]
Input [2]: [ss_ext_sales_price#3, i_manufact_id#8]
Keys [1]: [i_manufact_id#8]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#3))]
Aggregate Attributes [1]: [sum#16]
Results [2]: [i_manufact_id#8, sum#17]

(26) Exchange
Input [2]: [i_manufact_id#8, sum#17]
Arguments: hashpartitioning(i_manufact_id#8, 5), ENSURE_REQUIREMENTS, [id=#18]

(27) HashAggregate [codegen id : 6]
Input [2]: [i_manufact_id#8, sum#17]
Keys [1]: [i_manufact_id#8]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#3))#19]
Results [2]: [i_manufact_id#8, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#3))#19,17,2) AS total_sales#20]

(28) Scan parquet default.catalog_sales
Output [4]: [cs_bill_addr_sk#21, cs_item_sk#22, cs_ext_sales_price#23, cs_sold_date_sk#24]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#24), dynamicpruningexpression(cs_sold_date_sk#24 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(cs_bill_addr_sk)]
ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>

(29) ColumnarToRow [codegen id : 11]
Input [4]: [cs_bill_addr_sk#21, cs_item_sk#22, cs_ext_sales_price#23, cs_sold_date_sk#24]

(30) Filter [codegen id : 11]
Input [4]: [cs_bill_addr_sk#21, cs_item_sk#22, cs_ext_sales_price#23, cs_sold_date_sk#24]
Condition : isnotnull(cs_bill_addr_sk#21)

(31) ReusedExchange [Reuses operator id: 67]
Output [1]: [d_date_sk#25]

(32) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_sold_date_sk#24]
Right keys [1]: [d_date_sk#25]
Join condition: None

(33) Project [codegen id : 11]
Output [3]: [cs_bill_addr_sk#21, cs_item_sk#22, cs_ext_sales_price#23]
Input [5]: [cs_bill_addr_sk#21, cs_item_sk#22, cs_ext_sales_price#23, cs_sold_date_sk#24, d_date_sk#25]

(34) ReusedExchange [Reuses operator id: 15]
Output [2]: [i_item_sk#26, i_manufact_id#27]

(35) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_item_sk#22]
Right keys [1]: [i_item_sk#26]
Join condition: None

(36) Project [codegen id : 11]
Output [3]: [cs_bill_addr_sk#21, cs_ext_sales_price#23, i_manufact_id#27]
Input [5]: [cs_bill_addr_sk#21, cs_item_sk#22, cs_ext_sales_price#23, i_item_sk#26, i_manufact_id#27]

(37) ReusedExchange [Reuses operator id: 22]
Output [1]: [ca_address_sk#28]

(38) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_bill_addr_sk#21]
Right keys [1]: [ca_address_sk#28]
Join condition: None

(39) Project [codegen id : 11]
Output [2]: [cs_ext_sales_price#23, i_manufact_id#27]
Input [4]: [cs_bill_addr_sk#21, cs_ext_sales_price#23, i_manufact_id#27, ca_address_sk#28]

(40) HashAggregate [codegen id : 11]
Input [2]: [cs_ext_sales_price#23, i_manufact_id#27]
Keys [1]: [i_manufact_id#27]
Functions [1]: [partial_sum(UnscaledValue(cs_ext_sales_price#23))]
Aggregate Attributes [1]: [sum#29]
Results [2]: [i_manufact_id#27, sum#30]

(41) Exchange
Input [2]: [i_manufact_id#27, sum#30]
Arguments: hashpartitioning(i_manufact_id#27, 5), ENSURE_REQUIREMENTS, [id=#31]

(42) HashAggregate [codegen id : 12]
Input [2]: [i_manufact_id#27, sum#30]
Keys [1]: [i_manufact_id#27]
Functions [1]: [sum(UnscaledValue(cs_ext_sales_price#23))]
Aggregate Attributes [1]: [sum(UnscaledValue(cs_ext_sales_price#23))#32]
Results [2]: [i_manufact_id#27, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#23))#32,17,2) AS total_sales#33]

(43) Scan parquet default.web_sales
Output [4]: [ws_item_sk#34, ws_bill_addr_sk#35, ws_ext_sales_price#36, ws_sold_date_sk#37]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#37), dynamicpruningexpression(ws_sold_date_sk#37 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(ws_bill_addr_sk)]
ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(44) ColumnarToRow [codegen id : 17]
Input [4]: [ws_item_sk#34, ws_bill_addr_sk#35, ws_ext_sales_price#36, ws_sold_date_sk#37]

(45) Filter [codegen id : 17]
Input [4]: [ws_item_sk#34, ws_bill_addr_sk#35, ws_ext_sales_price#36, ws_sold_date_sk#37]
Condition : isnotnull(ws_bill_addr_sk#35)

(46) ReusedExchange [Reuses operator id: 67]
Output [1]: [d_date_sk#38]

(47) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_sold_date_sk#37]
Right keys [1]: [d_date_sk#38]
Join condition: None

(48) Project [codegen id : 17]
Output [3]: [ws_item_sk#34, ws_bill_addr_sk#35, ws_ext_sales_price#36]
Input [5]: [ws_item_sk#34, ws_bill_addr_sk#35, ws_ext_sales_price#36, ws_sold_date_sk#37, d_date_sk#38]

(49) ReusedExchange [Reuses operator id: 15]
Output [2]: [i_item_sk#39, i_manufact_id#40]

(50) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_item_sk#34]
Right keys [1]: [i_item_sk#39]
Join condition: None

(51) Project [codegen id : 17]
Output [3]: [ws_bill_addr_sk#35, ws_ext_sales_price#36, i_manufact_id#40]
Input [5]: [ws_item_sk#34, ws_bill_addr_sk#35, ws_ext_sales_price#36, i_item_sk#39, i_manufact_id#40]

(52) ReusedExchange [Reuses operator id: 22]
Output [1]: [ca_address_sk#41]

(53) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_bill_addr_sk#35]
Right keys [1]: [ca_address_sk#41]
Join condition: None

(54) Project [codegen id : 17]
Output [2]: [ws_ext_sales_price#36, i_manufact_id#40]
Input [4]: [ws_bill_addr_sk#35, ws_ext_sales_price#36, i_manufact_id#40, ca_address_sk#41]

(55) HashAggregate [codegen id : 17]
Input [2]: [ws_ext_sales_price#36, i_manufact_id#40]
Keys [1]: [i_manufact_id#40]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#36))]
Aggregate Attributes [1]: [sum#42]
Results [2]: [i_manufact_id#40, sum#43]

(56) Exchange
Input [2]: [i_manufact_id#40, sum#43]
Arguments: hashpartitioning(i_manufact_id#40, 5), ENSURE_REQUIREMENTS, [id=#44]

(57) HashAggregate [codegen id : 18]
Input [2]: [i_manufact_id#40, sum#43]
Keys [1]: [i_manufact_id#40]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#36))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#36))#45]
Results [2]: [i_manufact_id#40, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#36))#45,17,2) AS total_sales#46]

(58) Union

(59) HashAggregate [codegen id : 19]
Input [2]: [i_manufact_id#8, total_sales#20]
Keys [1]: [i_manufact_id#8]
Functions [1]: [partial_sum(total_sales#20)]
Aggregate Attributes [2]: [sum#47, isEmpty#48]
Results [3]: [i_manufact_id#8, sum#49, isEmpty#50]

(60) Exchange
Input [3]: [i_manufact_id#8, sum#49, isEmpty#50]
Arguments: hashpartitioning(i_manufact_id#8, 5), ENSURE_REQUIREMENTS, [id=#51]

(61) HashAggregate [codegen id : 20]
Input [3]: [i_manufact_id#8, sum#49, isEmpty#50]
Keys [1]: [i_manufact_id#8]
Functions [1]: [sum(total_sales#20)]
Aggregate Attributes [1]: [sum(total_sales#20)#52]
Results [2]: [i_manufact_id#8, sum(total_sales#20)#52 AS total_sales#53]

(62) TakeOrderedAndProject
Input [2]: [i_manufact_id#8, total_sales#53]
Arguments: 100, [total_sales#53 ASC NULLS FIRST], [i_manufact_id#8, total_sales#53]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#4 IN dynamicpruning#5
BroadcastExchange (67)
+- * Project (66)
   +- * Filter (65)
      +- * ColumnarToRow (64)
         +- Scan parquet default.date_dim (63)


(63) Scan parquet default.date_dim
Output [3]: [d_date_sk#6, d_year#54, d_moy#55]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [EqualTo(d_year,1998), EqualTo(d_moy,5)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(64) ColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#6, d_year#54, d_moy#55]

(65) Filter [codegen id : 1]
Input [3]: [d_date_sk#6, d_year#54, d_moy#55]
Condition : ((d_year#54 = 1998) AND (d_moy#55 = 5))

(66) Project [codegen id : 1]
Output [1]: [d_date_sk#6]
Input [3]: [d_date_sk#6, d_year#54, d_moy#55]

(67) BroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#56]

Subquery:2 Hosting operator id = 28 Hosting Expression = cs_sold_date_sk#24 IN dynamicpruning#5

Subquery:3 Hosting operator id = 43 Hosting Expression = ws_sold_date_sk#37 IN dynamicpruning#5


