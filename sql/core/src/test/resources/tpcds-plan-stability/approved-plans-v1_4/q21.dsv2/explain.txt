== Physical Plan ==
TakeOrderedAndProject (26)
+- * Filter (25)
   +- * HashAggregate (24)
      +- Exchange (23)
         +- * HashAggregate (22)
            +- * Project (21)
               +- * BroadcastHashJoin Inner BuildRight (20)
                  :- * Project (15)
                  :  +- * BroadcastHashJoin Inner BuildRight (14)
                  :     :- * Project (9)
                  :     :  +- * BroadcastHashJoin Inner BuildRight (8)
                  :     :     :- * Project (3)
                  :     :     :  +- * Filter (2)
                  :     :     :     +- BatchScan default.inventory (1)
                  :     :     +- BroadcastExchange (7)
                  :     :        +- * Project (6)
                  :     :           +- * Filter (5)
                  :     :              +- BatchScan default.warehouse (4)
                  :     +- BroadcastExchange (13)
                  :        +- * Project (12)
                  :           +- * Filter (11)
                  :              +- BatchScan default.item (10)
                  +- BroadcastExchange (19)
                     +- * Project (18)
                        +- * Filter (17)
                           +- BatchScan default.date_dim (16)


(1) BatchScan default.inventory
Output [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]
DataFilters: [isnotnull(inv_warehouse_sk#2), isnotnull(inv_item_sk#1)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/inventory]
PartitionFilters: [isnotnull(inv_date_sk#4)]
PushedFilters: [IsNotNull(inv_warehouse_sk), IsNotNull(inv_item_sk)]
ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>

(2) Filter [codegen id : 4]
Input [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]
Condition : (isnotnull(inv_warehouse_sk#2) AND isnotnull(inv_item_sk#1))

(3) Project [codegen id : 4]
Output [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]
Input [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]

(4) BatchScan default.warehouse
Output [2]: [w_warehouse_sk#5, w_warehouse_name#6]
DataFilters: [isnotnull(w_warehouse_sk#5)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>

(5) Filter [codegen id : 1]
Input [2]: [w_warehouse_sk#5, w_warehouse_name#6]
Condition : isnotnull(w_warehouse_sk#5)

(6) Project [codegen id : 1]
Output [2]: [w_warehouse_sk#5, w_warehouse_name#6]
Input [2]: [w_warehouse_sk#5, w_warehouse_name#6]

(7) BroadcastExchange
Input [2]: [w_warehouse_sk#5, w_warehouse_name#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(8) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_warehouse_sk#2]
Right keys [1]: [w_warehouse_sk#5]
Join type: Inner
Join condition: None

(9) Project [codegen id : 4]
Output [4]: [inv_item_sk#1, inv_quantity_on_hand#3, inv_date_sk#4, w_warehouse_name#6]
Input [6]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4, w_warehouse_sk#5, w_warehouse_name#6]

(10) BatchScan default.item
Output [3]: [i_item_sk#7, i_item_id#8, i_current_price#9]
DataFilters: [isnotnull(i_current_price#9), (i_current_price#9 >= 0.99), (i_current_price#9 <= 1.49), isnotnull(i_item_sk#7)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_current_price), GreaterThanOrEqual(i_current_price,0.99), LessThanOrEqual(i_current_price,1.49), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string,i_current_price:decimal(7,2)>

(11) Filter [codegen id : 2]
Input [3]: [i_item_sk#7, i_item_id#8, i_current_price#9]
Condition : (((isnotnull(i_current_price#9) AND (i_current_price#9 >= 0.99)) AND (i_current_price#9 <= 1.49)) AND isnotnull(i_item_sk#7))

(12) Project [codegen id : 2]
Output [2]: [i_item_sk#7, i_item_id#8]
Input [3]: [i_item_sk#7, i_item_id#8, i_current_price#9]

(13) BroadcastExchange
Input [2]: [i_item_sk#7, i_item_id#8]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(14) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_item_sk#1]
Right keys [1]: [i_item_sk#7]
Join type: Inner
Join condition: None

(15) Project [codegen id : 4]
Output [4]: [inv_quantity_on_hand#3, inv_date_sk#4, w_warehouse_name#6, i_item_id#8]
Input [6]: [inv_item_sk#1, inv_quantity_on_hand#3, inv_date_sk#4, w_warehouse_name#6, i_item_sk#7, i_item_id#8]

(16) BatchScan default.date_dim
Output [2]: [d_date_sk#10, d_date#11]
DataFilters: [isnotnull(d_date#11), (d_date#11 >= 2000-02-10), (d_date#11 <= 2000-04-10), isnotnull(d_date_sk#10)]
Format: parquet
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-02-10), LessThanOrEqual(d_date,2000-04-10), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(17) Filter [codegen id : 3]
Input [2]: [d_date_sk#10, d_date#11]
Condition : (((isnotnull(d_date#11) AND (d_date#11 >= 2000-02-10)) AND (d_date#11 <= 2000-04-10)) AND isnotnull(d_date_sk#10))

(18) Project [codegen id : 3]
Output [2]: [d_date_sk#10, d_date#11]
Input [2]: [d_date_sk#10, d_date#11]

(19) BroadcastExchange
Input [2]: [d_date_sk#10, d_date#11]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=3]

(20) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_date_sk#4]
Right keys [1]: [d_date_sk#10]
Join type: Inner
Join condition: None

(21) Project [codegen id : 4]
Output [4]: [inv_quantity_on_hand#3, w_warehouse_name#6, i_item_id#8, d_date#11]
Input [6]: [inv_quantity_on_hand#3, inv_date_sk#4, w_warehouse_name#6, i_item_id#8, d_date_sk#10, d_date#11]

(22) HashAggregate [codegen id : 4]
Input [4]: [inv_quantity_on_hand#3, w_warehouse_name#6, i_item_id#8, d_date#11]
Keys [2]: [w_warehouse_name#6, i_item_id#8]
Functions [2]: [partial_sum(CASE WHEN (d_date#11 < 2000-03-11) THEN inv_quantity_on_hand#3 ELSE 0 END), partial_sum(CASE WHEN (d_date#11 >= 2000-03-11) THEN inv_quantity_on_hand#3 ELSE 0 END)]
Aggregate Attributes [2]: [sum#12, sum#13]
Results [4]: [w_warehouse_name#6, i_item_id#8, sum#14, sum#15]

(23) Exchange
Input [4]: [w_warehouse_name#6, i_item_id#8, sum#14, sum#15]
Arguments: hashpartitioning(w_warehouse_name#6, i_item_id#8, 5), ENSURE_REQUIREMENTS, [plan_id=4]

(24) HashAggregate [codegen id : 5]
Input [4]: [w_warehouse_name#6, i_item_id#8, sum#14, sum#15]
Keys [2]: [w_warehouse_name#6, i_item_id#8]
Functions [2]: [sum(CASE WHEN (d_date#11 < 2000-03-11) THEN inv_quantity_on_hand#3 ELSE 0 END), sum(CASE WHEN (d_date#11 >= 2000-03-11) THEN inv_quantity_on_hand#3 ELSE 0 END)]
Aggregate Attributes [2]: [sum(CASE WHEN (d_date#11 < 2000-03-11) THEN inv_quantity_on_hand#3 ELSE 0 END)#16, sum(CASE WHEN (d_date#11 >= 2000-03-11) THEN inv_quantity_on_hand#3 ELSE 0 END)#17]
Results [4]: [w_warehouse_name#6, i_item_id#8, sum(CASE WHEN (d_date#11 < 2000-03-11) THEN inv_quantity_on_hand#3 ELSE 0 END)#16 AS inv_before#18, sum(CASE WHEN (d_date#11 >= 2000-03-11) THEN inv_quantity_on_hand#3 ELSE 0 END)#17 AS inv_after#19]

(25) Filter [codegen id : 5]
Input [4]: [w_warehouse_name#6, i_item_id#8, inv_before#18, inv_after#19]
Condition : (CASE WHEN (inv_before#18 > 0) THEN ((cast(inv_after#19 as double) / cast(inv_before#18 as double)) >= 0.666667) END AND CASE WHEN (inv_before#18 > 0) THEN ((cast(inv_after#19 as double) / cast(inv_before#18 as double)) <= 1.5) END)

(26) TakeOrderedAndProject
Input [4]: [w_warehouse_name#6, i_item_id#8, inv_before#18, inv_after#19]
Arguments: 100, [w_warehouse_name#6 ASC NULLS FIRST, i_item_id#8 ASC NULLS FIRST], [w_warehouse_name#6, i_item_id#8, inv_before#18, inv_after#19]

