== Physical Plan ==
TakeOrderedAndProject (35)
+- * HashAggregate (34)
   +- Exchange (33)
      +- * HashAggregate (32)
         +- * Project (31)
            +- * BroadcastHashJoin Inner BuildRight (30)
               :- * Project (24)
               :  +- * BroadcastHashJoin Inner BuildRight (23)
               :     :- * Project (17)
               :     :  +- * BroadcastHashJoin Inner BuildRight (16)
               :     :     :- * Project (10)
               :     :     :  +- * BroadcastHashJoin Inner BuildRight (9)
               :     :     :     :- * Filter (3)
               :     :     :     :  +- * ColumnarToRow (2)
               :     :     :     :     +- Scan parquet default.web_sales (1)
               :     :     :     +- BroadcastExchange (8)
               :     :     :        +- * Project (7)
               :     :     :           +- * Filter (6)
               :     :     :              +- * ColumnarToRow (5)
               :     :     :                 +- Scan parquet default.date_dim (4)
               :     :     +- BroadcastExchange (15)
               :     :        +- * Project (14)
               :     :           +- * Filter (13)
               :     :              +- * ColumnarToRow (12)
               :     :                 +- Scan parquet default.web_site (11)
               :     +- BroadcastExchange (22)
               :        +- * Project (21)
               :           +- * Filter (20)
               :              +- * ColumnarToRow (19)
               :                 +- Scan parquet default.ship_mode (18)
               +- BroadcastExchange (29)
                  +- * Project (28)
                     +- * Filter (27)
                        +- * ColumnarToRow (26)
                           +- Scan parquet default.warehouse (25)


(1) Scan parquet default.web_sales
Output [5]: [ws_sold_date_sk#1, ws_ship_date_sk#2, ws_web_site_sk#3, ws_ship_mode_sk#4, ws_warehouse_sk#5]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_sales]
PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_ship_mode_sk), IsNotNull(ws_web_site_sk), IsNotNull(ws_ship_date_sk)]
ReadSchema: struct<ws_sold_date_sk:int,ws_ship_date_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int>

(2) ColumnarToRow [codegen id : 5]
Input [5]: [ws_sold_date_sk#1, ws_ship_date_sk#2, ws_web_site_sk#3, ws_ship_mode_sk#4, ws_warehouse_sk#5]

(3) Filter [codegen id : 5]
Input [5]: [ws_sold_date_sk#1, ws_ship_date_sk#2, ws_web_site_sk#3, ws_ship_mode_sk#4, ws_warehouse_sk#5]
Condition : (((isnotnull(ws_warehouse_sk#5) AND isnotnull(ws_ship_mode_sk#4)) AND isnotnull(ws_web_site_sk#3)) AND isnotnull(ws_ship_date_sk#2))

(4) Scan parquet default.date_dim
Output [2]: [d_date_sk#6, d_month_seq#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(5) ColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#6, d_month_seq#7]

(6) Filter [codegen id : 1]
Input [2]: [d_date_sk#6, d_month_seq#7]
Condition : (((isnotnull(d_month_seq#7) AND (d_month_seq#7 >= 1200)) AND (d_month_seq#7 <= 1211)) AND isnotnull(d_date_sk#6))

(7) Project [codegen id : 1]
Output [1]: [d_date_sk#6]
Input [2]: [d_date_sk#6, d_month_seq#7]

(8) BroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#8]

(9) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ws_ship_date_sk#2]
Right keys [1]: [d_date_sk#6]
Join condition: None

(10) Project [codegen id : 5]
Output [5]: [ws_sold_date_sk#1, ws_ship_date_sk#2, ws_web_site_sk#3, ws_ship_mode_sk#4, ws_warehouse_sk#5]
Input [6]: [ws_sold_date_sk#1, ws_ship_date_sk#2, ws_web_site_sk#3, ws_ship_mode_sk#4, ws_warehouse_sk#5, d_date_sk#6]

(11) Scan parquet default.web_site
Output [2]: [web_site_sk#9, web_name#10]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_site]
PushedFilters: [IsNotNull(web_site_sk)]
ReadSchema: struct<web_site_sk:int,web_name:string>

(12) ColumnarToRow [codegen id : 2]
Input [2]: [web_site_sk#9, web_name#10]

(13) Filter [codegen id : 2]
Input [2]: [web_site_sk#9, web_name#10]
Condition : isnotnull(web_site_sk#9)

(14) Project [codegen id : 2]
Output [2]: [web_site_sk#9, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, lengthCheck, web_name#10, 50, false, true) AS web_name#11]
Input [2]: [web_site_sk#9, web_name#10]

(15) BroadcastExchange
Input [2]: [web_site_sk#9, web_name#11]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#12]

(16) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ws_web_site_sk#3]
Right keys [1]: [web_site_sk#9]
Join condition: None

(17) Project [codegen id : 5]
Output [5]: [ws_sold_date_sk#1, ws_ship_date_sk#2, ws_ship_mode_sk#4, ws_warehouse_sk#5, web_name#11]
Input [7]: [ws_sold_date_sk#1, ws_ship_date_sk#2, ws_web_site_sk#3, ws_ship_mode_sk#4, ws_warehouse_sk#5, web_site_sk#9, web_name#11]

(18) Scan parquet default.ship_mode
Output [2]: [sm_ship_mode_sk#13, sm_type#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/ship_mode]
PushedFilters: [IsNotNull(sm_ship_mode_sk)]
ReadSchema: struct<sm_ship_mode_sk:int,sm_type:string>

(19) ColumnarToRow [codegen id : 3]
Input [2]: [sm_ship_mode_sk#13, sm_type#14]

(20) Filter [codegen id : 3]
Input [2]: [sm_ship_mode_sk#13, sm_type#14]
Condition : isnotnull(sm_ship_mode_sk#13)

(21) Project [codegen id : 3]
Output [2]: [sm_ship_mode_sk#13, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, sm_type#14, 30, false, true) AS sm_type#15]
Input [2]: [sm_ship_mode_sk#13, sm_type#14]

(22) BroadcastExchange
Input [2]: [sm_ship_mode_sk#13, sm_type#15]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#16]

(23) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ws_ship_mode_sk#4]
Right keys [1]: [sm_ship_mode_sk#13]
Join condition: None

(24) Project [codegen id : 5]
Output [5]: [ws_sold_date_sk#1, ws_ship_date_sk#2, ws_warehouse_sk#5, web_name#11, sm_type#15]
Input [7]: [ws_sold_date_sk#1, ws_ship_date_sk#2, ws_ship_mode_sk#4, ws_warehouse_sk#5, web_name#11, sm_ship_mode_sk#13, sm_type#15]

(25) Scan parquet default.warehouse
Output [2]: [w_warehouse_sk#17, w_warehouse_name#18]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>

(26) ColumnarToRow [codegen id : 4]
Input [2]: [w_warehouse_sk#17, w_warehouse_name#18]

(27) Filter [codegen id : 4]
Input [2]: [w_warehouse_sk#17, w_warehouse_name#18]
Condition : isnotnull(w_warehouse_sk#17)

(28) Project [codegen id : 4]
Output [2]: [w_warehouse_sk#17, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, lengthCheck, w_warehouse_name#18, 20, false, true) AS w_warehouse_name#19]
Input [2]: [w_warehouse_sk#17, w_warehouse_name#18]

(29) BroadcastExchange
Input [2]: [w_warehouse_sk#17, w_warehouse_name#19]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#20]

(30) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ws_warehouse_sk#5]
Right keys [1]: [w_warehouse_sk#17]
Join condition: None

(31) Project [codegen id : 5]
Output [5]: [ws_sold_date_sk#1, ws_ship_date_sk#2, w_warehouse_name#19, sm_type#15, web_name#11]
Input [7]: [ws_sold_date_sk#1, ws_ship_date_sk#2, ws_warehouse_sk#5, web_name#11, sm_type#15, w_warehouse_sk#17, w_warehouse_name#19]

(32) HashAggregate [codegen id : 5]
Input [5]: [ws_sold_date_sk#1, ws_ship_date_sk#2, w_warehouse_name#19, sm_type#15, web_name#11]
Keys [3]: [substr(w_warehouse_name#19, 1, 20) AS substr(w_warehouse_name#19, 1, 20)#21, sm_type#15, web_name#11]
Functions [5]: [partial_sum(CASE WHEN ((ws_ship_date_sk#2 - ws_sold_date_sk#1) <= 30) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((ws_ship_date_sk#2 - ws_sold_date_sk#1) > 30) AND ((ws_ship_date_sk#2 - ws_sold_date_sk#1) <= 60)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((ws_ship_date_sk#2 - ws_sold_date_sk#1) > 60) AND ((ws_ship_date_sk#2 - ws_sold_date_sk#1) <= 90)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((ws_ship_date_sk#2 - ws_sold_date_sk#1) > 90) AND ((ws_ship_date_sk#2 - ws_sold_date_sk#1) <= 120)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN ((ws_ship_date_sk#2 - ws_sold_date_sk#1) > 120) THEN 1 ELSE 0 END)]
Aggregate Attributes [5]: [sum#22, sum#23, sum#24, sum#25, sum#26]
Results [8]: [substr(w_warehouse_name#19, 1, 20)#21, sm_type#15, web_name#11, sum#27, sum#28, sum#29, sum#30, sum#31]

(33) Exchange
Input [8]: [substr(w_warehouse_name#19, 1, 20)#21, sm_type#15, web_name#11, sum#27, sum#28, sum#29, sum#30, sum#31]
Arguments: hashpartitioning(substr(w_warehouse_name#19, 1, 20)#21, sm_type#15, web_name#11, 5), ENSURE_REQUIREMENTS, [id=#32]

(34) HashAggregate [codegen id : 6]
Input [8]: [substr(w_warehouse_name#19, 1, 20)#21, sm_type#15, web_name#11, sum#27, sum#28, sum#29, sum#30, sum#31]
Keys [3]: [substr(w_warehouse_name#19, 1, 20)#21, sm_type#15, web_name#11]
Functions [5]: [sum(CASE WHEN ((ws_ship_date_sk#2 - ws_sold_date_sk#1) <= 30) THEN 1 ELSE 0 END), sum(CASE WHEN (((ws_ship_date_sk#2 - ws_sold_date_sk#1) > 30) AND ((ws_ship_date_sk#2 - ws_sold_date_sk#1) <= 60)) THEN 1 ELSE 0 END), sum(CASE WHEN (((ws_ship_date_sk#2 - ws_sold_date_sk#1) > 60) AND ((ws_ship_date_sk#2 - ws_sold_date_sk#1) <= 90)) THEN 1 ELSE 0 END), sum(CASE WHEN (((ws_ship_date_sk#2 - ws_sold_date_sk#1) > 90) AND ((ws_ship_date_sk#2 - ws_sold_date_sk#1) <= 120)) THEN 1 ELSE 0 END), sum(CASE WHEN ((ws_ship_date_sk#2 - ws_sold_date_sk#1) > 120) THEN 1 ELSE 0 END)]
Aggregate Attributes [5]: [sum(CASE WHEN ((ws_ship_date_sk#2 - ws_sold_date_sk#1) <= 30) THEN 1 ELSE 0 END)#33, sum(CASE WHEN (((ws_ship_date_sk#2 - ws_sold_date_sk#1) > 30) AND ((ws_ship_date_sk#2 - ws_sold_date_sk#1) <= 60)) THEN 1 ELSE 0 END)#34, sum(CASE WHEN (((ws_ship_date_sk#2 - ws_sold_date_sk#1) > 60) AND ((ws_ship_date_sk#2 - ws_sold_date_sk#1) <= 90)) THEN 1 ELSE 0 END)#35, sum(CASE WHEN (((ws_ship_date_sk#2 - ws_sold_date_sk#1) > 90) AND ((ws_ship_date_sk#2 - ws_sold_date_sk#1) <= 120)) THEN 1 ELSE 0 END)#36, sum(CASE WHEN ((ws_ship_date_sk#2 - ws_sold_date_sk#1) > 120) THEN 1 ELSE 0 END)#37]
Results [8]: [substr(w_warehouse_name#19, 1, 20)#21 AS substr(w_warehouse_name, 1, 20)#38, sm_type#15, web_name#11, sum(CASE WHEN ((ws_ship_date_sk#2 - ws_sold_date_sk#1) <= 30) THEN 1 ELSE 0 END)#33 AS 30 days #39, sum(CASE WHEN (((ws_ship_date_sk#2 - ws_sold_date_sk#1) > 30) AND ((ws_ship_date_sk#2 - ws_sold_date_sk#1) <= 60)) THEN 1 ELSE 0 END)#34 AS 31 - 60 days #40, sum(CASE WHEN (((ws_ship_date_sk#2 - ws_sold_date_sk#1) > 60) AND ((ws_ship_date_sk#2 - ws_sold_date_sk#1) <= 90)) THEN 1 ELSE 0 END)#35 AS 61 - 90 days #41, sum(CASE WHEN (((ws_ship_date_sk#2 - ws_sold_date_sk#1) > 90) AND ((ws_ship_date_sk#2 - ws_sold_date_sk#1) <= 120)) THEN 1 ELSE 0 END)#36 AS 91 - 120 days #42, sum(CASE WHEN ((ws_ship_date_sk#2 - ws_sold_date_sk#1) > 120) THEN 1 ELSE 0 END)#37 AS >120 days #43]

(35) TakeOrderedAndProject
Input [8]: [substr(w_warehouse_name, 1, 20)#38, sm_type#15, web_name#11, 30 days #39, 31 - 60 days #40, 61 - 90 days #41, 91 - 120 days #42, >120 days #43]
Arguments: 100, [substr(w_warehouse_name, 1, 20)#38 ASC NULLS FIRST, sm_type#15 ASC NULLS FIRST, web_name#11 ASC NULLS FIRST], [substr(w_warehouse_name, 1, 20)#38, sm_type#15, web_name#11, 30 days #39, 31 - 60 days #40, 61 - 90 days #41, 91 - 120 days #42, >120 days #43]

