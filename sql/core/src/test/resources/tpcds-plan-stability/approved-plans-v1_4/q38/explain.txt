== Physical Plan ==
* HashAggregate (53)
+- Exchange (52)
   +- * HashAggregate (51)
      +- * Project (50)
         +- * BroadcastHashJoin LeftSemi BuildRight (49)
            :- * HashAggregate (35)
            :  +- * HashAggregate (34)
            :     +- * BroadcastHashJoin LeftSemi BuildRight (33)
            :        :- * HashAggregate (19)
            :        :  +- Exchange (18)
            :        :     +- * HashAggregate (17)
            :        :        +- * Project (16)
            :        :           +- * BroadcastHashJoin Inner BuildRight (15)
            :        :              :- * Project (10)
            :        :              :  +- * BroadcastHashJoin Inner BuildRight (9)
            :        :              :     :- * Filter (3)
            :        :              :     :  +- * ColumnarToRow (2)
            :        :              :     :     +- Scan parquet default.store_sales (1)
            :        :              :     +- BroadcastExchange (8)
            :        :              :        +- * Project (7)
            :        :              :           +- * Filter (6)
            :        :              :              +- * ColumnarToRow (5)
            :        :              :                 +- Scan parquet default.date_dim (4)
            :        :              +- BroadcastExchange (14)
            :        :                 +- * Filter (13)
            :        :                    +- * ColumnarToRow (12)
            :        :                       +- Scan parquet default.customer (11)
            :        +- BroadcastExchange (32)
            :           +- * HashAggregate (31)
            :              +- Exchange (30)
            :                 +- * HashAggregate (29)
            :                    +- * Project (28)
            :                       +- * BroadcastHashJoin Inner BuildRight (27)
            :                          :- * Project (25)
            :                          :  +- * BroadcastHashJoin Inner BuildRight (24)
            :                          :     :- * Filter (22)
            :                          :     :  +- * ColumnarToRow (21)
            :                          :     :     +- Scan parquet default.catalog_sales (20)
            :                          :     +- ReusedExchange (23)
            :                          +- ReusedExchange (26)
            +- BroadcastExchange (48)
               +- * HashAggregate (47)
                  +- Exchange (46)
                     +- * HashAggregate (45)
                        +- * Project (44)
                           +- * BroadcastHashJoin Inner BuildRight (43)
                              :- * Project (41)
                              :  +- * BroadcastHashJoin Inner BuildRight (40)
                              :     :- * Filter (38)
                              :     :  +- * ColumnarToRow (37)
                              :     :     +- Scan parquet default.web_sales (36)
                              :     +- ReusedExchange (39)
                              +- ReusedExchange (42)


(1) Scan parquet default.store_sales
Output [2]: [ss_sold_date_sk#1, ss_customer_sk#2]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int>

(2) ColumnarToRow [codegen id : 3]
Input [2]: [ss_sold_date_sk#1, ss_customer_sk#2]

(3) Filter [codegen id : 3]
Input [2]: [ss_sold_date_sk#1, ss_customer_sk#2]
Condition : (isnotnull(ss_sold_date_sk#1) AND isnotnull(ss_customer_sk#2))

(4) Scan parquet default.date_dim
Output [3]: [d_date_sk#3, d_date#4, d_month_seq#5]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>

(5) ColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#3, d_date#4, d_month_seq#5]

(6) Filter [codegen id : 1]
Input [3]: [d_date_sk#3, d_date#4, d_month_seq#5]
Condition : (((isnotnull(d_month_seq#5) AND (d_month_seq#5 >= 1200)) AND (d_month_seq#5 <= 1211)) AND isnotnull(d_date_sk#3))

(7) Project [codegen id : 1]
Output [2]: [d_date_sk#3, d_date#4]
Input [3]: [d_date_sk#3, d_date#4, d_month_seq#5]

(8) BroadcastExchange
Input [2]: [d_date_sk#3, d_date#4]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#6]

(9) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_sold_date_sk#1]
Right keys [1]: [d_date_sk#3]
Join condition: None

(10) Project [codegen id : 3]
Output [2]: [ss_customer_sk#2, d_date#4]
Input [4]: [ss_sold_date_sk#1, ss_customer_sk#2, d_date_sk#3, d_date#4]

(11) Scan parquet default.customer
Output [3]: [c_customer_sk#7, c_first_name#8, c_last_name#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>

(12) ColumnarToRow [codegen id : 2]
Input [3]: [c_customer_sk#7, c_first_name#8, c_last_name#9]

(13) Filter [codegen id : 2]
Input [3]: [c_customer_sk#7, c_first_name#8, c_last_name#9]
Condition : isnotnull(c_customer_sk#7)

(14) BroadcastExchange
Input [3]: [c_customer_sk#7, c_first_name#8, c_last_name#9]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#10]

(15) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_customer_sk#2]
Right keys [1]: [c_customer_sk#7]
Join condition: None

(16) Project [codegen id : 3]
Output [3]: [c_last_name#9, c_first_name#8, d_date#4]
Input [5]: [ss_customer_sk#2, d_date#4, c_customer_sk#7, c_first_name#8, c_last_name#9]

(17) HashAggregate [codegen id : 3]
Input [3]: [c_last_name#9, c_first_name#8, d_date#4]
Keys [3]: [c_last_name#9, c_first_name#8, d_date#4]
Functions: []
Aggregate Attributes: []
Results [3]: [c_last_name#9, c_first_name#8, d_date#4]

(18) Exchange
Input [3]: [c_last_name#9, c_first_name#8, d_date#4]
Arguments: hashpartitioning(c_last_name#9, c_first_name#8, d_date#4, 5), ENSURE_REQUIREMENTS, [id=#11]

(19) HashAggregate [codegen id : 12]
Input [3]: [c_last_name#9, c_first_name#8, d_date#4]
Keys [3]: [c_last_name#9, c_first_name#8, d_date#4]
Functions: []
Aggregate Attributes: []
Results [3]: [c_last_name#9, c_first_name#8, d_date#4]

(20) Scan parquet default.catalog_sales
Output [2]: [cs_sold_date_sk#12, cs_bill_customer_sk#13]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_sales]
PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_bill_customer_sk)]
ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int>

(21) ColumnarToRow [codegen id : 6]
Input [2]: [cs_sold_date_sk#12, cs_bill_customer_sk#13]

(22) Filter [codegen id : 6]
Input [2]: [cs_sold_date_sk#12, cs_bill_customer_sk#13]
Condition : (isnotnull(cs_sold_date_sk#12) AND isnotnull(cs_bill_customer_sk#13))

(23) ReusedExchange [Reuses operator id: 8]
Output [2]: [d_date_sk#14, d_date#15]

(24) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [cs_sold_date_sk#12]
Right keys [1]: [d_date_sk#14]
Join condition: None

(25) Project [codegen id : 6]
Output [2]: [cs_bill_customer_sk#13, d_date#15]
Input [4]: [cs_sold_date_sk#12, cs_bill_customer_sk#13, d_date_sk#14, d_date#15]

(26) ReusedExchange [Reuses operator id: 14]
Output [3]: [c_customer_sk#16, c_first_name#17, c_last_name#18]

(27) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [cs_bill_customer_sk#13]
Right keys [1]: [c_customer_sk#16]
Join condition: None

(28) Project [codegen id : 6]
Output [3]: [c_last_name#18, c_first_name#17, d_date#15]
Input [5]: [cs_bill_customer_sk#13, d_date#15, c_customer_sk#16, c_first_name#17, c_last_name#18]

(29) HashAggregate [codegen id : 6]
Input [3]: [c_last_name#18, c_first_name#17, d_date#15]
Keys [3]: [c_last_name#18, c_first_name#17, d_date#15]
Functions: []
Aggregate Attributes: []
Results [3]: [c_last_name#18, c_first_name#17, d_date#15]

(30) Exchange
Input [3]: [c_last_name#18, c_first_name#17, d_date#15]
Arguments: hashpartitioning(c_last_name#18, c_first_name#17, d_date#15, 5), ENSURE_REQUIREMENTS, [id=#19]

(31) HashAggregate [codegen id : 7]
Input [3]: [c_last_name#18, c_first_name#17, d_date#15]
Keys [3]: [c_last_name#18, c_first_name#17, d_date#15]
Functions: []
Aggregate Attributes: []
Results [3]: [c_last_name#18, c_first_name#17, d_date#15]

(32) BroadcastExchange
Input [3]: [c_last_name#18, c_first_name#17, d_date#15]
Arguments: HashedRelationBroadcastMode(List(coalesce(input[0, string, true], ), isnull(input[0, string, true]), coalesce(input[1, string, true], ), isnull(input[1, string, true]), coalesce(input[2, date, true], 0), isnull(input[2, date, true])),false), [id=#20]

(33) BroadcastHashJoin [codegen id : 12]
Left keys [6]: [coalesce(c_last_name#9, ), isnull(c_last_name#9), coalesce(c_first_name#8, ), isnull(c_first_name#8), coalesce(d_date#4, 0), isnull(d_date#4)]
Right keys [6]: [coalesce(c_last_name#18, ), isnull(c_last_name#18), coalesce(c_first_name#17, ), isnull(c_first_name#17), coalesce(d_date#15, 0), isnull(d_date#15)]
Join condition: None

(34) HashAggregate [codegen id : 12]
Input [3]: [c_last_name#9, c_first_name#8, d_date#4]
Keys [3]: [c_last_name#9, c_first_name#8, d_date#4]
Functions: []
Aggregate Attributes: []
Results [3]: [c_last_name#9, c_first_name#8, d_date#4]

(35) HashAggregate [codegen id : 12]
Input [3]: [c_last_name#9, c_first_name#8, d_date#4]
Keys [3]: [c_last_name#9, c_first_name#8, d_date#4]
Functions: []
Aggregate Attributes: []
Results [3]: [c_last_name#9, c_first_name#8, d_date#4]

(36) Scan parquet default.web_sales
Output [2]: [ws_sold_date_sk#21, ws_bill_customer_sk#22]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_sales]
PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_customer_sk)]
ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int>

(37) ColumnarToRow [codegen id : 10]
Input [2]: [ws_sold_date_sk#21, ws_bill_customer_sk#22]

(38) Filter [codegen id : 10]
Input [2]: [ws_sold_date_sk#21, ws_bill_customer_sk#22]
Condition : (isnotnull(ws_sold_date_sk#21) AND isnotnull(ws_bill_customer_sk#22))

(39) ReusedExchange [Reuses operator id: 8]
Output [2]: [d_date_sk#23, d_date#24]

(40) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [ws_sold_date_sk#21]
Right keys [1]: [d_date_sk#23]
Join condition: None

(41) Project [codegen id : 10]
Output [2]: [ws_bill_customer_sk#22, d_date#24]
Input [4]: [ws_sold_date_sk#21, ws_bill_customer_sk#22, d_date_sk#23, d_date#24]

(42) ReusedExchange [Reuses operator id: 14]
Output [3]: [c_customer_sk#25, c_first_name#26, c_last_name#27]

(43) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [ws_bill_customer_sk#22]
Right keys [1]: [c_customer_sk#25]
Join condition: None

(44) Project [codegen id : 10]
Output [3]: [c_last_name#27, c_first_name#26, d_date#24]
Input [5]: [ws_bill_customer_sk#22, d_date#24, c_customer_sk#25, c_first_name#26, c_last_name#27]

(45) HashAggregate [codegen id : 10]
Input [3]: [c_last_name#27, c_first_name#26, d_date#24]
Keys [3]: [c_last_name#27, c_first_name#26, d_date#24]
Functions: []
Aggregate Attributes: []
Results [3]: [c_last_name#27, c_first_name#26, d_date#24]

(46) Exchange
Input [3]: [c_last_name#27, c_first_name#26, d_date#24]
Arguments: hashpartitioning(c_last_name#27, c_first_name#26, d_date#24, 5), ENSURE_REQUIREMENTS, [id=#28]

(47) HashAggregate [codegen id : 11]
Input [3]: [c_last_name#27, c_first_name#26, d_date#24]
Keys [3]: [c_last_name#27, c_first_name#26, d_date#24]
Functions: []
Aggregate Attributes: []
Results [3]: [c_last_name#27, c_first_name#26, d_date#24]

(48) BroadcastExchange
Input [3]: [c_last_name#27, c_first_name#26, d_date#24]
Arguments: HashedRelationBroadcastMode(List(coalesce(input[0, string, true], ), isnull(input[0, string, true]), coalesce(input[1, string, true], ), isnull(input[1, string, true]), coalesce(input[2, date, true], 0), isnull(input[2, date, true])),false), [id=#29]

(49) BroadcastHashJoin [codegen id : 12]
Left keys [6]: [coalesce(c_last_name#9, ), isnull(c_last_name#9), coalesce(c_first_name#8, ), isnull(c_first_name#8), coalesce(d_date#4, 0), isnull(d_date#4)]
Right keys [6]: [coalesce(c_last_name#27, ), isnull(c_last_name#27), coalesce(c_first_name#26, ), isnull(c_first_name#26), coalesce(d_date#24, 0), isnull(d_date#24)]
Join condition: None

(50) Project [codegen id : 12]
Output: []
Input [3]: [c_last_name#9, c_first_name#8, d_date#4]

(51) HashAggregate [codegen id : 12]
Input: []
Keys: []
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#30]
Results [1]: [count#31]

(52) Exchange
Input [1]: [count#31]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [id=#32]

(53) HashAggregate [codegen id : 13]
Input [1]: [count#31]
Keys: []
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#33]
Results [1]: [count(1)#33 AS count(1)#34]

