== Physical Plan ==
* Project (29)
+- * Sort (28)
   +- Exchange (27)
      +- * Project (26)
         +- Window (25)
            +- * Sort (24)
               +- Exchange (23)
                  +- * HashAggregate (22)
                     +- Exchange (21)
                        +- * HashAggregate (20)
                           +- * Project (19)
                              +- * BroadcastHashJoin Inner BuildRight (18)
                                 :- * Project (12)
                                 :  +- * SortMergeJoin Inner (11)
                                 :     :- * Sort (5)
                                 :     :  +- Exchange (4)
                                 :     :     +- * Filter (3)
                                 :     :        +- * ColumnarToRow (2)
                                 :     :           +- Scan parquet default.item (1)
                                 :     +- * Sort (10)
                                 :        +- Exchange (9)
                                 :           +- * Filter (8)
                                 :              +- * ColumnarToRow (7)
                                 :                 +- Scan parquet default.store_sales (6)
                                 +- BroadcastExchange (17)
                                    +- * Project (16)
                                       +- * Filter (15)
                                          +- * ColumnarToRow (14)
                                             +- Scan parquet default.date_dim (13)


(1) Scan parquet default.item
Output [6]: [i_item_sk#1, i_item_id#2, i_item_desc#3, i_current_price#4, i_class#5, i_category#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [In(i_category, [Sports,Books,Home]), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:string,i_category:string>

(2) ColumnarToRow [codegen id : 1]
Input [6]: [i_item_sk#1, i_item_id#2, i_item_desc#3, i_current_price#4, i_class#5, i_category#6]

(3) Filter [codegen id : 1]
Input [6]: [i_item_sk#1, i_item_id#2, i_item_desc#3, i_current_price#4, i_class#5, i_category#6]
Condition : (i_category#6 IN (Sports,Books,Home) AND isnotnull(i_item_sk#1))

(4) Exchange
Input [6]: [i_item_sk#1, i_item_id#2, i_item_desc#3, i_current_price#4, i_class#5, i_category#6]
Arguments: hashpartitioning(i_item_sk#1, 5), true, [id=#7]

(5) Sort [codegen id : 2]
Input [6]: [i_item_sk#1, i_item_id#2, i_item_desc#3, i_current_price#4, i_class#5, i_category#6]
Arguments: [i_item_sk#1 ASC NULLS FIRST], false, 0

(6) Scan parquet default.store_sales
Output [3]: [ss_sold_date_sk#8, ss_item_sk#9, ss_ext_sales_price#10]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)]
ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>

(7) ColumnarToRow [codegen id : 3]
Input [3]: [ss_sold_date_sk#8, ss_item_sk#9, ss_ext_sales_price#10]

(8) Filter [codegen id : 3]
Input [3]: [ss_sold_date_sk#8, ss_item_sk#9, ss_ext_sales_price#10]
Condition : (isnotnull(ss_item_sk#9) AND isnotnull(ss_sold_date_sk#8))

(9) Exchange
Input [3]: [ss_sold_date_sk#8, ss_item_sk#9, ss_ext_sales_price#10]
Arguments: hashpartitioning(ss_item_sk#9, 5), true, [id=#11]

(10) Sort [codegen id : 4]
Input [3]: [ss_sold_date_sk#8, ss_item_sk#9, ss_ext_sales_price#10]
Arguments: [ss_item_sk#9 ASC NULLS FIRST], false, 0

(11) SortMergeJoin [codegen id : 6]
Left keys [1]: [i_item_sk#1]
Right keys [1]: [ss_item_sk#9]
Join condition: None

(12) Project [codegen id : 6]
Output [7]: [i_item_id#2, i_item_desc#3, i_current_price#4, i_class#5, i_category#6, ss_sold_date_sk#8, ss_ext_sales_price#10]
Input [9]: [i_item_sk#1, i_item_id#2, i_item_desc#3, i_current_price#4, i_class#5, i_category#6, ss_sold_date_sk#8, ss_item_sk#9, ss_ext_sales_price#10]

(13) Scan parquet default.date_dim
Output [2]: [d_date_sk#12, d_date#13]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1999-02-22), LessThanOrEqual(d_date,1999-03-24), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(14) ColumnarToRow [codegen id : 5]
Input [2]: [d_date_sk#12, d_date#13]

(15) Filter [codegen id : 5]
Input [2]: [d_date_sk#12, d_date#13]
Condition : (((isnotnull(d_date#13) AND (d_date#13 >= 10644)) AND (d_date#13 <= 10674)) AND isnotnull(d_date_sk#12))

(16) Project [codegen id : 5]
Output [1]: [d_date_sk#12]
Input [2]: [d_date_sk#12, d_date#13]

(17) BroadcastExchange
Input [1]: [d_date_sk#12]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#14]

(18) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_sold_date_sk#8]
Right keys [1]: [d_date_sk#12]
Join condition: None

(19) Project [codegen id : 6]
Output [6]: [ss_ext_sales_price#10, i_item_id#2, i_item_desc#3, i_current_price#4, i_class#5, i_category#6]
Input [8]: [i_item_id#2, i_item_desc#3, i_current_price#4, i_class#5, i_category#6, ss_sold_date_sk#8, ss_ext_sales_price#10, d_date_sk#12]

(20) HashAggregate [codegen id : 6]
Input [6]: [ss_ext_sales_price#10, i_item_id#2, i_item_desc#3, i_current_price#4, i_class#5, i_category#6]
Keys [5]: [i_item_id#2, i_item_desc#3, i_category#6, i_class#5, i_current_price#4]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#10))]
Aggregate Attributes [1]: [sum#15]
Results [6]: [i_item_id#2, i_item_desc#3, i_category#6, i_class#5, i_current_price#4, sum#16]

(21) Exchange
Input [6]: [i_item_id#2, i_item_desc#3, i_category#6, i_class#5, i_current_price#4, sum#16]
Arguments: hashpartitioning(i_item_id#2, i_item_desc#3, i_category#6, i_class#5, i_current_price#4, 5), true, [id=#17]

(22) HashAggregate [codegen id : 7]
Input [6]: [i_item_id#2, i_item_desc#3, i_category#6, i_class#5, i_current_price#4, sum#16]
Keys [5]: [i_item_id#2, i_item_desc#3, i_category#6, i_class#5, i_current_price#4]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#10))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#10))#18]
Results [8]: [i_item_desc#3, i_category#6, i_class#5, i_current_price#4, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#10))#18,17,2) AS itemrevenue#19, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#10))#18,17,2) AS _w0#20, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#10))#18,17,2) AS _w1#21, i_item_id#2]

(23) Exchange
Input [8]: [i_item_desc#3, i_category#6, i_class#5, i_current_price#4, itemrevenue#19, _w0#20, _w1#21, i_item_id#2]
Arguments: hashpartitioning(i_class#5, 5), true, [id=#22]

(24) Sort [codegen id : 8]
Input [8]: [i_item_desc#3, i_category#6, i_class#5, i_current_price#4, itemrevenue#19, _w0#20, _w1#21, i_item_id#2]
Arguments: [i_class#5 ASC NULLS FIRST], false, 0

(25) Window
Input [8]: [i_item_desc#3, i_category#6, i_class#5, i_current_price#4, itemrevenue#19, _w0#20, _w1#21, i_item_id#2]
Arguments: [sum(_w1#21) windowspecdefinition(i_class#5, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#23], [i_class#5]

(26) Project [codegen id : 9]
Output [7]: [i_item_desc#3, i_category#6, i_class#5, i_current_price#4, itemrevenue#19, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#20) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#23)), DecimalType(38,17), true) AS revenueratio#24, i_item_id#2]
Input [9]: [i_item_desc#3, i_category#6, i_class#5, i_current_price#4, itemrevenue#19, _w0#20, _w1#21, i_item_id#2, _we0#23]

(27) Exchange
Input [7]: [i_item_desc#3, i_category#6, i_class#5, i_current_price#4, itemrevenue#19, revenueratio#24, i_item_id#2]
Arguments: rangepartitioning(i_category#6 ASC NULLS FIRST, i_class#5 ASC NULLS FIRST, i_item_id#2 ASC NULLS FIRST, i_item_desc#3 ASC NULLS FIRST, revenueratio#24 ASC NULLS FIRST, 5), true, [id=#25]

(28) Sort [codegen id : 10]
Input [7]: [i_item_desc#3, i_category#6, i_class#5, i_current_price#4, itemrevenue#19, revenueratio#24, i_item_id#2]
Arguments: [i_category#6 ASC NULLS FIRST, i_class#5 ASC NULLS FIRST, i_item_id#2 ASC NULLS FIRST, i_item_desc#3 ASC NULLS FIRST, revenueratio#24 ASC NULLS FIRST], true, 0

(29) Project [codegen id : 10]
Output [6]: [i_item_desc#3, i_category#6, i_class#5, i_current_price#4, itemrevenue#19, revenueratio#24]
Input [7]: [i_item_desc#3, i_category#6, i_class#5, i_current_price#4, itemrevenue#19, revenueratio#24, i_item_id#2]

