== Physical Plan ==
TakeOrderedAndProject (56)
+- * HashAggregate (55)
   +- Exchange (54)
      +- * HashAggregate (53)
         +- Union (52)
            :- * HashAggregate (33)
            :  +- Exchange (32)
            :     +- * HashAggregate (31)
            :        +- * Project (30)
            :           +- * BroadcastHashJoin Inner BuildRight (29)
            :              :- * Project (23)
            :              :  +- * BroadcastHashJoin Inner BuildRight (22)
            :              :     :- * Project (16)
            :              :     :  +- * BroadcastHashJoin Inner BuildRight (15)
            :              :     :     :- * Project (9)
            :              :     :     :  +- * BroadcastHashJoin Inner BuildRight (8)
            :              :     :     :     :- * Filter (3)
            :              :     :     :     :  +- * ColumnarToRow (2)
            :              :     :     :     :     +- Scan parquet default.web_sales (1)
            :              :     :     :     +- BroadcastExchange (7)
            :              :     :     :        +- * Filter (6)
            :              :     :     :           +- * ColumnarToRow (5)
            :              :     :     :              +- Scan parquet default.date_dim (4)
            :              :     :     +- BroadcastExchange (14)
            :              :     :        +- * Project (13)
            :              :     :           +- * Filter (12)
            :              :     :              +- * ColumnarToRow (11)
            :              :     :                 +- Scan parquet default.ship_mode (10)
            :              :     +- BroadcastExchange (21)
            :              :        +- * Project (20)
            :              :           +- * Filter (19)
            :              :              +- * ColumnarToRow (18)
            :              :                 +- Scan parquet default.time_dim (17)
            :              +- BroadcastExchange (28)
            :                 +- * Project (27)
            :                    +- * Filter (26)
            :                       +- * ColumnarToRow (25)
            :                          +- Scan parquet default.warehouse (24)
            +- * HashAggregate (51)
               +- Exchange (50)
                  +- * HashAggregate (49)
                     +- * Project (48)
                        +- * BroadcastHashJoin Inner BuildRight (47)
                           :- * Project (45)
                           :  +- * BroadcastHashJoin Inner BuildRight (44)
                           :     :- * Project (42)
                           :     :  +- * BroadcastHashJoin Inner BuildRight (41)
                           :     :     :- * Project (39)
                           :     :     :  +- * BroadcastHashJoin Inner BuildRight (38)
                           :     :     :     :- * Filter (36)
                           :     :     :     :  +- * ColumnarToRow (35)
                           :     :     :     :     +- Scan parquet default.catalog_sales (34)
                           :     :     :     +- ReusedExchange (37)
                           :     :     +- ReusedExchange (40)
                           :     +- ReusedExchange (43)
                           +- ReusedExchange (46)


(1) Scan parquet default.web_sales
Output [7]: [ws_sold_date_sk#1, ws_sold_time_sk#2, ws_ship_mode_sk#3, ws_warehouse_sk#4, ws_quantity#5, ws_ext_sales_price#6, ws_net_paid#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_sales]
PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws_sold_time_sk), IsNotNull(ws_ship_mode_sk)]
ReadSchema: struct<ws_sold_date_sk:int,ws_sold_time_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_quantity:int,ws_ext_sales_price:decimal(7,2),ws_net_paid:decimal(7,2)>

(2) ColumnarToRow [codegen id : 5]
Input [7]: [ws_sold_date_sk#1, ws_sold_time_sk#2, ws_ship_mode_sk#3, ws_warehouse_sk#4, ws_quantity#5, ws_ext_sales_price#6, ws_net_paid#7]

(3) Filter [codegen id : 5]
Input [7]: [ws_sold_date_sk#1, ws_sold_time_sk#2, ws_ship_mode_sk#3, ws_warehouse_sk#4, ws_quantity#5, ws_ext_sales_price#6, ws_net_paid#7]
Condition : (((isnotnull(ws_warehouse_sk#4) AND isnotnull(ws_sold_date_sk#1)) AND isnotnull(ws_sold_time_sk#2)) AND isnotnull(ws_ship_mode_sk#3))

(4) Scan parquet default.date_dim
Output [3]: [d_date_sk#8, d_year#9, d_moy#10]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(5) ColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#8, d_year#9, d_moy#10]

(6) Filter [codegen id : 1]
Input [3]: [d_date_sk#8, d_year#9, d_moy#10]
Condition : ((isnotnull(d_year#9) AND (d_year#9 = 2001)) AND isnotnull(d_date_sk#8))

(7) BroadcastExchange
Input [3]: [d_date_sk#8, d_year#9, d_moy#10]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#11]

(8) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ws_sold_date_sk#1]
Right keys [1]: [d_date_sk#8]
Join condition: None

(9) Project [codegen id : 5]
Output [8]: [ws_sold_time_sk#2, ws_ship_mode_sk#3, ws_warehouse_sk#4, ws_quantity#5, ws_ext_sales_price#6, ws_net_paid#7, d_year#9, d_moy#10]
Input [10]: [ws_sold_date_sk#1, ws_sold_time_sk#2, ws_ship_mode_sk#3, ws_warehouse_sk#4, ws_quantity#5, ws_ext_sales_price#6, ws_net_paid#7, d_date_sk#8, d_year#9, d_moy#10]

(10) Scan parquet default.ship_mode
Output [2]: [sm_ship_mode_sk#12, sm_carrier#13]
Batched: true
Location [not included in comparison]/{warehouse_dir}/ship_mode]
PushedFilters: [IsNotNull(sm_ship_mode_sk)]
ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>

(11) ColumnarToRow [codegen id : 2]
Input [2]: [sm_ship_mode_sk#12, sm_carrier#13]

(12) Filter [codegen id : 2]
Input [2]: [sm_ship_mode_sk#12, sm_carrier#13]
Condition : (staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, sm_carrier#13, 20, false, true) IN (DHL                 ,BARIAN              ) AND isnotnull(sm_ship_mode_sk#12))

(13) Project [codegen id : 2]
Output [1]: [sm_ship_mode_sk#12]
Input [2]: [sm_ship_mode_sk#12, sm_carrier#13]

(14) BroadcastExchange
Input [1]: [sm_ship_mode_sk#12]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#14]

(15) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ws_ship_mode_sk#3]
Right keys [1]: [sm_ship_mode_sk#12]
Join condition: None

(16) Project [codegen id : 5]
Output [7]: [ws_sold_time_sk#2, ws_warehouse_sk#4, ws_quantity#5, ws_ext_sales_price#6, ws_net_paid#7, d_year#9, d_moy#10]
Input [9]: [ws_sold_time_sk#2, ws_ship_mode_sk#3, ws_warehouse_sk#4, ws_quantity#5, ws_ext_sales_price#6, ws_net_paid#7, d_year#9, d_moy#10, sm_ship_mode_sk#12]

(17) Scan parquet default.time_dim
Output [2]: [t_time_sk#15, t_time#16]
Batched: true
Location [not included in comparison]/{warehouse_dir}/time_dim]
PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,30838), LessThanOrEqual(t_time,59638), IsNotNull(t_time_sk)]
ReadSchema: struct<t_time_sk:int,t_time:int>

(18) ColumnarToRow [codegen id : 3]
Input [2]: [t_time_sk#15, t_time#16]

(19) Filter [codegen id : 3]
Input [2]: [t_time_sk#15, t_time#16]
Condition : (((isnotnull(t_time#16) AND (t_time#16 >= 30838)) AND (t_time#16 <= 59638)) AND isnotnull(t_time_sk#15))

(20) Project [codegen id : 3]
Output [1]: [t_time_sk#15]
Input [2]: [t_time_sk#15, t_time#16]

(21) BroadcastExchange
Input [1]: [t_time_sk#15]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#17]

(22) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ws_sold_time_sk#2]
Right keys [1]: [t_time_sk#15]
Join condition: None

(23) Project [codegen id : 5]
Output [6]: [ws_warehouse_sk#4, ws_quantity#5, ws_ext_sales_price#6, ws_net_paid#7, d_year#9, d_moy#10]
Input [8]: [ws_sold_time_sk#2, ws_warehouse_sk#4, ws_quantity#5, ws_ext_sales_price#6, ws_net_paid#7, d_year#9, d_moy#10, t_time_sk#15]

(24) Scan parquet default.warehouse
Output [7]: [w_warehouse_sk#18, w_warehouse_name#19, w_warehouse_sq_ft#20, w_city#21, w_county#22, w_state#23, w_country#24]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:string,w_state:string,w_country:string>

(25) ColumnarToRow [codegen id : 4]
Input [7]: [w_warehouse_sk#18, w_warehouse_name#19, w_warehouse_sq_ft#20, w_city#21, w_county#22, w_state#23, w_country#24]

(26) Filter [codegen id : 4]
Input [7]: [w_warehouse_sk#18, w_warehouse_name#19, w_warehouse_sq_ft#20, w_city#21, w_county#22, w_state#23, w_country#24]
Condition : isnotnull(w_warehouse_sk#18)

(27) Project [codegen id : 4]
Output [7]: [w_warehouse_sk#18, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, lengthCheck, w_warehouse_name#19, 20, false, true) AS w_warehouse_name#25, w_warehouse_sq_ft#20, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, lengthCheck, w_city#21, 60, false, true) AS w_city#26, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, lengthCheck, w_county#22, 30, false, true) AS w_county#27, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, paddingWithLengthCheck, w_state#23, 2, false, true) AS w_state#28, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, lengthCheck, w_country#24, 20, false, true) AS w_country#29]
Input [7]: [w_warehouse_sk#18, w_warehouse_name#19, w_warehouse_sq_ft#20, w_city#21, w_county#22, w_state#23, w_country#24]

(28) BroadcastExchange
Input [7]: [w_warehouse_sk#18, w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#30]

(29) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ws_warehouse_sk#4]
Right keys [1]: [w_warehouse_sk#18]
Join condition: None

(30) Project [codegen id : 5]
Output [11]: [ws_quantity#5, ws_ext_sales_price#6, ws_net_paid#7, w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, d_year#9, d_moy#10]
Input [13]: [ws_warehouse_sk#4, ws_quantity#5, ws_ext_sales_price#6, ws_net_paid#7, d_year#9, d_moy#10, w_warehouse_sk#18, w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29]

(31) HashAggregate [codegen id : 5]
Input [11]: [ws_quantity#5, ws_ext_sales_price#6, ws_net_paid#7, w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, d_year#9, d_moy#10]
Keys [7]: [w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, d_year#9]
Functions [24]: [partial_sum(CASE WHEN (d_moy#10 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)]
Aggregate Attributes [48]: [sum#31, isEmpty#32, sum#33, isEmpty#34, sum#35, isEmpty#36, sum#37, isEmpty#38, sum#39, isEmpty#40, sum#41, isEmpty#42, sum#43, isEmpty#44, sum#45, isEmpty#46, sum#47, isEmpty#48, sum#49, isEmpty#50, sum#51, isEmpty#52, sum#53, isEmpty#54, sum#55, isEmpty#56, sum#57, isEmpty#58, sum#59, isEmpty#60, sum#61, isEmpty#62, sum#63, isEmpty#64, sum#65, isEmpty#66, sum#67, isEmpty#68, sum#69, isEmpty#70, sum#71, isEmpty#72, sum#73, isEmpty#74, sum#75, isEmpty#76, sum#77, isEmpty#78]
Results [55]: [w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, d_year#9, sum#79, isEmpty#80, sum#81, isEmpty#82, sum#83, isEmpty#84, sum#85, isEmpty#86, sum#87, isEmpty#88, sum#89, isEmpty#90, sum#91, isEmpty#92, sum#93, isEmpty#94, sum#95, isEmpty#96, sum#97, isEmpty#98, sum#99, isEmpty#100, sum#101, isEmpty#102, sum#103, isEmpty#104, sum#105, isEmpty#106, sum#107, isEmpty#108, sum#109, isEmpty#110, sum#111, isEmpty#112, sum#113, isEmpty#114, sum#115, isEmpty#116, sum#117, isEmpty#118, sum#119, isEmpty#120, sum#121, isEmpty#122, sum#123, isEmpty#124, sum#125, isEmpty#126]

(32) Exchange
Input [55]: [w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, d_year#9, sum#79, isEmpty#80, sum#81, isEmpty#82, sum#83, isEmpty#84, sum#85, isEmpty#86, sum#87, isEmpty#88, sum#89, isEmpty#90, sum#91, isEmpty#92, sum#93, isEmpty#94, sum#95, isEmpty#96, sum#97, isEmpty#98, sum#99, isEmpty#100, sum#101, isEmpty#102, sum#103, isEmpty#104, sum#105, isEmpty#106, sum#107, isEmpty#108, sum#109, isEmpty#110, sum#111, isEmpty#112, sum#113, isEmpty#114, sum#115, isEmpty#116, sum#117, isEmpty#118, sum#119, isEmpty#120, sum#121, isEmpty#122, sum#123, isEmpty#124, sum#125, isEmpty#126]
Arguments: hashpartitioning(w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, d_year#9, 5), ENSURE_REQUIREMENTS, [id=#127]

(33) HashAggregate [codegen id : 6]
Input [55]: [w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, d_year#9, sum#79, isEmpty#80, sum#81, isEmpty#82, sum#83, isEmpty#84, sum#85, isEmpty#86, sum#87, isEmpty#88, sum#89, isEmpty#90, sum#91, isEmpty#92, sum#93, isEmpty#94, sum#95, isEmpty#96, sum#97, isEmpty#98, sum#99, isEmpty#100, sum#101, isEmpty#102, sum#103, isEmpty#104, sum#105, isEmpty#106, sum#107, isEmpty#108, sum#109, isEmpty#110, sum#111, isEmpty#112, sum#113, isEmpty#114, sum#115, isEmpty#116, sum#117, isEmpty#118, sum#119, isEmpty#120, sum#121, isEmpty#122, sum#123, isEmpty#124, sum#125, isEmpty#126]
Keys [7]: [w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, d_year#9]
Functions [24]: [sum(CASE WHEN (d_moy#10 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)]
Aggregate Attributes [24]: [sum(CASE WHEN (d_moy#10 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#128, sum(CASE WHEN (d_moy#10 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#129, sum(CASE WHEN (d_moy#10 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#130, sum(CASE WHEN (d_moy#10 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#131, sum(CASE WHEN (d_moy#10 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#132, sum(CASE WHEN (d_moy#10 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#133, sum(CASE WHEN (d_moy#10 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#134, sum(CASE WHEN (d_moy#10 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#135, sum(CASE WHEN (d_moy#10 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#136, sum(CASE WHEN (d_moy#10 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#137, sum(CASE WHEN (d_moy#10 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#138, sum(CASE WHEN (d_moy#10 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#139, sum(CASE WHEN (d_moy#10 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#140, sum(CASE WHEN (d_moy#10 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#141, sum(CASE WHEN (d_moy#10 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#142, sum(CASE WHEN (d_moy#10 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#143, sum(CASE WHEN (d_moy#10 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#144, sum(CASE WHEN (d_moy#10 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#145, sum(CASE WHEN (d_moy#10 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#146, sum(CASE WHEN (d_moy#10 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#147, sum(CASE WHEN (d_moy#10 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#148, sum(CASE WHEN (d_moy#10 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#149, sum(CASE WHEN (d_moy#10 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#150, sum(CASE WHEN (d_moy#10 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#151]
Results [32]: [w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, DHL,BARIAN AS ship_carriers#152, d_year#9 AS year#153, sum(CASE WHEN (d_moy#10 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#128 AS jan_sales#154, sum(CASE WHEN (d_moy#10 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#129 AS feb_sales#155, sum(CASE WHEN (d_moy#10 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#130 AS mar_sales#156, sum(CASE WHEN (d_moy#10 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#131 AS apr_sales#157, sum(CASE WHEN (d_moy#10 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#132 AS may_sales#158, sum(CASE WHEN (d_moy#10 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#133 AS jun_sales#159, sum(CASE WHEN (d_moy#10 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#134 AS jul_sales#160, sum(CASE WHEN (d_moy#10 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#135 AS aug_sales#161, sum(CASE WHEN (d_moy#10 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#136 AS sep_sales#162, sum(CASE WHEN (d_moy#10 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#137 AS oct_sales#163, sum(CASE WHEN (d_moy#10 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#138 AS nov_sales#164, sum(CASE WHEN (d_moy#10 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#6 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#139 AS dec_sales#165, sum(CASE WHEN (d_moy#10 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#140 AS jan_net#166, sum(CASE WHEN (d_moy#10 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#141 AS feb_net#167, sum(CASE WHEN (d_moy#10 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#142 AS mar_net#168, sum(CASE WHEN (d_moy#10 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#143 AS apr_net#169, sum(CASE WHEN (d_moy#10 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#144 AS may_net#170, sum(CASE WHEN (d_moy#10 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#145 AS jun_net#171, sum(CASE WHEN (d_moy#10 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#146 AS jul_net#172, sum(CASE WHEN (d_moy#10 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#147 AS aug_net#173, sum(CASE WHEN (d_moy#10 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#148 AS sep_net#174, sum(CASE WHEN (d_moy#10 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#149 AS oct_net#175, sum(CASE WHEN (d_moy#10 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#150 AS nov_net#176, sum(CASE WHEN (d_moy#10 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#7 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#5 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#151 AS dec_net#177]

(34) Scan parquet default.catalog_sales
Output [7]: [cs_sold_date_sk#178, cs_sold_time_sk#179, cs_ship_mode_sk#180, cs_warehouse_sk#181, cs_quantity#182, cs_sales_price#183, cs_net_paid_inc_tax#184]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_sales]
PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_sold_time_sk), IsNotNull(cs_ship_mode_sk)]
ReadSchema: struct<cs_sold_date_sk:int,cs_sold_time_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_quantity:int,cs_sales_price:decimal(7,2),cs_net_paid_inc_tax:decimal(7,2)>

(35) ColumnarToRow [codegen id : 11]
Input [7]: [cs_sold_date_sk#178, cs_sold_time_sk#179, cs_ship_mode_sk#180, cs_warehouse_sk#181, cs_quantity#182, cs_sales_price#183, cs_net_paid_inc_tax#184]

(36) Filter [codegen id : 11]
Input [7]: [cs_sold_date_sk#178, cs_sold_time_sk#179, cs_ship_mode_sk#180, cs_warehouse_sk#181, cs_quantity#182, cs_sales_price#183, cs_net_paid_inc_tax#184]
Condition : (((isnotnull(cs_warehouse_sk#181) AND isnotnull(cs_sold_date_sk#178)) AND isnotnull(cs_sold_time_sk#179)) AND isnotnull(cs_ship_mode_sk#180))

(37) ReusedExchange [Reuses operator id: 7]
Output [3]: [d_date_sk#8, d_year#9, d_moy#10]

(38) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_sold_date_sk#178]
Right keys [1]: [d_date_sk#8]
Join condition: None

(39) Project [codegen id : 11]
Output [8]: [cs_sold_time_sk#179, cs_ship_mode_sk#180, cs_warehouse_sk#181, cs_quantity#182, cs_sales_price#183, cs_net_paid_inc_tax#184, d_year#9, d_moy#10]
Input [10]: [cs_sold_date_sk#178, cs_sold_time_sk#179, cs_ship_mode_sk#180, cs_warehouse_sk#181, cs_quantity#182, cs_sales_price#183, cs_net_paid_inc_tax#184, d_date_sk#8, d_year#9, d_moy#10]

(40) ReusedExchange [Reuses operator id: 14]
Output [1]: [sm_ship_mode_sk#12]

(41) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_ship_mode_sk#180]
Right keys [1]: [sm_ship_mode_sk#12]
Join condition: None

(42) Project [codegen id : 11]
Output [7]: [cs_sold_time_sk#179, cs_warehouse_sk#181, cs_quantity#182, cs_sales_price#183, cs_net_paid_inc_tax#184, d_year#9, d_moy#10]
Input [9]: [cs_sold_time_sk#179, cs_ship_mode_sk#180, cs_warehouse_sk#181, cs_quantity#182, cs_sales_price#183, cs_net_paid_inc_tax#184, d_year#9, d_moy#10, sm_ship_mode_sk#12]

(43) ReusedExchange [Reuses operator id: 21]
Output [1]: [t_time_sk#15]

(44) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_sold_time_sk#179]
Right keys [1]: [t_time_sk#15]
Join condition: None

(45) Project [codegen id : 11]
Output [6]: [cs_warehouse_sk#181, cs_quantity#182, cs_sales_price#183, cs_net_paid_inc_tax#184, d_year#9, d_moy#10]
Input [8]: [cs_sold_time_sk#179, cs_warehouse_sk#181, cs_quantity#182, cs_sales_price#183, cs_net_paid_inc_tax#184, d_year#9, d_moy#10, t_time_sk#15]

(46) ReusedExchange [Reuses operator id: 28]
Output [7]: [w_warehouse_sk#18, w_warehouse_name#185, w_warehouse_sq_ft#20, w_city#186, w_county#187, w_state#188, w_country#189]

(47) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_warehouse_sk#181]
Right keys [1]: [w_warehouse_sk#18]
Join condition: None

(48) Project [codegen id : 11]
Output [11]: [cs_quantity#182, cs_sales_price#183, cs_net_paid_inc_tax#184, w_warehouse_name#185, w_warehouse_sq_ft#20, w_city#186, w_county#187, w_state#188, w_country#189, d_year#9, d_moy#10]
Input [13]: [cs_warehouse_sk#181, cs_quantity#182, cs_sales_price#183, cs_net_paid_inc_tax#184, d_year#9, d_moy#10, w_warehouse_sk#18, w_warehouse_name#185, w_warehouse_sq_ft#20, w_city#186, w_county#187, w_state#188, w_country#189]

(49) HashAggregate [codegen id : 11]
Input [11]: [cs_quantity#182, cs_sales_price#183, cs_net_paid_inc_tax#184, w_warehouse_name#185, w_warehouse_sq_ft#20, w_city#186, w_county#187, w_state#188, w_country#189, d_year#9, d_moy#10]
Keys [7]: [w_warehouse_name#185, w_warehouse_sq_ft#20, w_city#186, w_county#187, w_state#188, w_country#189, d_year#9]
Functions [24]: [partial_sum(CASE WHEN (d_moy#10 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#10 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)]
Aggregate Attributes [48]: [sum#190, isEmpty#191, sum#192, isEmpty#193, sum#194, isEmpty#195, sum#196, isEmpty#197, sum#198, isEmpty#199, sum#200, isEmpty#201, sum#202, isEmpty#203, sum#204, isEmpty#205, sum#206, isEmpty#207, sum#208, isEmpty#209, sum#210, isEmpty#211, sum#212, isEmpty#213, sum#214, isEmpty#215, sum#216, isEmpty#217, sum#218, isEmpty#219, sum#220, isEmpty#221, sum#222, isEmpty#223, sum#224, isEmpty#225, sum#226, isEmpty#227, sum#228, isEmpty#229, sum#230, isEmpty#231, sum#232, isEmpty#233, sum#234, isEmpty#235, sum#236, isEmpty#237]
Results [55]: [w_warehouse_name#185, w_warehouse_sq_ft#20, w_city#186, w_county#187, w_state#188, w_country#189, d_year#9, sum#238, isEmpty#239, sum#240, isEmpty#241, sum#242, isEmpty#243, sum#244, isEmpty#245, sum#246, isEmpty#247, sum#248, isEmpty#249, sum#250, isEmpty#251, sum#252, isEmpty#253, sum#254, isEmpty#255, sum#256, isEmpty#257, sum#258, isEmpty#259, sum#260, isEmpty#261, sum#262, isEmpty#263, sum#264, isEmpty#265, sum#266, isEmpty#267, sum#268, isEmpty#269, sum#270, isEmpty#271, sum#272, isEmpty#273, sum#274, isEmpty#275, sum#276, isEmpty#277, sum#278, isEmpty#279, sum#280, isEmpty#281, sum#282, isEmpty#283, sum#284, isEmpty#285]

(50) Exchange
Input [55]: [w_warehouse_name#185, w_warehouse_sq_ft#20, w_city#186, w_county#187, w_state#188, w_country#189, d_year#9, sum#238, isEmpty#239, sum#240, isEmpty#241, sum#242, isEmpty#243, sum#244, isEmpty#245, sum#246, isEmpty#247, sum#248, isEmpty#249, sum#250, isEmpty#251, sum#252, isEmpty#253, sum#254, isEmpty#255, sum#256, isEmpty#257, sum#258, isEmpty#259, sum#260, isEmpty#261, sum#262, isEmpty#263, sum#264, isEmpty#265, sum#266, isEmpty#267, sum#268, isEmpty#269, sum#270, isEmpty#271, sum#272, isEmpty#273, sum#274, isEmpty#275, sum#276, isEmpty#277, sum#278, isEmpty#279, sum#280, isEmpty#281, sum#282, isEmpty#283, sum#284, isEmpty#285]
Arguments: hashpartitioning(w_warehouse_name#185, w_warehouse_sq_ft#20, w_city#186, w_county#187, w_state#188, w_country#189, d_year#9, 5), ENSURE_REQUIREMENTS, [id=#286]

(51) HashAggregate [codegen id : 12]
Input [55]: [w_warehouse_name#185, w_warehouse_sq_ft#20, w_city#186, w_county#187, w_state#188, w_country#189, d_year#9, sum#238, isEmpty#239, sum#240, isEmpty#241, sum#242, isEmpty#243, sum#244, isEmpty#245, sum#246, isEmpty#247, sum#248, isEmpty#249, sum#250, isEmpty#251, sum#252, isEmpty#253, sum#254, isEmpty#255, sum#256, isEmpty#257, sum#258, isEmpty#259, sum#260, isEmpty#261, sum#262, isEmpty#263, sum#264, isEmpty#265, sum#266, isEmpty#267, sum#268, isEmpty#269, sum#270, isEmpty#271, sum#272, isEmpty#273, sum#274, isEmpty#275, sum#276, isEmpty#277, sum#278, isEmpty#279, sum#280, isEmpty#281, sum#282, isEmpty#283, sum#284, isEmpty#285]
Keys [7]: [w_warehouse_name#185, w_warehouse_sq_ft#20, w_city#186, w_county#187, w_state#188, w_country#189, d_year#9]
Functions [24]: [sum(CASE WHEN (d_moy#10 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#10 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)]
Aggregate Attributes [24]: [sum(CASE WHEN (d_moy#10 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#287, sum(CASE WHEN (d_moy#10 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#288, sum(CASE WHEN (d_moy#10 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#289, sum(CASE WHEN (d_moy#10 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#290, sum(CASE WHEN (d_moy#10 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#291, sum(CASE WHEN (d_moy#10 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#292, sum(CASE WHEN (d_moy#10 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#293, sum(CASE WHEN (d_moy#10 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#294, sum(CASE WHEN (d_moy#10 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#295, sum(CASE WHEN (d_moy#10 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#296, sum(CASE WHEN (d_moy#10 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#297, sum(CASE WHEN (d_moy#10 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#298, sum(CASE WHEN (d_moy#10 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#299, sum(CASE WHEN (d_moy#10 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#300, sum(CASE WHEN (d_moy#10 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#301, sum(CASE WHEN (d_moy#10 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#302, sum(CASE WHEN (d_moy#10 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#303, sum(CASE WHEN (d_moy#10 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#304, sum(CASE WHEN (d_moy#10 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#305, sum(CASE WHEN (d_moy#10 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#306, sum(CASE WHEN (d_moy#10 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#307, sum(CASE WHEN (d_moy#10 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#308, sum(CASE WHEN (d_moy#10 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#309, sum(CASE WHEN (d_moy#10 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#310]
Results [32]: [w_warehouse_name#185 AS w_warehouse_name#311, w_warehouse_sq_ft#20, w_city#186 AS w_city#312, w_county#187 AS w_county#313, w_state#188 AS w_state#314, w_country#189 AS w_country#315, DHL,BARIAN AS ship_carriers#316, d_year#9 AS year#317, sum(CASE WHEN (d_moy#10 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#287 AS jan_sales#318, sum(CASE WHEN (d_moy#10 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#288 AS feb_sales#319, sum(CASE WHEN (d_moy#10 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#289 AS mar_sales#320, sum(CASE WHEN (d_moy#10 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#290 AS apr_sales#321, sum(CASE WHEN (d_moy#10 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#291 AS may_sales#322, sum(CASE WHEN (d_moy#10 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#292 AS jun_sales#323, sum(CASE WHEN (d_moy#10 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#293 AS jul_sales#324, sum(CASE WHEN (d_moy#10 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#294 AS aug_sales#325, sum(CASE WHEN (d_moy#10 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#295 AS sep_sales#326, sum(CASE WHEN (d_moy#10 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#296 AS oct_sales#327, sum(CASE WHEN (d_moy#10 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#297 AS nov_sales#328, sum(CASE WHEN (d_moy#10 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#183 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#298 AS dec_sales#329, sum(CASE WHEN (d_moy#10 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#299 AS jan_net#330, sum(CASE WHEN (d_moy#10 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#300 AS feb_net#331, sum(CASE WHEN (d_moy#10 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#301 AS mar_net#332, sum(CASE WHEN (d_moy#10 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#302 AS apr_net#333, sum(CASE WHEN (d_moy#10 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#303 AS may_net#334, sum(CASE WHEN (d_moy#10 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#304 AS jun_net#335, sum(CASE WHEN (d_moy#10 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#305 AS jul_net#336, sum(CASE WHEN (d_moy#10 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#306 AS aug_net#337, sum(CASE WHEN (d_moy#10 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#307 AS sep_net#338, sum(CASE WHEN (d_moy#10 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#308 AS oct_net#339, sum(CASE WHEN (d_moy#10 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#309 AS nov_net#340, sum(CASE WHEN (d_moy#10 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#184 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#182 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#310 AS dec_net#341]

(52) Union

(53) HashAggregate [codegen id : 13]
Input [32]: [w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, ship_carriers#152, year#153, jan_sales#154, feb_sales#155, mar_sales#156, apr_sales#157, may_sales#158, jun_sales#159, jul_sales#160, aug_sales#161, sep_sales#162, oct_sales#163, nov_sales#164, dec_sales#165, jan_net#166, feb_net#167, mar_net#168, apr_net#169, may_net#170, jun_net#171, jul_net#172, aug_net#173, sep_net#174, oct_net#175, nov_net#176, dec_net#177]
Keys [8]: [w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, ship_carriers#152, year#153]
Functions [36]: [partial_sum(jan_sales#154), partial_sum(feb_sales#155), partial_sum(mar_sales#156), partial_sum(apr_sales#157), partial_sum(may_sales#158), partial_sum(jun_sales#159), partial_sum(jul_sales#160), partial_sum(aug_sales#161), partial_sum(sep_sales#162), partial_sum(oct_sales#163), partial_sum(nov_sales#164), partial_sum(dec_sales#165), partial_sum(CheckOverflow((promote_precision(jan_sales#154) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(feb_sales#155) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(mar_sales#156) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(apr_sales#157) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(may_sales#158) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jun_sales#159) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jul_sales#160) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(aug_sales#161) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(sep_sales#162) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(oct_sales#163) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(nov_sales#164) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(dec_sales#165) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(jan_net#166), partial_sum(feb_net#167), partial_sum(mar_net#168), partial_sum(apr_net#169), partial_sum(may_net#170), partial_sum(jun_net#171), partial_sum(jul_net#172), partial_sum(aug_net#173), partial_sum(sep_net#174), partial_sum(oct_net#175), partial_sum(nov_net#176), partial_sum(dec_net#177)]
Aggregate Attributes [72]: [sum#342, isEmpty#343, sum#344, isEmpty#345, sum#346, isEmpty#347, sum#348, isEmpty#349, sum#350, isEmpty#351, sum#352, isEmpty#353, sum#354, isEmpty#355, sum#356, isEmpty#357, sum#358, isEmpty#359, sum#360, isEmpty#361, sum#362, isEmpty#363, sum#364, isEmpty#365, sum#366, isEmpty#367, sum#368, isEmpty#369, sum#370, isEmpty#371, sum#372, isEmpty#373, sum#374, isEmpty#375, sum#376, isEmpty#377, sum#378, isEmpty#379, sum#380, isEmpty#381, sum#382, isEmpty#383, sum#384, isEmpty#385, sum#386, isEmpty#387, sum#388, isEmpty#389, sum#390, isEmpty#391, sum#392, isEmpty#393, sum#394, isEmpty#395, sum#396, isEmpty#397, sum#398, isEmpty#399, sum#400, isEmpty#401, sum#402, isEmpty#403, sum#404, isEmpty#405, sum#406, isEmpty#407, sum#408, isEmpty#409, sum#410, isEmpty#411, sum#412, isEmpty#413]
Results [80]: [w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, ship_carriers#152, year#153, sum#414, isEmpty#415, sum#416, isEmpty#417, sum#418, isEmpty#419, sum#420, isEmpty#421, sum#422, isEmpty#423, sum#424, isEmpty#425, sum#426, isEmpty#427, sum#428, isEmpty#429, sum#430, isEmpty#431, sum#432, isEmpty#433, sum#434, isEmpty#435, sum#436, isEmpty#437, sum#438, isEmpty#439, sum#440, isEmpty#441, sum#442, isEmpty#443, sum#444, isEmpty#445, sum#446, isEmpty#447, sum#448, isEmpty#449, sum#450, isEmpty#451, sum#452, isEmpty#453, sum#454, isEmpty#455, sum#456, isEmpty#457, sum#458, isEmpty#459, sum#460, isEmpty#461, sum#462, isEmpty#463, sum#464, isEmpty#465, sum#466, isEmpty#467, sum#468, isEmpty#469, sum#470, isEmpty#471, sum#472, isEmpty#473, sum#474, isEmpty#475, sum#476, isEmpty#477, sum#478, isEmpty#479, sum#480, isEmpty#481, sum#482, isEmpty#483, sum#484, isEmpty#485]

(54) Exchange
Input [80]: [w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, ship_carriers#152, year#153, sum#414, isEmpty#415, sum#416, isEmpty#417, sum#418, isEmpty#419, sum#420, isEmpty#421, sum#422, isEmpty#423, sum#424, isEmpty#425, sum#426, isEmpty#427, sum#428, isEmpty#429, sum#430, isEmpty#431, sum#432, isEmpty#433, sum#434, isEmpty#435, sum#436, isEmpty#437, sum#438, isEmpty#439, sum#440, isEmpty#441, sum#442, isEmpty#443, sum#444, isEmpty#445, sum#446, isEmpty#447, sum#448, isEmpty#449, sum#450, isEmpty#451, sum#452, isEmpty#453, sum#454, isEmpty#455, sum#456, isEmpty#457, sum#458, isEmpty#459, sum#460, isEmpty#461, sum#462, isEmpty#463, sum#464, isEmpty#465, sum#466, isEmpty#467, sum#468, isEmpty#469, sum#470, isEmpty#471, sum#472, isEmpty#473, sum#474, isEmpty#475, sum#476, isEmpty#477, sum#478, isEmpty#479, sum#480, isEmpty#481, sum#482, isEmpty#483, sum#484, isEmpty#485]
Arguments: hashpartitioning(w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, ship_carriers#152, year#153, 5), ENSURE_REQUIREMENTS, [id=#486]

(55) HashAggregate [codegen id : 14]
Input [80]: [w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, ship_carriers#152, year#153, sum#414, isEmpty#415, sum#416, isEmpty#417, sum#418, isEmpty#419, sum#420, isEmpty#421, sum#422, isEmpty#423, sum#424, isEmpty#425, sum#426, isEmpty#427, sum#428, isEmpty#429, sum#430, isEmpty#431, sum#432, isEmpty#433, sum#434, isEmpty#435, sum#436, isEmpty#437, sum#438, isEmpty#439, sum#440, isEmpty#441, sum#442, isEmpty#443, sum#444, isEmpty#445, sum#446, isEmpty#447, sum#448, isEmpty#449, sum#450, isEmpty#451, sum#452, isEmpty#453, sum#454, isEmpty#455, sum#456, isEmpty#457, sum#458, isEmpty#459, sum#460, isEmpty#461, sum#462, isEmpty#463, sum#464, isEmpty#465, sum#466, isEmpty#467, sum#468, isEmpty#469, sum#470, isEmpty#471, sum#472, isEmpty#473, sum#474, isEmpty#475, sum#476, isEmpty#477, sum#478, isEmpty#479, sum#480, isEmpty#481, sum#482, isEmpty#483, sum#484, isEmpty#485]
Keys [8]: [w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, ship_carriers#152, year#153]
Functions [36]: [sum(jan_sales#154), sum(feb_sales#155), sum(mar_sales#156), sum(apr_sales#157), sum(may_sales#158), sum(jun_sales#159), sum(jul_sales#160), sum(aug_sales#161), sum(sep_sales#162), sum(oct_sales#163), sum(nov_sales#164), sum(dec_sales#165), sum(CheckOverflow((promote_precision(jan_sales#154) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(feb_sales#155) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(mar_sales#156) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(apr_sales#157) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(may_sales#158) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jun_sales#159) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jul_sales#160) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(aug_sales#161) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(sep_sales#162) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(oct_sales#163) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(nov_sales#164) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(dec_sales#165) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(jan_net#166), sum(feb_net#167), sum(mar_net#168), sum(apr_net#169), sum(may_net#170), sum(jun_net#171), sum(jul_net#172), sum(aug_net#173), sum(sep_net#174), sum(oct_net#175), sum(nov_net#176), sum(dec_net#177)]
Aggregate Attributes [36]: [sum(jan_sales#154)#487, sum(feb_sales#155)#488, sum(mar_sales#156)#489, sum(apr_sales#157)#490, sum(may_sales#158)#491, sum(jun_sales#159)#492, sum(jul_sales#160)#493, sum(aug_sales#161)#494, sum(sep_sales#162)#495, sum(oct_sales#163)#496, sum(nov_sales#164)#497, sum(dec_sales#165)#498, sum(CheckOverflow((promote_precision(jan_sales#154) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#499, sum(CheckOverflow((promote_precision(feb_sales#155) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#500, sum(CheckOverflow((promote_precision(mar_sales#156) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#501, sum(CheckOverflow((promote_precision(apr_sales#157) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#502, sum(CheckOverflow((promote_precision(may_sales#158) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#503, sum(CheckOverflow((promote_precision(jun_sales#159) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#504, sum(CheckOverflow((promote_precision(jul_sales#160) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#505, sum(CheckOverflow((promote_precision(aug_sales#161) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#506, sum(CheckOverflow((promote_precision(sep_sales#162) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#507, sum(CheckOverflow((promote_precision(oct_sales#163) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#508, sum(CheckOverflow((promote_precision(nov_sales#164) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#509, sum(CheckOverflow((promote_precision(dec_sales#165) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#510, sum(jan_net#166)#511, sum(feb_net#167)#512, sum(mar_net#168)#513, sum(apr_net#169)#514, sum(may_net#170)#515, sum(jun_net#171)#516, sum(jul_net#172)#517, sum(aug_net#173)#518, sum(sep_net#174)#519, sum(oct_net#175)#520, sum(nov_net#176)#521, sum(dec_net#177)#522]
Results [44]: [w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, ship_carriers#152, year#153, sum(jan_sales#154)#487 AS jan_sales#523, sum(feb_sales#155)#488 AS feb_sales#524, sum(mar_sales#156)#489 AS mar_sales#525, sum(apr_sales#157)#490 AS apr_sales#526, sum(may_sales#158)#491 AS may_sales#527, sum(jun_sales#159)#492 AS jun_sales#528, sum(jul_sales#160)#493 AS jul_sales#529, sum(aug_sales#161)#494 AS aug_sales#530, sum(sep_sales#162)#495 AS sep_sales#531, sum(oct_sales#163)#496 AS oct_sales#532, sum(nov_sales#164)#497 AS nov_sales#533, sum(dec_sales#165)#498 AS dec_sales#534, sum(CheckOverflow((promote_precision(jan_sales#154) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#499 AS jan_sales_per_sq_foot#535, sum(CheckOverflow((promote_precision(feb_sales#155) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#500 AS feb_sales_per_sq_foot#536, sum(CheckOverflow((promote_precision(mar_sales#156) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#501 AS mar_sales_per_sq_foot#537, sum(CheckOverflow((promote_precision(apr_sales#157) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#502 AS apr_sales_per_sq_foot#538, sum(CheckOverflow((promote_precision(may_sales#158) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#503 AS may_sales_per_sq_foot#539, sum(CheckOverflow((promote_precision(jun_sales#159) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#504 AS jun_sales_per_sq_foot#540, sum(CheckOverflow((promote_precision(jul_sales#160) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#505 AS jul_sales_per_sq_foot#541, sum(CheckOverflow((promote_precision(aug_sales#161) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#506 AS aug_sales_per_sq_foot#542, sum(CheckOverflow((promote_precision(sep_sales#162) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#507 AS sep_sales_per_sq_foot#543, sum(CheckOverflow((promote_precision(oct_sales#163) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#508 AS oct_sales_per_sq_foot#544, sum(CheckOverflow((promote_precision(nov_sales#164) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#509 AS nov_sales_per_sq_foot#545, sum(CheckOverflow((promote_precision(dec_sales#165) / promote_precision(cast(cast(w_warehouse_sq_ft#20 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#510 AS dec_sales_per_sq_foot#546, sum(jan_net#166)#511 AS jan_net#547, sum(feb_net#167)#512 AS feb_net#548, sum(mar_net#168)#513 AS mar_net#549, sum(apr_net#169)#514 AS apr_net#550, sum(may_net#170)#515 AS may_net#551, sum(jun_net#171)#516 AS jun_net#552, sum(jul_net#172)#517 AS jul_net#553, sum(aug_net#173)#518 AS aug_net#554, sum(sep_net#174)#519 AS sep_net#555, sum(oct_net#175)#520 AS oct_net#556, sum(nov_net#176)#521 AS nov_net#557, sum(dec_net#177)#522 AS dec_net#558]

(56) TakeOrderedAndProject
Input [44]: [w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, ship_carriers#152, year#153, jan_sales#523, feb_sales#524, mar_sales#525, apr_sales#526, may_sales#527, jun_sales#528, jul_sales#529, aug_sales#530, sep_sales#531, oct_sales#532, nov_sales#533, dec_sales#534, jan_sales_per_sq_foot#535, feb_sales_per_sq_foot#536, mar_sales_per_sq_foot#537, apr_sales_per_sq_foot#538, may_sales_per_sq_foot#539, jun_sales_per_sq_foot#540, jul_sales_per_sq_foot#541, aug_sales_per_sq_foot#542, sep_sales_per_sq_foot#543, oct_sales_per_sq_foot#544, nov_sales_per_sq_foot#545, dec_sales_per_sq_foot#546, jan_net#547, feb_net#548, mar_net#549, apr_net#550, may_net#551, jun_net#552, jul_net#553, aug_net#554, sep_net#555, oct_net#556, nov_net#557, dec_net#558]
Arguments: 100, [w_warehouse_name#25 ASC NULLS FIRST], [w_warehouse_name#25, w_warehouse_sq_ft#20, w_city#26, w_county#27, w_state#28, w_country#29, ship_carriers#152, year#153, jan_sales#523, feb_sales#524, mar_sales#525, apr_sales#526, may_sales#527, jun_sales#528, jul_sales#529, aug_sales#530, sep_sales#531, oct_sales#532, nov_sales#533, dec_sales#534, jan_sales_per_sq_foot#535, feb_sales_per_sq_foot#536, mar_sales_per_sq_foot#537, apr_sales_per_sq_foot#538, ... 20 more fields]

