== Physical Plan ==
* Sort (100)
+- Exchange (99)
   +- * Project (98)
      +- * BroadcastHashJoin Inner BuildRight (97)
         :- * Project (83)
         :  +- * BroadcastHashJoin Inner BuildRight (82)
         :     :- * BroadcastHashJoin Inner BuildRight (68)
         :     :  :- * Project (54)
         :     :  :  +- * BroadcastHashJoin Inner BuildRight (53)
         :     :  :     :- * BroadcastHashJoin Inner BuildRight (36)
         :     :  :     :  :- * HashAggregate (19)
         :     :  :     :  :  +- Exchange (18)
         :     :  :     :  :     +- * HashAggregate (17)
         :     :  :     :  :        +- * Project (16)
         :     :  :     :  :           +- * BroadcastHashJoin Inner BuildRight (15)
         :     :  :     :  :              :- * Project (9)
         :     :  :     :  :              :  +- * BroadcastHashJoin Inner BuildRight (8)
         :     :  :     :  :              :     :- * Filter (3)
         :     :  :     :  :              :     :  +- * ColumnarToRow (2)
         :     :  :     :  :              :     :     +- Scan parquet default.store_sales (1)
         :     :  :     :  :              :     +- BroadcastExchange (7)
         :     :  :     :  :              :        +- * Filter (6)
         :     :  :     :  :              :           +- * ColumnarToRow (5)
         :     :  :     :  :              :              +- Scan parquet default.date_dim (4)
         :     :  :     :  :              +- BroadcastExchange (14)
         :     :  :     :  :                 +- * Project (13)
         :     :  :     :  :                    +- * Filter (12)
         :     :  :     :  :                       +- * ColumnarToRow (11)
         :     :  :     :  :                          +- Scan parquet default.customer_address (10)
         :     :  :     :  +- BroadcastExchange (35)
         :     :  :     :     +- * HashAggregate (34)
         :     :  :     :        +- Exchange (33)
         :     :  :     :           +- * HashAggregate (32)
         :     :  :     :              +- * Project (31)
         :     :  :     :                 +- * BroadcastHashJoin Inner BuildRight (30)
         :     :  :     :                    :- * Project (28)
         :     :  :     :                    :  +- * BroadcastHashJoin Inner BuildRight (27)
         :     :  :     :                    :     :- * Filter (22)
         :     :  :     :                    :     :  +- * ColumnarToRow (21)
         :     :  :     :                    :     :     +- Scan parquet default.store_sales (20)
         :     :  :     :                    :     +- BroadcastExchange (26)
         :     :  :     :                    :        +- * Filter (25)
         :     :  :     :                    :           +- * ColumnarToRow (24)
         :     :  :     :                    :              +- Scan parquet default.date_dim (23)
         :     :  :     :                    +- ReusedExchange (29)
         :     :  :     +- BroadcastExchange (52)
         :     :  :        +- * HashAggregate (51)
         :     :  :           +- Exchange (50)
         :     :  :              +- * HashAggregate (49)
         :     :  :                 +- * Project (48)
         :     :  :                    +- * BroadcastHashJoin Inner BuildRight (47)
         :     :  :                       :- * Project (45)
         :     :  :                       :  +- * BroadcastHashJoin Inner BuildRight (44)
         :     :  :                       :     :- * Filter (39)
         :     :  :                       :     :  +- * ColumnarToRow (38)
         :     :  :                       :     :     +- Scan parquet default.store_sales (37)
         :     :  :                       :     +- BroadcastExchange (43)
         :     :  :                       :        +- * Filter (42)
         :     :  :                       :           +- * ColumnarToRow (41)
         :     :  :                       :              +- Scan parquet default.date_dim (40)
         :     :  :                       +- ReusedExchange (46)
         :     :  +- BroadcastExchange (67)
         :     :     +- * HashAggregate (66)
         :     :        +- Exchange (65)
         :     :           +- * HashAggregate (64)
         :     :              +- * Project (63)
         :     :                 +- * BroadcastHashJoin Inner BuildRight (62)
         :     :                    :- * Project (60)
         :     :                    :  +- * BroadcastHashJoin Inner BuildRight (59)
         :     :                    :     :- * Filter (57)
         :     :                    :     :  +- * ColumnarToRow (56)
         :     :                    :     :     +- Scan parquet default.web_sales (55)
         :     :                    :     +- ReusedExchange (58)
         :     :                    +- ReusedExchange (61)
         :     +- BroadcastExchange (81)
         :        +- * HashAggregate (80)
         :           +- Exchange (79)
         :              +- * HashAggregate (78)
         :                 +- * Project (77)
         :                    +- * BroadcastHashJoin Inner BuildRight (76)
         :                       :- * Project (74)
         :                       :  +- * BroadcastHashJoin Inner BuildRight (73)
         :                       :     :- * Filter (71)
         :                       :     :  +- * ColumnarToRow (70)
         :                       :     :     +- Scan parquet default.web_sales (69)
         :                       :     +- ReusedExchange (72)
         :                       +- ReusedExchange (75)
         +- BroadcastExchange (96)
            +- * HashAggregate (95)
               +- Exchange (94)
                  +- * HashAggregate (93)
                     +- * Project (92)
                        +- * BroadcastHashJoin Inner BuildRight (91)
                           :- * Project (89)
                           :  +- * BroadcastHashJoin Inner BuildRight (88)
                           :     :- * Filter (86)
                           :     :  +- * ColumnarToRow (85)
                           :     :     +- Scan parquet default.web_sales (84)
                           :     +- ReusedExchange (87)
                           +- ReusedExchange (90)


(1) Scan parquet default.store_sales
Output [3]: [ss_sold_date_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_sold_date_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(2) ColumnarToRow [codegen id : 3]
Input [3]: [ss_sold_date_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]

(3) Filter [codegen id : 3]
Input [3]: [ss_sold_date_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]
Condition : (isnotnull(ss_sold_date_sk#1) AND isnotnull(ss_addr_sk#2))

(4) Scan parquet default.date_dim
Output [3]: [d_date_sk#4, d_year#5, d_qoy#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(5) ColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#4, d_year#5, d_qoy#6]

(6) Filter [codegen id : 1]
Input [3]: [d_date_sk#4, d_year#5, d_qoy#6]
Condition : ((((isnotnull(d_qoy#6) AND isnotnull(d_year#5)) AND (d_qoy#6 = 1)) AND (d_year#5 = 2000)) AND isnotnull(d_date_sk#4))

(7) BroadcastExchange
Input [3]: [d_date_sk#4, d_year#5, d_qoy#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#7]

(8) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_sold_date_sk#1]
Right keys [1]: [d_date_sk#4]
Join condition: None

(9) Project [codegen id : 3]
Output [4]: [ss_addr_sk#2, ss_ext_sales_price#3, d_year#5, d_qoy#6]
Input [6]: [ss_sold_date_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, d_date_sk#4, d_year#5, d_qoy#6]

(10) Scan parquet default.customer_address
Output [2]: [ca_address_sk#8, ca_county#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_county:string>

(11) ColumnarToRow [codegen id : 2]
Input [2]: [ca_address_sk#8, ca_county#9]

(12) Filter [codegen id : 2]
Input [2]: [ca_address_sk#8, ca_county#9]
Condition : (isnotnull(ca_address_sk#8) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, lengthCheck, ca_county#9, 30, false, true)))

(13) Project [codegen id : 2]
Output [2]: [ca_address_sk#8, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, lengthCheck, ca_county#9, 30, false, true) AS ca_county#10]
Input [2]: [ca_address_sk#8, ca_county#9]

(14) BroadcastExchange
Input [2]: [ca_address_sk#8, ca_county#10]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#11]

(15) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_addr_sk#2]
Right keys [1]: [ca_address_sk#8]
Join condition: None

(16) Project [codegen id : 3]
Output [4]: [ss_ext_sales_price#3, d_year#5, d_qoy#6, ca_county#10]
Input [6]: [ss_addr_sk#2, ss_ext_sales_price#3, d_year#5, d_qoy#6, ca_address_sk#8, ca_county#10]

(17) HashAggregate [codegen id : 3]
Input [4]: [ss_ext_sales_price#3, d_year#5, d_qoy#6, ca_county#10]
Keys [3]: [ca_county#10, d_qoy#6, d_year#5]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#3))]
Aggregate Attributes [1]: [sum#12]
Results [4]: [ca_county#10, d_qoy#6, d_year#5, sum#13]

(18) Exchange
Input [4]: [ca_county#10, d_qoy#6, d_year#5, sum#13]
Arguments: hashpartitioning(ca_county#10, d_qoy#6, d_year#5, 5), ENSURE_REQUIREMENTS, [id=#14]

(19) HashAggregate [codegen id : 24]
Input [4]: [ca_county#10, d_qoy#6, d_year#5, sum#13]
Keys [3]: [ca_county#10, d_qoy#6, d_year#5]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#3))#15]
Results [3]: [ca_county#10, d_year#5, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#3))#15,17,2) AS store_sales#16]

(20) Scan parquet default.store_sales
Output [3]: [ss_sold_date_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_sold_date_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(21) ColumnarToRow [codegen id : 6]
Input [3]: [ss_sold_date_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]

(22) Filter [codegen id : 6]
Input [3]: [ss_sold_date_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]
Condition : (isnotnull(ss_sold_date_sk#1) AND isnotnull(ss_addr_sk#2))

(23) Scan parquet default.date_dim
Output [3]: [d_date_sk#17, d_year#18, d_qoy#19]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(24) ColumnarToRow [codegen id : 4]
Input [3]: [d_date_sk#17, d_year#18, d_qoy#19]

(25) Filter [codegen id : 4]
Input [3]: [d_date_sk#17, d_year#18, d_qoy#19]
Condition : ((((isnotnull(d_qoy#19) AND isnotnull(d_year#18)) AND (d_qoy#19 = 2)) AND (d_year#18 = 2000)) AND isnotnull(d_date_sk#17))

(26) BroadcastExchange
Input [3]: [d_date_sk#17, d_year#18, d_qoy#19]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#20]

(27) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_sold_date_sk#1]
Right keys [1]: [d_date_sk#17]
Join condition: None

(28) Project [codegen id : 6]
Output [4]: [ss_addr_sk#2, ss_ext_sales_price#3, d_year#18, d_qoy#19]
Input [6]: [ss_sold_date_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, d_date_sk#17, d_year#18, d_qoy#19]

(29) ReusedExchange [Reuses operator id: 14]
Output [2]: [ca_address_sk#21, ca_county#22]

(30) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_addr_sk#2]
Right keys [1]: [ca_address_sk#21]
Join condition: None

(31) Project [codegen id : 6]
Output [4]: [ss_ext_sales_price#3, d_year#18, d_qoy#19, ca_county#22]
Input [6]: [ss_addr_sk#2, ss_ext_sales_price#3, d_year#18, d_qoy#19, ca_address_sk#21, ca_county#22]

(32) HashAggregate [codegen id : 6]
Input [4]: [ss_ext_sales_price#3, d_year#18, d_qoy#19, ca_county#22]
Keys [3]: [ca_county#22, d_qoy#19, d_year#18]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#3))]
Aggregate Attributes [1]: [sum#23]
Results [4]: [ca_county#22, d_qoy#19, d_year#18, sum#24]

(33) Exchange
Input [4]: [ca_county#22, d_qoy#19, d_year#18, sum#24]
Arguments: hashpartitioning(ca_county#22, d_qoy#19, d_year#18, 5), ENSURE_REQUIREMENTS, [id=#25]

(34) HashAggregate [codegen id : 7]
Input [4]: [ca_county#22, d_qoy#19, d_year#18, sum#24]
Keys [3]: [ca_county#22, d_qoy#19, d_year#18]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#3))#26]
Results [2]: [ca_county#22, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#3))#26,17,2) AS store_sales#27]

(35) BroadcastExchange
Input [2]: [ca_county#22, store_sales#27]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#28]

(36) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [ca_county#10]
Right keys [1]: [ca_county#22]
Join condition: None

(37) Scan parquet default.store_sales
Output [3]: [ss_sold_date_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_sold_date_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(38) ColumnarToRow [codegen id : 10]
Input [3]: [ss_sold_date_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]

(39) Filter [codegen id : 10]
Input [3]: [ss_sold_date_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]
Condition : (isnotnull(ss_sold_date_sk#1) AND isnotnull(ss_addr_sk#2))

(40) Scan parquet default.date_dim
Output [3]: [d_date_sk#29, d_year#30, d_qoy#31]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(41) ColumnarToRow [codegen id : 8]
Input [3]: [d_date_sk#29, d_year#30, d_qoy#31]

(42) Filter [codegen id : 8]
Input [3]: [d_date_sk#29, d_year#30, d_qoy#31]
Condition : ((((isnotnull(d_qoy#31) AND isnotnull(d_year#30)) AND (d_qoy#31 = 3)) AND (d_year#30 = 2000)) AND isnotnull(d_date_sk#29))

(43) BroadcastExchange
Input [3]: [d_date_sk#29, d_year#30, d_qoy#31]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#32]

(44) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [ss_sold_date_sk#1]
Right keys [1]: [d_date_sk#29]
Join condition: None

(45) Project [codegen id : 10]
Output [4]: [ss_addr_sk#2, ss_ext_sales_price#3, d_year#30, d_qoy#31]
Input [6]: [ss_sold_date_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, d_date_sk#29, d_year#30, d_qoy#31]

(46) ReusedExchange [Reuses operator id: 14]
Output [2]: [ca_address_sk#33, ca_county#34]

(47) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [ss_addr_sk#2]
Right keys [1]: [ca_address_sk#33]
Join condition: None

(48) Project [codegen id : 10]
Output [4]: [ss_ext_sales_price#3, d_year#30, d_qoy#31, ca_county#34]
Input [6]: [ss_addr_sk#2, ss_ext_sales_price#3, d_year#30, d_qoy#31, ca_address_sk#33, ca_county#34]

(49) HashAggregate [codegen id : 10]
Input [4]: [ss_ext_sales_price#3, d_year#30, d_qoy#31, ca_county#34]
Keys [3]: [ca_county#34, d_qoy#31, d_year#30]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#3))]
Aggregate Attributes [1]: [sum#35]
Results [4]: [ca_county#34, d_qoy#31, d_year#30, sum#36]

(50) Exchange
Input [4]: [ca_county#34, d_qoy#31, d_year#30, sum#36]
Arguments: hashpartitioning(ca_county#34, d_qoy#31, d_year#30, 5), ENSURE_REQUIREMENTS, [id=#37]

(51) HashAggregate [codegen id : 11]
Input [4]: [ca_county#34, d_qoy#31, d_year#30, sum#36]
Keys [3]: [ca_county#34, d_qoy#31, d_year#30]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#3))#38]
Results [2]: [ca_county#34, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#3))#38,17,2) AS store_sales#39]

(52) BroadcastExchange
Input [2]: [ca_county#34, store_sales#39]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#40]

(53) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [ca_county#22]
Right keys [1]: [ca_county#34]
Join condition: None

(54) Project [codegen id : 24]
Output [5]: [ca_county#10, d_year#5, store_sales#16, store_sales#27, store_sales#39]
Input [7]: [ca_county#10, d_year#5, store_sales#16, ca_county#22, store_sales#27, ca_county#34, store_sales#39]

(55) Scan parquet default.web_sales
Output [3]: [ws_sold_date_sk#41, ws_bill_addr_sk#42, ws_ext_sales_price#43]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_sales]
PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_addr_sk)]
ReadSchema: struct<ws_sold_date_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(56) ColumnarToRow [codegen id : 14]
Input [3]: [ws_sold_date_sk#41, ws_bill_addr_sk#42, ws_ext_sales_price#43]

(57) Filter [codegen id : 14]
Input [3]: [ws_sold_date_sk#41, ws_bill_addr_sk#42, ws_ext_sales_price#43]
Condition : (isnotnull(ws_sold_date_sk#41) AND isnotnull(ws_bill_addr_sk#42))

(58) ReusedExchange [Reuses operator id: 7]
Output [3]: [d_date_sk#44, d_year#45, d_qoy#46]

(59) BroadcastHashJoin [codegen id : 14]
Left keys [1]: [ws_sold_date_sk#41]
Right keys [1]: [d_date_sk#44]
Join condition: None

(60) Project [codegen id : 14]
Output [4]: [ws_bill_addr_sk#42, ws_ext_sales_price#43, d_year#45, d_qoy#46]
Input [6]: [ws_sold_date_sk#41, ws_bill_addr_sk#42, ws_ext_sales_price#43, d_date_sk#44, d_year#45, d_qoy#46]

(61) ReusedExchange [Reuses operator id: 14]
Output [2]: [ca_address_sk#47, ca_county#48]

(62) BroadcastHashJoin [codegen id : 14]
Left keys [1]: [ws_bill_addr_sk#42]
Right keys [1]: [ca_address_sk#47]
Join condition: None

(63) Project [codegen id : 14]
Output [4]: [ws_ext_sales_price#43, d_year#45, d_qoy#46, ca_county#48]
Input [6]: [ws_bill_addr_sk#42, ws_ext_sales_price#43, d_year#45, d_qoy#46, ca_address_sk#47, ca_county#48]

(64) HashAggregate [codegen id : 14]
Input [4]: [ws_ext_sales_price#43, d_year#45, d_qoy#46, ca_county#48]
Keys [3]: [ca_county#48, d_qoy#46, d_year#45]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#43))]
Aggregate Attributes [1]: [sum#49]
Results [4]: [ca_county#48, d_qoy#46, d_year#45, sum#50]

(65) Exchange
Input [4]: [ca_county#48, d_qoy#46, d_year#45, sum#50]
Arguments: hashpartitioning(ca_county#48, d_qoy#46, d_year#45, 5), ENSURE_REQUIREMENTS, [id=#51]

(66) HashAggregate [codegen id : 15]
Input [4]: [ca_county#48, d_qoy#46, d_year#45, sum#50]
Keys [3]: [ca_county#48, d_qoy#46, d_year#45]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#43))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#43))#52]
Results [2]: [ca_county#48, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#43))#52,17,2) AS web_sales#53]

(67) BroadcastExchange
Input [2]: [ca_county#48, web_sales#53]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#54]

(68) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [ca_county#10]
Right keys [1]: [ca_county#48]
Join condition: None

(69) Scan parquet default.web_sales
Output [3]: [ws_sold_date_sk#41, ws_bill_addr_sk#42, ws_ext_sales_price#43]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_sales]
PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_addr_sk)]
ReadSchema: struct<ws_sold_date_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(70) ColumnarToRow [codegen id : 18]
Input [3]: [ws_sold_date_sk#41, ws_bill_addr_sk#42, ws_ext_sales_price#43]

(71) Filter [codegen id : 18]
Input [3]: [ws_sold_date_sk#41, ws_bill_addr_sk#42, ws_ext_sales_price#43]
Condition : (isnotnull(ws_sold_date_sk#41) AND isnotnull(ws_bill_addr_sk#42))

(72) ReusedExchange [Reuses operator id: 26]
Output [3]: [d_date_sk#55, d_year#56, d_qoy#57]

(73) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [ws_sold_date_sk#41]
Right keys [1]: [d_date_sk#55]
Join condition: None

(74) Project [codegen id : 18]
Output [4]: [ws_bill_addr_sk#42, ws_ext_sales_price#43, d_year#56, d_qoy#57]
Input [6]: [ws_sold_date_sk#41, ws_bill_addr_sk#42, ws_ext_sales_price#43, d_date_sk#55, d_year#56, d_qoy#57]

(75) ReusedExchange [Reuses operator id: 14]
Output [2]: [ca_address_sk#58, ca_county#59]

(76) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [ws_bill_addr_sk#42]
Right keys [1]: [ca_address_sk#58]
Join condition: None

(77) Project [codegen id : 18]
Output [4]: [ws_ext_sales_price#43, d_year#56, d_qoy#57, ca_county#59]
Input [6]: [ws_bill_addr_sk#42, ws_ext_sales_price#43, d_year#56, d_qoy#57, ca_address_sk#58, ca_county#59]

(78) HashAggregate [codegen id : 18]
Input [4]: [ws_ext_sales_price#43, d_year#56, d_qoy#57, ca_county#59]
Keys [3]: [ca_county#59, d_qoy#57, d_year#56]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#43))]
Aggregate Attributes [1]: [sum#60]
Results [4]: [ca_county#59, d_qoy#57, d_year#56, sum#61]

(79) Exchange
Input [4]: [ca_county#59, d_qoy#57, d_year#56, sum#61]
Arguments: hashpartitioning(ca_county#59, d_qoy#57, d_year#56, 5), ENSURE_REQUIREMENTS, [id=#62]

(80) HashAggregate [codegen id : 19]
Input [4]: [ca_county#59, d_qoy#57, d_year#56, sum#61]
Keys [3]: [ca_county#59, d_qoy#57, d_year#56]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#43))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#43))#63]
Results [2]: [ca_county#59, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#43))#63,17,2) AS web_sales#64]

(81) BroadcastExchange
Input [2]: [ca_county#59, web_sales#64]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#65]

(82) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [ca_county#48]
Right keys [1]: [ca_county#59]
Join condition: (CASE WHEN (web_sales#53 > 0.00) THEN CheckOverflow((promote_precision(web_sales#64) / promote_precision(web_sales#53)), DecimalType(37,20), true) ELSE null END > CASE WHEN (store_sales#16 > 0.00) THEN CheckOverflow((promote_precision(store_sales#27) / promote_precision(store_sales#16)), DecimalType(37,20), true) ELSE null END)

(83) Project [codegen id : 24]
Output [8]: [ca_county#10, d_year#5, store_sales#16, store_sales#27, store_sales#39, ca_county#48, web_sales#53, web_sales#64]
Input [9]: [ca_county#10, d_year#5, store_sales#16, store_sales#27, store_sales#39, ca_county#48, web_sales#53, ca_county#59, web_sales#64]

(84) Scan parquet default.web_sales
Output [3]: [ws_sold_date_sk#41, ws_bill_addr_sk#42, ws_ext_sales_price#43]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_sales]
PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_addr_sk)]
ReadSchema: struct<ws_sold_date_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(85) ColumnarToRow [codegen id : 22]
Input [3]: [ws_sold_date_sk#41, ws_bill_addr_sk#42, ws_ext_sales_price#43]

(86) Filter [codegen id : 22]
Input [3]: [ws_sold_date_sk#41, ws_bill_addr_sk#42, ws_ext_sales_price#43]
Condition : (isnotnull(ws_sold_date_sk#41) AND isnotnull(ws_bill_addr_sk#42))

(87) ReusedExchange [Reuses operator id: 43]
Output [3]: [d_date_sk#66, d_year#67, d_qoy#68]

(88) BroadcastHashJoin [codegen id : 22]
Left keys [1]: [ws_sold_date_sk#41]
Right keys [1]: [d_date_sk#66]
Join condition: None

(89) Project [codegen id : 22]
Output [4]: [ws_bill_addr_sk#42, ws_ext_sales_price#43, d_year#67, d_qoy#68]
Input [6]: [ws_sold_date_sk#41, ws_bill_addr_sk#42, ws_ext_sales_price#43, d_date_sk#66, d_year#67, d_qoy#68]

(90) ReusedExchange [Reuses operator id: 14]
Output [2]: [ca_address_sk#69, ca_county#70]

(91) BroadcastHashJoin [codegen id : 22]
Left keys [1]: [ws_bill_addr_sk#42]
Right keys [1]: [ca_address_sk#69]
Join condition: None

(92) Project [codegen id : 22]
Output [4]: [ws_ext_sales_price#43, d_year#67, d_qoy#68, ca_county#70]
Input [6]: [ws_bill_addr_sk#42, ws_ext_sales_price#43, d_year#67, d_qoy#68, ca_address_sk#69, ca_county#70]

(93) HashAggregate [codegen id : 22]
Input [4]: [ws_ext_sales_price#43, d_year#67, d_qoy#68, ca_county#70]
Keys [3]: [ca_county#70, d_qoy#68, d_year#67]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#43))]
Aggregate Attributes [1]: [sum#71]
Results [4]: [ca_county#70, d_qoy#68, d_year#67, sum#72]

(94) Exchange
Input [4]: [ca_county#70, d_qoy#68, d_year#67, sum#72]
Arguments: hashpartitioning(ca_county#70, d_qoy#68, d_year#67, 5), ENSURE_REQUIREMENTS, [id=#73]

(95) HashAggregate [codegen id : 23]
Input [4]: [ca_county#70, d_qoy#68, d_year#67, sum#72]
Keys [3]: [ca_county#70, d_qoy#68, d_year#67]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#43))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#43))#74]
Results [2]: [ca_county#70, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#43))#74,17,2) AS web_sales#75]

(96) BroadcastExchange
Input [2]: [ca_county#70, web_sales#75]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#76]

(97) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [ca_county#48]
Right keys [1]: [ca_county#70]
Join condition: (CASE WHEN (web_sales#64 > 0.00) THEN CheckOverflow((promote_precision(web_sales#75) / promote_precision(web_sales#64)), DecimalType(37,20), true) ELSE null END > CASE WHEN (store_sales#27 > 0.00) THEN CheckOverflow((promote_precision(store_sales#39) / promote_precision(store_sales#27)), DecimalType(37,20), true) ELSE null END)

(98) Project [codegen id : 24]
Output [6]: [ca_county#10, d_year#5, CheckOverflow((promote_precision(web_sales#64) / promote_precision(web_sales#53)), DecimalType(37,20), true) AS web_q1_q2_increase#77, CheckOverflow((promote_precision(store_sales#27) / promote_precision(store_sales#16)), DecimalType(37,20), true) AS store_q1_q2_increase#78, CheckOverflow((promote_precision(web_sales#75) / promote_precision(web_sales#64)), DecimalType(37,20), true) AS web_q2_q3_increase#79, CheckOverflow((promote_precision(store_sales#39) / promote_precision(store_sales#27)), DecimalType(37,20), true) AS store_q2_q3_increase#80]
Input [10]: [ca_county#10, d_year#5, store_sales#16, store_sales#27, store_sales#39, ca_county#48, web_sales#53, web_sales#64, ca_county#70, web_sales#75]

(99) Exchange
Input [6]: [ca_county#10, d_year#5, web_q1_q2_increase#77, store_q1_q2_increase#78, web_q2_q3_increase#79, store_q2_q3_increase#80]
Arguments: rangepartitioning(ca_county#10 ASC NULLS FIRST, 5), ENSURE_REQUIREMENTS, [id=#81]

(100) Sort [codegen id : 25]
Input [6]: [ca_county#10, d_year#5, web_q1_q2_increase#77, store_q1_q2_increase#78, web_q2_q3_increase#79, store_q2_q3_increase#80]
Arguments: [ca_county#10 ASC NULLS FIRST], true, 0

