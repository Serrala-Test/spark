/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.apache.spark.sql.catalyst.encoders;
@SuppressWarnings("all")
@org.apache.avro.specific.FixedSize(4)
@org.apache.avro.specific.AvroGenerated
public class AvroExampleMagic1 extends org.apache.avro.specific.SpecificFixed {
    private static final long serialVersionUID = 8488528436011241333L;
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"fixed\",\"name\":\"AvroExampleMagic1\",\"namespace\":\"org.apache.spark.sql.catalyst.encoders\",\"size\":4}");
    public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
    public org.apache.avro.Schema getSchema() { return SCHEMA$; }

    /** Creates a new AvroExampleMagic1 */
    public AvroExampleMagic1() {
        super();
    }

    /**
     * Creates a new AvroExampleMagic1 with the given bytes.
     * @param bytes The bytes to create the new AvroExampleMagic1.
     */
    public AvroExampleMagic1(byte[] bytes) {
        super(bytes);
    }

    private static final org.apache.avro.io.DatumWriter
            WRITER$ = new org.apache.avro.specific.SpecificDatumWriter<AvroExampleMagic1>(SCHEMA$);

    @Override public void writeExternal(java.io.ObjectOutput out)
            throws java.io.IOException {
        WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
    }

    private static final org.apache.avro.io.DatumReader
            READER$ = new org.apache.avro.specific.SpecificDatumReader<AvroExampleMagic1>(SCHEMA$);

    @Override public void readExternal(java.io.ObjectInput in)
            throws java.io.IOException {
        READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
    }

}
